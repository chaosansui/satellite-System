// Created by Microsoft (R) C/C++ Compiler Version 14.16.27026.1 (a6b8a1f5).
//
// d:\dev\r_stk_prod_x64\source\lib\release.x64\tlhbuilder\agcommrdrfoundation.tlh
//
// C++ source equivalent of type library AgCommRdrFoundation.tlb
// compiler-generated file created 03/29/19 at 20:37:41 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//  #import "D:\Dev\R_STK_prod_x64\Source\bin\Release.x64\AgAsHpopPlugin.DLL"
//  #import "D:\Dev\R_STK_prod_x64\Source\bin\Release.x64\AgUiApplication.tlb"
//  #import "D:\Dev\R_STK_prod_x64\Source\bin\Release.x64\AgUiCore.dll"
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("a79dfbcf-b116-4548-95ce-b2f479380ed3"))
/* LIBID */ __AgCommRdrFoundation;
struct __declspec(uuid("f206ff23-8765-4766-afc4-70c871398536"))
/* interface */ IAgCRSignal;
struct __declspec(uuid("aef34656-0ec0-4be6-a3ae-280e0a5ae0b5"))
/* interface */ IAgCRPolarization;
enum AgECRPolarizationType;
enum AgECRPolarizationRefAxis;
struct __declspec(uuid("d9a77bbf-c110-414a-a990-05233c0bc562"))
/* dual interface */ IAgCRSignalCollection;
struct __declspec(uuid("0d3b4752-34dc-4386-8231-b1bd8e06f6c5"))
/* interface */ IAgCRPolarizationElliptical;
struct __declspec(uuid("a3e26909-ea40-475b-8ec2-9595932c41e2"))
/* interface */ IAgCRPolarizationLinear;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IAgCRPolarization, __uuidof(IAgCRPolarization));
_COM_SMARTPTR_TYPEDEF(IAgCRSignal, __uuidof(IAgCRSignal));
_COM_SMARTPTR_TYPEDEF(IAgCRSignalCollection, __uuidof(IAgCRSignalCollection));
_COM_SMARTPTR_TYPEDEF(IAgCRPolarizationElliptical, __uuidof(IAgCRPolarizationElliptical));
_COM_SMARTPTR_TYPEDEF(IAgCRPolarizationLinear, __uuidof(IAgCRPolarizationLinear));

//
// Type library items
//

enum AgECRPolarizationType
{
    eCRLinearPol = 1,
    eCRLHCPol = 2,
    eCRRHCPol = 3,
    eCREllipticalPol = 4
};

enum AgECRPolarizationRefAxis
{
    eCRPolRefXAxis = 1,
    eCRPolRefYAxis = 2,
    eCRPolRefZAxis = 3
};

struct __declspec(uuid("aef34656-0ec0-4be6-a3ae-280e0a5ae0b5"))
IAgCRPolarization : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgECRPolarizationType * pType ) = 0;
      virtual HRESULT __stdcall get_TiltAngle (
        /*[out,retval]*/ double * pTiltAngle ) = 0;
      virtual HRESULT __stdcall get_AxialRatio (
        /*[out,retval]*/ double * pAxialRatio ) = 0;
      virtual HRESULT __stdcall get_ReferenceAxis (
        /*[out,retval]*/ enum AgECRPolarizationRefAxis * pReferenceAxis ) = 0;
};

struct __declspec(uuid("f206ff23-8765-4766-afc4-70c871398536"))
IAgCRSignal : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ double * pTime ) = 0;
      virtual HRESULT __stdcall get_Frequency (
        /*[out,retval]*/ double * pFrequency ) = 0;
      virtual HRESULT __stdcall put_Frequency (
        /*[in]*/ double pFrequency ) = 0;
      virtual HRESULT __stdcall get_UpperBandLimit (
        /*[out,retval]*/ double * pUpperLimit ) = 0;
      virtual HRESULT __stdcall put_UpperBandLimit (
        /*[in]*/ double pUpperLimit ) = 0;
      virtual HRESULT __stdcall get_LowerBandLimit (
        /*[out,retval]*/ double * pLowerLimit ) = 0;
      virtual HRESULT __stdcall put_LowerBandLimit (
        /*[in]*/ double pLowerLimit ) = 0;
      virtual HRESULT __stdcall get_Power (
        /*[out,retval]*/ double * pPower ) = 0;
      virtual HRESULT __stdcall put_Power (
        /*[in]*/ double pPower ) = 0;
      virtual HRESULT __stdcall get_Polarization (
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarization ) = 0;
      virtual HRESULT __stdcall put_Polarization (
        /*[in]*/ struct IAgCRPolarization * ppPolarization ) = 0;
      virtual HRESULT __stdcall ComputePolLoss (
        /*[in]*/ struct IAgCRPolarization * rcvSidePolarization,
        /*[out,retval]*/ double * pPolLoss ) = 0;
      virtual HRESULT __stdcall ComputePolRotationAngle (
        /*[in]*/ struct IAgCRPolarization * rcvSidePolarization,
        /*[out,retval]*/ double * pRotationAngle ) = 0;
};

struct __declspec(uuid("d9a77bbf-c110-414a-a990-05233c0bc562"))
IAgCRSignalCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
};

struct __declspec(uuid("0d3b4752-34dc-4386-8231-b1bd8e06f6c5"))
IAgCRPolarizationElliptical : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_TiltAngle (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_AxialRatio (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_ReferenceAxis (
        /*[in]*/ enum AgECRPolarizationRefAxis _arg1 ) = 0;
};

struct __declspec(uuid("a3e26909-ea40-475b-8ec2-9595932c41e2"))
IAgCRPolarizationLinear : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_TiltAngle (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_ReferenceAxis (
        /*[in]*/ enum AgECRPolarizationRefAxis _arg1 ) = 0;
};

#pragma pack(pop)
