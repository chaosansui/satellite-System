// Created by Microsoft (R) C/C++ Compiler Version 14.16.27026.1 (bfd86db2).
//
// d:\dev\r_stk_prod_x64\source\lib\release.x64\tlhbuilder\agstkradar.tlh
//
// C++ source equivalent of type library AgSTKRadar.tlb
// compiler-generated file created 03/29/19 at 20:37:41 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//  #import "D:\Dev\R_STK_prod_x64\Source\bin\Release.x64\AgAsHpopPlugin.DLL"
//  #import "D:\Dev\R_STK_prod_x64\Source\bin\Release.x64\AgUiApplication.tlb"
//  #import "D:\Dev\R_STK_prod_x64\Source\bin\Release.x64\AgUiCore.dll"
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("6f49a6ce-6cfc-4ca5-abc8-f65b9ee97719"))
/* LIBID */ __AgStkRadar;
struct __declspec(uuid("76a9655b-c07d-4ab0-8518-95965ac581cd"))
/* interface */ IAgStkRadarClutterGeometryPlugin;
struct __declspec(uuid("6d11cfcd-7597-480c-8c7b-369457f6444f"))
/* interface */ IAgStkRadarClutterGeometryPluginRegInfo;
enum AgEStkRadarValidSystems;
struct __declspec(uuid("dd8d48fb-bc93-47f9-ad70-17265db81ce2"))
/* interface */ IAgStkRadarClutterGeometryComputeParams;
struct __declspec(uuid("828fb5d1-567d-42e4-a0af-ce25ce9adf1d"))
/* interface */ IAgStkRadarLink;
struct __declspec(uuid("c840a1ed-e3f3-4e3f-baf4-599701f665bb"))
/* interface */ IAgStkRadarLinkGeometry;
struct __declspec(uuid("6ebccebc-1d56-456d-bb2a-1096d0b20bc6"))
/* interface */ IAgStkRadarPosVelProvider;
enum AgEStkRadarTerrainInterpMethod;
struct __declspec(uuid("b22a8206-2834-4816-b9df-ede15db7cf4b"))
/* interface */ IAgStkRadarCBIntersectComputeParams;
struct __declspec(uuid("4e1b644b-fdca-4492-9d81-8ae8cbd72dd6"))
/* interface */ IAgStkRadarCBIntersectComputeResult;
enum AgEStkRadarPosVelProviderRole;
struct __declspec(uuid("760eccd6-7b8b-464f-9084-c0b93216d557"))
/* dual interface */ IAgStkRadarClutterPatchCollection;
struct __declspec(uuid("8586cbb6-0661-4556-8806-981fe223c4d2"))
/* interface */ IAgStkRadarClutterPatch;
struct __declspec(uuid("ebdb661b-c6bd-49f8-b644-5515b625fc18"))
/* interface */ IAgStkRadarClutterMapPlugin;
struct __declspec(uuid("b6cb2e78-a325-4fd2-b15e-7330c3d7a8b9"))
/* interface */ IAgStkRadarClutterMapComputeParams;
struct __declspec(uuid("648e46b9-52a1-43d4-8b7d-8160067dae40"))
/* dual interface */ _IAgStkRadarPluginSite;
struct __declspec(uuid("6f5912f3-cf74-4867-afa8-0d14728ac17d"))
/* dual interface */ _IAgStkRadarClutterPatch;
struct __declspec(uuid("808b3221-5ae2-4315-83a5-69799f0a0a7a"))
/* interface */ IAgStkRadarSignal;
struct __declspec(uuid("90c7d4dd-74a0-4e52-94ca-e8e920ee4580"))
/* dual interface */ _IAgSTKRadarSignal;
struct __declspec(uuid("d7e26d72-847d-4387-9eab-346ee2447ac7"))
/* dual interface */ _IAgStkRadarLink;
struct __declspec(uuid("13a8fb4a-19f9-4892-9e28-57506fdc27b1"))
/* dual interface */ _IAgStkRadarLinkGeometry;
struct __declspec(uuid("81b4c985-b7e1-44de-b2fe-ea994c6af45c"))
/* dual interface */ _IAgStkRadarPosVelProvider;
struct __declspec(uuid("540bd88f-2be4-4810-8ab0-3fb950d98f5c"))
/* dual interface */ _IAgStkRadarCBIntersectComputeResult;
struct __declspec(uuid("b122b0f7-c6ec-4166-9bd7-5bd0bdecaad5"))
/* dual interface */ _IAgStkRadarClutterGeometryPluginRegInfo;
struct __declspec(uuid("91642965-03a9-4a4c-8436-3f133376e81b"))
/* dual interface */ _IAgStkRadarClutterGeometryComputeParams;
struct __declspec(uuid("7f49e8cd-e168-4f96-bae9-ba69ca2ee3dc"))
/* dual interface */ _IAgStkRadarClutterMapComputeParams;
struct __declspec(uuid("08aad7e4-53c0-4999-83eb-2e24211e95a5"))
/* interface */ IAgStkRadarRcsPlugin;
struct __declspec(uuid("0cf39222-73c9-44c0-91b4-d535bf22349c"))
/* interface */ IAgStkRadarRcsProcessSignalsParams;
struct __declspec(uuid("2857d9ab-4b98-44b2-b11b-c44e6b90562d"))
/* interface */ IAgStkRadarRcsComputeParams;
struct __declspec(uuid("f503957d-b825-4031-9afd-fc823bf27568"))
/* dual interface */ _IAgStkRadarRcsComputeParams;
struct __declspec(uuid("456b36de-8fc3-4039-a978-6dcd09b499e0"))
/* dual interface */ _IAgSTKRadarPolarization;
struct __declspec(uuid("2f186855-6f67-40dd-a443-0677d1c2a639"))
/* dual interface */ _IAgSTKRadarPolarizationLinear;
struct __declspec(uuid("a25f0747-5f34-4863-b944-c4625ef23b48"))
/* dual interface */ _IAgSTKRadarPolarizationElliptical;
struct __declspec(uuid("5ff0c323-60ad-4d24-aff6-05f4276a0bcf"))
/* dual interface */ _IAgStkRadarRcsProcessSignalsParams;
struct __declspec(uuid("978f3c38-0b55-49e9-a787-0ecf929cb0b1"))
/* interface */ IAgStkRadarFixedPRFProbabilityDetectionComputeParams;
struct __declspec(uuid("790fd891-4fc5-4d13-8258-652173a84a7d"))
/* dual interface */ _IAgStkRadarFixedPRFProbabilityDetectionComputeParams;
struct __declspec(uuid("8b380009-ec8d-4226-8d29-96507f31398c"))
/* interface */ IAgStkRadarFixedPRFProbabilityDetectionPlugin;
struct __declspec(uuid("446296bb-8a04-45d6-a0c2-fd377abde627"))
/* interface */ IAgSTKRadarSTCAttenPlugin;
struct __declspec(uuid("9c110962-78bd-4995-a047-27bb43933dd0"))
/* interface */ IAgSTKRadarSTCAttenComputeParams;
struct __declspec(uuid("2f0ed8d3-bba6-480a-a348-0ad8e2b5bb0d"))
/* dual interface */ _IAgSTKRadarSTCAttenComputeParams;
struct /* coclass */ AgStkRadarCBIntersectComputeParams;
struct __declspec(uuid("3fe6579e-ea83-470b-89eb-a063f2d6daa2"))
/* dual interface */ _IAgStkRadarCBIntersectComputeParams;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterGeometryPluginRegInfo, __uuidof(IAgStkRadarClutterGeometryPluginRegInfo));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarCBIntersectComputeParams, __uuidof(IAgStkRadarCBIntersectComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarCBIntersectComputeResult, __uuidof(IAgStkRadarCBIntersectComputeResult));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarPosVelProvider, __uuidof(IAgStkRadarPosVelProvider));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarLinkGeometry, __uuidof(IAgStkRadarLinkGeometry));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarLink, __uuidof(IAgStkRadarLink));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterPatch, __uuidof(IAgStkRadarClutterPatch));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterPatchCollection, __uuidof(IAgStkRadarClutterPatchCollection));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterGeometryComputeParams, __uuidof(IAgStkRadarClutterGeometryComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterGeometryPlugin, __uuidof(IAgStkRadarClutterGeometryPlugin));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterMapComputeParams, __uuidof(IAgStkRadarClutterMapComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterMapPlugin, __uuidof(IAgStkRadarClutterMapPlugin));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarPluginSite, __uuidof(_IAgStkRadarPluginSite));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarClutterPatch, __uuidof(_IAgStkRadarClutterPatch));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarSignal, __uuidof(IAgStkRadarSignal));
_COM_SMARTPTR_TYPEDEF(_IAgSTKRadarSignal, __uuidof(_IAgSTKRadarSignal));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarLink, __uuidof(_IAgStkRadarLink));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarLinkGeometry, __uuidof(_IAgStkRadarLinkGeometry));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarPosVelProvider, __uuidof(_IAgStkRadarPosVelProvider));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarCBIntersectComputeResult, __uuidof(_IAgStkRadarCBIntersectComputeResult));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarClutterGeometryPluginRegInfo, __uuidof(_IAgStkRadarClutterGeometryPluginRegInfo));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarClutterGeometryComputeParams, __uuidof(_IAgStkRadarClutterGeometryComputeParams));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarClutterMapComputeParams, __uuidof(_IAgStkRadarClutterMapComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarRcsProcessSignalsParams, __uuidof(IAgStkRadarRcsProcessSignalsParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarRcsComputeParams, __uuidof(IAgStkRadarRcsComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarRcsPlugin, __uuidof(IAgStkRadarRcsPlugin));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarRcsComputeParams, __uuidof(_IAgStkRadarRcsComputeParams));
_COM_SMARTPTR_TYPEDEF(_IAgSTKRadarPolarization, __uuidof(_IAgSTKRadarPolarization));
_COM_SMARTPTR_TYPEDEF(_IAgSTKRadarPolarizationLinear, __uuidof(_IAgSTKRadarPolarizationLinear));
_COM_SMARTPTR_TYPEDEF(_IAgSTKRadarPolarizationElliptical, __uuidof(_IAgSTKRadarPolarizationElliptical));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarRcsProcessSignalsParams, __uuidof(_IAgStkRadarRcsProcessSignalsParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarFixedPRFProbabilityDetectionComputeParams, __uuidof(IAgStkRadarFixedPRFProbabilityDetectionComputeParams));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarFixedPRFProbabilityDetectionComputeParams, __uuidof(_IAgStkRadarFixedPRFProbabilityDetectionComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarFixedPRFProbabilityDetectionPlugin, __uuidof(IAgStkRadarFixedPRFProbabilityDetectionPlugin));
_COM_SMARTPTR_TYPEDEF(IAgSTKRadarSTCAttenComputeParams, __uuidof(IAgSTKRadarSTCAttenComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgSTKRadarSTCAttenPlugin, __uuidof(IAgSTKRadarSTCAttenPlugin));
_COM_SMARTPTR_TYPEDEF(_IAgSTKRadarSTCAttenComputeParams, __uuidof(_IAgSTKRadarSTCAttenComputeParams));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarCBIntersectComputeParams, __uuidof(_IAgStkRadarCBIntersectComputeParams));

//
// Type library items
//

enum AgEStkRadarValidSystems
{
    eStkRadarAllSystems = 1,
    eStkRadarMonostaticSystemsOnly = 2,
    eStkRadarBistaticSystemsOnly = 3
};

struct __declspec(uuid("6d11cfcd-7597-480c-8c7b-369457f6444f"))
IAgStkRadarClutterGeometryPluginRegInfo : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ValidRadarSystems (
        /*[in]*/ enum AgEStkRadarValidSystems _arg1 ) = 0;
};

enum AgEStkRadarTerrainInterpMethod
{
    eStkRadarBilinearTerrainInterp = 1,
    eStkRadarHighestPostTerrainInterp = 2,
    eStkRadarTriPlanarTerrainInterp = 3
};

struct __declspec(uuid("b22a8206-2834-4816-b9df-ede15db7cf4b"))
IAgStkRadarCBIntersectComputeParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetBasePositionCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_BasePositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall SetBasePositionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall GetDirectionCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_DirectionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall SetDirectionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
};

struct __declspec(uuid("4e1b644b-fdca-4492-9d81-8ae8cbd72dd6"))
IAgStkRadarCBIntersectComputeResult : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IntersectionFound (
        /*[out,retval]*/ VARIANT_BOOL * pIntersectionFound ) = 0;
      virtual HRESULT __stdcall GetIntercept1CBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_Intercept1CBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetIntercept2CBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_Intercept2CBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Multiplier1 (
        /*[out,retval]*/ double * pMultiplier1 ) = 0;
      virtual HRESULT __stdcall get_Multiplier2 (
        /*[out,retval]*/ double * pMultiplier2 ) = 0;
      virtual HRESULT __stdcall GetBasePositionCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_BasePositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetDirectionCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_DirectionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

enum AgEStkRadarPosVelProviderRole
{
    eStkRadarTransmitterPosVelRole = 1,
    eStkRadarReceiverPosVelRole = 2,
    eStkRadarTargetPosVelRole = 3,
    eStkRadarClutterPatchPosVelRole = 4
};

struct __declspec(uuid("6ebccebc-1d56-456d-bb2a-1096d0b20bc6"))
IAgStkRadarPosVelProvider : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CurrentTime (
        /*[out,retval]*/ double * pCurrentTime ) = 0;
      virtual HRESULT __stdcall GetVelocityCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_VelocityCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetPositionCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_PositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetPositionLLA (
        /*[out]*/ double * latitude,
        /*[out]*/ double * longitude,
        /*[out]*/ double * altitude ) = 0;
      virtual HRESULT __stdcall get_PositionLLAArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_LocalRadiusDetic (
        /*[out,retval]*/ double * pLocalRadiusDetic ) = 0;
      virtual HRESULT __stdcall get_LocalRadiusCentric (
        /*[out,retval]*/ double * pLocalRadiusCentric ) = 0;
      virtual HRESULT __stdcall GetSurfaceNormalDetic (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_SurfaceNormalDeticArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetSurfaceNormalCentric (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_SurfaceNormalCentricArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetTerrainHeight (
        /*[in]*/ enum AgEStkRadarTerrainInterpMethod interpMethod,
        /*[out,retval]*/ double * pTerrainHeight ) = 0;
      virtual HRESULT __stdcall GetTerrainHeightForLatLon (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[in]*/ enum AgEStkRadarTerrainInterpMethod interpMethod,
        /*[out,retval]*/ double * pTerrainHeight ) = 0;
      virtual HRESULT __stdcall ComputeLocalRadiusDetic (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ double * pLocalRadiusDetic ) = 0;
      virtual HRESULT __stdcall ComputeLocalRadiusCentric (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ double * pLocalRadiusCentric ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalDetic (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalDeticArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalCentric (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalCentricArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeCentralBodyIntersect (
        /*[in]*/ struct IAgStkRadarCBIntersectComputeParams * cbIntersectComputeParams,
        /*[out,retval]*/ struct IAgStkRadarCBIntersectComputeResult * * ppCBIntersectComputeResult ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToLLA (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z,
        /*[out]*/ double * latitude,
        /*[out]*/ double * longitude,
        /*[out]*/ double * altitude ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToLLAArray (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertLLAToCBFCartesian (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[in]*/ double altitude,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall ConvertLLAToCBFCartesianArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[in]*/ double altitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToVVLHCartesian (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out]*/ double * xVvlh,
        /*[out]*/ double * yVvlh,
        /*[out]*/ double * zVvlh ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToVVLHCartesianArray (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertBodyCartesianToCBFCartesian (
        /*[in]*/ double xBody,
        /*[in]*/ double yBody,
        /*[in]*/ double zBody,
        /*[out]*/ double * xCbf,
        /*[out]*/ double * yCbf,
        /*[out]*/ double * zCbf ) = 0;
      virtual HRESULT __stdcall ConvertBodyCartesianToCBFCartesianArray (
        /*[in]*/ double xBody,
        /*[in]*/ double yBody,
        /*[in]*/ double zBody,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToBodyCartesian (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out]*/ double * xBody,
        /*[out]*/ double * yBody,
        /*[out]*/ double * zBody ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToBodyCartesianArray (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Role (
        /*[out,retval]*/ enum AgEStkRadarPosVelProviderRole * pPosVelRole ) = 0;
};

struct __declspec(uuid("c840a1ed-e3f3-4e3f-baf4-599701f665bb"))
IAgStkRadarLinkGeometry : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TargetPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppTargetPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppTransmitRadarPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppReceiveRadarPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarRange (
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarAngleRate (
        /*[out,retval]*/ double * pAngleRate ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarRangeRate (
        /*[out,retval]*/ double * pRangeRate ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarConeAngle (
        /*[out,retval]*/ double * pConeAngle ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarPropTime (
        /*[out,retval]*/ double * pPropTime ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarRange (
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarAngleRate (
        /*[out,retval]*/ double * pAngleRate ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarRangeRate (
        /*[out,retval]*/ double * pRangeRate ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarConeAngle (
        /*[out,retval]*/ double * pConeAngle ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarPropTime (
        /*[out,retval]*/ double * pPropTime ) = 0;
      virtual HRESULT __stdcall get_RangeSum (
        /*[out,retval]*/ double * pRangeSum ) = 0;
      virtual HRESULT __stdcall get_Closure (
        /*[out,retval]*/ double * pClosure ) = 0;
      virtual HRESULT __stdcall get_MLCVelocity (
        /*[out,retval]*/ double * pMLCVelocity ) = 0;
      virtual HRESULT __stdcall get_BistaticAngle (
        /*[out,retval]*/ double * pBistaticAngle ) = 0;
      virtual HRESULT __stdcall get_IncidentAzimuth (
        /*[out,retval]*/ double * pIncidentAz ) = 0;
      virtual HRESULT __stdcall get_IncidentElevation (
        /*[out,retval]*/ double * pIncidentEl ) = 0;
      virtual HRESULT __stdcall get_ReflectedAzimuth (
        /*[out,retval]*/ double * pReflectedAz ) = 0;
      virtual HRESULT __stdcall get_ReflectedElevation (
        /*[out,retval]*/ double * pReflectedEl ) = 0;
      virtual HRESULT __stdcall get_XYAngleRate (
        /*[out,retval]*/ double * pXYAngleRate ) = 0;
      virtual HRESULT __stdcall GetTgt2XmtRdrRelPosCBFCartesian (
        /*[out]*/ double * xCbf,
        /*[out]*/ double * yCbf,
        /*[out]*/ double * zCbf ) = 0;
      virtual HRESULT __stdcall get_Tgt2XmtRdrRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetTgt2RcvRdrRelPosCBFCartesian (
        /*[out]*/ double * xCbf,
        /*[out]*/ double * yCbf,
        /*[out]*/ double * zCbf ) = 0;
      virtual HRESULT __stdcall get_Tgt2RcvRdrRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetXmtRdr2TgtRelPosCBFCartesian (
        /*[out]*/ double * xCbf,
        /*[out]*/ double * yCbf,
        /*[out]*/ double * zCbf ) = 0;
      virtual HRESULT __stdcall get_XmtRdr2TgtRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetRcvRdr2TgtRelPosCBFCartesian (
        /*[out]*/ double * xCbf,
        /*[out]*/ double * yCbf,
        /*[out]*/ double * zCbf ) = 0;
      virtual HRESULT __stdcall get_RcvRdr2TgtRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

struct __declspec(uuid("828fb5d1-567d-42e4-a0af-ce25ce9adf1d"))
IAgStkRadarLink : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Geometry (
        /*[out,retval]*/ struct IAgStkRadarLinkGeometry * * ppLinkGeometry ) = 0;
      virtual HRESULT __stdcall ComputeDopplerResolution (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ double * pDopplerResolution ) = 0;
      virtual HRESULT __stdcall ComputeRangeResolution (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ double * pRangeResolution ) = 0;
      virtual HRESULT __stdcall ComputeIsoDoppler (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeIsoRange (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

struct __declspec(uuid("8586cbb6-0661-4556-8806-981fe223c4d2"))
IAgStkRadarClutterPatch : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppPosVelProvider ) = 0;
      virtual HRESULT __stdcall SetPositionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall SetVelocityCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * pArea ) = 0;
      virtual HRESULT __stdcall put_Area (
        /*[in]*/ double pArea ) = 0;
};

struct __declspec(uuid("760eccd6-7b8b-464f-9084-c0b93216d557"))
IAgStkRadarClutterPatchCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IAgStkRadarClutterPatch * * ppClutterPatch ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ struct IAgStkRadarClutterPatch * Item ) = 0;
      virtual HRESULT __stdcall RemoveAt (
        /*[in]*/ long index ) = 0;
      virtual HRESULT __stdcall RemoveAll ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[out,retval]*/ struct IAgStkRadarClutterPatch * * ppClutterPatch ) = 0;
};

struct __declspec(uuid("dd8d48fb-bc93-47f9-ad70-17265db81ce2"))
IAgStkRadarClutterGeometryComputeParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadarLink (
        /*[out,retval]*/ struct IAgStkRadarLink * * ppRadarLink ) = 0;
      virtual HRESULT __stdcall get_Signal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall get_ClutterPatches (
        /*[out,retval]*/ struct IAgStkRadarClutterPatchCollection * * ppClutterPatchCollection ) = 0;
};

struct __declspec(uuid("76a9655b-c07d-4ab0-8518-95965ac581cd"))
IAgStkRadarClutterGeometryPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Register (
        /*[in]*/ struct IAgStkRadarClutterGeometryPluginRegInfo * registrationInfo ) = 0;
      virtual HRESULT __stdcall Initialize (
        /*[in]*/ struct IAgUtPluginSite * Site ) = 0;
      virtual HRESULT __stdcall PreCompute (
        /*[out,retval]*/ VARIANT_BOOL * pValidPreCompute ) = 0;
      virtual HRESULT __stdcall Compute (
        /*[in]*/ struct IAgStkRadarClutterGeometryComputeParams * ComputeParams ) = 0;
      virtual HRESULT __stdcall PostCompute ( ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
};

struct __declspec(uuid("b6cb2e78-a325-4fd2-b15e-7330c3d7a8b9"))
IAgStkRadarClutterMapComputeParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadarLink (
        /*[out,retval]*/ struct IAgStkRadarLink * * ppRadarLink ) = 0;
      virtual HRESULT __stdcall get_ClutterPatch (
        /*[out,retval]*/ struct IAgStkRadarClutterPatch * * ppClutterPatch ) = 0;
      virtual HRESULT __stdcall get_Signal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall ConstructPolarization (
        /*[in]*/ enum AgECRPolarizationType polType,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarization ) = 0;
      virtual HRESULT __stdcall ConstructPolarizationCopy (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarizationCopy ) = 0;
      virtual HRESULT __stdcall ConstructOrthogonalPolarization (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppOrthoPolarization ) = 0;
};

struct __declspec(uuid("ebdb661b-c6bd-49f8-b644-5515b625fc18"))
IAgStkRadarClutterMapPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Initialize (
        /*[in]*/ struct IAgUtPluginSite * Site ) = 0;
      virtual HRESULT __stdcall PreCompute (
        /*[out,retval]*/ VARIANT_BOOL * pValidPreCompute ) = 0;
      virtual HRESULT __stdcall Compute (
        /*[in]*/ struct IAgStkRadarClutterMapComputeParams * ComputeParams ) = 0;
      virtual HRESULT __stdcall PostCompute ( ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
};

struct __declspec(uuid("648e46b9-52a1-43d4-8b7d-8160067dae40"))
_IAgStkRadarPluginSite : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SiteName (
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall Message (
        /*[in]*/ enum AgEUtLogMsgType msgType,
        /*[in]*/ BSTR Message ) = 0;
      virtual HRESULT __stdcall get_VectorToolProvider (
        /*[out,retval]*/ struct IAgCrdnPluginProvider * * ppCrdnPrv ) = 0;
      virtual HRESULT __stdcall get_ScenarioDirectory (
        /*[out,retval]*/ BSTR * pDirPath ) = 0;
      virtual HRESULT __stdcall get_InstallDirectory (
        /*[out,retval]*/ BSTR * pDirPath ) = 0;
      virtual HRESULT __stdcall get_ConfigDirectory (
        /*[out,retval]*/ BSTR * pDirPath ) = 0;
      virtual HRESULT __stdcall get_CalcToolProvider (
        /*[out,retval]*/ struct IAgCrdnPluginCalcProvider * * ppCrdnPrv ) = 0;
      virtual HRESULT __stdcall get_StkRootObject (
        /*[out,retval]*/ IDispatch * * ppStkRootobject ) = 0;
};

struct __declspec(uuid("6f5912f3-cf74-4867-afa8-0d14728ac17d"))
_IAgStkRadarClutterPatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppPosVelProvider ) = 0;
      virtual HRESULT __stdcall SetPositionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall SetVelocityCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * pArea ) = 0;
      virtual HRESULT __stdcall put_Area (
        /*[in]*/ double pArea ) = 0;
};

struct __declspec(uuid("808b3221-5ae2-4315-83a5-69799f0a0a7a"))
IAgStkRadarSignal : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PulseRepetitionFrequency (
        /*[out,retval]*/ double * pPrf ) = 0;
      virtual HRESULT __stdcall get_PulseCompressionRatio (
        /*[out,retval]*/ double * pPcr ) = 0;
      virtual HRESULT __stdcall get_PulseWidth (
        /*[out,retval]*/ double * pPulseWidth ) = 0;
      virtual HRESULT __stdcall get_NumberOfPulses (
        /*[out,retval]*/ int * pNumPulses ) = 0;
      virtual HRESULT __stdcall get_Rcs (
        /*[out,retval]*/ double * pRcs ) = 0;
      virtual HRESULT __stdcall put_Rcs (
        /*[in]*/ double pRcs ) = 0;
};

struct __declspec(uuid("90c7d4dd-74a0-4e52-94ca-e8e920ee4580"))
_IAgSTKRadarSignal : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ double * pTime ) = 0;
      virtual HRESULT __stdcall get_Frequency (
        /*[out,retval]*/ double * pFrequency ) = 0;
      virtual HRESULT __stdcall put_Frequency (
        /*[in]*/ double pFrequency ) = 0;
      virtual HRESULT __stdcall get_UpperBandLimit (
        /*[out,retval]*/ double * pUpperLimit ) = 0;
      virtual HRESULT __stdcall put_UpperBandLimit (
        /*[in]*/ double pUpperLimit ) = 0;
      virtual HRESULT __stdcall get_LowerBandLimit (
        /*[out,retval]*/ double * pLowerLimit ) = 0;
      virtual HRESULT __stdcall put_LowerBandLimit (
        /*[in]*/ double pLowerLimit ) = 0;
      virtual HRESULT __stdcall get_Power (
        /*[out,retval]*/ double * pPower ) = 0;
      virtual HRESULT __stdcall put_Power (
        /*[in]*/ double pPower ) = 0;
      virtual HRESULT __stdcall get_Polarization (
        /*[out,retval]*/ struct IAgCRPolarization * * ppSignalPolarization ) = 0;
      virtual HRESULT __stdcall put_Polarization (
        /*[in]*/ struct IAgCRPolarization * ppSignalPolarization ) = 0;
      virtual HRESULT __stdcall ComputePolLoss (
        /*[in]*/ struct IAgCRPolarization * rcvSidePolarization,
        /*[out,retval]*/ double * pPolLoss ) = 0;
      virtual HRESULT __stdcall ComputePolRotationAngle (
        /*[in]*/ struct IAgCRPolarization * rcvSidePolarization,
        /*[out,retval]*/ double * pRotationAngle ) = 0;
      virtual HRESULT __stdcall get_PulseRepetitionFrequency (
        /*[out,retval]*/ double * pPrf ) = 0;
      virtual HRESULT __stdcall get_PulseCompressionRatio (
        /*[out,retval]*/ double * pPcr ) = 0;
      virtual HRESULT __stdcall get_PulseWidth (
        /*[out,retval]*/ double * pPulseWidth ) = 0;
      virtual HRESULT __stdcall get_NumberOfPulses (
        /*[out,retval]*/ int * pNumPulses ) = 0;
      virtual HRESULT __stdcall get_Rcs (
        /*[out,retval]*/ double * pRcs ) = 0;
      virtual HRESULT __stdcall put_Rcs (
        /*[in]*/ double pRcs ) = 0;
};

struct __declspec(uuid("d7e26d72-847d-4387-9eab-346ee2447ac7"))
_IAgStkRadarLink : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Geometry (
        /*[out,retval]*/ struct IAgStkRadarLinkGeometry * * ppLinkGeometry ) = 0;
      virtual HRESULT __stdcall ComputeDopplerResolution (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ double * pDopplerResolution ) = 0;
      virtual HRESULT __stdcall ComputeRangeResolution (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ double * pRangeResolution ) = 0;
      virtual HRESULT __stdcall ComputeIsoDoppler (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeIsoRange (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

struct __declspec(uuid("13a8fb4a-19f9-4892-9e28-57506fdc27b1"))
_IAgStkRadarLinkGeometry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TargetPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppTargetPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppTransmitRadarPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppReceiveRadarPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarRange (
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarAngleRate (
        /*[out,retval]*/ double * pAngleRate ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarRangeRate (
        /*[out,retval]*/ double * pRangeRate ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarConeAngle (
        /*[out,retval]*/ double * pConeAngle ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarPropTime (
        /*[out,retval]*/ double * pPropTime ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarRange (
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarAngleRate (
        /*[out,retval]*/ double * pAngleRate ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarRangeRate (
        /*[out,retval]*/ double * pRangeRate ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarConeAngle (
        /*[out,retval]*/ double * pConeAngle ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarPropTime (
        /*[out,retval]*/ double * pPropTime ) = 0;
      virtual HRESULT __stdcall get_RangeSum (
        /*[out,retval]*/ double * pRangeSum ) = 0;
      virtual HRESULT __stdcall get_Closure (
        /*[out,retval]*/ double * pClosure ) = 0;
      virtual HRESULT __stdcall get_MLCVelocity (
        /*[out,retval]*/ double * pMLCVelocity ) = 0;
      virtual HRESULT __stdcall get_BistaticAngle (
        /*[out,retval]*/ double * pBistaticAngle ) = 0;
      virtual HRESULT __stdcall get_IncidentAzimuth (
        /*[out,retval]*/ double * pIncidentAz ) = 0;
      virtual HRESULT __stdcall get_IncidentElevation (
        /*[out,retval]*/ double * pIncidentEl ) = 0;
      virtual HRESULT __stdcall get_ReflectedAzimuth (
        /*[out,retval]*/ double * pReflectedAz ) = 0;
      virtual HRESULT __stdcall get_ReflectedElevation (
        /*[out,retval]*/ double * pReflectedEl ) = 0;
      virtual HRESULT __stdcall get_XYAngleRate (
        /*[out,retval]*/ double * pXYAngleRate ) = 0;
      virtual HRESULT __stdcall get_Tgt2XmtRdrRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Tgt2RcvRdrRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_XmtRdr2TgtRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_RcvRdr2TgtRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

struct __declspec(uuid("81b4c985-b7e1-44de-b2fe-ea994c6af45c"))
_IAgStkRadarPosVelProvider : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CurrentTime (
        /*[out,retval]*/ double * pCurrentTime ) = 0;
      virtual HRESULT __stdcall get_VelocityCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_PositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_PositionLLAArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_LocalRadiusDetic (
        /*[out,retval]*/ double * pLocalRadiusDetic ) = 0;
      virtual HRESULT __stdcall get_LocalRadiusCentric (
        /*[out,retval]*/ double * pLocalRadiusCentric ) = 0;
      virtual HRESULT __stdcall get_SurfaceNormalDeticArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_SurfaceNormalCentricArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetTerrainHeight (
        /*[in]*/ enum AgEStkRadarTerrainInterpMethod interpMethod,
        /*[out,retval]*/ double * pTerrainHeight ) = 0;
      virtual HRESULT __stdcall GetTerrainHeightForLatLon (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[in]*/ enum AgEStkRadarTerrainInterpMethod interpMethod,
        /*[out,retval]*/ double * pTerrainHeight ) = 0;
      virtual HRESULT __stdcall ComputeLocalRadiusDetic (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ double * pLocalRadiusDetic ) = 0;
      virtual HRESULT __stdcall ComputeLocalRadiusCentric (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ double * pLocalRadiusCentric ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalDeticArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalCentricArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeCentralBodyIntersect (
        /*[in]*/ struct IAgStkRadarCBIntersectComputeParams * cbIntersectComputeParams,
        /*[out,retval]*/ struct IAgStkRadarCBIntersectComputeResult * * ppCBIntersectComputeResult ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToLLAArray (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertLLAToCBFCartesianArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[in]*/ double altitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToVVLHCartesianArray (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertBodyCartesianToCBFCartesianArray (
        /*[in]*/ double xBody,
        /*[in]*/ double yBody,
        /*[in]*/ double zBody,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToBodyCartesianArray (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Role (
        /*[out,retval]*/ enum AgEStkRadarPosVelProviderRole * pPosVelRole ) = 0;
};

struct __declspec(uuid("540bd88f-2be4-4810-8ab0-3fb950d98f5c"))
_IAgStkRadarCBIntersectComputeResult : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IntersectionFound (
        /*[out,retval]*/ VARIANT_BOOL * pIntersectionFound ) = 0;
      virtual HRESULT __stdcall get_Intercept1CBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Intercept2CBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Multiplier1 (
        /*[out,retval]*/ double * pMultiplier1 ) = 0;
      virtual HRESULT __stdcall get_Multiplier2 (
        /*[out,retval]*/ double * pMultiplier2 ) = 0;
      virtual HRESULT __stdcall get_BasePositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_DirectionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

struct __declspec(uuid("b122b0f7-c6ec-4166-9bd7-5bd0bdecaad5"))
_IAgStkRadarClutterGeometryPluginRegInfo : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ValidRadarSystems (
        /*[in]*/ enum AgEStkRadarValidSystems _arg1 ) = 0;
};

struct __declspec(uuid("91642965-03a9-4a4c-8436-3f133376e81b"))
_IAgStkRadarClutterGeometryComputeParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadarLink (
        /*[out,retval]*/ struct IAgStkRadarLink * * ppRadarLink ) = 0;
      virtual HRESULT __stdcall get_Signal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall get_ClutterPatches (
        /*[out,retval]*/ struct IAgStkRadarClutterPatchCollection * * ppClutterPatchCollection ) = 0;
};

struct __declspec(uuid("7f49e8cd-e168-4f96-bae9-ba69ca2ee3dc"))
_IAgStkRadarClutterMapComputeParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadarLink (
        /*[out,retval]*/ struct IAgStkRadarLink * * ppRadarLink ) = 0;
      virtual HRESULT __stdcall get_ClutterPatch (
        /*[out,retval]*/ struct IAgStkRadarClutterPatch * * ppClutterPatch ) = 0;
      virtual HRESULT __stdcall get_Signal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall ConstructPolarization (
        /*[in]*/ enum AgECRPolarizationType polType,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarization ) = 0;
      virtual HRESULT __stdcall ConstructPolarizationCopy (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarizationCopy ) = 0;
      virtual HRESULT __stdcall ConstructOrthogonalPolarization (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppOrthoPolarization ) = 0;
};

struct __declspec(uuid("0cf39222-73c9-44c0-91b4-d535bf22349c"))
IAgStkRadarRcsProcessSignalsParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetIncidentBodyFixedVector (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_InicidentBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetReflectedBodyFixedVector (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_ReflectedBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_PrimaryPolChannelSignal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall get_OrthoPolChannelSignal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall ConstructPolarization (
        /*[in]*/ enum AgECRPolarizationType polType,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarization ) = 0;
      virtual HRESULT __stdcall ConstructPolarizationCopy (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarizationCopy ) = 0;
      virtual HRESULT __stdcall ConstructOrthogonalPolarization (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppOrthoPolarization ) = 0;
};

struct __declspec(uuid("2857d9ab-4b98-44b2-b11b-c44e6b90562d"))
IAgStkRadarRcsComputeParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ double * pTime ) = 0;
      virtual HRESULT __stdcall get_Frequency (
        /*[out,retval]*/ double * pFrequency ) = 0;
      virtual HRESULT __stdcall GetIncidentBodyFixedVector (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_InicidentBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetReflectedBodyFixedVector (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_ReflectedBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall put_PrimaryChannelRcs (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_PrimaryChannelRcsCross (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_OrthoChannelRcs (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_OrthoChannelRcsCross (
        /*[in]*/ double _arg1 ) = 0;
};

struct __declspec(uuid("08aad7e4-53c0-4999-83eb-2e24211e95a5"))
IAgStkRadarRcsPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Initialize (
        /*[in]*/ struct IAgUtPluginSite * Site ) = 0;
      virtual HRESULT __stdcall PreCompute (
        /*[out,retval]*/ VARIANT_BOOL * pValidPreCompute ) = 0;
      virtual HRESULT __stdcall ProcessSignals (
        /*[in]*/ struct IAgStkRadarRcsProcessSignalsParams * processSignalsParams ) = 0;
      virtual HRESULT __stdcall Compute (
        /*[in]*/ struct IAgStkRadarRcsComputeParams * computeRcsParams ) = 0;
      virtual HRESULT __stdcall PostCompute ( ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
      virtual HRESULT __stdcall get_IsDynamic (
        /*[out,retval]*/ VARIANT_BOOL * pIsDynamic ) = 0;
};

struct __declspec(uuid("f503957d-b825-4031-9afd-fc823bf27568"))
_IAgStkRadarRcsComputeParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ double * pTime ) = 0;
      virtual HRESULT __stdcall get_Frequency (
        /*[out,retval]*/ double * pFrequency ) = 0;
      virtual HRESULT __stdcall get_InicidentBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_ReflectedBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall put_PrimaryChannelRcs (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_PrimaryChannelRcsCross (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_OrthoChannelRcs (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_OrthoChannelRcsCross (
        /*[in]*/ double _arg1 ) = 0;
};

struct __declspec(uuid("456b36de-8fc3-4039-a978-6dcd09b499e0"))
_IAgSTKRadarPolarization : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgECRPolarizationType * pType ) = 0;
};

struct __declspec(uuid("2f186855-6f67-40dd-a443-0677d1c2a639"))
_IAgSTKRadarPolarizationLinear : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgECRPolarizationType * pType ) = 0;
      virtual HRESULT __stdcall get_TiltAngle (
        /*[out,retval]*/ double * pTiltAngle ) = 0;
      virtual HRESULT __stdcall put_TiltAngle (
        /*[in]*/ double pTiltAngle ) = 0;
      virtual HRESULT __stdcall get_AxialRatio (
        /*[out,retval]*/ double * pAxialRatio ) = 0;
      virtual HRESULT __stdcall get_ReferenceAxis (
        /*[out,retval]*/ enum AgECRPolarizationRefAxis * pReferenceAxis ) = 0;
      virtual HRESULT __stdcall put_ReferenceAxis (
        /*[in]*/ enum AgECRPolarizationRefAxis pReferenceAxis ) = 0;
};

struct __declspec(uuid("a25f0747-5f34-4863-b944-c4625ef23b48"))
_IAgSTKRadarPolarizationElliptical : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgECRPolarizationType * pType ) = 0;
      virtual HRESULT __stdcall get_TiltAngle (
        /*[out,retval]*/ double * pTiltAngle ) = 0;
      virtual HRESULT __stdcall put_TiltAngle (
        /*[in]*/ double pTiltAngle ) = 0;
      virtual HRESULT __stdcall get_AxialRatio (
        /*[out,retval]*/ double * pAxialRatio ) = 0;
      virtual HRESULT __stdcall put_AxialRatio (
        /*[in]*/ double pAxialRatio ) = 0;
      virtual HRESULT __stdcall get_ReferenceAxis (
        /*[out,retval]*/ enum AgECRPolarizationRefAxis * pReferenceAxis ) = 0;
      virtual HRESULT __stdcall put_ReferenceAxis (
        /*[in]*/ enum AgECRPolarizationRefAxis pReferenceAxis ) = 0;
};

struct __declspec(uuid("5ff0c323-60ad-4d24-aff6-05f4276a0bcf"))
_IAgStkRadarRcsProcessSignalsParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InicidentBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_ReflectedBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_PrimaryPolChannelSignal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall get_OrthoPolChannelSignal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall ConstructPolarization (
        /*[in]*/ enum AgECRPolarizationType polType,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarization ) = 0;
      virtual HRESULT __stdcall ConstructPolarizationCopy (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarizationCopy ) = 0;
      virtual HRESULT __stdcall ConstructOrthogonalPolarization (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppOrthoPolarization ) = 0;
};

struct __declspec(uuid("978f3c38-0b55-49e9-a787-0ecf929cb0b1"))
IAgStkRadarFixedPRFProbabilityDetectionComputeParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SinglePulseSignaltoNoiseRatio (
        /*[out,retval]*/ double * pSnrSinglePulse ) = 0;
      virtual HRESULT __stdcall get_IntegratedSignaltoNoiseRatio (
        /*[out,retval]*/ double * pSnrIntegrated ) = 0;
      virtual HRESULT __stdcall get_CoherentIntegration (
        /*[out,retval]*/ VARIANT_BOOL * pCoherentIntegration ) = 0;
      virtual HRESULT __stdcall get_NoisePower (
        /*[out,retval]*/ double * pNoisePower ) = 0;
      virtual HRESULT __stdcall get_NumberOfIntegratedPulses (
        /*[out,retval]*/ int * pNumberOfIntegratedPulses ) = 0;
      virtual HRESULT __stdcall get_ReceivedRadarSignal (
        /*[out,retval]*/ struct IAgCRSignal * * ppRadarSignal ) = 0;
      virtual HRESULT __stdcall get_ClutterSignals (
        /*[out,retval]*/ struct IAgCRSignalCollection * * ppClutterSignals ) = 0;
      virtual HRESULT __stdcall SetProbabilityOfDetectionSinglePulse (
        /*[in]*/ double ProbDetSinglePulse ) = 0;
      virtual HRESULT __stdcall SetProbabilityOfDetectionIntegrated (
        /*[in]*/ double ProbDetIntegrated ) = 0;
};

struct __declspec(uuid("790fd891-4fc5-4d13-8258-652173a84a7d"))
_IAgStkRadarFixedPRFProbabilityDetectionComputeParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SinglePulseSignaltoNoiseRatio (
        /*[out,retval]*/ double * pSnrSinglePulse ) = 0;
      virtual HRESULT __stdcall get_IntegratedSignaltoNoiseRatio (
        /*[out,retval]*/ double * pSnrIntegrated ) = 0;
      virtual HRESULT __stdcall get_CoherentIntegration (
        /*[out,retval]*/ VARIANT_BOOL * pCoherentIntegration ) = 0;
      virtual HRESULT __stdcall get_NoisePower (
        /*[out,retval]*/ double * pNoisePower ) = 0;
      virtual HRESULT __stdcall get_NumberOfIntegratedPulses (
        /*[out,retval]*/ int * pNumberOfIntegratedPulses ) = 0;
      virtual HRESULT __stdcall get_ReceivedRadarSignal (
        /*[out,retval]*/ struct IAgCRSignal * * ppRadarSignal ) = 0;
      virtual HRESULT __stdcall get_ClutterSignals (
        /*[out,retval]*/ struct IAgCRSignalCollection * * ppClutterSignals ) = 0;
      virtual HRESULT __stdcall SetProbabilityOfDetectionSinglePulse (
        /*[in]*/ double ProbDetSinglePulse ) = 0;
      virtual HRESULT __stdcall SetProbabilityOfDetectionIntegrated (
        /*[in]*/ double ProbDetIntegrated ) = 0;
};

struct __declspec(uuid("8b380009-ec8d-4226-8d29-96507f31398c"))
IAgStkRadarFixedPRFProbabilityDetectionPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Initialize (
        /*[in]*/ struct IAgUtPluginSite * Site ) = 0;
      virtual HRESULT __stdcall PreCompute (
        /*[out,retval]*/ VARIANT_BOOL * pValidPreCompute ) = 0;
      virtual HRESULT __stdcall Compute (
        /*[in]*/ struct IAgStkRadarFixedPRFProbabilityDetectionComputeParams * ComputeParams ) = 0;
      virtual HRESULT __stdcall ComputeJamming (
        /*[in]*/ struct IAgStkRadarFixedPRFProbabilityDetectionComputeParams * ComputeParams ) = 0;
      virtual HRESULT __stdcall ComputeJammingClutter (
        /*[in]*/ struct IAgStkRadarFixedPRFProbabilityDetectionComputeParams * ComputeParams ) = 0;
      virtual HRESULT __stdcall PostCompute ( ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
      virtual HRESULT __stdcall get_NumberOfConstantFalseAlarmRateCells (
        /*[out,retval]*/ int * pNumberOfFalseAlarmRateCells ) = 0;
};

struct __declspec(uuid("9c110962-78bd-4995-a047-27bb43933dd0"))
IAgSTKRadarSTCAttenComputeParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ double * pTime ) = 0;
      virtual HRESULT __stdcall get_Frequency (
        /*[out,retval]*/ double * pFrequency ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall get_AzimuthAngle (
        /*[out,retval]*/ double * pAzimuthAngle ) = 0;
      virtual HRESULT __stdcall get_ElevationAngle (
        /*[out,retval]*/ double * pElevationAngle ) = 0;
      virtual HRESULT __stdcall GetDirection (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_DirectionArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall SetSTCAttenuation (
        /*[in]*/ double STCAttenuation ) = 0;
};

struct __declspec(uuid("446296bb-8a04-45d6-a0c2-fd377abde627"))
IAgSTKRadarSTCAttenPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Initialize (
        /*[in]*/ struct IAgUtPluginSite * Site ) = 0;
      virtual HRESULT __stdcall PreCompute (
        /*[out,retval]*/ VARIANT_BOOL * pValidPreCompute ) = 0;
      virtual HRESULT __stdcall ComputeAttenuation (
        /*[in]*/ struct IAgSTKRadarSTCAttenComputeParams * ComputeParams ) = 0;
      virtual HRESULT __stdcall PostCompute ( ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
};

struct __declspec(uuid("2f0ed8d3-bba6-480a-a348-0ad8e2b5bb0d"))
_IAgSTKRadarSTCAttenComputeParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ double * pTime ) = 0;
      virtual HRESULT __stdcall get_Frequency (
        /*[out,retval]*/ double * pFrequency ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall get_AzimuthAngle (
        /*[out,retval]*/ double * pAzimuthAngle ) = 0;
      virtual HRESULT __stdcall get_ElevationAngle (
        /*[out,retval]*/ double * pElevationAngle ) = 0;
      virtual HRESULT __stdcall get_DirectionArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall SetSTCAttenuation (
        /*[in]*/ double STCAttenuation ) = 0;
};

struct __declspec(uuid("e4ab2b28-0241-4e3d-9df3-11e54053b578"))
AgStkRadarCBIntersectComputeParams;
    // [ default ] interface _IAgStkRadarCBIntersectComputeParams
    // interface IAgStkRadarCBIntersectComputeParams

struct __declspec(uuid("3fe6579e-ea83-470b-89eb-a063f2d6daa2"))
_IAgStkRadarCBIntersectComputeParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BasePositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall SetBasePositionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall get_DirectionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall SetDirectionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
};

#pragma pack(pop)
