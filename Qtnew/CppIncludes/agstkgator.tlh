// Created by Microsoft (R) C/C++ Compiler Version 14.16.27026.1 (5f44c275).
//
// d:\dev\r_stk_prod_x64\source\lib\release.x64\tlhbuilder\agstkgator.tlh
//
// C++ source equivalent of type library AgStkGator.tlb
// compiler-generated file created 03/29/19 at 20:37:41 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//  #import "D:\Dev\R_STK_prod_x64\Source\bin\Release.x64\AgAsHpopPlugin.DLL"
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace AgStkGatorLib {

//
// Forward references and typedefs
//

struct __declspec(uuid("090d317c-31a7-4af7-89cd-25fe18f4017c"))
/* LIBID */ __AgStkGatorLib;
struct __declspec(uuid("23367dfc-a0bc-4c79-83e9-4194ca49dc81"))
/* dual interface */ IAgVACalcObjectCollection;
enum AgEVAElement;
enum AgEVABaseSelection;
enum AgEVAControlOrbitStateValue;
enum AgEVASegmentState;
enum AgEVADifferenceOrder;
enum AgEVASegmentDifferenceOrder;
enum AgEVAControlRepeatingGroundTrackErr;
enum AgEVACalcObjectDirection;
enum AgEVAGravitationalParameterSource;
enum AgEVAReferenceRadiusSource;
enum AgEVAGravCoeffNormalizationType;
enum AgEVAGravCoeffCoefficientType;
enum AgEVASTMPertVariables;
struct __declspec(uuid("26bfa210-3a7c-4557-a735-21c29ded3007"))
/* interface */ IAgVAStateCalcHeightAboveTerrain;
struct __declspec(uuid("546655c8-b695-471a-84a4-db06c50d5fea"))
/* dual interface */ _IAgVAStateCalcHeightAboveTerrain;
struct __declspec(uuid("0038821d-02c0-4fcf-8f62-9eeeb459203e"))
/* interface */ IAgVAStateCalcEpoch;
struct __declspec(uuid("2ea7ff40-ce42-4e1c-8ee1-dc3e0cd40f2b"))
/* dual interface */ _IAgVAStateCalcEpoch;
struct __declspec(uuid("bb840088-a6a2-45f0-9224-be987346737d"))
/* interface */ IAgVAStateCalcOrbitDelaunayG;
struct __declspec(uuid("7b13841b-046c-400a-84dc-92aa588f9cfb"))
/* dual interface */ _IAgVAStateCalcOrbitDelaunayG;
struct __declspec(uuid("a6e867fb-7a83-4160-8672-618d48a3a40d"))
/* interface */ IAgVAStateCalcOrbitDelaunayH;
struct __declspec(uuid("35360e9d-0372-4b1b-8659-2af3ce240ec3"))
/* dual interface */ _IAgVAStateCalcOrbitDelaunayH;
struct __declspec(uuid("f62e2adc-ce06-4f99-8858-5994e3bb39d6"))
/* interface */ IAgVAStateCalcOrbitDelaunayL;
struct __declspec(uuid("aa925842-452c-4c46-83e3-c75597715f89"))
/* dual interface */ _IAgVAStateCalcOrbitDelaunayL;
struct __declspec(uuid("fea77fbf-a8bc-4486-aacb-de60372a2070"))
/* interface */ IAgVAStateCalcOrbitSemiLatusRectum;
struct __declspec(uuid("e6ef7d3e-7afa-4bff-8afb-6460bcb6a513"))
/* dual interface */ _IAgVAStateCalcOrbitSemiLatusRectum;
struct __declspec(uuid("f7413ed6-7726-4169-8b5f-450e3c2f781b"))
/* interface */ IAgVAStateCalcCartesianElem;
struct __declspec(uuid("c6b059b0-3e66-48de-855a-7db079faf87b"))
/* dual interface */ _IAgVAStateCalcCartesianElem;
struct __declspec(uuid("4bdf1998-7a9e-41c2-9278-2c06f203d686"))
/* interface */ IAgVAStateCalcCartSTMElem;
struct __declspec(uuid("4131dc84-c1b9-4f8e-8e81-e824de9c4204"))
/* dual interface */ _IAgVAStateCalcCartSTMElem;
struct __declspec(uuid("4380be0e-4386-430b-a629-3d0d13b3de8e"))
/* interface */ IAgVAStateCalcEnvironment;
struct __declspec(uuid("f072b514-784e-4d63-84c4-b5be49e10bc3"))
/* dual interface */ _IAgVAStateCalcEnvironment;
struct __declspec(uuid("55624cf3-6f1d-45a4-864b-4c470ac3c9a4"))
/* interface */ IAgVAStateCalcEquinoctialElem;
enum AgEVACalcObjectElem;
struct __declspec(uuid("2f5e711c-fc2c-4dc5-88d6-11c777a821bd"))
/* dual interface */ _IAgVAStateCalcEquinoctialElem;
struct __declspec(uuid("80468b6e-67b6-4374-8008-3a32795824df"))
/* interface */ IAgVAStateCalcDamageFlux;
struct __declspec(uuid("fe9481ad-37b6-4362-9eb0-ba9a45c784e3"))
/* dual interface */ _IAgVAStateCalcDamageFlux;
struct __declspec(uuid("7f263c2c-cb20-4e31-8856-b03f4c8a7e39"))
/* interface */ IAgVAStateCalcDamageMassFlux;
struct __declspec(uuid("34dd4756-45f6-4d7d-ae38-524f099b8d20"))
/* dual interface */ _IAgVAStateCalcDamageMassFlux;
struct __declspec(uuid("279d283a-0267-4bf6-ad9f-af764c204d07"))
/* interface */ IAgVAStateCalcMagFieldDipoleL;
struct __declspec(uuid("1a014b6c-c079-40f9-aa66-61d67399a531"))
/* dual interface */ _IAgVAStateCalcMagFieldDipoleL;
struct __declspec(uuid("796a8edc-16c7-4c7d-a266-993a3d095b50"))
/* interface */ IAgVAStateCalcSEETMagFieldFieldLineSepAngle;
struct __declspec(uuid("efeece2a-d72c-4c36-822e-d9ddf1bef19d"))
/* dual interface */ _IAgVAStateCalcSEETMagFieldFieldLineSepAngle;
struct __declspec(uuid("8f2d9f25-5431-4e4a-b5f6-f5ec11424e9f"))
/* interface */ IAgVAStateCalcImpactFlux;
struct __declspec(uuid("05bfdd67-f54d-447f-934f-4fbbb12180e5"))
/* dual interface */ _IAgVAStateCalcImpactFlux;
struct __declspec(uuid("a8df512c-6f92-44c3-a250-e808b1f18ef8"))
/* interface */ IAgVAStateCalcImpactMassFlux;
struct __declspec(uuid("f496846f-578d-47b3-a5e6-758c610e8e50"))
/* dual interface */ _IAgVAStateCalcImpactMassFlux;
struct __declspec(uuid("5994c707-1ed5-4ddf-ac6a-0797dcd92bc0"))
/* interface */ IAgVAStateCalcSEETSAAFlux;
struct __declspec(uuid("33657488-6a0e-4681-a96a-4792534b5b2b"))
/* dual interface */ _IAgVAStateCalcSEETSAAFlux;
struct __declspec(uuid("b1e61d64-632e-49c7-a32c-cbf0fb975c40"))
/* interface */ IAgVAStateCalcSEETVehTemp;
struct __declspec(uuid("028efd17-64f3-4579-8d8f-9db7a62cf284"))
/* dual interface */ _IAgVAStateCalcSEETVehTemp;
struct __declspec(uuid("5243a763-b905-454b-92b7-1845aaeeb60f"))
/* interface */ IAgVAStateCalcCloseApproachBearing;
enum AgEVACalcObjectReference;
struct __declspec(uuid("64a8e629-362b-4f66-97ba-2637fd7a5dec"))
/* dual interface */ _IAgVAStateCalcCloseApproachBearing;
struct __declspec(uuid("6da3778f-a669-4545-a63a-4f7af67298db"))
/* interface */ IAgVAStateCalcCloseApproachMag;
struct __declspec(uuid("e7f5039e-2c3a-4c70-bcfa-5eaaf84746a6"))
/* dual interface */ _IAgVAStateCalcCloseApproachMag;
struct __declspec(uuid("349212a5-cf52-46b4-9838-f0b0bbe4b164"))
/* interface */ IAgVAStateCalcCloseApproachTheta;
struct __declspec(uuid("f588e6a3-ca13-4d1c-a5fa-3b83d411c930"))
/* dual interface */ _IAgVAStateCalcCloseApproachTheta;
struct __declspec(uuid("940cf014-f12f-4dfd-a6f2-fbc59d1fb19f"))
/* interface */ IAgVAStateCalcCloseApproachX;
struct __declspec(uuid("cf02d30f-26fe-4bad-a969-bd4642647852"))
/* dual interface */ _IAgVAStateCalcCloseApproachX;
struct __declspec(uuid("3bb2f1fc-37e6-4015-94b3-798546ef66aa"))
/* interface */ IAgVAStateCalcCloseApproachY;
struct __declspec(uuid("ad8e3f8e-1be9-4731-a270-d0c9ea49fcca"))
/* dual interface */ _IAgVAStateCalcCloseApproachY;
struct __declspec(uuid("002e31b0-7d67-4078-ad08-c5db129d7d2a"))
/* interface */ IAgVAStateCalcCloseApproachCosBearing;
struct __declspec(uuid("83bb2769-2af9-430e-9c60-9dd53419514d"))
/* dual interface */ _IAgVAStateCalcCloseApproachCosBearing;
struct __declspec(uuid("6387564e-a4e9-495f-880e-8d347bc83e47"))
/* interface */ IAgVAStateCalcRelGroundTrackError;
struct __declspec(uuid("5e9abdf2-b64b-4ca9-af3d-cfc738555abb"))
/* dual interface */ _IAgVAStateCalcRelGroundTrackError;
struct __declspec(uuid("d0b3a61d-b244-4ee3-b82c-19efc71f9a6e"))
/* interface */ IAgVAStateCalcRelAtAOLMaster;
struct __declspec(uuid("273893a0-662f-4407-ae02-d9bdacdceb3e"))
/* dual interface */ _IAgVAStateCalcRelAtAOLMaster;
struct __declspec(uuid("74070adb-eb5f-45ad-bb37-07d008dd8b5b"))
/* interface */ IAgVAStateCalcDeltaFromMaster;
struct __declspec(uuid("8f87cb9a-122f-40ad-b6e7-7537875962ac"))
/* dual interface */ _IAgVAStateCalcDeltaFromMaster;
struct __declspec(uuid("c10d1029-be7e-4d25-81d3-bf785d316853"))
/* interface */ IAgVAStateCalcLonDriftRate;
struct __declspec(uuid("8858cf04-f502-469d-87ca-e26ea94e3cce"))
/* dual interface */ _IAgVAStateCalcLonDriftRate;
struct __declspec(uuid("721e2e21-ff1f-474b-b9e5-91ea9d9741e3"))
/* interface */ IAgVAStateCalcMeanEarthLon;
struct __declspec(uuid("daeff464-023b-4bcd-9a38-02acb605f6ad"))
/* dual interface */ _IAgVAStateCalcMeanEarthLon;
struct __declspec(uuid("f4437265-815b-4945-9f13-dc7b1a9206b7"))
/* interface */ IAgVAStateCalcRectifiedLon;
struct __declspec(uuid("da8f632c-dcdc-4c5b-9be3-0c7de541e806"))
/* dual interface */ _IAgVAStateCalcRectifiedLon;
struct __declspec(uuid("7e06c155-cec0-402a-a0f3-7cdc1685ee6e"))
/* interface */ IAgVAStateCalcGeodeticElem;
struct __declspec(uuid("2ba1c848-ec03-45d8-9cc3-b955ce254124"))
/* dual interface */ _IAgVAStateCalcGeodeticElem;
struct __declspec(uuid("91421084-d1ab-44a2-91b4-bf2b69351266"))
/* interface */ IAgVAStateCalcRepeatingGroundTrackErr;
struct __declspec(uuid("449eda3f-b5c2-4aaf-a7b2-f9ddd15d290b"))
/* dual interface */ _IAgVAStateCalcRepeatingGroundTrackErr;
struct __declspec(uuid("64206d14-bda4-45f9-b485-18b23b9492ab"))
/* interface */ IAgVAStateCalcAltOfApoapsis;
struct __declspec(uuid("e5fae7eb-f678-41a3-9467-18c23c33e704"))
/* dual interface */ _IAgVAStateCalcAltOfApoapsis;
struct __declspec(uuid("4562206f-5cfd-4f7a-8786-b935d75a0809"))
/* interface */ IAgVAStateCalcAltOfPeriapsis;
struct __declspec(uuid("183e78ad-d37f-4c2a-8040-7ce11ee1ee39"))
/* dual interface */ _IAgVAStateCalcAltOfPeriapsis;
struct __declspec(uuid("6da7d915-fc6f-4806-9645-551bb8646708"))
/* interface */ IAgVAStateCalcArgOfLat;
struct __declspec(uuid("be8ae056-9f7f-4514-bbc0-2693603ac0d4"))
/* dual interface */ _IAgVAStateCalcArgOfLat;
struct __declspec(uuid("17c50058-787b-4df1-aeac-2b735a854a8f"))
/* interface */ IAgVAStateCalcArgOfPeriapsis;
struct __declspec(uuid("c294ffa4-d782-4c60-ae8d-c556118be55b"))
/* dual interface */ _IAgVAStateCalcArgOfPeriapsis;
struct __declspec(uuid("b743ab4e-2773-43cf-af33-482942bb6c44"))
/* interface */ IAgVAStateCalcEccAnomaly;
struct __declspec(uuid("c7cdce04-4905-4466-bc14-672569b78351"))
/* dual interface */ _IAgVAStateCalcEccAnomaly;
struct __declspec(uuid("7f0b7ee7-8d23-4056-a676-8ea5ed631c17"))
/* interface */ IAgVAStateCalcEccentricity;
struct __declspec(uuid("0e3c0d42-3561-4c26-9ed0-05ae501fe097"))
/* dual interface */ _IAgVAStateCalcEccentricity;
struct __declspec(uuid("b8a2c9db-bd55-4b0f-ba55-c38ef4c000b1"))
/* interface */ IAgVAStateCalcInclination;
struct __declspec(uuid("3694f9b1-87cd-42c0-a071-87bb070401c8"))
/* dual interface */ _IAgVAStateCalcInclination;
struct __declspec(uuid("6595ae58-6d67-4e70-b685-cd1670bd3d99"))
/* interface */ IAgVAStateCalcLonOfAscNode;
struct __declspec(uuid("8f7b71a0-75d1-4b76-a976-9ccdf43a7e78"))
/* dual interface */ _IAgVAStateCalcLonOfAscNode;
struct __declspec(uuid("ac62eebd-d3e3-4a5e-8073-979a56447186"))
/* interface */ IAgVAStateCalcMeanAnomaly;
struct __declspec(uuid("ba40cda5-3340-4a95-a36f-8e8ea9e8d8ac"))
/* dual interface */ _IAgVAStateCalcMeanAnomaly;
struct __declspec(uuid("d315106f-8e7c-4c83-a71f-42fc51dd24d1"))
/* interface */ IAgVAStateCalcMeanMotion;
struct __declspec(uuid("18332033-4644-4c39-8829-175c21007b15"))
/* dual interface */ _IAgVAStateCalcMeanMotion;
struct __declspec(uuid("0409747f-5a23-468b-a2b0-d60492eab680"))
/* interface */ IAgVAStateCalcOrbitPeriod;
struct __declspec(uuid("c1a2cb30-a249-414b-837b-4272be9c0008"))
/* dual interface */ _IAgVAStateCalcOrbitPeriod;
struct __declspec(uuid("37fcbcd9-0688-4bc2-a6d3-8e7722bb9b28"))
/* interface */ IAgVAStateCalcRAAN;
struct __declspec(uuid("bf63f4e4-a956-4b9c-b61f-796f97136878"))
/* dual interface */ _IAgVAStateCalcRAAN;
struct __declspec(uuid("052655d2-c590-4570-be1a-54fd26193d81"))
/* interface */ IAgVAStateCalcRadOfApoapsis;
struct __declspec(uuid("53305059-7aa9-4795-a0b7-c270992659d9"))
/* dual interface */ _IAgVAStateCalcRadOfApoapsis;
struct __declspec(uuid("d143ceb6-dd35-4200-b9cc-3bd5241289c0"))
/* interface */ IAgVAStateCalcRadOfPeriapsis;
struct __declspec(uuid("b171faa0-cbb5-497a-b0fd-60582bc3e2c0"))
/* dual interface */ _IAgVAStateCalcRadOfPeriapsis;
struct __declspec(uuid("3aa4e8d1-430f-491b-b014-5f1c342a53ec"))
/* interface */ IAgVAStateCalcSemiMajorAxis;
struct __declspec(uuid("1d8778aa-7630-4d8b-b8d3-9307de164b6c"))
/* dual interface */ _IAgVAStateCalcSemiMajorAxis;
struct __declspec(uuid("701c882f-2701-4501-9b22-b733bd17988e"))
/* interface */ IAgVAStateCalcTimePastAscNode;
struct __declspec(uuid("a956a7f1-c715-4f7b-ba31-559f4f3b78ff"))
/* dual interface */ _IAgVAStateCalcTimePastAscNode;
struct __declspec(uuid("06313b7a-1238-4ce3-b39a-cc91dcd52328"))
/* interface */ IAgVAStateCalcTimePastPeriapsis;
struct __declspec(uuid("f2832694-48d4-4ff5-9834-55ebdacd9de3"))
/* dual interface */ _IAgVAStateCalcTimePastPeriapsis;
struct __declspec(uuid("52933885-c62f-4104-8385-fea16c8a92bb"))
/* interface */ IAgVAStateCalcDeltaV;
struct __declspec(uuid("bb67baee-39e9-4576-8698-c0a8f1d816f5"))
/* dual interface */ _IAgVAStateCalcDeltaV;
struct __declspec(uuid("e9d773b6-2ac0-47dd-a615-42955d90bd16"))
/* interface */ IAgVAStateCalcDeltaVSquared;
struct __declspec(uuid("ba47d4cf-c043-4600-a49c-89f59f5f7d61"))
/* dual interface */ _IAgVAStateCalcDeltaVSquared;
struct __declspec(uuid("81158974-48a6-4589-9794-bc3b3bad8494"))
/* interface */ IAgVAStateCalcMCSDeltaV;
struct __declspec(uuid("9c50069c-943b-4d99-ad2f-4d8413ff79bf"))
/* dual interface */ _IAgVAStateCalcMCSDeltaV;
struct __declspec(uuid("eb4959f2-956e-4c0c-b967-656df0c75991"))
/* interface */ IAgVAStateCalcMCSDeltaVSquared;
struct __declspec(uuid("e1451a74-00ef-46a3-9cc8-242108e2a190"))
/* dual interface */ _IAgVAStateCalcMCSDeltaVSquared;
struct __declspec(uuid("363a9d71-71f6-4f65-96c6-e389749d53ba"))
/* interface */ IAgVAStateCalcSequenceDeltaV;
struct __declspec(uuid("55eee261-d371-4ca8-9516-e83a7439f12f"))
/* dual interface */ _IAgVAStateCalcSequenceDeltaV;
struct __declspec(uuid("2523b0a0-9c7c-4c44-9d14-884f1271458a"))
/* interface */ IAgVAStateCalcSequenceDeltaVSquared;
struct __declspec(uuid("8ba6fe0b-5d61-4c26-834d-2f38a68ff67d"))
/* dual interface */ _IAgVAStateCalcSequenceDeltaVSquared;
struct __declspec(uuid("85b577be-8a3c-461d-b852-95b1f9f7e6f9"))
/* interface */ IAgVAStateCalcFuelMass;
struct __declspec(uuid("5c7d4fe0-1c0f-4748-8923-2308beca6a51"))
/* dual interface */ _IAgVAStateCalcFuelMass;
struct __declspec(uuid("5f1bc917-71f9-4ec7-b8ab-16837eb64585"))
/* interface */ IAgVAStateCalcDensity;
struct __declspec(uuid("57d675c5-1d38-48f1-bdd5-b75227a60b1f"))
/* dual interface */ _IAgVAStateCalcDensity;
struct __declspec(uuid("3007cd9b-332d-412a-9ca6-752961687153"))
/* interface */ IAgVAStateCalcInertialDeltaVMag;
struct __declspec(uuid("889319aa-f169-4369-b1d6-75cef3402b88"))
/* dual interface */ _IAgVAStateCalcInertialDeltaVMag;
struct __declspec(uuid("f3b9a532-e0eb-465c-8fe2-d7a47d66f629"))
/* interface */ IAgVAStateCalcInertialDeltaVx;
struct __declspec(uuid("0bfec896-1cec-4cf0-9753-4a91500c0ba9"))
/* dual interface */ _IAgVAStateCalcInertialDeltaVx;
struct __declspec(uuid("e2c73346-24a8-4981-b2ae-7315cd081f65"))
/* interface */ IAgVAStateCalcInertialDeltaVy;
struct __declspec(uuid("8a3f315f-0a20-4ea6-84c2-297e3d143bb3"))
/* dual interface */ _IAgVAStateCalcInertialDeltaVy;
struct __declspec(uuid("82af1d33-43e1-432c-8f6f-b6d782ea3961"))
/* interface */ IAgVAStateCalcInertialDeltaVz;
struct __declspec(uuid("f5e31139-ccc6-445e-b707-0ebb39bb53e1"))
/* dual interface */ _IAgVAStateCalcInertialDeltaVz;
struct __declspec(uuid("1557bd86-3eeb-4b78-acb8-252bc7b52512"))
/* interface */ IAgVAStateCalcManeuverSpecificImpulse;
struct __declspec(uuid("7702f739-0278-4a26-8c17-654a3438278b"))
/* dual interface */ _IAgVAStateCalcManeuverSpecificImpulse;
struct __declspec(uuid("c703f766-32b1-40de-ab25-ba1491f71ef4"))
/* interface */ IAgVAStateCalcPressure;
struct __declspec(uuid("cea46a0b-1e67-499e-91a7-d68ae5bb8993"))
/* dual interface */ _IAgVAStateCalcPressure;
struct __declspec(uuid("614f8835-0910-4953-a9d7-51bd7f7f2206"))
/* interface */ IAgVAStateCalcTemperature;
struct __declspec(uuid("bd7f38ad-2914-47d4-8f8c-432f116efde3"))
/* dual interface */ _IAgVAStateCalcTemperature;
struct __declspec(uuid("6b073aeb-b59d-4774-8b2d-b90c90d77d62"))
/* interface */ IAgVAStateCalcVectorX;
struct __declspec(uuid("b442b2ce-cdc9-47a7-a2bd-dce2be2e5dcd"))
/* dual interface */ _IAgVAStateCalcVectorX;
struct __declspec(uuid("15aa86e8-1251-47cb-9726-a8ac3c352cbf"))
/* interface */ IAgVAStateCalcVectorY;
struct __declspec(uuid("16ee1cb3-1f56-4301-91a8-103949ceee7d"))
/* dual interface */ _IAgVAStateCalcVectorY;
struct __declspec(uuid("b5f8304b-d8cf-4a35-9a75-b36f29aeaece"))
/* interface */ IAgVAStateCalcVectorZ;
struct __declspec(uuid("addc08d6-8fa5-4fef-b7ab-4fb8798bbe47"))
/* dual interface */ _IAgVAStateCalcVectorZ;
struct __declspec(uuid("1b3cde7c-f1c4-4812-8816-f3b14e180276"))
/* interface */ IAgVAStateCalcMass;
struct __declspec(uuid("3ced1156-e034-4b83-8a78-c0ae06c88deb"))
/* dual interface */ _IAgVAStateCalcMass;
struct __declspec(uuid("b7e97ec8-bf97-4bf0-861a-ca18475bb85f"))
/* interface */ IAgVAStateCalcManeuverTotalMassFlowRate;
struct __declspec(uuid("c42485a9-c5a9-4eaf-88f0-c07aec7d39ff"))
/* dual interface */ _IAgVAStateCalcManeuverTotalMassFlowRate;
struct __declspec(uuid("401066ef-41dd-42f8-8544-73ff212a5c6f"))
/* interface */ IAgVAStateCalcAbsoluteValue;
struct __declspec(uuid("8a7415d7-31fe-4541-85aa-cd4ebf809540"))
/* dual interface */ _IAgVAStateCalcAbsoluteValue;
struct __declspec(uuid("05bc0c4c-39ae-4899-806b-9987a0bf39fb"))
/* interface */ IAgVAStateCalcDifference;
struct __declspec(uuid("d1009c4e-7d48-467f-9c83-42bcd4dcef24"))
/* dual interface */ _IAgVAStateCalcDifference;
struct __declspec(uuid("8f0944a1-c295-440d-9490-d679efb22b50"))
/* interface */ IAgVAStateCalcDifferenceOtherSegment;
struct __declspec(uuid("08dcad2a-29d1-4b42-b511-abb757096007"))
/* dual interface */ _IAgVAStateCalcDifferenceOtherSegment;
struct __declspec(uuid("eabce437-0e1c-4977-a119-f194e29ae4ad"))
/* interface */ IAgVAStateCalcPosDifferenceOtherSegment;
struct __declspec(uuid("d539401b-b280-42d6-bf7d-42e77e499bf4"))
/* dual interface */ _IAgVAStateCalcPosDifferenceOtherSegment;
struct __declspec(uuid("401d8222-289e-4547-bfcb-1515cfad0748"))
/* interface */ IAgVAStateCalcVelDifferenceOtherSegment;
struct __declspec(uuid("81ab09f4-9662-4ead-bdcc-56ddc90b0b22"))
/* dual interface */ _IAgVAStateCalcVelDifferenceOtherSegment;
struct __declspec(uuid("d8f61ea5-b93b-46dd-97cf-f659a317f5d6"))
/* interface */ IAgVAStateCalcPosVelDifferenceOtherSegment;
struct __declspec(uuid("6e460203-2131-4b55-89ca-178869f9c250"))
/* dual interface */ _IAgVAStateCalcPosVelDifferenceOtherSegment;
struct __declspec(uuid("2871058e-f539-41be-8f1a-b8134b576467"))
/* interface */ IAgVAStateCalcValueAtSegment;
struct __declspec(uuid("819e55d5-959f-4f8c-8289-606cc99e6011"))
/* dual interface */ _IAgVAStateCalcValueAtSegment;
struct __declspec(uuid("2ba3501a-cd09-4193-b514-70a66f913b78"))
/* interface */ IAgVAStateCalcMaxValue;
struct __declspec(uuid("f56f1d83-8ffd-46c2-bacc-70cc58bd3b8f"))
/* dual interface */ _IAgVAStateCalcMaxValue;
struct __declspec(uuid("f8dd2e1c-38df-4db7-ba0b-1427188d10bc"))
/* interface */ IAgVAStateCalcMinValue;
struct __declspec(uuid("cf79ea91-7881-4e2c-92d5-09248102a114"))
/* dual interface */ _IAgVAStateCalcMinValue;
struct __declspec(uuid("055a9a78-2c75-491d-836a-546faf761a28"))
/* interface */ IAgVAStateCalcNegative;
struct __declspec(uuid("47acb109-a209-4770-b0ba-36a1f5d150d6"))
/* dual interface */ _IAgVAStateCalcNegative;
struct __declspec(uuid("5498d720-d049-47d6-b49f-278be98c2a73"))
/* interface */ IAgVAStateCalcTrueAnomaly;
struct __declspec(uuid("e0f62bfb-45cb-4e44-b42e-5863834d32cb"))
/* dual interface */ _IAgVAStateCalcTrueAnomaly;
struct __declspec(uuid("7c0dc2b8-ea6e-4677-b8e4-36b39b652439"))
/* interface */ IAgVABDotRCalc;
struct __declspec(uuid("cef3d1a3-fbd5-4a70-a10a-b28aca542463"))
/* dual interface */ _IAgVABDotRCalc;
struct __declspec(uuid("1266d39f-c556-486f-8b2e-a353ba64521b"))
/* interface */ IAgVABDotTCalc;
struct __declspec(uuid("41d84aec-f3ec-4242-a5e3-fedeb1d2ccd9"))
/* dual interface */ _IAgVABDotTCalc;
struct __declspec(uuid("d20b31ac-db43-4e5b-9461-9355f65a621c"))
/* interface */ IAgVABMagCalc;
struct __declspec(uuid("95151737-c71f-41a7-835c-ecf4f501bdd1"))
/* dual interface */ _IAgVABMagCalc;
struct __declspec(uuid("3a3bc247-05b2-42a1-b539-69c6529e5aae"))
/* interface */ IAgVABThetaCalc;
struct __declspec(uuid("3af397d2-09ca-46dc-9106-6abc723bd938"))
/* dual interface */ _IAgVABThetaCalc;
struct __declspec(uuid("ed1ab6a1-a8ce-4c8a-ab71-dd4192a71dd9"))
/* interface */ IAgVAStateCalcDeltaDec;
enum AgEVACalcObjectCentralBodyReference;
struct __declspec(uuid("0762e0dd-7f5b-4066-be82-c0f296bccacf"))
/* dual interface */ _IAgVAStateCalcDeltaDec;
struct __declspec(uuid("0b9d54e4-2a46-4e31-ae9b-a4327e85f27f"))
/* interface */ IAgVAStateCalcDeltaRA;
struct __declspec(uuid("fb2ba623-3e6d-43b6-ae72-f1ab6161133f"))
/* dual interface */ _IAgVAStateCalcDeltaRA;
struct __declspec(uuid("0737eaef-8fda-4a33-8d3f-71492335b3fe"))
/* interface */ IAgVAStateCalcApparentSolarLon;
struct __declspec(uuid("aa80136b-3812-44a8-9edb-f4d5a7265c46"))
/* dual interface */ _IAgVAStateCalcApparentSolarLon;
struct __declspec(uuid("71349155-fb85-4201-9da7-7cfb3b49aaaa"))
/* interface */ IAgVAStateCalcBetaAngle;
struct __declspec(uuid("b9d29dd8-b78f-47ce-bdad-354b061eb648"))
/* dual interface */ _IAgVAStateCalcBetaAngle;
struct __declspec(uuid("9bac5517-6651-4240-9f39-c571a99df194"))
/* interface */ IAgVAStateCalcEarthMeanSolarLon;
struct __declspec(uuid("e83eaa6c-59d5-46b6-96d4-e98a0ee2f7ee"))
/* dual interface */ _IAgVAStateCalcEarthMeanSolarLon;
struct __declspec(uuid("006f00b4-f497-4e0f-a674-18508f16c9ef"))
/* interface */ IAgVAStateCalcLocalApparentSolarLon;
struct __declspec(uuid("d4890f05-6042-4dc2-af75-d815d52b793b"))
/* dual interface */ _IAgVAStateCalcLocalApparentSolarLon;
struct __declspec(uuid("067fae0e-5c20-45b3-b9e3-d8cb48a37bbb"))
/* interface */ IAgVAStateCalcLonOfPeriapsis;
struct __declspec(uuid("5796d284-4274-4bd7-ae09-a9bfad5f264d"))
/* dual interface */ _IAgVAStateCalcLonOfPeriapsis;
struct __declspec(uuid("9c5cf0b2-0046-44aa-82f7-2ef03e34f7f4"))
/* interface */ IAgVAStateCalcOrbitStateValue;
struct __declspec(uuid("2bf370c7-9d66-47b5-a3f0-d3e2337504db"))
/* dual interface */ _IAgVAStateCalcOrbitStateValue;
struct __declspec(uuid("786cf8d5-251c-4890-b1d9-a3438b942854"))
/* interface */ IAgVAStateCalcSignedEccentricity;
struct __declspec(uuid("8947e204-ef83-45f1-b307-f841d5257020"))
/* dual interface */ _IAgVAStateCalcSignedEccentricity;
struct __declspec(uuid("ade4a9ca-e07d-4563-a76f-61fdfb759880"))
/* interface */ IAgVAStateCalcTrueLon;
struct __declspec(uuid("7d028237-75c5-42de-90ae-e591fed8b362"))
/* dual interface */ _IAgVAStateCalcTrueLon;
struct __declspec(uuid("9bd3f0b1-b832-45a8-97f7-9efc56414bf2"))
/* interface */ IAgVAStateCalcPower;
struct __declspec(uuid("0f6b1b88-6380-43ff-a25f-984c305914aa"))
/* dual interface */ _IAgVAStateCalcPower;
struct __declspec(uuid("f1528127-ba96-47dd-98c6-e21abb094e17"))
/* interface */ IAgVAStateCalcRelMotion;
struct __declspec(uuid("d0fe4cf5-45d0-4893-97ca-520ce97dce37"))
/* dual interface */ _IAgVAStateCalcRelMotion;
struct __declspec(uuid("736ef44d-e8b2-4765-9069-06e99d0ec5cc"))
/* interface */ IAgVAStateCalcCustomFunction;
struct __declspec(uuid("6599d436-da0f-4072-a210-2bf994d50a49"))
/* dual interface */ _IAgVAStateCalcCustomFunction;
struct __declspec(uuid("9c1fd4eb-a7ec-481f-b07e-d5cd4095cc96"))
/* interface */ IAgVAStateCalcScript;
struct __declspec(uuid("045c99e2-823d-4d6c-aef9-e314c0b70846"))
/* dual interface */ _IAgVAStateCalcScript;
struct __declspec(uuid("4c208fe4-cbfa-47e2-92b5-ddd1aa87b4c0"))
/* interface */ IAgVAStateCalcCd;
struct __declspec(uuid("25960071-0216-4843-aacb-ac79c33f8eaf"))
/* dual interface */ _IAgVAStateCalcCd;
struct __declspec(uuid("20954749-b218-4885-a3de-40b4728b5b3b"))
/* interface */ IAgVAStateCalcCr;
struct __declspec(uuid("430a382d-3f6e-4ec7-91b4-bf5abf3d5b06"))
/* dual interface */ _IAgVAStateCalcCr;
struct __declspec(uuid("5af16c02-8cea-4b0c-981c-46b1d8e60912"))
/* interface */ IAgVAStateCalcDragArea;
struct __declspec(uuid("acdc3479-50d4-44c9-8dd8-1ef29a55fd46"))
/* dual interface */ _IAgVAStateCalcDragArea;
struct __declspec(uuid("6610d07e-5a3c-4e56-8834-98b9af33e54f"))
/* interface */ IAgVAStateCalcRadiationPressureArea;
struct __declspec(uuid("b09ab4d7-cb93-4ecb-8966-9b5867683754"))
/* dual interface */ _IAgVAStateCalcRadiationPressureArea;
struct __declspec(uuid("804689a3-0621-47fc-a8b6-165c68ed2534"))
/* interface */ IAgVAStateCalcRadiationPressureCoefficient;
struct __declspec(uuid("a88d6ee6-1321-46bb-8b2f-5698ddc4ac58"))
/* dual interface */ _IAgVAStateCalcRadiationPressureCoefficient;
struct __declspec(uuid("b921f894-6ef4-4c94-ab60-1ea209b54e22"))
/* interface */ IAgVAStateCalcSRPArea;
struct __declspec(uuid("8e1670d1-7b25-4b12-a174-9d9783363cf8"))
/* dual interface */ _IAgVAStateCalcSRPArea;
struct __declspec(uuid("324a6747-28a4-46e6-bd2b-7ba5e39d089e"))
/* interface */ IAgVAStateCalcCosOfVerticalFPA;
struct __declspec(uuid("2ac898e7-08b5-4e20-adfc-5142c32c66f5"))
/* dual interface */ _IAgVAStateCalcCosOfVerticalFPA;
struct __declspec(uuid("92e89b8b-dc04-47d6-a1dc-0993517240bc"))
/* interface */ IAgVAStateCalcDec;
struct __declspec(uuid("7148839f-8212-45a6-98c1-2ab8ce7a6bc6"))
/* dual interface */ _IAgVAStateCalcDec;
struct __declspec(uuid("87ebf651-34b7-483e-bbb9-223bd7ae0238"))
/* interface */ IAgVAStateCalcFPA;
struct __declspec(uuid("d6aa4852-6048-4e8e-8ed8-51b68213f2b0"))
/* dual interface */ _IAgVAStateCalcFPA;
struct __declspec(uuid("b3486ad9-b333-49e8-a2cb-8007038cb4cc"))
/* interface */ IAgVAStateCalcRMag;
struct __declspec(uuid("c61c3d75-e7ec-4ee2-af36-ac57251e2c46"))
/* dual interface */ _IAgVAStateCalcRMag;
struct __declspec(uuid("b7b3bce3-df1d-46db-be71-7f07227de03f"))
/* interface */ IAgVAStateCalcRA;
struct __declspec(uuid("18dba5ab-f280-44a8-8348-f3d76c72d25a"))
/* dual interface */ _IAgVAStateCalcRA;
struct __declspec(uuid("6f306665-45c3-4606-b10c-5af9cbf555bc"))
/* interface */ IAgVAStateCalcVMag;
struct __declspec(uuid("8938abab-2150-4a29-be75-12bcc4445f76"))
/* dual interface */ _IAgVAStateCalcVMag;
struct __declspec(uuid("03b84f7c-19da-47f1-be46-0b28dd2c549e"))
/* interface */ IAgVAStateCalcVelAz;
struct __declspec(uuid("4ddeeded-ddd8-4ff4-b72e-24a256e9359b"))
/* dual interface */ _IAgVAStateCalcVelAz;
struct __declspec(uuid("0c928b55-ee4e-4ba3-93aa-25edf7734fe7"))
/* interface */ IAgVAStateCalcC3Energy;
struct __declspec(uuid("d5c73ef2-d864-40ce-b547-612c6c419a1a"))
/* dual interface */ _IAgVAStateCalcC3Energy;
struct __declspec(uuid("c983231d-37a7-4fa9-b802-475c5c345f05"))
/* interface */ IAgVAStateCalcInAsympDec;
struct __declspec(uuid("0c184c96-5f67-4f9c-a0ed-7666a7732ee3"))
/* dual interface */ _IAgVAStateCalcInAsympDec;
struct __declspec(uuid("9a50579b-2e08-405b-8a10-ff1083fb50f6"))
/* interface */ IAgVAStateCalcInAsympRA;
struct __declspec(uuid("8a6de699-a1cc-4a1c-b329-40da100c465e"))
/* dual interface */ _IAgVAStateCalcInAsympRA;
struct __declspec(uuid("fb87ad42-efd1-48fc-a978-276fb73a8eb1"))
/* interface */ IAgVAStateCalcInVelAzAtPeriapsis;
struct __declspec(uuid("4cece680-393d-4bfa-ba81-8871295c1e9a"))
/* dual interface */ _IAgVAStateCalcInVelAzAtPeriapsis;
struct __declspec(uuid("54c55cf7-07bd-407d-b37d-b9063d5ce02a"))
/* interface */ IAgVAStateCalcOutAsympDec;
struct __declspec(uuid("7fe523a5-52e6-4fea-a809-b8b2314ca3b4"))
/* dual interface */ _IAgVAStateCalcOutAsympDec;
struct __declspec(uuid("23162c45-77a7-4184-aa2c-e5e910bcd404"))
/* interface */ IAgVAStateCalcOutAsympRA;
struct __declspec(uuid("07f4bf58-edec-4e71-8685-17c48fc41191"))
/* dual interface */ _IAgVAStateCalcOutAsympRA;
struct __declspec(uuid("8402ec80-fc58-4670-9e9e-bf1430db7f36"))
/* interface */ IAgVAStateCalcOutVelAzAtPeriapsis;
struct __declspec(uuid("6bc19143-c340-42a4-826f-ee5b7884aa76"))
/* dual interface */ _IAgVAStateCalcOutVelAzAtPeriapsis;
struct __declspec(uuid("b3ab8c57-482b-41ee-8de3-714657b81686"))
/* interface */ IAgVAStateCalcDuration;
struct __declspec(uuid("4f0cb5e9-c2ee-415f-a8c6-716c8506921e"))
/* dual interface */ _IAgVAStateCalcDuration;
struct __declspec(uuid("109bd9e6-4e99-4608-bab9-f8421de34b70"))
/* interface */ IAgVAStateCalcUserValue;
struct __declspec(uuid("2ee19b65-d69d-452a-aca4-be92a8f2e5fe"))
/* dual interface */ _IAgVAStateCalcUserValue;
struct __declspec(uuid("ef3a0d25-3b77-4bbc-b604-b5dc6f9d8460"))
/* interface */ IAgVAStateCalcCrdnAngle;
struct __declspec(uuid("1411dc72-4525-4e84-99ff-4f58dc6d9f49"))
/* dual interface */ _IAgVAStateCalcCrdnAngle;
struct __declspec(uuid("7c8dc464-29d9-4506-9f8f-b9edf0597c5c"))
/* interface */ IAgVAStateCalcAngle;
struct __declspec(uuid("e70d5131-3952-4187-b342-dba07d4e6a4c"))
/* dual interface */ _IAgVAStateCalcAngle;
struct __declspec(uuid("10ebb2b0-d54d-41cb-9152-e00668a06489"))
/* interface */ IAgVAStateCalcDotProduct;
struct __declspec(uuid("d89aca84-27ea-49bb-870a-b48a0dabe60f"))
/* dual interface */ _IAgVAStateCalcDotProduct;
struct __declspec(uuid("8dd476f5-dda3-4071-bc5a-bff83898de35"))
/* interface */ IAgVAStateCalcVectorDec;
struct __declspec(uuid("6172d547-d399-4691-8c23-02dfe29ff4ea"))
/* dual interface */ _IAgVAStateCalcVectorDec;
struct __declspec(uuid("499b8f30-00be-4a6d-bb32-c49d09ce0aef"))
/* interface */ IAgVAStateCalcVectorMag;
struct __declspec(uuid("aa34eddc-9dfe-402c-981f-779e6c23cd15"))
/* dual interface */ _IAgVAStateCalcVectorMag;
struct __declspec(uuid("e81b14a2-e3cf-4929-a1ca-88726dec4f21"))
/* interface */ IAgVAStateCalcVectorRA;
struct __declspec(uuid("94125546-0216-4f66-b29d-c7c773d96616"))
/* dual interface */ _IAgVAStateCalcVectorRA;
struct __declspec(uuid("760ebb5b-e859-4416-8229-07aff47d7841"))
/* interface */ IAgVAStateCalcOnePtAccess;
struct __declspec(uuid("98e4d34c-0994-43e1-89f3-a260f02342dd"))
/* dual interface */ _IAgVAStateCalcOnePtAccess;
struct __declspec(uuid("9b178952-fdec-4cd9-93ba-def95086ed1f"))
/* interface */ IAgVAStateCalcDifferenceAcrossSegmentsOtherSat;
struct __declspec(uuid("74678160-840c-44cf-ae24-7d4bc4bed7b0"))
/* dual interface */ _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat;
struct __declspec(uuid("f8a10e4b-f373-4ec2-9802-caf32ab91c97"))
/* interface */ IAgVAStateCalcValueAtSegmentOtherSat;
struct __declspec(uuid("5345c940-0a05-4271-92ba-dddd0183f95e"))
/* dual interface */ _IAgVAStateCalcValueAtSegmentOtherSat;
struct __declspec(uuid("f8453b94-3cde-4dd6-82c9-aa2ffe49eda3"))
/* interface */ IAgVAStateCalcRARate;
struct __declspec(uuid("a0ebc1e7-abaf-4f39-8a3c-0a137677a64b"))
/* dual interface */ _IAgVAStateCalcRARate;
struct __declspec(uuid("63ef9d31-d2a1-42d8-b7c3-dc81a979c7dd"))
/* interface */ IAgVAStateCalcDecRate;
struct __declspec(uuid("253d1935-5f16-4f93-98f8-aa25f0127a6d"))
/* dual interface */ _IAgVAStateCalcDecRate;
struct __declspec(uuid("cc125a79-7f0b-4610-bb58-113b3223e4cd"))
/* interface */ IAgVAStateCalcGravitationalParameter;
struct __declspec(uuid("eb61e1eb-c1ab-47ed-b1f0-3e8e5179638e"))
/* dual interface */ _IAgVAStateCalcGravitationalParameter;
struct __declspec(uuid("138f43cb-66cf-493b-94d6-3ea1ff216b12"))
/* interface */ IAgVAStateCalcReferenceRadius;
struct __declspec(uuid("d670bb1f-996e-4efd-8d93-75662503e14b"))
/* dual interface */ _IAgVAStateCalcReferenceRadius;
struct __declspec(uuid("58ca0c2b-03b5-4c6b-b9a1-b908fea4aaeb"))
/* interface */ IAgVAStateCalcGravCoeff;
struct __declspec(uuid("9a33981e-7e72-4130-9320-41100f3fa15e"))
/* dual interface */ _IAgVAStateCalcGravCoeff;
struct __declspec(uuid("eb244dab-f781-423b-9770-aef5af8d73d4"))
/* interface */ IAgVAStateCalcSpeedOfLight;
struct __declspec(uuid("d2ef9649-178e-4498-a9dc-9389531df710"))
/* dual interface */ _IAgVAStateCalcSpeedOfLight;
struct __declspec(uuid("4ce6883f-c225-4383-85f1-cd7cadfb580d"))
/* interface */ IAgVAStateCalcScalar;
struct __declspec(uuid("3d886e04-91f0-43f3-b571-0cf0d22169c5"))
/* dual interface */ _IAgVAStateCalcScalar;
struct __declspec(uuid("d9631669-5685-4ae7-a731-1cddcfb97c29"))
/* interface */ IAgVAStateCalcApparentSolarTime;
struct __declspec(uuid("52e72520-8a95-492c-93e3-8f1ba34fe824"))
/* dual interface */ _IAgVAStateCalcApparentSolarTime;
struct __declspec(uuid("2add3fa9-d746-40e0-ad14-005d4eed493c"))
/* interface */ IAgVAStateCalcEarthMeanSolarTime;
struct __declspec(uuid("120dd377-b92d-42b7-bae8-71c26ef707a3"))
/* dual interface */ _IAgVAStateCalcEarthMeanSolarTime;
struct __declspec(uuid("f9b390d9-0320-4f24-9866-7e237ea97f41"))
/* interface */ IAgVAStateCalcEarthMeanLocTimeAN;
struct __declspec(uuid("9d2bcfdf-8786-451b-9bbc-932fd9e5f522"))
/* dual interface */ _IAgVAStateCalcEarthMeanLocTimeAN;
enum AgEVACbGravityModel;
enum AgEVACbShape;
enum AgEVACbAttitude;
enum AgEVACbEphemeris;
struct __declspec(uuid("204e3c30-d109-427c-911f-909f6f42a72a"))
/* dual interface */ IAgVACentralBodyCollection;
struct __declspec(uuid("6f11b46c-5086-473d-afee-c35ab2755994"))
/* interface */ IAgVACentralBody;
struct __declspec(uuid("cba07fc9-67f8-4f09-9315-6bbac72a3008"))
/* interface */ IAgVACbGravityModel;
struct __declspec(uuid("f54d80f1-7aef-4c27-9665-7efa3f511626"))
/* interface */ IAgVACbShape;
struct __declspec(uuid("7e8e391c-bfa8-4983-98b7-5269c2c630ad"))
/* interface */ IAgVACbAttitude;
struct __declspec(uuid("60596b25-6791-4a04-80bf-404aaf0e4ec7"))
/* interface */ IAgVACbEphemeris;
struct __declspec(uuid("99cc0c4f-3226-410d-8a7b-4f24f746a90b"))
/* dual interface */ _IAgVACbGravityModel;
struct __declspec(uuid("617f0551-de91-4bde-ac00-297191bdca2d"))
/* interface */ IAgVACbShapeSphere;
struct __declspec(uuid("88a0e1fa-f1e5-48d3-8131-f5121dedd2df"))
/* dual interface */ _IAgVACbShapeSphere;
struct __declspec(uuid("00ed27e0-bddf-4cf2-9229-45e16934fef0"))
/* interface */ IAgVACbShapeOblateSpheroid;
struct __declspec(uuid("754dd46c-99db-4e96-8475-6a3de5d7f210"))
/* dual interface */ _IAgVACbShapeOblateSpheroid;
struct __declspec(uuid("e2f5cc4c-fbf6-4d67-beeb-28b2c72bba01"))
/* interface */ IAgVACbShapeTriaxialEllipsoid;
struct __declspec(uuid("e76822ef-2fe8-4c0e-8f56-cb09d912dd42"))
/* dual interface */ _IAgVACbShapeTriaxialEllipsoid;
struct __declspec(uuid("6bc9c580-b027-40e1-807c-ca9b5ef4f35c"))
/* interface */ IAgVACbAttitudeRotationCoefficientsFile;
struct __declspec(uuid("9b61edd4-a121-441e-aa77-a49547ab1575"))
/* dual interface */ _IAgVACbAttitudeRotationCoefficientsFile;
struct __declspec(uuid("db1b826e-fec8-48ff-96e8-e43fa6100dbe"))
/* interface */ IAgVACbAttitudeIAU1994;
struct __declspec(uuid("26ee77f2-4482-4164-9e35-fde56204ed24"))
/* dual interface */ _IAgVACbAttitudeIAU1994;
struct __declspec(uuid("6681f9f0-a7bf-4779-a40a-0194d56fc844"))
/* interface */ IAgVACbEphemerisAnalyticOrbit;
struct __declspec(uuid("56bf5ce8-b216-4ccc-a66e-f087a40b9939"))
/* dual interface */ _IAgVACbEphemerisAnalyticOrbit;
struct __declspec(uuid("c0b1a5df-d426-4f99-90e5-33bc2af733f6"))
/* interface */ IAgVACbEphemerisJPLSpice;
struct __declspec(uuid("276d939e-61a0-4a7b-a1c1-144d3ab2aedc"))
/* dual interface */ _IAgVACbEphemerisJPLSpice;
struct __declspec(uuid("fb155b57-0a0b-4c61-a6db-94e7f17a6f86"))
/* interface */ IAgVACbEphemerisFile;
struct __declspec(uuid("175d0ae3-0f29-450c-9084-3f0673cada9a"))
/* dual interface */ _IAgVACbEphemerisFile;
struct __declspec(uuid("d2f8f341-4109-4e7f-9999-ac4f4ac0733a"))
/* interface */ IAgVACbEphemerisJPLDE;
struct __declspec(uuid("f3c5d704-92de-42a7-853f-70235ddf8d64"))
/* dual interface */ _IAgVACbEphemerisJPLDE;
struct __declspec(uuid("388f07ef-c8a2-44d6-952f-224f731d70cf"))
/* interface */ IAgVACbEphemerisPlanetary;
struct __declspec(uuid("f09fe311-4057-4ac4-a360-0efa026f5fa7"))
/* dual interface */ _IAgVACbEphemerisPlanetary;
struct __declspec(uuid("dcda194c-46b1-44c3-89d6-c15cc731eab9"))
/* dual interface */ _IAgVACentralBody;
enum AgEVAControlPowerInternal;
enum AgEVAControlPowerProcessed;
enum AgEVAControlPowerSolarArray;
struct __declspec(uuid("ff62ca9f-ba31-4702-b47a-ba0583aa979a"))
/* interface */ IAgVAPowerInternal;
struct __declspec(uuid("2375cd46-5549-42d8-befe-dda385afcb93"))
/* dual interface */ _IAgVAPowerInternal;
struct __declspec(uuid("bc3d9305-ebe3-4804-bdca-b25c349ec6a6"))
/* interface */ IAgVAPowerProcessed;
struct __declspec(uuid("ed2f809e-8ca4-4cee-aef4-a226f25d5d52"))
/* dual interface */ _IAgVAPowerProcessed;
struct __declspec(uuid("6bda62eb-39f2-41d1-bc74-6c054a103072"))
/* interface */ IAgVAPowerSolarArray;
struct __declspec(uuid("88b58f3f-faea-4e34-813f-80b56ad0d2ab"))
/* dual interface */ _IAgVAPowerSolarArray;
struct __declspec(uuid("56f07437-830d-487c-b7e4-cfec6b7cd37a"))
/* interface */ IAgVAPluginProperties;
enum AgEVAThirdBodyMode;
enum AgEVAGravParamSource;
enum AgEVAEphemSource;
enum AgEVASolarForceMethod;
enum AgEVAShadowModel;
enum AgEVASunPosition;
enum AgEVAAtmosDataSource;
enum AgEVAGeoMagneticFluxSource;
enum AgEVAGeoMagneticFluxUpdateRate;
enum AgEVADragModelType;
enum AgEVAMarsGRAMDensityType;
struct __declspec(uuid("1c377039-f8fc-4ed2-b654-9a57be7284b5"))
/* interface */ IAgVAGeneralRelativityFunction;
struct __declspec(uuid("77771498-39b1-4b6c-b99d-7904dd678cdc"))
/* dual interface */ _IAgVAGeneralRelativityFunction;
struct __declspec(uuid("7dd23830-c8c3-4a2b-b4f2-874ad2480ccf"))
/* interface */ IAgVAStateTransFunction;
struct __declspec(uuid("b1790a1e-e92b-47f0-91aa-9b07b9a53bf9"))
/* dual interface */ _IAgVAStateTransFunction;
struct __declspec(uuid("d3785a9d-261d-4e04-96a4-f4d8b6b20bd1"))
/* interface */ IAgVARadiationPressureFunction;
struct __declspec(uuid("e9f44733-f2e2-4644-ab56-10850a155086"))
/* dual interface */ _IAgVARadiationPressureFunction;
struct __declspec(uuid("57e7a95d-c8b5-4031-917a-250d49a48c6f"))
/* interface */ IAgVAYarkovskyFunc;
struct __declspec(uuid("0945cb69-5c72-409b-9ad7-243e82d77a2b"))
/* dual interface */ _IAgVAYarkovskyFunc;
struct __declspec(uuid("32517b95-6d72-4a1b-b1d2-b944576f5c01"))
/* interface */ IAgVABlendedDensity;
struct __declspec(uuid("1404bdf1-1f85-4203-86d4-ddae6f1943f9"))
/* dual interface */ _IAgVABlendedDensity;
struct __declspec(uuid("35ddda79-da96-46c5-b92f-435e5f99324e"))
/* interface */ IAgVADragModelPlugin;
struct __declspec(uuid("bf9d2a46-cf1e-47a2-a7c9-45a72d24f30f"))
/* dual interface */ _IAgVADragModelPlugin;
struct __declspec(uuid("3715351b-3494-40a7-a26a-6c1662fdd5b1"))
/* interface */ IAgVACira72Function;
struct __declspec(uuid("14f2a0ba-aa7b-4350-869c-d2fd690dfd29"))
/* dual interface */ _IAgVACira72Function;
struct __declspec(uuid("08fe099e-bbbe-47e8-94da-3299e2651107"))
/* interface */ IAgVAExponential;
struct __declspec(uuid("fa7bb0ed-5e10-4d56-8392-0d00fe630474"))
/* dual interface */ _IAgVAExponential;
struct __declspec(uuid("0d0ffb87-67cc-4d0d-b031-90350dfed669"))
/* interface */ IAgVAHarrisPriester;
struct __declspec(uuid("18d977c8-9841-4f7c-8538-8a5f6996db13"))
/* dual interface */ _IAgVAHarrisPriester;
struct __declspec(uuid("0c9d6333-233e-45a0-85ee-4d30919ca6b2"))
/* interface */ IAgVADensityModelPlugin;
struct __declspec(uuid("14aa2f55-8234-4ed3-842d-5eead30228a5"))
/* dual interface */ _IAgVADensityModelPlugin;
struct __declspec(uuid("dc33d259-2c37-4196-b633-3a65bd66d98b"))
/* interface */ IAgVAJacchiaRoberts;
struct __declspec(uuid("d37b72b1-761b-4f2a-84d3-85483bed302b"))
/* dual interface */ _IAgVAJacchiaRoberts;
struct __declspec(uuid("cb91bc6b-57f0-4058-af31-1bdb58d7e84d"))
/* interface */ IAgVAJacchiaBowman2008;
struct __declspec(uuid("dd7a56cb-dfa2-4141-a854-ff218f084393"))
/* dual interface */ _IAgVAJacchiaBowman2008;
struct __declspec(uuid("b29c2899-38e4-4c38-a929-8780431c835c"))
/* interface */ IAgVAJacchia_1960;
struct __declspec(uuid("bb2e1958-4787-433f-8e04-4dd92628b54e"))
/* dual interface */ _IAgVAJacchia_1960;
struct __declspec(uuid("6e7a8f24-3cef-4863-94c2-d06dbb1b172f"))
/* interface */ IAgVAJacchia_1970;
struct __declspec(uuid("ea9db8ba-dcb9-49d4-9951-98d51a0eb021"))
/* dual interface */ _IAgVAJacchia_1970;
struct __declspec(uuid("21b8cff7-81f1-41f1-93ec-454ddcd4b88b"))
/* interface */ IAgVAJacchia_1971;
struct __declspec(uuid("d9fb4548-ef09-47ec-a737-2ab33af154c1"))
/* dual interface */ _IAgVAJacchia_1971;
struct __declspec(uuid("8d4a3904-42c0-470f-b70e-5e46fef18af8"))
/* interface */ IAgVAMSISE_1990;
struct __declspec(uuid("2e5cf7be-6d9a-43b7-a8dd-c2763f2313bf"))
/* dual interface */ _IAgVAMSISE_1990;
struct __declspec(uuid("af4a00a9-22a9-4d44-a3f7-ff5bb18c5566"))
/* interface */ IAgVAMSIS_1986;
struct __declspec(uuid("f87c1063-aa1d-4618-b2fb-f060d45c5394"))
/* dual interface */ _IAgVAMSIS_1986;
struct __declspec(uuid("d607452d-1735-4ca7-a416-fee4d4f5d1df"))
/* interface */ IAgVANRLMSISE_2000;
struct __declspec(uuid("71b4b675-20e7-4fed-99b4-5da700f621fc"))
/* dual interface */ _IAgVANRLMSISE_2000;
struct __declspec(uuid("ebe736bc-2145-4281-9bb8-62e7236733cc"))
/* interface */ IAgVAUS_Standard_Atmosphere;
struct __declspec(uuid("d94647b3-06b1-4720-9050-82ffa1587430"))
/* dual interface */ _IAgVAUS_Standard_Atmosphere;
struct __declspec(uuid("27039ec0-4de7-40a2-8aa5-46cce755e777"))
/* interface */ IAgVAMarsGRAM37;
struct __declspec(uuid("05883269-3979-4a85-8fc1-fe61a8ba1e85"))
/* dual interface */ _IAgVAMarsGRAM37;
struct __declspec(uuid("504a0ef5-5f65-4693-bfbe-e4e554cc060b"))
/* interface */ IAgVAMarsGRAM2005;
struct __declspec(uuid("b6e4920a-3696-4bff-993d-ac10bd6124ad"))
/* dual interface */ _IAgVAMarsGRAM2005;
struct __declspec(uuid("ed9c4e0d-7a5e-4927-86f2-661b2cf7f238"))
/* interface */ IAgVAMarsGRAM2010;
struct __declspec(uuid("2c768754-458e-47f5-a5cc-61b8fa37f7d2"))
/* dual interface */ _IAgVAMarsGRAM2010;
struct __declspec(uuid("7789eba7-4cbf-4607-8528-a0bfd3ac2496"))
/* interface */ IAgVAMarsGRAM2001;
struct __declspec(uuid("a34fa53a-5329-46e0-a54c-7baa44707ad9"))
/* dual interface */ _IAgVAMarsGRAM2001;
struct __declspec(uuid("8c2e9298-941a-436b-80fe-f6b98ae2a877"))
/* interface */ IAgVAMarsGRAM2000;
struct __declspec(uuid("8433f84c-4fbb-488b-9bc3-5dccfed6ec6f"))
/* dual interface */ _IAgVAMarsGRAM2000;
struct __declspec(uuid("636ae395-c2f7-4e3e-91bc-57a76b98d18f"))
/* interface */ IAgVADTM2012;
struct __declspec(uuid("926147c7-e058-490d-84a4-8b25cf330297"))
/* dual interface */ _IAgVADTM2012;
struct __declspec(uuid("2011ee7a-7c3e-408f-abf6-5b8944e4c1bb"))
/* interface */ IAgVAGravityFieldFunction;
struct __declspec(uuid("d817249b-d06d-4a9b-9e50-8f664f5b25fc"))
/* dual interface */ _IAgVAGravityFieldFunction;
struct __declspec(uuid("0421f516-1a39-4a3b-afc3-9fa172ff8ca1"))
/* interface */ IAgVAPointMassFunction;
struct __declspec(uuid("02be8d4b-4990-434b-b989-7d731173da4c"))
/* dual interface */ _IAgVAPointMassFunction;
struct __declspec(uuid("bc3b511f-6002-4a81-a5ff-15dedb1994fc"))
/* interface */ IAgVATwoBodyFunction;
struct __declspec(uuid("9d628a10-979a-466a-a02c-4bc5732f1491"))
/* dual interface */ _IAgVATwoBodyFunction;
struct __declspec(uuid("73655e84-7b64-423b-b719-979c37e91c12"))
/* interface */ IAgVAHPOPPluginFunction;
struct __declspec(uuid("2847f738-6b69-4118-81f2-0cc5096ab859"))
/* dual interface */ _IAgVAHPOPPluginFunction;
struct __declspec(uuid("f817dbe1-f572-4b20-bfe2-7bea81f6b7a6"))
/* interface */ IAgVAEOMFuncPluginFunction;
struct __declspec(uuid("78c6ede7-41f6-419e-ab9d-9d9dedd21a8f"))
/* dual interface */ _IAgVAEOMFuncPluginFunction;
struct __declspec(uuid("bbbd0c2f-2756-460a-983b-fb79a79850b0"))
/* interface */ IAgVASRPAeroT20;
struct __declspec(uuid("504a606b-d55d-4cd2-a636-c67287e9c068"))
/* dual interface */ _IAgVASRPAeroT20;
struct __declspec(uuid("2f282a0d-8a07-4e0d-b4b2-a8ba6e21faea"))
/* interface */ IAgVASRPAeroT30;
struct __declspec(uuid("a57163aa-49e1-42fa-9ed2-1ff555b258ad"))
/* dual interface */ _IAgVASRPAeroT30;
struct __declspec(uuid("0b6bdeef-3182-4c63-8755-cfe2d36c11ec"))
/* interface */ IAgVASRPGSPM04aIIA;
struct __declspec(uuid("28b3a687-4d0f-4e80-b1e0-1084cd286507"))
/* dual interface */ _IAgVASRPGSPM04aIIA;
struct __declspec(uuid("6240bc23-d778-4fdb-8e9a-c7d3f0a56d70"))
/* interface */ IAgVASRPGSPM04aIIR;
struct __declspec(uuid("1a1e5a02-71ed-46a6-8dc5-e9912164b2cb"))
/* dual interface */ _IAgVASRPGSPM04aIIR;
struct __declspec(uuid("1bb63287-3fc2-4a36-8bea-c818dc94d025"))
/* interface */ IAgVASRPGSPM04aeIIA;
struct __declspec(uuid("1f11705a-b378-43c8-9bb9-a774da647407"))
/* dual interface */ _IAgVASRPGSPM04aeIIA;
struct __declspec(uuid("fd64362a-3918-4ee1-99e7-cdb5af27aca4"))
/* interface */ IAgVASRPGSPM04aeIIR;
struct __declspec(uuid("cfee967c-bb56-4374-9056-16d309b3a041"))
/* dual interface */ _IAgVASRPGSPM04aeIIR;
struct __declspec(uuid("74dfd84e-e62b-44a2-ab6b-1448bf6e97f9"))
/* interface */ IAgVASRPSpherical;
struct __declspec(uuid("b5350266-4955-48e8-94f5-34b4a2ac5a64"))
/* dual interface */ _IAgVASRPSpherical;
struct __declspec(uuid("15706c17-c342-4089-944f-526e971d6dd6"))
/* interface */ IAgVAThirdBodyFunction;
struct __declspec(uuid("226c147f-ec86-4a27-b4e0-f9d83ee7eb21"))
/* dual interface */ _IAgVAThirdBodyFunction;
enum AgEVAControlEngineConstAcc;
enum AgEVAControlEngineConstant;
enum AgEVAControlEngineCustom;
enum AgEVAControlEngineIon;
enum AgEVAControlEngineModelPoly;
enum AgEVAEngineModelFunction;
struct __declspec(uuid("8ccd3bb0-8288-49c3-8d54-fdb77bdfd00f"))
/* interface */ IAgVAEngineModelThrustCoefficients;
struct __declspec(uuid("a71fbe05-c92d-4c21-92c2-124258196080"))
/* dual interface */ _IAgVAEngineModelThrustCoefficients;
struct __declspec(uuid("f20f4dd3-d675-4e97-910d-a19ef27de66c"))
/* interface */ IAgVAEngineModelIspCoefficients;
struct __declspec(uuid("7f3f82ba-1023-452a-adc5-444b48df3105"))
/* dual interface */ _IAgVAEngineModelIspCoefficients;
struct __declspec(uuid("71bf09dc-9326-41ff-a2bf-cc781bc6c449"))
/* interface */ IAgVAEngineConstAcc;
struct __declspec(uuid("ce36d323-1a27-40c3-bea6-798dc1f7ebf7"))
/* dual interface */ _IAgVAEngineConstAcc;
struct __declspec(uuid("f25f5caa-db2b-4331-9d13-5670d8613c01"))
/* interface */ IAgVAEngineConstant;
struct __declspec(uuid("071705cb-b3ac-4bfb-b3c4-9eb289e327d2"))
/* dual interface */ _IAgVAEngineConstant;
struct __declspec(uuid("481cbbdf-926c-46bc-8e1f-2575be400b17"))
/* interface */ IAgVAEngineDefinition;
struct __declspec(uuid("498f2033-c01f-4bd4-b8a8-168827938e78"))
/* dual interface */ _IAgVAEngineDefinition;
struct __declspec(uuid("304b74ed-314e-47ba-b7aa-6d5a12907873"))
/* interface */ IAgVAEngineIon;
struct __declspec(uuid("d48469d2-b0cc-4fbc-997c-f0e6fb84d52a"))
/* dual interface */ _IAgVAEngineIon;
struct __declspec(uuid("e05f6d1b-05d9-4e33-bc67-050b55bad7cb"))
/* interface */ IAgVAEngineCustom;
struct __declspec(uuid("6b7342c3-279b-41d4-8fae-d62683f93caf"))
/* dual interface */ _IAgVAEngineCustom;
struct __declspec(uuid("23733b21-d306-4845-848a-372b95634f13"))
/* interface */ IAgVAEnginePlugin;
struct __declspec(uuid("eb4f4752-e7d3-42e9-98f9-a44764ae59e5"))
/* dual interface */ _IAgVAEnginePlugin;
struct __declspec(uuid("9a51ed34-6000-4ed5-8f54-2708256a238c"))
/* interface */ IAgVAEngineModelPoly;
struct __declspec(uuid("6109a886-0aa5-406e-979b-982416eadde8"))
/* dual interface */ _IAgVAEngineModelPoly;
enum AgEVAControlThrusters;
enum AgEVAThrusterDirection;
struct __declspec(uuid("4bb58088-5d1f-41d9-a109-736ea54e2e84"))
/* interface */ IAgVAThruster;
struct __declspec(uuid("a6e259d0-a949-4b54-a4bc-de37d6a06c69"))
/* dual interface */ _IAgVAThruster;
struct __declspec(uuid("531c112f-bbbd-47c1-b8f9-73713a52563b"))
/* dual interface */ IAgVAThrusterSetCollection;
struct __declspec(uuid("2730484f-b9f2-4c2e-90c9-c43b72245aa5"))
/* interface */ IAgVAThrusterSet;
struct __declspec(uuid("1f203ee1-bb61-4a54-b493-97fc0494e7e8"))
/* dual interface */ _IAgVAThrusterSet;
struct __declspec(uuid("0df01141-5819-4eb5-8d66-081b6cf0835e"))
/* interface */ IAgVAAsTriggerCondition;
enum AgEVACriteria;
struct __declspec(uuid("8afc05e2-4d42-4b7b-9d8d-bfab3d54b755"))
/* dual interface */ IAgVAConstraintCollection;
struct __declspec(uuid("f7976ae5-d912-45a0-b6e6-dd908394f3b5"))
/* dual interface */ _IAgVAAsTriggerCondition;
struct __declspec(uuid("102cbf4d-beb6-425b-a2ad-a45c2eaab086"))
/* interface */ IAgVACustomFunctionScriptEngine;
struct __declspec(uuid("5c3eb066-72ba-434d-825b-996e39a67c57"))
/* dual interface */ _IAgVACustomFunctionScriptEngine;
enum AgEVAErrorControl;
enum AgEVAPredictorCorrector;
enum AgEVANumericalIntegrator;
enum AgEVACoeffRKV8th9th;
struct __declspec(uuid("89f61406-495a-4fab-86f1-04d1a7947a6a"))
/* interface */ IAgVANumericalIntegrator;
struct __declspec(uuid("1682275d-6a5e-495c-a7b6-776684fb28f8"))
/* dual interface */ IAgVAPropagatorFunctionCollection;
struct __declspec(uuid("3464bc24-ccb8-4aa7-b5f0-a42e1ecdbb0e"))
/* interface */ IAgVANumericalPropagatorWrapper;
struct __declspec(uuid("d75c4a9b-02ee-47b4-91d5-f329d6c13caf"))
/* dual interface */ _IAgVANumericalPropagatorWrapper;
struct __declspec(uuid("814aae65-9fcd-4e8b-a60e-77da333ddb7b"))
/* interface */ IAgVABulirschStoerIntegrator;
struct __declspec(uuid("e49e0da1-54a3-4f29-9316-39d05b08dc47"))
/* dual interface */ _IAgVABulirschStoerIntegrator;
struct __declspec(uuid("6efb44b1-edaa-468f-b4e9-874e0f8c25ac"))
/* interface */ IAgVAGaussJacksonIntegrator;
struct __declspec(uuid("f3d23293-a8ae-49cd-b535-22972a2e02f2"))
/* dual interface */ _IAgVAGaussJacksonIntegrator;
struct __declspec(uuid("9b49bc07-b81b-4439-9c8f-50afd92b11b0"))
/* interface */ IAgVARK2nd3rd;
struct __declspec(uuid("19f9f259-abf0-40d7-bb82-fb266ba4ff52"))
/* dual interface */ _IAgVARK2nd3rd;
struct __declspec(uuid("d7bfce3a-f674-4290-86ce-3c197398ada9"))
/* interface */ IAgVARK4th;
struct __declspec(uuid("b91cfa8a-2989-42df-9dfe-098d7c4a8929"))
/* dual interface */ _IAgVARK4th;
struct __declspec(uuid("3213fdc3-912e-4b75-a32e-c5ed90b2953a"))
/* interface */ IAgVARK4th5th;
struct __declspec(uuid("f7792c2c-6834-4ace-b571-ac14862e8a1e"))
/* dual interface */ _IAgVARK4th5th;
struct __declspec(uuid("1b5bb579-f5d7-465b-a5f0-8e34c6c49d22"))
/* interface */ IAgVARK4thAdapt;
struct __declspec(uuid("e58e7826-36d7-4d5f-b500-fc6fa321e4dc"))
/* dual interface */ _IAgVARK4thAdapt;
struct __declspec(uuid("585d4c63-5a7d-42ee-8f31-d95dd145863f"))
/* interface */ IAgVARKF7th8th;
struct __declspec(uuid("d5427974-cbe5-4240-ac5c-29ca8642345b"))
/* dual interface */ _IAgVARKF7th8th;
struct __declspec(uuid("7253edb2-a200-47ef-8ff1-ba7bc4151e1e"))
/* interface */ IAgVARKV8th9th;
struct __declspec(uuid("44e4ac2d-ccc3-4706-9ab7-fa39630c46ce"))
/* dual interface */ _IAgVARKV8th9th;
struct /* coclass */ AgVADriverMCS;
struct __declspec(uuid("baa24cf1-0358-49b2-9d55-b5cc82114b3e"))
/* dual interface */ _IAgVADriverMCS;
struct __declspec(uuid("e30fe5d4-eccd-4c2c-a0d3-0013680df30b"))
/* dual interface */ IAgVAMCSSegmentCollection;
struct __declspec(uuid("87cbbb81-d986-4a3b-bb44-92082ed40f2d"))
/* interface */ IAgVAMCSSegment;
enum AgEVASegmentType;
struct __declspec(uuid("efa927ab-52de-4ed8-9443-71ff6834dc74"))
/* interface */ IAgVAMCSSegmentProperties;
struct __declspec(uuid("0bb9dd7d-f226-4c0e-ba79-1ae878d647f8"))
/* dual interface */ IAgVABPlaneCollection;
enum AgEVARunCode;
struct __declspec(uuid("f54459c0-dc2d-406d-8fe8-5128b08cdcf0"))
/* interface */ IAgVAState;
enum AgEVAElementType;
struct __declspec(uuid("e2fcd5c6-dffe-4a6c-ba12-c89750bfeec6"))
/* interface */ IAgVAElement;
struct __declspec(uuid("e4706bf1-76cb-409f-96d7-d7294d627fe7"))
/* interface */ IAgVAMCSOptions;
struct __declspec(uuid("344227ea-4706-4020-aa2e-cc8e2b086137"))
/* dual interface */ IAgVAUserVariableDefinitionCollection;
struct __declspec(uuid("e7d7f715-efcf-4da8-b619-4bfb4ccd0475"))
/* interface */ IAgVAUserVariableDefinition;
enum AgEVASmartRunMode;
struct __declspec(uuid("eded4c83-c733-40fe-a8ec-23b7f1ba44a4"))
/* dual interface */ IAgVAAutomaticSequenceCollection;
struct __declspec(uuid("c5c0b5e3-ee5e-4f28-8dbc-f6ebb9a7cf9a"))
/* interface */ IAgVAAutomaticSequence;
enum AgEVAClearEphemerisDirection;
struct __declspec(uuid("dbc8c2ec-6798-4162-b3d9-26622192e68d"))
/* dual interface */ IAgVACalculationGraphCollection;
struct __declspec(uuid("cd671d91-4854-4beb-86b1-e9106296bcc1"))
/* interface */ IAgVADriverMCS;
struct /* coclass */ AgVAMCSSegmentCollection;
struct __declspec(uuid("3085ed60-f22a-4b90-b6e9-103fe69bfec4"))
/* interface */ IAgRuntimeTypeInfoProvider;
struct /* coclass */ AgVAMCSEnd;
struct __declspec(uuid("b70c02f8-ca47-4c7e-b70c-502c676ea2e6"))
/* dual interface */ _IAgVAMCSEnd;
struct __declspec(uuid("f2283676-341e-438b-b8a9-f4c3a8980ea3"))
/* interface */ IAgVAMCSEnd;
struct /* coclass */ AgVAMCSInitialState;
struct __declspec(uuid("63de1bbd-59c9-400c-83d3-8e8126d13b9c"))
/* dual interface */ _IAgVAMCSInitialState;
struct __declspec(uuid("cc0e069b-2b64-47b9-a331-1aaaaf02b59e"))
/* interface */ IAgVASpacecraftParameters;
struct __declspec(uuid("e6c1ca39-da5d-4523-a00b-e9476ae2dbc8"))
/* interface */ IAgVAFuelTank;
enum AgEVAControlInitState;
struct __declspec(uuid("ea74908a-c16c-4799-9469-c741788e01b4"))
/* dual interface */ IAgVAUserVariableCollection;
struct __declspec(uuid("837d7080-f9c9-4986-8b02-c2cbf922395a"))
/* interface */ IAgVAUserVariable;
struct __declspec(uuid("7a49a480-235a-4226-9f51-a1c16f3ffd93"))
/* interface */ IAgVAMCSInitialState;
struct /* coclass */ AgVASpacecraftParameters;
struct __declspec(uuid("3adcfe2f-c010-4b77-a038-ba42cd3215c5"))
/* dual interface */ _IAgVASpacecraftParameters;
struct /* coclass */ AgVAFuelTank;
struct __declspec(uuid("5414c3c7-be44-4c3a-825c-30679ec61d58"))
/* dual interface */ _IAgVAFuelTank;
struct /* coclass */ AgVAElementCartesian;
struct __declspec(uuid("5cdd349d-449a-4fd1-9e5b-6442f366c3a4"))
/* dual interface */ _IAgVAElementCartesian;
struct __declspec(uuid("37bcd2d9-1334-4ce3-a69b-0f01b8b533fc"))
/* interface */ IAgVAElementCartesian;
struct /* coclass */ AgVAElementKeplerian;
struct __declspec(uuid("4a2929d9-09d0-4d58-86fe-c55491409f8e"))
/* dual interface */ _IAgVAElementKeplerian;
struct __declspec(uuid("693b4ddf-1e53-4e0e-862d-22773337cd27"))
/* interface */ IAgVAElementKeplerian;
struct /* coclass */ AgVAElementModifiedKeplerian;
struct __declspec(uuid("40234196-e68a-4dbf-9af1-e74223d759dd"))
/* dual interface */ _IAgVAElementModifiedKeplerian;
struct __declspec(uuid("e779c398-4b3d-4113-88e7-62d52aa59200"))
/* interface */ IAgVAElementModifiedKeplerian;
struct /* coclass */ AgVAElementEquinoctial;
struct __declspec(uuid("0dcaec84-e0c5-4ca3-ae16-3b38f7e99e5d"))
/* dual interface */ _IAgVAElementEquinoctial;
enum AgEVAFormulation;
struct __declspec(uuid("b1f5a467-9d83-4732-b66f-465546a1c461"))
/* interface */ IAgVAElementEquinoctial;
struct /* coclass */ AgVAElementDelaunay;
struct __declspec(uuid("27c63574-d944-4d5f-ac3b-449532820c2f"))
/* dual interface */ _IAgVAElementDelaunay;
struct __declspec(uuid("e2a293a4-eae7-4c55-9c11-0372356c4e81"))
/* interface */ IAgVAElementDelaunay;
struct /* coclass */ AgVAElementMixedSpherical;
struct __declspec(uuid("7a334389-245f-4164-b6d6-b2a8f6aeafba"))
/* dual interface */ _IAgVAElementMixedSpherical;
struct __declspec(uuid("e3ccda55-52c3-4079-a69c-8269269fad75"))
/* interface */ IAgVAElementMixedSpherical;
struct /* coclass */ AgVAElementSpherical;
struct __declspec(uuid("35b296b5-8901-4daa-b6f6-156068df0432"))
/* dual interface */ _IAgVAElementSpherical;
struct __declspec(uuid("2c4e6bbd-8c72-4729-9be2-78392391c394"))
/* interface */ IAgVAElementSpherical;
struct /* coclass */ AgVAElementTargetVectorIncomingAsymptote;
struct __declspec(uuid("c473713f-f9ed-4784-9d87-66ec1048e14a"))
/* dual interface */ _IAgVAElementTargetVectorIncomingAsymptote;
struct __declspec(uuid("a04c2515-d192-4430-814c-0844438711dd"))
/* interface */ IAgVAElementTargetVectorIncomingAsymptote;
struct /* coclass */ AgVAElementTargetVectorOutgoingAsymptote;
struct __declspec(uuid("a94cf29b-7318-4233-8a6f-bc2c7bf14ea4"))
/* dual interface */ _IAgVAElementTargetVectorOutgoingAsymptote;
struct __declspec(uuid("6161ff46-0829-4d02-bfa9-a9f2a547c2ac"))
/* interface */ IAgVAElementTargetVectorOutgoingAsymptote;
struct /* coclass */ AgVAElementGeodetic;
struct __declspec(uuid("9c9eff4f-a490-401a-86e0-4ffaeefb9d73"))
/* dual interface */ _IAgVAElementGeodetic;
struct __declspec(uuid("f499d588-41ea-4f2d-a264-1ab657755a6c"))
/* interface */ IAgVAElementGeodetic;
struct /* coclass */ AgVAMCSPropagate;
struct __declspec(uuid("5a4f00f5-91c2-4d4e-bef6-d0cf54046b1c"))
/* dual interface */ _IAgVAMCSPropagate;
struct __declspec(uuid("e1a84d2b-0a8a-42cb-b756-41cb60847eb4"))
/* dual interface */ IAgVAStoppingConditionCollection;
struct __declspec(uuid("b345fff0-1847-42c7-870f-b62ec4fccbc5"))
/* interface */ IAgVAStoppingConditionElement;
enum AgEVAControlStoppingCondition;
struct __declspec(uuid("6fc21c61-c209-4bae-a4f5-9303d8ba6962"))
/* interface */ IAgVAStoppingConditionComponent;
enum AgEVAStoppingCondition;
enum AgEVAControlAdvanced;
struct __declspec(uuid("ff8a6c4f-d45d-4f7f-8bf2-bd737fcbc068"))
/* interface */ IAgVAMCSPropagate;
struct /* coclass */ AgVAState;
struct __declspec(uuid("cd5d3088-ebfd-4e73-8893-8b971cf0862b"))
/* dual interface */ _IAgVAState;
struct /* coclass */ AgVAStoppingConditionCollection;
struct /* coclass */ AgVAAccessStoppingCondition;
struct __declspec(uuid("30fa10e3-8c39-4fdb-ac1a-5e14ccc2c4ff"))
/* dual interface */ _IAgVAAccessStoppingCondition;
enum AgEVAAccessCriterion;
struct __declspec(uuid("1cebf2f2-035b-4cc0-9195-32cf0930c67c"))
/* interface */ IAgVAAccessStoppingCondition;
struct /* coclass */ AgVALightingStoppingCondition;
struct __declspec(uuid("dd4380d8-fefe-4073-ab5c-4e2ce4a3894f"))
/* dual interface */ _IAgVALightingStoppingCondition;
enum AgEVALightingCondition;
enum AgEVAEclipsingBodiesSource;
struct __declspec(uuid("c061e80a-26da-4fc6-b734-26c20099409d"))
/* interface */ IAgVALightingStoppingCondition;
struct /* coclass */ AgVAStoppingCondition;
struct __declspec(uuid("3a51d3ac-9d2c-425a-9d95-27bc49d59d6c"))
/* dual interface */ _IAgVAStoppingCondition;
enum AgEVACriterion;
struct __declspec(uuid("f29c4125-e4fc-465e-8c16-20d670798ad0"))
/* interface */ IAgVAStoppingCondition;
struct /* coclass */ AgVAStoppingConditionElement;
struct __declspec(uuid("b98c19f5-ff36-47bc-964a-de46856edee6"))
/* dual interface */ _IAgVAStoppingConditionElement;
struct /* coclass */ AgVAMCSSequence;
struct __declspec(uuid("c73eea71-9612-4c03-afcc-fe7a85b6c50f"))
/* dual interface */ _IAgVAMCSSequence;
enum AgEVASequenceStateToPass;
struct __declspec(uuid("8e4468ba-fca4-4c95-9e11-af36fdbf7b87"))
/* interface */ IAgVAScriptingTool;
struct __declspec(uuid("b1a95b48-ceaa-415c-bec1-4d59ad1605b7"))
/* dual interface */ IAgVAScriptingSegmentCollection;
struct __declspec(uuid("c4bf86e5-63f8-4c2c-ad4d-967a6f649a55"))
/* interface */ IAgVAScriptingSegment;
struct __declspec(uuid("8a6fa57f-75f5-4703-a96f-02ec6ff9fb26"))
/* dual interface */ IAgVAScriptingCalcObjectCollection;
struct __declspec(uuid("13f6c04c-7b1a-4e3f-9a78-26a964e60fe4"))
/* interface */ IAgVAScriptingCalcObject;
struct __declspec(uuid("7f339dd2-9c84-4bdb-9180-b3b3f661b586"))
/* dual interface */ IAgVAScriptingParameterCollection;
struct __declspec(uuid("bb176851-5128-472c-a988-1894f636e857"))
/* interface */ IAgVAScriptingParameter;
enum AgEVAScriptingParameterType;
struct __declspec(uuid("c7a3e80f-a414-414d-89e2-b9defb93ba34"))
/* dual interface */ IAgVAScriptingParameterEnumerationChoiceCollection;
struct __declspec(uuid("eaf8cfd5-3aca-49f2-9b82-ae72e6ae2c69"))
/* interface */ IAgVAScriptingParameterEnumerationChoice;
enum AgEVALanguage;
struct __declspec(uuid("55181503-61eb-468f-b36b-e96e87966a6d"))
/* interface */ IAgVAMCSSequence;
struct /* coclass */ AgVAMCSBackwardSequence;
struct __declspec(uuid("430e92d7-206a-4e61-a7ab-293de9fa3a3c"))
/* dual interface */ _IAgVAMCSBackwardSequence;
struct __declspec(uuid("4e464856-ca81-44c0-b889-5f78ec06a6b4"))
/* interface */ IAgVAMCSBackwardSequence;
struct /* coclass */ AgVAMCSLaunch;
struct __declspec(uuid("5f435a53-74aa-446c-9b99-a1abbd011d09"))
/* dual interface */ _IAgVAMCSLaunch;
enum AgEVAControlLaunch;
enum AgEVALaunchDisplaySystem;
struct __declspec(uuid("5cc5d894-5e2e-4af6-a97c-14823b2b3a12"))
/* interface */ IAgVADisplaySystem;
enum AgEVAAscentType;
enum AgEVABurnoutType;
struct __declspec(uuid("a9550020-7d89-42ad-b4bd-ef3b5e0ad348"))
/* interface */ IAgVABurnout;
struct __declspec(uuid("854ca8f5-f1c1-48c1-94e7-c6b9be4213be"))
/* interface */ IAgVABurnoutVelocity;
enum AgEVABurnoutOptions;
struct __declspec(uuid("f90b9a7b-69c4-42c8-9e5b-f313ab353b21"))
/* interface */ IAgVAMCSLaunch;
struct /* coclass */ AgVADisplaySystemGeodetic;
struct __declspec(uuid("cf11eda0-a049-42bb-a421-1fa959df61ec"))
/* dual interface */ _IAgVADisplaySystemGeodetic;
struct __declspec(uuid("77af19b1-33c5-468c-9fdb-b44f9fc892a6"))
/* interface */ IAgVADisplaySystemGeodetic;
struct /* coclass */ AgVADisplaySystemGeocentric;
struct __declspec(uuid("dfb04862-f539-4c44-a9cb-504fc2e78f34"))
/* dual interface */ _IAgVADisplaySystemGeocentric;
struct __declspec(uuid("ebdaeb77-4459-4ee6-a8c9-6eea2dfd43cb"))
/* interface */ IAgVADisplaySystemGeocentric;
struct /* coclass */ AgVABurnoutGeodetic;
struct __declspec(uuid("7e3c85f3-b722-435f-a694-4337dbbfbf21"))
/* dual interface */ _IAgVABurnoutGeodetic;
struct __declspec(uuid("e2e7cb6b-aeb5-4e3a-98e6-4526d14e6739"))
/* interface */ IAgVABurnoutGeodetic;
struct /* coclass */ AgVABurnoutGeocentric;
struct __declspec(uuid("4a29afc1-7c1c-4340-8979-2d7caf11163d"))
/* dual interface */ _IAgVABurnoutGeocentric;
struct __declspec(uuid("9c30d083-f86f-43fa-aa03-f52d04ee6880"))
/* interface */ IAgVABurnoutGeocentric;
struct /* coclass */ AgVABurnoutLaunchAzAlt;
struct __declspec(uuid("cdfec3e9-3410-468e-926b-b4a9d28f4660"))
/* dual interface */ _IAgVABurnoutLaunchAzAlt;
struct __declspec(uuid("6f4da0e6-a973-4298-b431-c14c7651e043"))
/* interface */ IAgVABurnoutLaunchAzAlt;
struct /* coclass */ AgVABurnoutLaunchAzRadius;
struct __declspec(uuid("93211988-10a4-4bf8-a09e-efb734ed3b83"))
/* dual interface */ _IAgVABurnoutLaunchAzRadius;
struct __declspec(uuid("a9b9b63b-a990-4e22-9c6c-9c14eecf4c9a"))
/* interface */ IAgVABurnoutLaunchAzRadius;
struct /* coclass */ AgVABurnoutVelocity;
struct __declspec(uuid("966b0c00-7613-4f05-9ae2-d1dbbe436cb2"))
/* dual interface */ _IAgVABurnoutVelocity;
struct /* coclass */ AgVAMCSFollow;
struct __declspec(uuid("f1567780-08ba-4e8a-8d36-6f9a76817cdc"))
/* dual interface */ _IAgVAMCSFollow;
enum AgEVAFollowJoin;
enum AgEVAFollowSeparation;
enum AgEVAFollowSpacecraftAndFuelTank;
enum AgEVAControlFollow;
struct __declspec(uuid("f10e7c62-1a73-40c6-af64-d1b280f72b5c"))
/* interface */ IAgVAMCSFollow;
struct /* coclass */ AgVAMCSManeuver;
struct __declspec(uuid("e2569a8f-2820-427c-91ff-c4ff98687d13"))
/* dual interface */ _IAgVAMCSManeuver;
enum AgEVAManeuverType;
struct __declspec(uuid("36c51743-2127-484a-bdec-e30ef6765101"))
/* interface */ IAgVAManeuver;
enum AgEVAAttitudeControl;
struct __declspec(uuid("69309e0a-23ba-4bd9-987f-98b9fe65701a"))
/* interface */ IAgVAAttitudeControl;
enum AgEVABodyAxis;
enum AgEVAConstraintSign;
enum AgEVACustomFunction;
enum AgEVAPropulsionMethod;
enum AgEVAControlManeuver;
struct __declspec(uuid("c5f48f21-a7d5-4b89-8dba-a724dd6e0160"))
/* interface */ IAgVAMCSManeuver;
struct /* coclass */ AgVAManeuverFinite;
struct __declspec(uuid("82c69871-c46b-472e-96ea-cd073b074776"))
/* dual interface */ _IAgVAManeuverFinite;
enum AgEVAPressureMode;
enum AgEVAThrustType;
struct __declspec(uuid("68b1bf77-52a1-4e31-b11a-4dc3c87abd5c"))
/* interface */ IAgVAManeuverFinitePropagator;
struct __declspec(uuid("5820dc57-ba88-4f17-93a8-80952a38ac9d"))
/* interface */ IAgVAManeuverFinite;
struct /* coclass */ AgVAManeuverImpulsive;
struct __declspec(uuid("b22b93ad-f381-4b53-8500-3d15d3c12e53"))
/* dual interface */ _IAgVAManeuverImpulsive;
struct __declspec(uuid("d32ff39a-342b-4595-9b71-933e43f3c4a7"))
/* interface */ IAgVAManeuverImpulsive;
struct /* coclass */ AgVAAttitudeControlImpulsiveVelocityVector;
struct __declspec(uuid("f0a9fff7-dd78-4b31-bfb1-9c1ceb10d514"))
/* dual interface */ _IAgVAAttitudeControlImpulsiveVelocityVector;
struct __declspec(uuid("f5aa0750-1cfb-4170-a3fa-cdbda8f68eb4"))
/* interface */ IAgVAAttitudeControlImpulsive;
struct __declspec(uuid("2ca3bec1-08f2-41a6-92aa-d3b0c36fb49d"))
/* interface */ IAgVAAttitudeControlImpulsiveVelocityVector;
struct /* coclass */ AgVAAttitudeControlImpulsiveAntiVelocityVector;
struct __declspec(uuid("6daf1259-c851-4aa8-a183-1f947d14bdb5"))
/* dual interface */ _IAgVAAttitudeControlImpulsiveAntiVelocityVector;
struct __declspec(uuid("75fc3e3e-8d31-4b76-9470-7e822f33e8e4"))
/* interface */ IAgVAAttitudeControlImpulsiveAntiVelocityVector;
struct /* coclass */ AgVAAttitudeControlImpulsiveAttitude;
struct __declspec(uuid("7b6f5625-9511-4ab1-ba89-34acaeea3dfd"))
/* dual interface */ _IAgVAAttitudeControlImpulsiveAttitude;
struct __declspec(uuid("6de0ebf2-e350-41c7-810a-d000b8c5bc63"))
/* interface */ IAgVAAttitudeControlImpulsiveAttitude;
struct /* coclass */ AgVAAttitudeControlImpulsiveFile;
struct __declspec(uuid("58407b07-b6ff-4554-84ac-bae1ba9b88c3"))
/* dual interface */ _IAgVAAttitudeControlImpulsiveFile;
struct __declspec(uuid("db644e30-08ed-4ebd-9b80-b8a903f62098"))
/* interface */ IAgVAAttitudeControlImpulsiveFile;
struct /* coclass */ AgVAAttitudeControlImpulsiveThrustVector;
struct __declspec(uuid("641da036-465c-4a41-8b7e-b07701dcf9be"))
/* dual interface */ _IAgVAAttitudeControlImpulsiveThrustVector;
struct __declspec(uuid("72c4b693-c4ec-4146-be7a-0a43b782e9b2"))
/* interface */ IAgVAAttitudeControlImpulsiveThrustVector;
struct /* coclass */ AgVAAttitudeControlFiniteAntiVelocityVector;
struct __declspec(uuid("53bbcb8d-cfe9-422c-b308-e9c5d3988126"))
/* dual interface */ _IAgVAAttitudeControlFiniteAntiVelocityVector;
enum AgEVAAttitudeUpdate;
struct __declspec(uuid("729db25f-6aed-4a79-aa32-baded5a23070"))
/* interface */ IAgVAAttitudeControlFinite;
struct __declspec(uuid("2f3f4a3c-5383-4ecd-a9e1-001035191726"))
/* interface */ IAgVAAttitudeControlFiniteAntiVelocityVector;
struct /* coclass */ AgVAAttitudeControlFiniteAttitude;
struct __declspec(uuid("a945e12f-3e86-4faf-bfb2-c1a42d2bf0ea"))
/* dual interface */ _IAgVAAttitudeControlFiniteAttitude;
struct __declspec(uuid("34271aa0-c9e0-4e9f-be2e-845c9d8d4a3d"))
/* interface */ IAgVAAttitudeControlFiniteAttitude;
struct /* coclass */ AgVAAttitudeControlFiniteFile;
struct __declspec(uuid("ebe2f99d-7c03-42c0-81bd-d41da60c4dad"))
/* dual interface */ _IAgVAAttitudeControlFiniteFile;
struct __declspec(uuid("aac26857-1668-46d8-9fc9-2e60c22cb6ee"))
/* interface */ IAgVAAttitudeControlFiniteFile;
struct /* coclass */ AgVAAttitudeControlFiniteThrustVector;
struct __declspec(uuid("1a2b2c5e-6c54-406b-b471-f1181ab9ee36"))
/* dual interface */ _IAgVAAttitudeControlFiniteThrustVector;
struct __declspec(uuid("2104574d-4622-46ee-b220-6a55273a71ba"))
/* interface */ IAgVAAttitudeControlFiniteThrustVector;
struct /* coclass */ AgVAAttitudeControlFiniteTimeVarying;
struct __declspec(uuid("b2284379-db55-41a4-a416-418b4bd05d93"))
/* dual interface */ _IAgVAAttitudeControlFiniteTimeVarying;
struct __declspec(uuid("e5f36d56-c5df-4814-b957-e5df86ffb72c"))
/* interface */ IAgVAAttitudeControlFiniteTimeVarying;
struct /* coclass */ AgVAAttitudeControlFiniteVelocityVector;
struct __declspec(uuid("22e4d9e1-1f1d-49fc-823f-ebb6588dc044"))
/* dual interface */ _IAgVAAttitudeControlFiniteVelocityVector;
struct __declspec(uuid("ecb98914-be07-498d-b4f6-cebaba34d2da"))
/* interface */ IAgVAAttitudeControlFiniteVelocityVector;
struct /* coclass */ AgVAAttitudeControlFinitePlugin;
struct __declspec(uuid("93333e0b-1e41-4e42-b1d5-81758f91f7cd"))
/* dual interface */ _IAgVAAttitudeControlFinitePlugin;
struct __declspec(uuid("50cc2465-5cae-46a9-9f31-9c26313f5b72"))
/* interface */ IAgVAAttitudeControlFinitePlugin;
struct /* coclass */ AgVAManeuverFinitePropagator;
struct __declspec(uuid("1e113dd9-d5b3-4e73-8c0c-8ba3f1332549"))
/* dual interface */ _IAgVAManeuverFinitePropagator;
struct /* coclass */ AgVAMCSHold;
struct __declspec(uuid("d345ef7b-202a-4f54-828f-638402f13443"))
/* dual interface */ _IAgVAMCSHold;
struct __declspec(uuid("c3e56aa1-7a6f-4a1d-9d78-d3c7f42a29f7"))
/* interface */ IAgVAMCSHold;
struct /* coclass */ AgVAMCSUpdate;
struct __declspec(uuid("a11f7a52-ab1a-44ed-b1b1-203ebb1c41bc"))
/* dual interface */ _IAgVAMCSUpdate;
enum AgEVAUpdateParam;
enum AgEVAUpdateAction;
enum AgEVAControlUpdate;
struct __declspec(uuid("54441b58-2902-4142-9fa7-267bcbb771d0"))
/* dual interface */ IAgVAUserVariableUpdateCollection;
struct __declspec(uuid("2133d87e-a42f-4a93-a201-cc31caa9fa37"))
/* interface */ IAgVAUserVariableUpdate;
struct __declspec(uuid("2c839e6f-7ffc-456d-8029-6fe01e1388f2"))
/* interface */ IAgVAMCSUpdate;
struct /* coclass */ AgVAMCSReturn;
struct __declspec(uuid("231de183-e0c2-402f-a7e6-ff2b1d6fc2af"))
/* dual interface */ _IAgVAMCSReturn;
enum AgEVAReturnControl;
struct __declspec(uuid("edefea25-1ed3-4fe1-90ce-f8c9181cff58"))
/* interface */ IAgVAMCSReturn;
struct /* coclass */ AgVAMCSStop;
struct __declspec(uuid("eeb5c250-d256-480e-92cd-dbbb4013ef81"))
/* dual interface */ _IAgVAMCSStop;
struct __declspec(uuid("828a454a-c8d2-49db-8aab-4f44e0ff009c"))
/* interface */ IAgVAMCSStop;
struct /* coclass */ AgVAMCSTargetSequence;
struct __declspec(uuid("4e33a410-0f75-4c26-a0b0-81d05290c4bf"))
/* dual interface */ _IAgVAMCSTargetSequence;
enum AgEVATargetSeqAction;
enum AgEVAProfilesFinish;
struct __declspec(uuid("b574fc5f-1fbe-44bd-886e-415e22334005"))
/* dual interface */ IAgVAProfileCollection;
struct __declspec(uuid("698d3200-90a3-47ce-8692-499cd02ee634"))
/* interface */ IAgVAProfile;
enum AgEVAProfileMode;
enum AgEVAProfile;
enum AgEVAProfileInsertDirection;
struct __declspec(uuid("5ddbcac6-0421-4fa6-9df5-8cc6bb9bccd4"))
/* interface */ IAgVAMCSTargetSequence;
struct /* coclass */ AgVAProfileCollection;
struct /* coclass */ AgVAMCSOptions;
struct __declspec(uuid("45b76f04-89db-4dec-a29c-3b74be1fad90"))
/* dual interface */ _IAgVAMCSOptions;
struct /* coclass */ AgVACalcObjectCollection;
struct /* coclass */ AgVAConstraintCollection;
struct /* coclass */ AgVAPluginProperties;
struct __declspec(uuid("8847ccee-042a-43de-869d-3f989e001d2b"))
/* dual interface */ _IAgVAPluginProperties;
struct /* coclass */ AgVAProfileSearchPlugin;
struct __declspec(uuid("82b02365-546e-47a8-844b-6f3cf8582826"))
/* dual interface */ _IAgVAProfileSearchPlugin;
struct __declspec(uuid("89c633fa-88b5-49cc-9bb5-0464848d75b3"))
/* dual interface */ IAgVASearchPluginControlCollection;
struct __declspec(uuid("fb97ce89-e402-4e26-890a-0af44dd73e91"))
/* interface */ IAgVASearchPluginControl;
struct __declspec(uuid("13bdda69-c51c-4698-ac8a-890ed451bb77"))
/* dual interface */ IAgVASearchPluginResultCollection;
struct __declspec(uuid("6ca55b29-84e0-41a2-9d80-48badf59527e"))
/* interface */ IAgVASearchPluginResult;
struct __declspec(uuid("efb1922e-c26f-4766-ae88-cf8912b98941"))
/* dual interface */ IAgVATargeterGraphCollection;
struct __declspec(uuid("e8b394c7-7726-4643-8069-3be5c4de4820"))
/* interface */ IAgVATargeterGraph;
struct __declspec(uuid("f916a6c5-b0c8-44df-bddd-c0a6c550f388"))
/* dual interface */ IAgVATargeterGraphActiveControlCollection;
struct __declspec(uuid("512fd513-a76f-4f38-9deb-1884867e64cb"))
/* interface */ IAgVATargeterGraphActiveControl;
struct __declspec(uuid("ef9caa6e-47dd-42c9-92cc-4e2e53c42fb5"))
/* dual interface */ IAgVATargeterGraphResultCollection;
struct __declspec(uuid("06a729b7-eb9d-41b7-8cf9-fe2f8231ea32"))
/* interface */ IAgVATargeterGraphResult;
enum AgEVAGraphOption;
struct __declspec(uuid("ff7233d2-85de-40df-9638-99164b439f0b"))
/* interface */ IAgVAProfileSearchPlugin;
struct /* coclass */ AgVAProfileDEOptimizer;
struct __declspec(uuid("5ae51995-e397-4ae8-a9c3-f94ae6617959"))
/* dual interface */ _IAgVAProfileDEOptimizer;
struct __declspec(uuid("f1dbf2cc-ee4c-4868-9964-3cbae130e4ec"))
/* dual interface */ IAgVADEControlCollection;
struct __declspec(uuid("7d276492-c5a6-4967-ad63-ad322038766c"))
/* interface */ IAgVADEControl;
enum AgEVADEScalingMethod;
struct __declspec(uuid("44e02d02-dacb-4b14-9e31-c80fa54b6f40"))
/* dual interface */ IAgVADEResultCollection;
struct __declspec(uuid("d9da016b-90e0-41da-bd41-d010465822e0"))
/* interface */ IAgVADEResult;
enum AgEVADEGoal;
struct __declspec(uuid("553aafa8-fa51-45b2-affc-cfac90e5e938"))
/* interface */ IAgVAProfileDEOptimizer;
struct /* coclass */ AgVATargeterGraph;
struct __declspec(uuid("8654f4b7-d53d-44bc-96e3-6223eb18c013"))
/* dual interface */ _IAgVATargeterGraph;
struct /* coclass */ AgVATargeterGraphCollection;
struct /* coclass */ AgVATargeterGraphResultCollection;
struct /* coclass */ AgVATargeterGraphActiveControlCollection;
struct /* coclass */ AgVATargeterGraphActiveControl;
struct __declspec(uuid("eb597747-7374-40ff-a91b-60ad927242b7"))
/* dual interface */ _IAgVATargeterGraphActiveControl;
struct /* coclass */ AgVATargeterGraphResult;
struct __declspec(uuid("e0764be4-9b75-481c-a330-b666f175e862"))
/* dual interface */ _IAgVATargeterGraphResult;
struct /* coclass */ AgVAProfileDifferentialCorrector;
struct __declspec(uuid("d09d24df-89c5-4b6c-9189-0e424e80c43c"))
/* dual interface */ _IAgVAProfileDifferentialCorrector;
struct __declspec(uuid("c9364860-373b-4229-a202-2e1789e703ec"))
/* dual interface */ IAgVADCControlCollection;
struct __declspec(uuid("a1712437-83b3-4ac4-b16f-a0edb20d8a05"))
/* interface */ IAgVADCControl;
enum AgEVADCScalingMethod;
struct __declspec(uuid("539bffa0-81b9-4475-81aa-c69537e4108c"))
/* dual interface */ IAgVADCResultCollection;
struct __declspec(uuid("48c848ab-2268-4021-8f7f-6cf362008e0d"))
/* interface */ IAgVADCResult;
enum AgEVAConvergenceCriteria;
enum AgEVADeriveCalcMethod;
enum AgEVADrawPerturbation;
enum AgEVARootFindingAlgorithm;
struct __declspec(uuid("35303379-f39f-4106-abf1-bd8d83b4068e"))
/* interface */ IAgVAProfileDifferentialCorrector;
struct /* coclass */ AgVAProfileScriptingTool;
struct __declspec(uuid("8844eb26-748d-4065-9ea4-7595aadaa6af"))
/* dual interface */ _IAgVAProfileScriptingTool;
struct __declspec(uuid("c1d585d7-8e1b-4185-8a03-b3aec8886c01"))
/* interface */ IAgVAProfileScriptingTool;
struct /* coclass */ AgVADCControl;
struct __declspec(uuid("e1ec091f-f480-4ffb-bb9a-80c2d43abc13"))
/* dual interface */ _IAgVADCControl;
struct /* coclass */ AgVADCResult;
struct __declspec(uuid("0d3d0d88-ab82-416d-a7ce-58216d8f2a81"))
/* dual interface */ _IAgVADCResult;
struct /* coclass */ AgVADCControlCollection;
struct /* coclass */ AgVADCResultCollection;
struct /* coclass */ AgVADEControl;
struct __declspec(uuid("cd7875ac-85c2-493b-a25d-7cc69e525959"))
/* dual interface */ _IAgVADEControl;
struct /* coclass */ AgVADEResult;
struct __declspec(uuid("2b2ec173-4bea-4d0f-8860-08f56e87472b"))
/* dual interface */ _IAgVADEResult;
struct /* coclass */ AgVADEControlCollection;
struct /* coclass */ AgVADEResultCollection;
struct /* coclass */ AgVASearchPluginControl;
struct __declspec(uuid("b9d77abe-71f5-4687-a8d8-cf78145753dd"))
/* dual interface */ _IAgVASearchPluginControl;
struct /* coclass */ AgVASearchPluginControlCollection;
struct /* coclass */ AgVASearchPluginResult;
struct __declspec(uuid("143ee79c-0558-40b0-bc23-bd3cf51a6c09"))
/* dual interface */ _IAgVASearchPluginResult;
struct /* coclass */ AgVASearchPluginResultCollection;
struct /* coclass */ AgVAProfileChangeManeuverType;
struct __declspec(uuid("76dd707a-d2f3-48ec-b5b6-404b8b62a662"))
/* dual interface */ _IAgVAProfileChangeManeuverType;
struct __declspec(uuid("8b0414a7-ac00-42e5-8c99-49d60b2440b1"))
/* interface */ IAgVAProfileChangeManeuverType;
struct /* coclass */ AgVAProfileChangeReturnSegment;
struct __declspec(uuid("809bac80-e31d-4938-8e25-79b03eb2def6"))
/* dual interface */ _IAgVAProfileChangeReturnSegment;
struct __declspec(uuid("99d4468b-a24d-4b77-9450-078293d06358"))
/* interface */ IAgVAProfileChangeReturnSegment;
struct /* coclass */ AgVAProfileChangePropagator;
struct __declspec(uuid("67bac38d-bd7a-4d33-bfd8-14d6246e692f"))
/* dual interface */ _IAgVAProfileChangePropagator;
struct __declspec(uuid("3ea24a54-6ace-4d03-8aab-5bbc1c82b17b"))
/* interface */ IAgVAProfileChangePropagator;
struct /* coclass */ AgVAProfileChangeStopSegment;
struct __declspec(uuid("cdafc1f7-9b0f-4570-9bb1-b37f6c9a2b69"))
/* dual interface */ _IAgVAProfileChangeStopSegment;
enum AgEVAState;
struct __declspec(uuid("1f1f55b3-6a80-4c6b-8c91-3252e0be5790"))
/* interface */ IAgVAProfileChangeStopSegment;
struct /* coclass */ AgVAProfileChangeStoppingConditionState;
struct __declspec(uuid("2909bdb0-ba42-4de4-89aa-e41a177879e1"))
/* dual interface */ _IAgVAProfileChangeStoppingConditionState;
struct __declspec(uuid("da461207-1d96-4103-8566-67752160b130"))
/* interface */ IAgVAProfileChangeStoppingConditionState;
struct /* coclass */ AgVAProfileSeedFiniteManeuver;
struct __declspec(uuid("a985d81d-52d2-44b0-9887-d369ae21d7d5"))
/* dual interface */ _IAgVAProfileSeedFiniteManeuver;
struct __declspec(uuid("085cb315-b204-4907-af39-ccd56642abcb"))
/* interface */ IAgVAProfileSeedFiniteManeuver;
struct /* coclass */ AgVAProfileRunOnce;
struct __declspec(uuid("b98579c2-570f-4faf-9a83-e53dedc81181"))
/* dual interface */ _IAgVAProfileRunOnce;
struct __declspec(uuid("e486b3ea-6537-4edf-8fbd-ae141ff07d17"))
/* interface */ IAgVAProfileRunOnce;
struct /* coclass */ AgVABPlaneCollection;
struct /* coclass */ AgVAStateCalcDamageFlux;
struct /* coclass */ AgVAStateCalcDamageMassFlux;
struct /* coclass */ AgVAStateCalcMagFieldDipoleL;
struct /* coclass */ AgVAStateCalcSEETMagFieldFieldLineSepAngle;
struct /* coclass */ AgVAStateCalcImpactFlux;
struct /* coclass */ AgVAStateCalcImpactMassFlux;
struct /* coclass */ AgVAStateCalcSEETSAAFlux;
struct /* coclass */ AgVAStateCalcSEETVehTemp;
struct /* coclass */ AgVAStateCalcEpoch;
struct /* coclass */ AgVAStateCalcCartesianElem;
struct /* coclass */ AgVAStateCalcCartSTMElem;
struct /* coclass */ AgVAStateCalcEnvironment;
struct /* coclass */ AgVAStateCalcOrbitDelaunayG;
struct /* coclass */ AgVAStateCalcOrbitDelaunayH;
struct /* coclass */ AgVAStateCalcOrbitDelaunayL;
struct /* coclass */ AgVAStateCalcOrbitSemiLatusRectum;
struct /* coclass */ AgVAStateCalcEquinoctialElem;
struct /* coclass */ AgVAStateCalcCloseApproachBearing;
struct /* coclass */ AgVAStateCalcCloseApproachMag;
struct /* coclass */ AgVAStateCalcCloseApproachTheta;
struct /* coclass */ AgVAStateCalcCloseApproachX;
struct /* coclass */ AgVAStateCalcCloseApproachY;
struct /* coclass */ AgVAStateCalcCloseApproachCosBearing;
struct /* coclass */ AgVAStateCalcRelGroundTrackError;
struct /* coclass */ AgVAStateCalcRelAtAOLMaster;
struct /* coclass */ AgVAStateCalcDeltaFromMaster;
struct /* coclass */ AgVAStateCalcLonDriftRate;
struct /* coclass */ AgVAStateCalcMeanEarthLon;
struct /* coclass */ AgVAStateCalcRectifiedLon;
struct /* coclass */ AgVAStateCalcHeightAboveTerrain;
struct /* coclass */ AgVAStateCalcGeodeticElem;
struct /* coclass */ AgVAStateCalcRepeatingGroundTrackErr;
struct /* coclass */ AgVAStateCalcAltOfApoapsis;
struct /* coclass */ AgVAStateCalcAltOfPeriapsis;
struct /* coclass */ AgVAStateCalcArgOfLat;
struct /* coclass */ AgVAStateCalcArgOfPeriapsis;
struct /* coclass */ AgVAStateCalcEccAnomaly;
struct /* coclass */ AgVAStateCalcLonOfAscNode;
struct /* coclass */ AgVAStateCalcMeanMotion;
struct /* coclass */ AgVAStateCalcOrbitPeriod;
struct /* coclass */ AgVAStateCalcRadOfApoapsis;
struct /* coclass */ AgVAStateCalcRadOfPeriapsis;
struct /* coclass */ AgVAStateCalcSemiMajorAxis;
struct /* coclass */ AgVAStateCalcTimePastAscNode;
struct /* coclass */ AgVAStateCalcTimePastPeriapsis;
struct /* coclass */ AgVAStateCalcTrueAnomaly;
struct /* coclass */ AgVAStateCalcDeltaV;
struct /* coclass */ AgVAStateCalcDeltaVSquared;
struct /* coclass */ AgVAStateCalcMCSDeltaV;
struct /* coclass */ AgVAStateCalcMCSDeltaVSquared;
struct /* coclass */ AgVAStateCalcSequenceDeltaV;
struct /* coclass */ AgVAStateCalcSequenceDeltaVSquared;
struct /* coclass */ AgVAStateCalcFuelMass;
struct /* coclass */ AgVAStateCalcDensity;
struct /* coclass */ AgVAStateCalcInertialDeltaVMag;
struct /* coclass */ AgVAStateCalcInertialDeltaVx;
struct /* coclass */ AgVAStateCalcInertialDeltaVy;
struct /* coclass */ AgVAStateCalcInertialDeltaVz;
struct /* coclass */ AgVAStateCalcManeuverSpecificImpulse;
struct /* coclass */ AgVAStateCalcPressure;
struct /* coclass */ AgVAStateCalcTemperature;
struct /* coclass */ AgVAStateCalcVectorY;
struct /* coclass */ AgVAStateCalcVectorZ;
struct /* coclass */ AgVAStateCalcMass;
struct /* coclass */ AgVAStateCalcManeuverTotalMassFlowRate;
struct /* coclass */ AgVAStateCalcAbsoluteValue;
struct /* coclass */ AgVAStateCalcDifference;
struct /* coclass */ AgVAStateCalcDifferenceOtherSegment;
struct /* coclass */ AgVAStateCalcPosDifferenceOtherSegment;
struct /* coclass */ AgVAStateCalcVelDifferenceOtherSegment;
struct /* coclass */ AgVAStateCalcPosVelDifferenceOtherSegment;
struct /* coclass */ AgVAStateCalcValueAtSegment;
struct /* coclass */ AgVAStateCalcMaxValue;
struct /* coclass */ AgVAStateCalcMinValue;
struct /* coclass */ AgVAStateCalcNegative;
struct /* coclass */ AgVAStateCalcEccentricity;
struct /* coclass */ AgVAStateCalcMeanAnomaly;
struct /* coclass */ AgVAStateCalcRAAN;
struct /* coclass */ AgVABDotRCalc;
struct /* coclass */ AgVABDotTCalc;
struct /* coclass */ AgVABMagCalc;
struct /* coclass */ AgVABThetaCalc;
struct /* coclass */ AgVAStateCalcDeltaDec;
struct /* coclass */ AgVAStateCalcDeltaRA;
struct /* coclass */ AgVAStateCalcApparentSolarLon;
struct /* coclass */ AgVAStateCalcBetaAngle;
struct /* coclass */ AgVAStateCalcEarthMeanSolarLon;
struct /* coclass */ AgVAStateCalcLocalApparentSolarLon;
struct /* coclass */ AgVAStateCalcLonOfPeriapsis;
struct /* coclass */ AgVAStateCalcOrbitStateValue;
struct /* coclass */ AgVAStateCalcSignedEccentricity;
struct /* coclass */ AgVAStateCalcInclination;
struct /* coclass */ AgVAStateCalcTrueLon;
struct /* coclass */ AgVAStateCalcPower;
struct /* coclass */ AgVAStateCalcRelMotion;
struct /* coclass */ AgVAStateCalcCustomFunction;
struct /* coclass */ AgVAStateCalcScript;
struct /* coclass */ AgVAStateCalcCd;
struct /* coclass */ AgVAStateCalcCr;
struct /* coclass */ AgVAStateCalcDragArea;
struct /* coclass */ AgVAStateCalcRadiationPressureArea;
struct /* coclass */ AgVAStateCalcRadiationPressureCoefficient;
struct /* coclass */ AgVAStateCalcSRPArea;
struct /* coclass */ AgVAStateCalcCosOfVerticalFPA;
struct /* coclass */ AgVAStateCalcDec;
struct /* coclass */ AgVAStateCalcFPA;
struct /* coclass */ AgVAStateCalcRMag;
struct /* coclass */ AgVAStateCalcRA;
struct /* coclass */ AgVAStateCalcVMag;
struct /* coclass */ AgVAStateCalcVelAz;
struct /* coclass */ AgVAStateCalcC3Energy;
struct /* coclass */ AgVAStateCalcInAsympDec;
struct /* coclass */ AgVAStateCalcInAsympRA;
struct /* coclass */ AgVAStateCalcInVelAzAtPeriapsis;
struct /* coclass */ AgVAStateCalcOutAsympDec;
struct /* coclass */ AgVAStateCalcOutAsympRA;
struct /* coclass */ AgVAStateCalcOutVelAzAtPeriapsis;
struct /* coclass */ AgVAStateCalcDuration;
struct /* coclass */ AgVAStateCalcUserValue;
struct /* coclass */ AgVAStateCalcCrdnAngle;
struct /* coclass */ AgVAStateCalcAngle;
struct /* coclass */ AgVAStateCalcDotProduct;
struct /* coclass */ AgVAStateCalcVectorDec;
struct /* coclass */ AgVAStateCalcVectorMag;
struct /* coclass */ AgVAStateCalcVectorRA;
struct /* coclass */ AgVAStateCalcVectorX;
struct /* coclass */ AgVAStateCalcOnePtAccess;
struct /* coclass */ AgVAStateCalcDifferenceAcrossSegmentsOtherSat;
struct /* coclass */ AgVAStateCalcValueAtSegmentOtherSat;
struct /* coclass */ AgVAStateCalcRARate;
struct /* coclass */ AgVAStateCalcDecRate;
struct /* coclass */ AgVAStateCalcGravitationalParameter;
struct /* coclass */ AgVAStateCalcReferenceRadius;
struct /* coclass */ AgVAStateCalcGravCoeff;
struct /* coclass */ AgVAStateCalcSpeedOfLight;
struct /* coclass */ AgVAStateCalcScalar;
struct /* coclass */ AgVAStateCalcApparentSolarTime;
struct /* coclass */ AgVAStateCalcEarthMeanSolarTime;
struct /* coclass */ AgVAStateCalcEarthMeanLocTimeAN;
struct /* coclass */ AgVAAutomaticSequenceCollection;
struct /* coclass */ AgVAAutomaticSequence;
struct __declspec(uuid("aaad6835-2c41-4592-9085-08a8707e7fc0"))
/* dual interface */ _IAgVAAutomaticSequence;
struct /* coclass */ AgVACentralBodyCollection;
struct /* coclass */ AgVACentralBody;
struct /* coclass */ AgVACbGravityModel;
struct /* coclass */ AgVACbShapeSphere;
struct /* coclass */ AgVACbShapeOblateSpheroid;
struct /* coclass */ AgVACbShapeTriaxialEllipsoid;
struct /* coclass */ AgVACbAttitudeRotationCoefficientsFile;
struct /* coclass */ AgVACbAttitudeIAU1994;
struct /* coclass */ AgVACbEphemerisAnalyticOrbit;
struct /* coclass */ AgVACbEphemerisJPLSpice;
struct /* coclass */ AgVACbEphemerisFile;
struct /* coclass */ AgVACbEphemerisJPLDE;
struct /* coclass */ AgVACbEphemerisPlanetary;
struct /* coclass */ AgVAMCSSegmentProperties;
struct __declspec(uuid("78155298-7bc3-4ca6-9da3-e7ab4051e7c4"))
/* dual interface */ _IAgVAMCSSegmentProperties;
struct /* coclass */ AgVAPowerInternal;
struct /* coclass */ AgVAPowerProcessed;
struct /* coclass */ AgVAPowerSolarArray;
struct /* coclass */ AgVAGeneralRelativityFunction;
struct /* coclass */ AgVAStateTransFunction;
struct /* coclass */ AgVARadiationPressureFunction;
struct /* coclass */ AgVAYarkovskyFunc;
struct /* coclass */ AgVABlendedDensity;
struct /* coclass */ AgVACira72Function;
struct /* coclass */ AgVAExponential;
struct /* coclass */ AgVAHarrisPriester;
struct /* coclass */ AgVADensityModelPlugin;
struct /* coclass */ AgVAJacchiaRoberts;
struct /* coclass */ AgVAJacchiaBowman2008;
struct /* coclass */ AgVAJacchia_1960;
struct /* coclass */ AgVAJacchia_1970;
struct /* coclass */ AgVAJacchia_1971;
struct /* coclass */ AgVAMSISE_1990;
struct /* coclass */ AgVAMSIS_1986;
struct /* coclass */ AgVANRLMSISE_2000;
struct /* coclass */ AgVAUS_Standard_Atmosphere;
struct /* coclass */ AgVAMarsGRAM37;
struct /* coclass */ AgVAMarsGRAM2000;
struct /* coclass */ AgVAMarsGRAM2001;
struct /* coclass */ AgVAMarsGRAM2005;
struct /* coclass */ AgVAMarsGRAM2010;
struct /* coclass */ AgVADTM2012;
struct /* coclass */ AgVAGravityFieldFunction;
struct /* coclass */ AgVAPointMassFunction;
struct /* coclass */ AgVATwoBodyFunction;
struct /* coclass */ AgVAHPOPPluginFunction;
struct /* coclass */ AgVAEOMFuncPluginFunction;
struct /* coclass */ AgVASRPAeroT20;
struct /* coclass */ AgVASRPAeroT30;
struct /* coclass */ AgVASRPGSPM04aIIA;
struct /* coclass */ AgVASRPGSPM04aIIR;
struct /* coclass */ AgVASRPGSPM04aeIIA;
struct /* coclass */ AgVASRPGSPM04aeIIR;
struct /* coclass */ AgVASRPSpherical;
struct /* coclass */ AgVAThirdBodyFunction;
struct /* coclass */ AgVADragModelPlugin;
struct /* coclass */ AgVAEngineConstAcc;
struct /* coclass */ AgVAEngineConstant;
struct /* coclass */ AgVAEngineIon;
struct /* coclass */ AgVAEngineCustom;
struct /* coclass */ AgVAEnginePlugin;
struct /* coclass */ AgVAEngineModelPoly;
struct /* coclass */ AgVAEngineModelThrustCoefficients;
struct /* coclass */ AgVAEngineModelIspCoefficients;
struct /* coclass */ AgVAEngineDefinition;
struct /* coclass */ AgVAThruster;
struct /* coclass */ AgVAThrusterSetCollection;
struct /* coclass */ AgVAThrusterSet;
struct /* coclass */ AgVAAsTriggerCondition;
struct /* coclass */ AgVACustomFunctionScriptEngine;
struct /* coclass */ AgVANumericalPropagatorWrapper;
struct /* coclass */ AgVAPropagatorFunctionCollection;
struct /* coclass */ AgVABulirschStoerIntegrator;
struct /* coclass */ AgVAGaussJacksonIntegrator;
struct /* coclass */ AgVARK2nd3rd;
struct /* coclass */ AgVARK4th;
struct /* coclass */ AgVARK4th5th;
struct /* coclass */ AgVARK4thAdapt;
struct /* coclass */ AgVARKF7th8th;
struct /* coclass */ AgVARKV8th9th;
struct /* coclass */ AgVAScriptingTool;
struct __declspec(uuid("d930deef-a509-49a4-9be6-63cbd13ebf28"))
/* dual interface */ _IAgVAScriptingTool;
struct /* coclass */ AgVAScriptingSegmentCollection;
struct /* coclass */ AgVAScriptingSegment;
struct __declspec(uuid("62b6537c-f701-4547-af46-921972e9ebd2"))
/* dual interface */ _IAgVAScriptingSegment;
struct /* coclass */ AgVAScriptingParameterCollection;
struct /* coclass */ AgVAScriptingParameter;
struct __declspec(uuid("a92a0398-f183-4cb8-9f9a-7112b41e6908"))
/* dual interface */ _IAgVAScriptingParameter;
struct /* coclass */ AgVAScriptingCalcObject;
struct __declspec(uuid("aa10bb45-fcc2-45e8-890c-ea320ba83a82"))
/* dual interface */ _IAgVAScriptingCalcObject;
struct /* coclass */ AgVAScriptingCalcObjectCollection;
struct /* coclass */ AgVAUserVariableDefinition;
struct __declspec(uuid("87b650d1-1137-4dae-b992-956fd9305960"))
/* dual interface */ _IAgVAUserVariableDefinition;
struct /* coclass */ AgVAUserVariable;
struct __declspec(uuid("823a9711-22c7-4a8d-8dea-56a62990be0e"))
/* dual interface */ _IAgVAUserVariable;
struct /* coclass */ AgVAUserVariableUpdate;
struct __declspec(uuid("25dd7d99-44ef-4f1a-8154-af2490d945d0"))
/* dual interface */ _IAgVAUserVariableUpdate;
struct /* coclass */ AgVAUserVariableDefinitionCollection;
struct /* coclass */ AgVAUserVariableCollection;
struct /* coclass */ AgVAUserVariableUpdateCollection;
struct /* coclass */ AgVACalculationGraphCollection;
struct /* coclass */ AgVAScriptingParameterEnumerationChoice;
struct __declspec(uuid("2e2faf11-ee05-4628-8952-ed38f63cb71e"))
/* dual interface */ _IAgVAScriptingParameterEnumerationChoice;
struct /* coclass */ AgVAScriptingParameterEnumerationChoiceCollection;
struct /* coclass */ AgVAProfileSNOPTOptimizer;
struct __declspec(uuid("00292cbe-212c-45bf-9415-f0ebe3c4bbea"))
/* dual interface */ _IAgVAProfileSNOPTOptimizer;
struct __declspec(uuid("f3a385d7-fbb4-405e-a7e0-b94e691866cb"))
/* dual interface */ IAgVASNOPTControlCollection;
struct __declspec(uuid("48b6ff29-9d5a-45e6-b578-d0337dcac629"))
/* interface */ IAgVASNOPTControl;
struct __declspec(uuid("17562ce6-8616-4ea2-9e02-d4b0541d6051"))
/* dual interface */ IAgVASNOPTResultCollection;
struct __declspec(uuid("f370255f-45e1-4f3c-80ea-8a8e613b15b9"))
/* interface */ IAgVASNOPTResult;
enum AgEVASNOPTGoal;
struct __declspec(uuid("05e381f1-beb5-4fb2-bdb4-d51c4c7b7f2c"))
/* interface */ IAgVAProfileSNOPTOptimizer;
struct /* coclass */ AgVASNOPTControl;
struct __declspec(uuid("fe833051-86b9-41bc-b23f-1f67b0e86ce0"))
/* dual interface */ _IAgVASNOPTControl;
struct /* coclass */ AgVASNOPTResult;
struct __declspec(uuid("9195d957-b01a-4c8b-87f3-cbe9ba8f055b"))
/* dual interface */ _IAgVASNOPTResult;
struct /* coclass */ AgVASNOPTControlCollection;
struct /* coclass */ AgVASNOPTResultCollection;
struct /* coclass */ AgVAProfileIPOPTOptimizer;
struct __declspec(uuid("8b5f1a94-8539-4470-ac09-eb4109ac883f"))
/* dual interface */ _IAgVAProfileIPOPTOptimizer;
struct __declspec(uuid("1ed7289d-bf1c-4014-b456-9fb87803d11e"))
/* dual interface */ IAgVAIPOPTControlCollection;
struct __declspec(uuid("86ce9166-7d77-4981-9db0-627344e05a87"))
/* interface */ IAgVAIPOPTControl;
struct __declspec(uuid("32aa2b93-707a-4624-a9ba-b37c13c0883b"))
/* dual interface */ IAgVAIPOPTResultCollection;
struct __declspec(uuid("4e502442-5729-428b-9dab-ff999290f6ec"))
/* interface */ IAgVAIPOPTResult;
enum AgEVAIPOPTGoal;
struct __declspec(uuid("17e0cb3d-a489-43e8-ad61-b2153464accf"))
/* interface */ IAgVAProfileIPOPTOptimizer;
struct /* coclass */ AgVAIPOPTControl;
struct __declspec(uuid("f300ef97-bc12-40bf-9f5a-5718bb7fe729"))
/* dual interface */ _IAgVAIPOPTControl;
struct /* coclass */ AgVAIPOPTResult;
struct __declspec(uuid("66561a61-5f9c-4dd7-9e17-40c703f96a55"))
/* dual interface */ _IAgVAIPOPTResult;
struct /* coclass */ AgVAIPOPTControlCollection;
struct /* coclass */ AgVAIPOPTResultCollection;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IAgVACalcObjectCollection, __uuidof(IAgVACalcObjectCollection));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcHeightAboveTerrain, __uuidof(IAgVAStateCalcHeightAboveTerrain));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcHeightAboveTerrain, __uuidof(_IAgVAStateCalcHeightAboveTerrain));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcEpoch, __uuidof(IAgVAStateCalcEpoch));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcEpoch, __uuidof(_IAgVAStateCalcEpoch));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcOrbitDelaunayG, __uuidof(IAgVAStateCalcOrbitDelaunayG));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcOrbitDelaunayG, __uuidof(_IAgVAStateCalcOrbitDelaunayG));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcOrbitDelaunayH, __uuidof(IAgVAStateCalcOrbitDelaunayH));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcOrbitDelaunayH, __uuidof(_IAgVAStateCalcOrbitDelaunayH));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcOrbitDelaunayL, __uuidof(IAgVAStateCalcOrbitDelaunayL));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcOrbitDelaunayL, __uuidof(_IAgVAStateCalcOrbitDelaunayL));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcOrbitSemiLatusRectum, __uuidof(IAgVAStateCalcOrbitSemiLatusRectum));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcOrbitSemiLatusRectum, __uuidof(_IAgVAStateCalcOrbitSemiLatusRectum));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCartesianElem, __uuidof(IAgVAStateCalcCartesianElem));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCartesianElem, __uuidof(_IAgVAStateCalcCartesianElem));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCartSTMElem, __uuidof(IAgVAStateCalcCartSTMElem));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCartSTMElem, __uuidof(_IAgVAStateCalcCartSTMElem));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcEnvironment, __uuidof(IAgVAStateCalcEnvironment));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcEnvironment, __uuidof(_IAgVAStateCalcEnvironment));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcEquinoctialElem, __uuidof(IAgVAStateCalcEquinoctialElem));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcEquinoctialElem, __uuidof(_IAgVAStateCalcEquinoctialElem));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDamageFlux, __uuidof(IAgVAStateCalcDamageFlux));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDamageFlux, __uuidof(_IAgVAStateCalcDamageFlux));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDamageMassFlux, __uuidof(IAgVAStateCalcDamageMassFlux));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDamageMassFlux, __uuidof(_IAgVAStateCalcDamageMassFlux));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcMagFieldDipoleL, __uuidof(IAgVAStateCalcMagFieldDipoleL));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcMagFieldDipoleL, __uuidof(_IAgVAStateCalcMagFieldDipoleL));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcSEETMagFieldFieldLineSepAngle, __uuidof(IAgVAStateCalcSEETMagFieldFieldLineSepAngle));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcSEETMagFieldFieldLineSepAngle, __uuidof(_IAgVAStateCalcSEETMagFieldFieldLineSepAngle));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcImpactFlux, __uuidof(IAgVAStateCalcImpactFlux));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcImpactFlux, __uuidof(_IAgVAStateCalcImpactFlux));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcImpactMassFlux, __uuidof(IAgVAStateCalcImpactMassFlux));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcImpactMassFlux, __uuidof(_IAgVAStateCalcImpactMassFlux));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcSEETSAAFlux, __uuidof(IAgVAStateCalcSEETSAAFlux));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcSEETSAAFlux, __uuidof(_IAgVAStateCalcSEETSAAFlux));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcSEETVehTemp, __uuidof(IAgVAStateCalcSEETVehTemp));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcSEETVehTemp, __uuidof(_IAgVAStateCalcSEETVehTemp));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCloseApproachBearing, __uuidof(IAgVAStateCalcCloseApproachBearing));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCloseApproachBearing, __uuidof(_IAgVAStateCalcCloseApproachBearing));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCloseApproachMag, __uuidof(IAgVAStateCalcCloseApproachMag));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCloseApproachMag, __uuidof(_IAgVAStateCalcCloseApproachMag));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCloseApproachTheta, __uuidof(IAgVAStateCalcCloseApproachTheta));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCloseApproachTheta, __uuidof(_IAgVAStateCalcCloseApproachTheta));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCloseApproachX, __uuidof(IAgVAStateCalcCloseApproachX));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCloseApproachX, __uuidof(_IAgVAStateCalcCloseApproachX));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCloseApproachY, __uuidof(IAgVAStateCalcCloseApproachY));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCloseApproachY, __uuidof(_IAgVAStateCalcCloseApproachY));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCloseApproachCosBearing, __uuidof(IAgVAStateCalcCloseApproachCosBearing));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCloseApproachCosBearing, __uuidof(_IAgVAStateCalcCloseApproachCosBearing));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRelGroundTrackError, __uuidof(IAgVAStateCalcRelGroundTrackError));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRelGroundTrackError, __uuidof(_IAgVAStateCalcRelGroundTrackError));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRelAtAOLMaster, __uuidof(IAgVAStateCalcRelAtAOLMaster));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRelAtAOLMaster, __uuidof(_IAgVAStateCalcRelAtAOLMaster));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDeltaFromMaster, __uuidof(IAgVAStateCalcDeltaFromMaster));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDeltaFromMaster, __uuidof(_IAgVAStateCalcDeltaFromMaster));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcLonDriftRate, __uuidof(IAgVAStateCalcLonDriftRate));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcLonDriftRate, __uuidof(_IAgVAStateCalcLonDriftRate));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcMeanEarthLon, __uuidof(IAgVAStateCalcMeanEarthLon));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcMeanEarthLon, __uuidof(_IAgVAStateCalcMeanEarthLon));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRectifiedLon, __uuidof(IAgVAStateCalcRectifiedLon));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRectifiedLon, __uuidof(_IAgVAStateCalcRectifiedLon));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcGeodeticElem, __uuidof(IAgVAStateCalcGeodeticElem));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcGeodeticElem, __uuidof(_IAgVAStateCalcGeodeticElem));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRepeatingGroundTrackErr, __uuidof(IAgVAStateCalcRepeatingGroundTrackErr));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRepeatingGroundTrackErr, __uuidof(_IAgVAStateCalcRepeatingGroundTrackErr));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcAltOfApoapsis, __uuidof(IAgVAStateCalcAltOfApoapsis));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcAltOfApoapsis, __uuidof(_IAgVAStateCalcAltOfApoapsis));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcAltOfPeriapsis, __uuidof(IAgVAStateCalcAltOfPeriapsis));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcAltOfPeriapsis, __uuidof(_IAgVAStateCalcAltOfPeriapsis));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcArgOfLat, __uuidof(IAgVAStateCalcArgOfLat));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcArgOfLat, __uuidof(_IAgVAStateCalcArgOfLat));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcArgOfPeriapsis, __uuidof(IAgVAStateCalcArgOfPeriapsis));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcArgOfPeriapsis, __uuidof(_IAgVAStateCalcArgOfPeriapsis));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcEccAnomaly, __uuidof(IAgVAStateCalcEccAnomaly));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcEccAnomaly, __uuidof(_IAgVAStateCalcEccAnomaly));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcEccentricity, __uuidof(IAgVAStateCalcEccentricity));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcEccentricity, __uuidof(_IAgVAStateCalcEccentricity));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcInclination, __uuidof(IAgVAStateCalcInclination));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcInclination, __uuidof(_IAgVAStateCalcInclination));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcLonOfAscNode, __uuidof(IAgVAStateCalcLonOfAscNode));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcLonOfAscNode, __uuidof(_IAgVAStateCalcLonOfAscNode));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcMeanAnomaly, __uuidof(IAgVAStateCalcMeanAnomaly));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcMeanAnomaly, __uuidof(_IAgVAStateCalcMeanAnomaly));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcMeanMotion, __uuidof(IAgVAStateCalcMeanMotion));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcMeanMotion, __uuidof(_IAgVAStateCalcMeanMotion));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcOrbitPeriod, __uuidof(IAgVAStateCalcOrbitPeriod));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcOrbitPeriod, __uuidof(_IAgVAStateCalcOrbitPeriod));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRAAN, __uuidof(IAgVAStateCalcRAAN));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRAAN, __uuidof(_IAgVAStateCalcRAAN));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRadOfApoapsis, __uuidof(IAgVAStateCalcRadOfApoapsis));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRadOfApoapsis, __uuidof(_IAgVAStateCalcRadOfApoapsis));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRadOfPeriapsis, __uuidof(IAgVAStateCalcRadOfPeriapsis));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRadOfPeriapsis, __uuidof(_IAgVAStateCalcRadOfPeriapsis));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcSemiMajorAxis, __uuidof(IAgVAStateCalcSemiMajorAxis));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcSemiMajorAxis, __uuidof(_IAgVAStateCalcSemiMajorAxis));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcTimePastAscNode, __uuidof(IAgVAStateCalcTimePastAscNode));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcTimePastAscNode, __uuidof(_IAgVAStateCalcTimePastAscNode));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcTimePastPeriapsis, __uuidof(IAgVAStateCalcTimePastPeriapsis));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcTimePastPeriapsis, __uuidof(_IAgVAStateCalcTimePastPeriapsis));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDeltaV, __uuidof(IAgVAStateCalcDeltaV));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDeltaV, __uuidof(_IAgVAStateCalcDeltaV));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDeltaVSquared, __uuidof(IAgVAStateCalcDeltaVSquared));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDeltaVSquared, __uuidof(_IAgVAStateCalcDeltaVSquared));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcMCSDeltaV, __uuidof(IAgVAStateCalcMCSDeltaV));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcMCSDeltaV, __uuidof(_IAgVAStateCalcMCSDeltaV));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcMCSDeltaVSquared, __uuidof(IAgVAStateCalcMCSDeltaVSquared));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcMCSDeltaVSquared, __uuidof(_IAgVAStateCalcMCSDeltaVSquared));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcSequenceDeltaV, __uuidof(IAgVAStateCalcSequenceDeltaV));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcSequenceDeltaV, __uuidof(_IAgVAStateCalcSequenceDeltaV));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcSequenceDeltaVSquared, __uuidof(IAgVAStateCalcSequenceDeltaVSquared));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcSequenceDeltaVSquared, __uuidof(_IAgVAStateCalcSequenceDeltaVSquared));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcFuelMass, __uuidof(IAgVAStateCalcFuelMass));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcFuelMass, __uuidof(_IAgVAStateCalcFuelMass));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDensity, __uuidof(IAgVAStateCalcDensity));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDensity, __uuidof(_IAgVAStateCalcDensity));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcInertialDeltaVMag, __uuidof(IAgVAStateCalcInertialDeltaVMag));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcInertialDeltaVMag, __uuidof(_IAgVAStateCalcInertialDeltaVMag));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcInertialDeltaVx, __uuidof(IAgVAStateCalcInertialDeltaVx));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcInertialDeltaVx, __uuidof(_IAgVAStateCalcInertialDeltaVx));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcInertialDeltaVy, __uuidof(IAgVAStateCalcInertialDeltaVy));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcInertialDeltaVy, __uuidof(_IAgVAStateCalcInertialDeltaVy));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcInertialDeltaVz, __uuidof(IAgVAStateCalcInertialDeltaVz));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcInertialDeltaVz, __uuidof(_IAgVAStateCalcInertialDeltaVz));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcManeuverSpecificImpulse, __uuidof(IAgVAStateCalcManeuverSpecificImpulse));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcManeuverSpecificImpulse, __uuidof(_IAgVAStateCalcManeuverSpecificImpulse));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcPressure, __uuidof(IAgVAStateCalcPressure));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcPressure, __uuidof(_IAgVAStateCalcPressure));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcTemperature, __uuidof(IAgVAStateCalcTemperature));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcTemperature, __uuidof(_IAgVAStateCalcTemperature));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcVectorX, __uuidof(IAgVAStateCalcVectorX));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcVectorX, __uuidof(_IAgVAStateCalcVectorX));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcVectorY, __uuidof(IAgVAStateCalcVectorY));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcVectorY, __uuidof(_IAgVAStateCalcVectorY));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcVectorZ, __uuidof(IAgVAStateCalcVectorZ));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcVectorZ, __uuidof(_IAgVAStateCalcVectorZ));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcMass, __uuidof(IAgVAStateCalcMass));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcMass, __uuidof(_IAgVAStateCalcMass));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcManeuverTotalMassFlowRate, __uuidof(IAgVAStateCalcManeuverTotalMassFlowRate));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcManeuverTotalMassFlowRate, __uuidof(_IAgVAStateCalcManeuverTotalMassFlowRate));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcAbsoluteValue, __uuidof(IAgVAStateCalcAbsoluteValue));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcAbsoluteValue, __uuidof(_IAgVAStateCalcAbsoluteValue));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDifference, __uuidof(IAgVAStateCalcDifference));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDifference, __uuidof(_IAgVAStateCalcDifference));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDifferenceOtherSegment, __uuidof(IAgVAStateCalcDifferenceOtherSegment));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDifferenceOtherSegment, __uuidof(_IAgVAStateCalcDifferenceOtherSegment));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcPosDifferenceOtherSegment, __uuidof(IAgVAStateCalcPosDifferenceOtherSegment));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcPosDifferenceOtherSegment, __uuidof(_IAgVAStateCalcPosDifferenceOtherSegment));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcVelDifferenceOtherSegment, __uuidof(IAgVAStateCalcVelDifferenceOtherSegment));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcVelDifferenceOtherSegment, __uuidof(_IAgVAStateCalcVelDifferenceOtherSegment));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcPosVelDifferenceOtherSegment, __uuidof(IAgVAStateCalcPosVelDifferenceOtherSegment));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcPosVelDifferenceOtherSegment, __uuidof(_IAgVAStateCalcPosVelDifferenceOtherSegment));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcValueAtSegment, __uuidof(IAgVAStateCalcValueAtSegment));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcValueAtSegment, __uuidof(_IAgVAStateCalcValueAtSegment));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcMaxValue, __uuidof(IAgVAStateCalcMaxValue));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcMaxValue, __uuidof(_IAgVAStateCalcMaxValue));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcMinValue, __uuidof(IAgVAStateCalcMinValue));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcMinValue, __uuidof(_IAgVAStateCalcMinValue));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcNegative, __uuidof(IAgVAStateCalcNegative));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcNegative, __uuidof(_IAgVAStateCalcNegative));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcTrueAnomaly, __uuidof(IAgVAStateCalcTrueAnomaly));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcTrueAnomaly, __uuidof(_IAgVAStateCalcTrueAnomaly));
_COM_SMARTPTR_TYPEDEF(IAgVABDotRCalc, __uuidof(IAgVABDotRCalc));
_COM_SMARTPTR_TYPEDEF(_IAgVABDotRCalc, __uuidof(_IAgVABDotRCalc));
_COM_SMARTPTR_TYPEDEF(IAgVABDotTCalc, __uuidof(IAgVABDotTCalc));
_COM_SMARTPTR_TYPEDEF(_IAgVABDotTCalc, __uuidof(_IAgVABDotTCalc));
_COM_SMARTPTR_TYPEDEF(IAgVABMagCalc, __uuidof(IAgVABMagCalc));
_COM_SMARTPTR_TYPEDEF(_IAgVABMagCalc, __uuidof(_IAgVABMagCalc));
_COM_SMARTPTR_TYPEDEF(IAgVABThetaCalc, __uuidof(IAgVABThetaCalc));
_COM_SMARTPTR_TYPEDEF(_IAgVABThetaCalc, __uuidof(_IAgVABThetaCalc));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDeltaDec, __uuidof(IAgVAStateCalcDeltaDec));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDeltaDec, __uuidof(_IAgVAStateCalcDeltaDec));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDeltaRA, __uuidof(IAgVAStateCalcDeltaRA));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDeltaRA, __uuidof(_IAgVAStateCalcDeltaRA));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcApparentSolarLon, __uuidof(IAgVAStateCalcApparentSolarLon));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcApparentSolarLon, __uuidof(_IAgVAStateCalcApparentSolarLon));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcBetaAngle, __uuidof(IAgVAStateCalcBetaAngle));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcBetaAngle, __uuidof(_IAgVAStateCalcBetaAngle));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcEarthMeanSolarLon, __uuidof(IAgVAStateCalcEarthMeanSolarLon));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcEarthMeanSolarLon, __uuidof(_IAgVAStateCalcEarthMeanSolarLon));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcLocalApparentSolarLon, __uuidof(IAgVAStateCalcLocalApparentSolarLon));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcLocalApparentSolarLon, __uuidof(_IAgVAStateCalcLocalApparentSolarLon));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcLonOfPeriapsis, __uuidof(IAgVAStateCalcLonOfPeriapsis));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcLonOfPeriapsis, __uuidof(_IAgVAStateCalcLonOfPeriapsis));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcOrbitStateValue, __uuidof(IAgVAStateCalcOrbitStateValue));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcOrbitStateValue, __uuidof(_IAgVAStateCalcOrbitStateValue));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcSignedEccentricity, __uuidof(IAgVAStateCalcSignedEccentricity));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcSignedEccentricity, __uuidof(_IAgVAStateCalcSignedEccentricity));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcTrueLon, __uuidof(IAgVAStateCalcTrueLon));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcTrueLon, __uuidof(_IAgVAStateCalcTrueLon));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcPower, __uuidof(IAgVAStateCalcPower));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcPower, __uuidof(_IAgVAStateCalcPower));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRelMotion, __uuidof(IAgVAStateCalcRelMotion));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRelMotion, __uuidof(_IAgVAStateCalcRelMotion));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCustomFunction, __uuidof(IAgVAStateCalcCustomFunction));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCustomFunction, __uuidof(_IAgVAStateCalcCustomFunction));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcScript, __uuidof(IAgVAStateCalcScript));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcScript, __uuidof(_IAgVAStateCalcScript));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCd, __uuidof(IAgVAStateCalcCd));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCd, __uuidof(_IAgVAStateCalcCd));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCr, __uuidof(IAgVAStateCalcCr));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCr, __uuidof(_IAgVAStateCalcCr));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDragArea, __uuidof(IAgVAStateCalcDragArea));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDragArea, __uuidof(_IAgVAStateCalcDragArea));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRadiationPressureArea, __uuidof(IAgVAStateCalcRadiationPressureArea));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRadiationPressureArea, __uuidof(_IAgVAStateCalcRadiationPressureArea));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRadiationPressureCoefficient, __uuidof(IAgVAStateCalcRadiationPressureCoefficient));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRadiationPressureCoefficient, __uuidof(_IAgVAStateCalcRadiationPressureCoefficient));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcSRPArea, __uuidof(IAgVAStateCalcSRPArea));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcSRPArea, __uuidof(_IAgVAStateCalcSRPArea));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCosOfVerticalFPA, __uuidof(IAgVAStateCalcCosOfVerticalFPA));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCosOfVerticalFPA, __uuidof(_IAgVAStateCalcCosOfVerticalFPA));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDec, __uuidof(IAgVAStateCalcDec));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDec, __uuidof(_IAgVAStateCalcDec));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcFPA, __uuidof(IAgVAStateCalcFPA));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcFPA, __uuidof(_IAgVAStateCalcFPA));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRMag, __uuidof(IAgVAStateCalcRMag));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRMag, __uuidof(_IAgVAStateCalcRMag));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRA, __uuidof(IAgVAStateCalcRA));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRA, __uuidof(_IAgVAStateCalcRA));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcVMag, __uuidof(IAgVAStateCalcVMag));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcVMag, __uuidof(_IAgVAStateCalcVMag));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcVelAz, __uuidof(IAgVAStateCalcVelAz));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcVelAz, __uuidof(_IAgVAStateCalcVelAz));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcC3Energy, __uuidof(IAgVAStateCalcC3Energy));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcC3Energy, __uuidof(_IAgVAStateCalcC3Energy));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcInAsympDec, __uuidof(IAgVAStateCalcInAsympDec));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcInAsympDec, __uuidof(_IAgVAStateCalcInAsympDec));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcInAsympRA, __uuidof(IAgVAStateCalcInAsympRA));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcInAsympRA, __uuidof(_IAgVAStateCalcInAsympRA));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcInVelAzAtPeriapsis, __uuidof(IAgVAStateCalcInVelAzAtPeriapsis));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcInVelAzAtPeriapsis, __uuidof(_IAgVAStateCalcInVelAzAtPeriapsis));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcOutAsympDec, __uuidof(IAgVAStateCalcOutAsympDec));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcOutAsympDec, __uuidof(_IAgVAStateCalcOutAsympDec));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcOutAsympRA, __uuidof(IAgVAStateCalcOutAsympRA));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcOutAsympRA, __uuidof(_IAgVAStateCalcOutAsympRA));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcOutVelAzAtPeriapsis, __uuidof(IAgVAStateCalcOutVelAzAtPeriapsis));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcOutVelAzAtPeriapsis, __uuidof(_IAgVAStateCalcOutVelAzAtPeriapsis));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDuration, __uuidof(IAgVAStateCalcDuration));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDuration, __uuidof(_IAgVAStateCalcDuration));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcUserValue, __uuidof(IAgVAStateCalcUserValue));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcUserValue, __uuidof(_IAgVAStateCalcUserValue));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcCrdnAngle, __uuidof(IAgVAStateCalcCrdnAngle));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcCrdnAngle, __uuidof(_IAgVAStateCalcCrdnAngle));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcAngle, __uuidof(IAgVAStateCalcAngle));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcAngle, __uuidof(_IAgVAStateCalcAngle));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDotProduct, __uuidof(IAgVAStateCalcDotProduct));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDotProduct, __uuidof(_IAgVAStateCalcDotProduct));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcVectorDec, __uuidof(IAgVAStateCalcVectorDec));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcVectorDec, __uuidof(_IAgVAStateCalcVectorDec));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcVectorMag, __uuidof(IAgVAStateCalcVectorMag));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcVectorMag, __uuidof(_IAgVAStateCalcVectorMag));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcVectorRA, __uuidof(IAgVAStateCalcVectorRA));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcVectorRA, __uuidof(_IAgVAStateCalcVectorRA));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcOnePtAccess, __uuidof(IAgVAStateCalcOnePtAccess));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcOnePtAccess, __uuidof(_IAgVAStateCalcOnePtAccess));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDifferenceAcrossSegmentsOtherSat, __uuidof(IAgVAStateCalcDifferenceAcrossSegmentsOtherSat));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDifferenceAcrossSegmentsOtherSat, __uuidof(_IAgVAStateCalcDifferenceAcrossSegmentsOtherSat));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcValueAtSegmentOtherSat, __uuidof(IAgVAStateCalcValueAtSegmentOtherSat));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcValueAtSegmentOtherSat, __uuidof(_IAgVAStateCalcValueAtSegmentOtherSat));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcRARate, __uuidof(IAgVAStateCalcRARate));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcRARate, __uuidof(_IAgVAStateCalcRARate));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcDecRate, __uuidof(IAgVAStateCalcDecRate));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcDecRate, __uuidof(_IAgVAStateCalcDecRate));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcGravitationalParameter, __uuidof(IAgVAStateCalcGravitationalParameter));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcGravitationalParameter, __uuidof(_IAgVAStateCalcGravitationalParameter));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcReferenceRadius, __uuidof(IAgVAStateCalcReferenceRadius));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcReferenceRadius, __uuidof(_IAgVAStateCalcReferenceRadius));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcGravCoeff, __uuidof(IAgVAStateCalcGravCoeff));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcGravCoeff, __uuidof(_IAgVAStateCalcGravCoeff));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcSpeedOfLight, __uuidof(IAgVAStateCalcSpeedOfLight));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcSpeedOfLight, __uuidof(_IAgVAStateCalcSpeedOfLight));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcScalar, __uuidof(IAgVAStateCalcScalar));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcScalar, __uuidof(_IAgVAStateCalcScalar));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcApparentSolarTime, __uuidof(IAgVAStateCalcApparentSolarTime));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcApparentSolarTime, __uuidof(_IAgVAStateCalcApparentSolarTime));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcEarthMeanSolarTime, __uuidof(IAgVAStateCalcEarthMeanSolarTime));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcEarthMeanSolarTime, __uuidof(_IAgVAStateCalcEarthMeanSolarTime));
_COM_SMARTPTR_TYPEDEF(IAgVAStateCalcEarthMeanLocTimeAN, __uuidof(IAgVAStateCalcEarthMeanLocTimeAN));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateCalcEarthMeanLocTimeAN, __uuidof(_IAgVAStateCalcEarthMeanLocTimeAN));
_COM_SMARTPTR_TYPEDEF(IAgVACbGravityModel, __uuidof(IAgVACbGravityModel));
_COM_SMARTPTR_TYPEDEF(IAgVACbShape, __uuidof(IAgVACbShape));
_COM_SMARTPTR_TYPEDEF(IAgVACbAttitude, __uuidof(IAgVACbAttitude));
_COM_SMARTPTR_TYPEDEF(IAgVACbEphemeris, __uuidof(IAgVACbEphemeris));
_COM_SMARTPTR_TYPEDEF(_IAgVACbGravityModel, __uuidof(_IAgVACbGravityModel));
_COM_SMARTPTR_TYPEDEF(IAgVACbShapeSphere, __uuidof(IAgVACbShapeSphere));
_COM_SMARTPTR_TYPEDEF(_IAgVACbShapeSphere, __uuidof(_IAgVACbShapeSphere));
_COM_SMARTPTR_TYPEDEF(IAgVACbShapeOblateSpheroid, __uuidof(IAgVACbShapeOblateSpheroid));
_COM_SMARTPTR_TYPEDEF(_IAgVACbShapeOblateSpheroid, __uuidof(_IAgVACbShapeOblateSpheroid));
_COM_SMARTPTR_TYPEDEF(IAgVACbShapeTriaxialEllipsoid, __uuidof(IAgVACbShapeTriaxialEllipsoid));
_COM_SMARTPTR_TYPEDEF(_IAgVACbShapeTriaxialEllipsoid, __uuidof(_IAgVACbShapeTriaxialEllipsoid));
_COM_SMARTPTR_TYPEDEF(IAgVACbAttitudeRotationCoefficientsFile, __uuidof(IAgVACbAttitudeRotationCoefficientsFile));
_COM_SMARTPTR_TYPEDEF(_IAgVACbAttitudeRotationCoefficientsFile, __uuidof(_IAgVACbAttitudeRotationCoefficientsFile));
_COM_SMARTPTR_TYPEDEF(IAgVACbAttitudeIAU1994, __uuidof(IAgVACbAttitudeIAU1994));
_COM_SMARTPTR_TYPEDEF(_IAgVACbAttitudeIAU1994, __uuidof(_IAgVACbAttitudeIAU1994));
_COM_SMARTPTR_TYPEDEF(IAgVACbEphemerisAnalyticOrbit, __uuidof(IAgVACbEphemerisAnalyticOrbit));
_COM_SMARTPTR_TYPEDEF(_IAgVACbEphemerisAnalyticOrbit, __uuidof(_IAgVACbEphemerisAnalyticOrbit));
_COM_SMARTPTR_TYPEDEF(IAgVACbEphemerisJPLSpice, __uuidof(IAgVACbEphemerisJPLSpice));
_COM_SMARTPTR_TYPEDEF(_IAgVACbEphemerisJPLSpice, __uuidof(_IAgVACbEphemerisJPLSpice));
_COM_SMARTPTR_TYPEDEF(IAgVACbEphemerisFile, __uuidof(IAgVACbEphemerisFile));
_COM_SMARTPTR_TYPEDEF(_IAgVACbEphemerisFile, __uuidof(_IAgVACbEphemerisFile));
_COM_SMARTPTR_TYPEDEF(IAgVACbEphemerisJPLDE, __uuidof(IAgVACbEphemerisJPLDE));
_COM_SMARTPTR_TYPEDEF(_IAgVACbEphemerisJPLDE, __uuidof(_IAgVACbEphemerisJPLDE));
_COM_SMARTPTR_TYPEDEF(IAgVACbEphemerisPlanetary, __uuidof(IAgVACbEphemerisPlanetary));
_COM_SMARTPTR_TYPEDEF(_IAgVACbEphemerisPlanetary, __uuidof(_IAgVACbEphemerisPlanetary));
_COM_SMARTPTR_TYPEDEF(IAgVAPowerInternal, __uuidof(IAgVAPowerInternal));
_COM_SMARTPTR_TYPEDEF(_IAgVAPowerInternal, __uuidof(_IAgVAPowerInternal));
_COM_SMARTPTR_TYPEDEF(IAgVAPowerProcessed, __uuidof(IAgVAPowerProcessed));
_COM_SMARTPTR_TYPEDEF(_IAgVAPowerProcessed, __uuidof(_IAgVAPowerProcessed));
_COM_SMARTPTR_TYPEDEF(IAgVAPowerSolarArray, __uuidof(IAgVAPowerSolarArray));
_COM_SMARTPTR_TYPEDEF(_IAgVAPowerSolarArray, __uuidof(_IAgVAPowerSolarArray));
_COM_SMARTPTR_TYPEDEF(IAgVAPluginProperties, __uuidof(IAgVAPluginProperties));
_COM_SMARTPTR_TYPEDEF(IAgVAGeneralRelativityFunction, __uuidof(IAgVAGeneralRelativityFunction));
_COM_SMARTPTR_TYPEDEF(_IAgVAGeneralRelativityFunction, __uuidof(_IAgVAGeneralRelativityFunction));
_COM_SMARTPTR_TYPEDEF(IAgVAStateTransFunction, __uuidof(IAgVAStateTransFunction));
_COM_SMARTPTR_TYPEDEF(_IAgVAStateTransFunction, __uuidof(_IAgVAStateTransFunction));
_COM_SMARTPTR_TYPEDEF(IAgVARadiationPressureFunction, __uuidof(IAgVARadiationPressureFunction));
_COM_SMARTPTR_TYPEDEF(_IAgVARadiationPressureFunction, __uuidof(_IAgVARadiationPressureFunction));
_COM_SMARTPTR_TYPEDEF(IAgVAYarkovskyFunc, __uuidof(IAgVAYarkovskyFunc));
_COM_SMARTPTR_TYPEDEF(_IAgVAYarkovskyFunc, __uuidof(_IAgVAYarkovskyFunc));
_COM_SMARTPTR_TYPEDEF(IAgVABlendedDensity, __uuidof(IAgVABlendedDensity));
_COM_SMARTPTR_TYPEDEF(_IAgVABlendedDensity, __uuidof(_IAgVABlendedDensity));
_COM_SMARTPTR_TYPEDEF(IAgVADragModelPlugin, __uuidof(IAgVADragModelPlugin));
_COM_SMARTPTR_TYPEDEF(_IAgVADragModelPlugin, __uuidof(_IAgVADragModelPlugin));
_COM_SMARTPTR_TYPEDEF(IAgVACira72Function, __uuidof(IAgVACira72Function));
_COM_SMARTPTR_TYPEDEF(_IAgVACira72Function, __uuidof(_IAgVACira72Function));
_COM_SMARTPTR_TYPEDEF(IAgVAExponential, __uuidof(IAgVAExponential));
_COM_SMARTPTR_TYPEDEF(_IAgVAExponential, __uuidof(_IAgVAExponential));
_COM_SMARTPTR_TYPEDEF(IAgVAHarrisPriester, __uuidof(IAgVAHarrisPriester));
_COM_SMARTPTR_TYPEDEF(_IAgVAHarrisPriester, __uuidof(_IAgVAHarrisPriester));
_COM_SMARTPTR_TYPEDEF(IAgVADensityModelPlugin, __uuidof(IAgVADensityModelPlugin));
_COM_SMARTPTR_TYPEDEF(_IAgVADensityModelPlugin, __uuidof(_IAgVADensityModelPlugin));
_COM_SMARTPTR_TYPEDEF(IAgVAJacchiaRoberts, __uuidof(IAgVAJacchiaRoberts));
_COM_SMARTPTR_TYPEDEF(_IAgVAJacchiaRoberts, __uuidof(_IAgVAJacchiaRoberts));
_COM_SMARTPTR_TYPEDEF(IAgVAJacchiaBowman2008, __uuidof(IAgVAJacchiaBowman2008));
_COM_SMARTPTR_TYPEDEF(_IAgVAJacchiaBowman2008, __uuidof(_IAgVAJacchiaBowman2008));
_COM_SMARTPTR_TYPEDEF(IAgVAJacchia_1960, __uuidof(IAgVAJacchia_1960));
_COM_SMARTPTR_TYPEDEF(_IAgVAJacchia_1960, __uuidof(_IAgVAJacchia_1960));
_COM_SMARTPTR_TYPEDEF(IAgVAJacchia_1970, __uuidof(IAgVAJacchia_1970));
_COM_SMARTPTR_TYPEDEF(_IAgVAJacchia_1970, __uuidof(_IAgVAJacchia_1970));
_COM_SMARTPTR_TYPEDEF(IAgVAJacchia_1971, __uuidof(IAgVAJacchia_1971));
_COM_SMARTPTR_TYPEDEF(_IAgVAJacchia_1971, __uuidof(_IAgVAJacchia_1971));
_COM_SMARTPTR_TYPEDEF(IAgVAMSISE_1990, __uuidof(IAgVAMSISE_1990));
_COM_SMARTPTR_TYPEDEF(_IAgVAMSISE_1990, __uuidof(_IAgVAMSISE_1990));
_COM_SMARTPTR_TYPEDEF(IAgVAMSIS_1986, __uuidof(IAgVAMSIS_1986));
_COM_SMARTPTR_TYPEDEF(_IAgVAMSIS_1986, __uuidof(_IAgVAMSIS_1986));
_COM_SMARTPTR_TYPEDEF(IAgVANRLMSISE_2000, __uuidof(IAgVANRLMSISE_2000));
_COM_SMARTPTR_TYPEDEF(_IAgVANRLMSISE_2000, __uuidof(_IAgVANRLMSISE_2000));
_COM_SMARTPTR_TYPEDEF(IAgVAUS_Standard_Atmosphere, __uuidof(IAgVAUS_Standard_Atmosphere));
_COM_SMARTPTR_TYPEDEF(_IAgVAUS_Standard_Atmosphere, __uuidof(_IAgVAUS_Standard_Atmosphere));
_COM_SMARTPTR_TYPEDEF(IAgVAMarsGRAM37, __uuidof(IAgVAMarsGRAM37));
_COM_SMARTPTR_TYPEDEF(_IAgVAMarsGRAM37, __uuidof(_IAgVAMarsGRAM37));
_COM_SMARTPTR_TYPEDEF(IAgVAMarsGRAM2005, __uuidof(IAgVAMarsGRAM2005));
_COM_SMARTPTR_TYPEDEF(_IAgVAMarsGRAM2005, __uuidof(_IAgVAMarsGRAM2005));
_COM_SMARTPTR_TYPEDEF(IAgVAMarsGRAM2010, __uuidof(IAgVAMarsGRAM2010));
_COM_SMARTPTR_TYPEDEF(_IAgVAMarsGRAM2010, __uuidof(_IAgVAMarsGRAM2010));
_COM_SMARTPTR_TYPEDEF(IAgVAMarsGRAM2001, __uuidof(IAgVAMarsGRAM2001));
_COM_SMARTPTR_TYPEDEF(_IAgVAMarsGRAM2001, __uuidof(_IAgVAMarsGRAM2001));
_COM_SMARTPTR_TYPEDEF(IAgVAMarsGRAM2000, __uuidof(IAgVAMarsGRAM2000));
_COM_SMARTPTR_TYPEDEF(_IAgVAMarsGRAM2000, __uuidof(_IAgVAMarsGRAM2000));
_COM_SMARTPTR_TYPEDEF(IAgVADTM2012, __uuidof(IAgVADTM2012));
_COM_SMARTPTR_TYPEDEF(_IAgVADTM2012, __uuidof(_IAgVADTM2012));
_COM_SMARTPTR_TYPEDEF(IAgVAGravityFieldFunction, __uuidof(IAgVAGravityFieldFunction));
_COM_SMARTPTR_TYPEDEF(_IAgVAGravityFieldFunction, __uuidof(_IAgVAGravityFieldFunction));
_COM_SMARTPTR_TYPEDEF(IAgVAPointMassFunction, __uuidof(IAgVAPointMassFunction));
_COM_SMARTPTR_TYPEDEF(_IAgVAPointMassFunction, __uuidof(_IAgVAPointMassFunction));
_COM_SMARTPTR_TYPEDEF(IAgVATwoBodyFunction, __uuidof(IAgVATwoBodyFunction));
_COM_SMARTPTR_TYPEDEF(_IAgVATwoBodyFunction, __uuidof(_IAgVATwoBodyFunction));
_COM_SMARTPTR_TYPEDEF(IAgVAHPOPPluginFunction, __uuidof(IAgVAHPOPPluginFunction));
_COM_SMARTPTR_TYPEDEF(_IAgVAHPOPPluginFunction, __uuidof(_IAgVAHPOPPluginFunction));
_COM_SMARTPTR_TYPEDEF(IAgVAEOMFuncPluginFunction, __uuidof(IAgVAEOMFuncPluginFunction));
_COM_SMARTPTR_TYPEDEF(_IAgVAEOMFuncPluginFunction, __uuidof(_IAgVAEOMFuncPluginFunction));
_COM_SMARTPTR_TYPEDEF(IAgVAThirdBodyFunction, __uuidof(IAgVAThirdBodyFunction));
_COM_SMARTPTR_TYPEDEF(_IAgVAThirdBodyFunction, __uuidof(_IAgVAThirdBodyFunction));
_COM_SMARTPTR_TYPEDEF(IAgVAEngineModelThrustCoefficients, __uuidof(IAgVAEngineModelThrustCoefficients));
_COM_SMARTPTR_TYPEDEF(_IAgVAEngineModelThrustCoefficients, __uuidof(_IAgVAEngineModelThrustCoefficients));
_COM_SMARTPTR_TYPEDEF(IAgVAEngineModelIspCoefficients, __uuidof(IAgVAEngineModelIspCoefficients));
_COM_SMARTPTR_TYPEDEF(_IAgVAEngineModelIspCoefficients, __uuidof(_IAgVAEngineModelIspCoefficients));
_COM_SMARTPTR_TYPEDEF(IAgVAEngineConstAcc, __uuidof(IAgVAEngineConstAcc));
_COM_SMARTPTR_TYPEDEF(_IAgVAEngineConstAcc, __uuidof(_IAgVAEngineConstAcc));
_COM_SMARTPTR_TYPEDEF(IAgVAEngineConstant, __uuidof(IAgVAEngineConstant));
_COM_SMARTPTR_TYPEDEF(_IAgVAEngineConstant, __uuidof(_IAgVAEngineConstant));
_COM_SMARTPTR_TYPEDEF(IAgVAEngineDefinition, __uuidof(IAgVAEngineDefinition));
_COM_SMARTPTR_TYPEDEF(_IAgVAEngineDefinition, __uuidof(_IAgVAEngineDefinition));
_COM_SMARTPTR_TYPEDEF(IAgVAEngineIon, __uuidof(IAgVAEngineIon));
_COM_SMARTPTR_TYPEDEF(_IAgVAEngineIon, __uuidof(_IAgVAEngineIon));
_COM_SMARTPTR_TYPEDEF(IAgVAEngineCustom, __uuidof(IAgVAEngineCustom));
_COM_SMARTPTR_TYPEDEF(_IAgVAEngineCustom, __uuidof(_IAgVAEngineCustom));
_COM_SMARTPTR_TYPEDEF(IAgVAEnginePlugin, __uuidof(IAgVAEnginePlugin));
_COM_SMARTPTR_TYPEDEF(_IAgVAEnginePlugin, __uuidof(_IAgVAEnginePlugin));
_COM_SMARTPTR_TYPEDEF(IAgVAEngineModelPoly, __uuidof(IAgVAEngineModelPoly));
_COM_SMARTPTR_TYPEDEF(_IAgVAEngineModelPoly, __uuidof(_IAgVAEngineModelPoly));
_COM_SMARTPTR_TYPEDEF(IAgVAThruster, __uuidof(IAgVAThruster));
_COM_SMARTPTR_TYPEDEF(_IAgVAThruster, __uuidof(_IAgVAThruster));
_COM_SMARTPTR_TYPEDEF(IAgVAThrusterSetCollection, __uuidof(IAgVAThrusterSetCollection));
_COM_SMARTPTR_TYPEDEF(IAgVAThrusterSet, __uuidof(IAgVAThrusterSet));
_COM_SMARTPTR_TYPEDEF(_IAgVAThrusterSet, __uuidof(_IAgVAThrusterSet));
_COM_SMARTPTR_TYPEDEF(IAgVAAsTriggerCondition, __uuidof(IAgVAAsTriggerCondition));
_COM_SMARTPTR_TYPEDEF(IAgVAConstraintCollection, __uuidof(IAgVAConstraintCollection));
_COM_SMARTPTR_TYPEDEF(_IAgVAAsTriggerCondition, __uuidof(_IAgVAAsTriggerCondition));
_COM_SMARTPTR_TYPEDEF(IAgVACustomFunctionScriptEngine, __uuidof(IAgVACustomFunctionScriptEngine));
_COM_SMARTPTR_TYPEDEF(_IAgVACustomFunctionScriptEngine, __uuidof(_IAgVACustomFunctionScriptEngine));
_COM_SMARTPTR_TYPEDEF(IAgVANumericalIntegrator, __uuidof(IAgVANumericalIntegrator));
_COM_SMARTPTR_TYPEDEF(IAgVAPropagatorFunctionCollection, __uuidof(IAgVAPropagatorFunctionCollection));
_COM_SMARTPTR_TYPEDEF(IAgVANumericalPropagatorWrapper, __uuidof(IAgVANumericalPropagatorWrapper));
_COM_SMARTPTR_TYPEDEF(_IAgVANumericalPropagatorWrapper, __uuidof(_IAgVANumericalPropagatorWrapper));
_COM_SMARTPTR_TYPEDEF(IAgVABulirschStoerIntegrator, __uuidof(IAgVABulirschStoerIntegrator));
_COM_SMARTPTR_TYPEDEF(_IAgVABulirschStoerIntegrator, __uuidof(_IAgVABulirschStoerIntegrator));
_COM_SMARTPTR_TYPEDEF(IAgVAGaussJacksonIntegrator, __uuidof(IAgVAGaussJacksonIntegrator));
_COM_SMARTPTR_TYPEDEF(_IAgVAGaussJacksonIntegrator, __uuidof(_IAgVAGaussJacksonIntegrator));
_COM_SMARTPTR_TYPEDEF(IAgVARK2nd3rd, __uuidof(IAgVARK2nd3rd));
_COM_SMARTPTR_TYPEDEF(_IAgVARK2nd3rd, __uuidof(_IAgVARK2nd3rd));
_COM_SMARTPTR_TYPEDEF(IAgVARK4th, __uuidof(IAgVARK4th));
_COM_SMARTPTR_TYPEDEF(_IAgVARK4th, __uuidof(_IAgVARK4th));
_COM_SMARTPTR_TYPEDEF(IAgVARK4th5th, __uuidof(IAgVARK4th5th));
_COM_SMARTPTR_TYPEDEF(_IAgVARK4th5th, __uuidof(_IAgVARK4th5th));
_COM_SMARTPTR_TYPEDEF(IAgVARK4thAdapt, __uuidof(IAgVARK4thAdapt));
_COM_SMARTPTR_TYPEDEF(_IAgVARK4thAdapt, __uuidof(_IAgVARK4thAdapt));
_COM_SMARTPTR_TYPEDEF(IAgVARKF7th8th, __uuidof(IAgVARKF7th8th));
_COM_SMARTPTR_TYPEDEF(_IAgVARKF7th8th, __uuidof(_IAgVARKF7th8th));
_COM_SMARTPTR_TYPEDEF(IAgVARKV8th9th, __uuidof(IAgVARKV8th9th));
_COM_SMARTPTR_TYPEDEF(_IAgVARKV8th9th, __uuidof(_IAgVARKV8th9th));
_COM_SMARTPTR_TYPEDEF(IAgVABPlaneCollection, __uuidof(IAgVABPlaneCollection));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSSegmentProperties, __uuidof(IAgVAMCSSegmentProperties));
_COM_SMARTPTR_TYPEDEF(IAgVAElement, __uuidof(IAgVAElement));
_COM_SMARTPTR_TYPEDEF(IAgVAState, __uuidof(IAgVAState));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSSegment, __uuidof(IAgVAMCSSegment));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSSegmentCollection, __uuidof(IAgVAMCSSegmentCollection));
_COM_SMARTPTR_TYPEDEF(IAgVAUserVariableDefinition, __uuidof(IAgVAUserVariableDefinition));
_COM_SMARTPTR_TYPEDEF(IAgVAUserVariableDefinitionCollection, __uuidof(IAgVAUserVariableDefinitionCollection));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSOptions, __uuidof(IAgVAMCSOptions));
_COM_SMARTPTR_TYPEDEF(IAgVAAutomaticSequence, __uuidof(IAgVAAutomaticSequence));
_COM_SMARTPTR_TYPEDEF(IAgVAAutomaticSequenceCollection, __uuidof(IAgVAAutomaticSequenceCollection));
_COM_SMARTPTR_TYPEDEF(IAgVACalculationGraphCollection, __uuidof(IAgVACalculationGraphCollection));
_COM_SMARTPTR_TYPEDEF(_IAgVADriverMCS, __uuidof(_IAgVADriverMCS));
_COM_SMARTPTR_TYPEDEF(IAgVADriverMCS, __uuidof(IAgVADriverMCS));
_COM_SMARTPTR_TYPEDEF(IAgRuntimeTypeInfoProvider, __uuidof(IAgRuntimeTypeInfoProvider));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSEnd, __uuidof(_IAgVAMCSEnd));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSEnd, __uuidof(IAgVAMCSEnd));
_COM_SMARTPTR_TYPEDEF(IAgVASpacecraftParameters, __uuidof(IAgVASpacecraftParameters));
_COM_SMARTPTR_TYPEDEF(IAgVAFuelTank, __uuidof(IAgVAFuelTank));
_COM_SMARTPTR_TYPEDEF(IAgVAUserVariable, __uuidof(IAgVAUserVariable));
_COM_SMARTPTR_TYPEDEF(IAgVAUserVariableCollection, __uuidof(IAgVAUserVariableCollection));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSInitialState, __uuidof(_IAgVAMCSInitialState));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSInitialState, __uuidof(IAgVAMCSInitialState));
_COM_SMARTPTR_TYPEDEF(_IAgVASpacecraftParameters, __uuidof(_IAgVASpacecraftParameters));
_COM_SMARTPTR_TYPEDEF(_IAgVAFuelTank, __uuidof(_IAgVAFuelTank));
_COM_SMARTPTR_TYPEDEF(_IAgVAElementCartesian, __uuidof(_IAgVAElementCartesian));
_COM_SMARTPTR_TYPEDEF(IAgVAElementCartesian, __uuidof(IAgVAElementCartesian));
_COM_SMARTPTR_TYPEDEF(_IAgVAElementKeplerian, __uuidof(_IAgVAElementKeplerian));
_COM_SMARTPTR_TYPEDEF(IAgVAElementKeplerian, __uuidof(IAgVAElementKeplerian));
_COM_SMARTPTR_TYPEDEF(_IAgVAElementModifiedKeplerian, __uuidof(_IAgVAElementModifiedKeplerian));
_COM_SMARTPTR_TYPEDEF(IAgVAElementModifiedKeplerian, __uuidof(IAgVAElementModifiedKeplerian));
_COM_SMARTPTR_TYPEDEF(_IAgVAElementEquinoctial, __uuidof(_IAgVAElementEquinoctial));
_COM_SMARTPTR_TYPEDEF(IAgVAElementEquinoctial, __uuidof(IAgVAElementEquinoctial));
_COM_SMARTPTR_TYPEDEF(_IAgVAElementDelaunay, __uuidof(_IAgVAElementDelaunay));
_COM_SMARTPTR_TYPEDEF(IAgVAElementDelaunay, __uuidof(IAgVAElementDelaunay));
_COM_SMARTPTR_TYPEDEF(_IAgVAElementMixedSpherical, __uuidof(_IAgVAElementMixedSpherical));
_COM_SMARTPTR_TYPEDEF(IAgVAElementMixedSpherical, __uuidof(IAgVAElementMixedSpherical));
_COM_SMARTPTR_TYPEDEF(_IAgVAElementSpherical, __uuidof(_IAgVAElementSpherical));
_COM_SMARTPTR_TYPEDEF(IAgVAElementSpherical, __uuidof(IAgVAElementSpherical));
_COM_SMARTPTR_TYPEDEF(_IAgVAElementTargetVectorIncomingAsymptote, __uuidof(_IAgVAElementTargetVectorIncomingAsymptote));
_COM_SMARTPTR_TYPEDEF(IAgVAElementTargetVectorIncomingAsymptote, __uuidof(IAgVAElementTargetVectorIncomingAsymptote));
_COM_SMARTPTR_TYPEDEF(_IAgVAElementTargetVectorOutgoingAsymptote, __uuidof(_IAgVAElementTargetVectorOutgoingAsymptote));
_COM_SMARTPTR_TYPEDEF(IAgVAElementTargetVectorOutgoingAsymptote, __uuidof(IAgVAElementTargetVectorOutgoingAsymptote));
_COM_SMARTPTR_TYPEDEF(_IAgVAElementGeodetic, __uuidof(_IAgVAElementGeodetic));
_COM_SMARTPTR_TYPEDEF(IAgVAElementGeodetic, __uuidof(IAgVAElementGeodetic));
_COM_SMARTPTR_TYPEDEF(IAgVAStoppingConditionComponent, __uuidof(IAgVAStoppingConditionComponent));
_COM_SMARTPTR_TYPEDEF(IAgVAStoppingConditionElement, __uuidof(IAgVAStoppingConditionElement));
_COM_SMARTPTR_TYPEDEF(IAgVAStoppingConditionCollection, __uuidof(IAgVAStoppingConditionCollection));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSPropagate, __uuidof(_IAgVAMCSPropagate));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSPropagate, __uuidof(IAgVAMCSPropagate));
_COM_SMARTPTR_TYPEDEF(_IAgVAState, __uuidof(_IAgVAState));
_COM_SMARTPTR_TYPEDEF(_IAgVAAccessStoppingCondition, __uuidof(_IAgVAAccessStoppingCondition));
_COM_SMARTPTR_TYPEDEF(IAgVAAccessStoppingCondition, __uuidof(IAgVAAccessStoppingCondition));
_COM_SMARTPTR_TYPEDEF(_IAgVALightingStoppingCondition, __uuidof(_IAgVALightingStoppingCondition));
_COM_SMARTPTR_TYPEDEF(IAgVALightingStoppingCondition, __uuidof(IAgVALightingStoppingCondition));
_COM_SMARTPTR_TYPEDEF(_IAgVAStoppingCondition, __uuidof(_IAgVAStoppingCondition));
_COM_SMARTPTR_TYPEDEF(IAgVAStoppingCondition, __uuidof(IAgVAStoppingCondition));
_COM_SMARTPTR_TYPEDEF(_IAgVAStoppingConditionElement, __uuidof(_IAgVAStoppingConditionElement));
_COM_SMARTPTR_TYPEDEF(IAgVAScriptingSegment, __uuidof(IAgVAScriptingSegment));
_COM_SMARTPTR_TYPEDEF(IAgVAScriptingSegmentCollection, __uuidof(IAgVAScriptingSegmentCollection));
_COM_SMARTPTR_TYPEDEF(IAgVAScriptingCalcObject, __uuidof(IAgVAScriptingCalcObject));
_COM_SMARTPTR_TYPEDEF(IAgVAScriptingCalcObjectCollection, __uuidof(IAgVAScriptingCalcObjectCollection));
_COM_SMARTPTR_TYPEDEF(IAgVAScriptingParameterEnumerationChoice, __uuidof(IAgVAScriptingParameterEnumerationChoice));
_COM_SMARTPTR_TYPEDEF(IAgVAScriptingParameterEnumerationChoiceCollection, __uuidof(IAgVAScriptingParameterEnumerationChoiceCollection));
_COM_SMARTPTR_TYPEDEF(IAgVAScriptingParameter, __uuidof(IAgVAScriptingParameter));
_COM_SMARTPTR_TYPEDEF(IAgVAScriptingParameterCollection, __uuidof(IAgVAScriptingParameterCollection));
_COM_SMARTPTR_TYPEDEF(IAgVAScriptingTool, __uuidof(IAgVAScriptingTool));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSSequence, __uuidof(_IAgVAMCSSequence));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSSequence, __uuidof(IAgVAMCSSequence));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSBackwardSequence, __uuidof(_IAgVAMCSBackwardSequence));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSBackwardSequence, __uuidof(IAgVAMCSBackwardSequence));
_COM_SMARTPTR_TYPEDEF(IAgVADisplaySystem, __uuidof(IAgVADisplaySystem));
_COM_SMARTPTR_TYPEDEF(IAgVABurnout, __uuidof(IAgVABurnout));
_COM_SMARTPTR_TYPEDEF(IAgVABurnoutVelocity, __uuidof(IAgVABurnoutVelocity));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSLaunch, __uuidof(_IAgVAMCSLaunch));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSLaunch, __uuidof(IAgVAMCSLaunch));
_COM_SMARTPTR_TYPEDEF(_IAgVADisplaySystemGeodetic, __uuidof(_IAgVADisplaySystemGeodetic));
_COM_SMARTPTR_TYPEDEF(IAgVADisplaySystemGeodetic, __uuidof(IAgVADisplaySystemGeodetic));
_COM_SMARTPTR_TYPEDEF(_IAgVADisplaySystemGeocentric, __uuidof(_IAgVADisplaySystemGeocentric));
_COM_SMARTPTR_TYPEDEF(IAgVADisplaySystemGeocentric, __uuidof(IAgVADisplaySystemGeocentric));
_COM_SMARTPTR_TYPEDEF(_IAgVABurnoutGeodetic, __uuidof(_IAgVABurnoutGeodetic));
_COM_SMARTPTR_TYPEDEF(IAgVABurnoutGeodetic, __uuidof(IAgVABurnoutGeodetic));
_COM_SMARTPTR_TYPEDEF(_IAgVABurnoutGeocentric, __uuidof(_IAgVABurnoutGeocentric));
_COM_SMARTPTR_TYPEDEF(IAgVABurnoutGeocentric, __uuidof(IAgVABurnoutGeocentric));
_COM_SMARTPTR_TYPEDEF(_IAgVABurnoutLaunchAzAlt, __uuidof(_IAgVABurnoutLaunchAzAlt));
_COM_SMARTPTR_TYPEDEF(IAgVABurnoutLaunchAzAlt, __uuidof(IAgVABurnoutLaunchAzAlt));
_COM_SMARTPTR_TYPEDEF(_IAgVABurnoutLaunchAzRadius, __uuidof(_IAgVABurnoutLaunchAzRadius));
_COM_SMARTPTR_TYPEDEF(IAgVABurnoutLaunchAzRadius, __uuidof(IAgVABurnoutLaunchAzRadius));
_COM_SMARTPTR_TYPEDEF(_IAgVABurnoutVelocity, __uuidof(_IAgVABurnoutVelocity));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSFollow, __uuidof(_IAgVAMCSFollow));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSFollow, __uuidof(IAgVAMCSFollow));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControl, __uuidof(IAgVAAttitudeControl));
_COM_SMARTPTR_TYPEDEF(IAgVAManeuver, __uuidof(IAgVAManeuver));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSManeuver, __uuidof(_IAgVAMCSManeuver));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSManeuver, __uuidof(IAgVAMCSManeuver));
_COM_SMARTPTR_TYPEDEF(IAgVAManeuverFinitePropagator, __uuidof(IAgVAManeuverFinitePropagator));
_COM_SMARTPTR_TYPEDEF(_IAgVAManeuverFinite, __uuidof(_IAgVAManeuverFinite));
_COM_SMARTPTR_TYPEDEF(IAgVAManeuverFinite, __uuidof(IAgVAManeuverFinite));
_COM_SMARTPTR_TYPEDEF(_IAgVAManeuverImpulsive, __uuidof(_IAgVAManeuverImpulsive));
_COM_SMARTPTR_TYPEDEF(IAgVAManeuverImpulsive, __uuidof(IAgVAManeuverImpulsive));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlImpulsiveVelocityVector, __uuidof(_IAgVAAttitudeControlImpulsiveVelocityVector));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlImpulsive, __uuidof(IAgVAAttitudeControlImpulsive));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlImpulsiveVelocityVector, __uuidof(IAgVAAttitudeControlImpulsiveVelocityVector));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlImpulsiveAntiVelocityVector, __uuidof(_IAgVAAttitudeControlImpulsiveAntiVelocityVector));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlImpulsiveAntiVelocityVector, __uuidof(IAgVAAttitudeControlImpulsiveAntiVelocityVector));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlImpulsiveAttitude, __uuidof(_IAgVAAttitudeControlImpulsiveAttitude));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlImpulsiveAttitude, __uuidof(IAgVAAttitudeControlImpulsiveAttitude));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlImpulsiveFile, __uuidof(_IAgVAAttitudeControlImpulsiveFile));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlImpulsiveFile, __uuidof(IAgVAAttitudeControlImpulsiveFile));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlImpulsiveThrustVector, __uuidof(_IAgVAAttitudeControlImpulsiveThrustVector));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlImpulsiveThrustVector, __uuidof(IAgVAAttitudeControlImpulsiveThrustVector));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlFiniteAntiVelocityVector, __uuidof(_IAgVAAttitudeControlFiniteAntiVelocityVector));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlFinite, __uuidof(IAgVAAttitudeControlFinite));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlFiniteAntiVelocityVector, __uuidof(IAgVAAttitudeControlFiniteAntiVelocityVector));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlFiniteAttitude, __uuidof(_IAgVAAttitudeControlFiniteAttitude));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlFiniteAttitude, __uuidof(IAgVAAttitudeControlFiniteAttitude));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlFiniteFile, __uuidof(_IAgVAAttitudeControlFiniteFile));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlFiniteFile, __uuidof(IAgVAAttitudeControlFiniteFile));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlFiniteThrustVector, __uuidof(_IAgVAAttitudeControlFiniteThrustVector));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlFiniteThrustVector, __uuidof(IAgVAAttitudeControlFiniteThrustVector));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlFiniteTimeVarying, __uuidof(_IAgVAAttitudeControlFiniteTimeVarying));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlFiniteTimeVarying, __uuidof(IAgVAAttitudeControlFiniteTimeVarying));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlFiniteVelocityVector, __uuidof(_IAgVAAttitudeControlFiniteVelocityVector));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlFiniteVelocityVector, __uuidof(IAgVAAttitudeControlFiniteVelocityVector));
_COM_SMARTPTR_TYPEDEF(_IAgVAAttitudeControlFinitePlugin, __uuidof(_IAgVAAttitudeControlFinitePlugin));
_COM_SMARTPTR_TYPEDEF(IAgVAAttitudeControlFinitePlugin, __uuidof(IAgVAAttitudeControlFinitePlugin));
_COM_SMARTPTR_TYPEDEF(_IAgVAManeuverFinitePropagator, __uuidof(_IAgVAManeuverFinitePropagator));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSHold, __uuidof(_IAgVAMCSHold));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSHold, __uuidof(IAgVAMCSHold));
_COM_SMARTPTR_TYPEDEF(IAgVAUserVariableUpdate, __uuidof(IAgVAUserVariableUpdate));
_COM_SMARTPTR_TYPEDEF(IAgVAUserVariableUpdateCollection, __uuidof(IAgVAUserVariableUpdateCollection));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSUpdate, __uuidof(_IAgVAMCSUpdate));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSUpdate, __uuidof(IAgVAMCSUpdate));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSReturn, __uuidof(_IAgVAMCSReturn));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSReturn, __uuidof(IAgVAMCSReturn));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSStop, __uuidof(_IAgVAMCSStop));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSStop, __uuidof(IAgVAMCSStop));
_COM_SMARTPTR_TYPEDEF(IAgVAProfile, __uuidof(IAgVAProfile));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileCollection, __uuidof(IAgVAProfileCollection));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSTargetSequence, __uuidof(_IAgVAMCSTargetSequence));
_COM_SMARTPTR_TYPEDEF(IAgVAMCSTargetSequence, __uuidof(IAgVAMCSTargetSequence));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSOptions, __uuidof(_IAgVAMCSOptions));
_COM_SMARTPTR_TYPEDEF(_IAgVAPluginProperties, __uuidof(_IAgVAPluginProperties));
_COM_SMARTPTR_TYPEDEF(IAgVASearchPluginControl, __uuidof(IAgVASearchPluginControl));
_COM_SMARTPTR_TYPEDEF(IAgVASearchPluginControlCollection, __uuidof(IAgVASearchPluginControlCollection));
_COM_SMARTPTR_TYPEDEF(IAgVASearchPluginResult, __uuidof(IAgVASearchPluginResult));
_COM_SMARTPTR_TYPEDEF(IAgVASearchPluginResultCollection, __uuidof(IAgVASearchPluginResultCollection));
_COM_SMARTPTR_TYPEDEF(IAgVATargeterGraphActiveControl, __uuidof(IAgVATargeterGraphActiveControl));
_COM_SMARTPTR_TYPEDEF(IAgVATargeterGraphActiveControlCollection, __uuidof(IAgVATargeterGraphActiveControlCollection));
_COM_SMARTPTR_TYPEDEF(IAgVATargeterGraphResult, __uuidof(IAgVATargeterGraphResult));
_COM_SMARTPTR_TYPEDEF(IAgVATargeterGraphResultCollection, __uuidof(IAgVATargeterGraphResultCollection));
_COM_SMARTPTR_TYPEDEF(IAgVATargeterGraph, __uuidof(IAgVATargeterGraph));
_COM_SMARTPTR_TYPEDEF(IAgVATargeterGraphCollection, __uuidof(IAgVATargeterGraphCollection));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileSearchPlugin, __uuidof(_IAgVAProfileSearchPlugin));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileSearchPlugin, __uuidof(IAgVAProfileSearchPlugin));
_COM_SMARTPTR_TYPEDEF(IAgVADEControl, __uuidof(IAgVADEControl));
_COM_SMARTPTR_TYPEDEF(IAgVADEControlCollection, __uuidof(IAgVADEControlCollection));
_COM_SMARTPTR_TYPEDEF(IAgVADEResult, __uuidof(IAgVADEResult));
_COM_SMARTPTR_TYPEDEF(IAgVADEResultCollection, __uuidof(IAgVADEResultCollection));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileDEOptimizer, __uuidof(_IAgVAProfileDEOptimizer));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileDEOptimizer, __uuidof(IAgVAProfileDEOptimizer));
_COM_SMARTPTR_TYPEDEF(_IAgVATargeterGraph, __uuidof(_IAgVATargeterGraph));
_COM_SMARTPTR_TYPEDEF(_IAgVATargeterGraphActiveControl, __uuidof(_IAgVATargeterGraphActiveControl));
_COM_SMARTPTR_TYPEDEF(_IAgVATargeterGraphResult, __uuidof(_IAgVATargeterGraphResult));
_COM_SMARTPTR_TYPEDEF(IAgVADCControl, __uuidof(IAgVADCControl));
_COM_SMARTPTR_TYPEDEF(IAgVADCControlCollection, __uuidof(IAgVADCControlCollection));
_COM_SMARTPTR_TYPEDEF(IAgVADCResult, __uuidof(IAgVADCResult));
_COM_SMARTPTR_TYPEDEF(IAgVADCResultCollection, __uuidof(IAgVADCResultCollection));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileDifferentialCorrector, __uuidof(_IAgVAProfileDifferentialCorrector));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileDifferentialCorrector, __uuidof(IAgVAProfileDifferentialCorrector));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileScriptingTool, __uuidof(_IAgVAProfileScriptingTool));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileScriptingTool, __uuidof(IAgVAProfileScriptingTool));
_COM_SMARTPTR_TYPEDEF(_IAgVADCControl, __uuidof(_IAgVADCControl));
_COM_SMARTPTR_TYPEDEF(_IAgVADCResult, __uuidof(_IAgVADCResult));
_COM_SMARTPTR_TYPEDEF(_IAgVADEControl, __uuidof(_IAgVADEControl));
_COM_SMARTPTR_TYPEDEF(_IAgVADEResult, __uuidof(_IAgVADEResult));
_COM_SMARTPTR_TYPEDEF(_IAgVASearchPluginControl, __uuidof(_IAgVASearchPluginControl));
_COM_SMARTPTR_TYPEDEF(_IAgVASearchPluginResult, __uuidof(_IAgVASearchPluginResult));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileChangeManeuverType, __uuidof(_IAgVAProfileChangeManeuverType));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileChangeManeuverType, __uuidof(IAgVAProfileChangeManeuverType));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileChangeReturnSegment, __uuidof(_IAgVAProfileChangeReturnSegment));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileChangeReturnSegment, __uuidof(IAgVAProfileChangeReturnSegment));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileChangePropagator, __uuidof(_IAgVAProfileChangePropagator));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileChangePropagator, __uuidof(IAgVAProfileChangePropagator));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileChangeStopSegment, __uuidof(_IAgVAProfileChangeStopSegment));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileChangeStopSegment, __uuidof(IAgVAProfileChangeStopSegment));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileChangeStoppingConditionState, __uuidof(_IAgVAProfileChangeStoppingConditionState));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileChangeStoppingConditionState, __uuidof(IAgVAProfileChangeStoppingConditionState));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileSeedFiniteManeuver, __uuidof(_IAgVAProfileSeedFiniteManeuver));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileSeedFiniteManeuver, __uuidof(IAgVAProfileSeedFiniteManeuver));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileRunOnce, __uuidof(_IAgVAProfileRunOnce));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileRunOnce, __uuidof(IAgVAProfileRunOnce));
_COM_SMARTPTR_TYPEDEF(_IAgVAAutomaticSequence, __uuidof(_IAgVAAutomaticSequence));
_COM_SMARTPTR_TYPEDEF(_IAgVAMCSSegmentProperties, __uuidof(_IAgVAMCSSegmentProperties));
_COM_SMARTPTR_TYPEDEF(_IAgVAScriptingTool, __uuidof(_IAgVAScriptingTool));
_COM_SMARTPTR_TYPEDEF(_IAgVAScriptingSegment, __uuidof(_IAgVAScriptingSegment));
_COM_SMARTPTR_TYPEDEF(_IAgVAScriptingParameter, __uuidof(_IAgVAScriptingParameter));
_COM_SMARTPTR_TYPEDEF(_IAgVAScriptingCalcObject, __uuidof(_IAgVAScriptingCalcObject));
_COM_SMARTPTR_TYPEDEF(_IAgVAUserVariableDefinition, __uuidof(_IAgVAUserVariableDefinition));
_COM_SMARTPTR_TYPEDEF(_IAgVAUserVariable, __uuidof(_IAgVAUserVariable));
_COM_SMARTPTR_TYPEDEF(_IAgVAUserVariableUpdate, __uuidof(_IAgVAUserVariableUpdate));
_COM_SMARTPTR_TYPEDEF(_IAgVAScriptingParameterEnumerationChoice, __uuidof(_IAgVAScriptingParameterEnumerationChoice));
_COM_SMARTPTR_TYPEDEF(IAgVASNOPTControl, __uuidof(IAgVASNOPTControl));
_COM_SMARTPTR_TYPEDEF(IAgVASNOPTControlCollection, __uuidof(IAgVASNOPTControlCollection));
_COM_SMARTPTR_TYPEDEF(IAgVASNOPTResult, __uuidof(IAgVASNOPTResult));
_COM_SMARTPTR_TYPEDEF(IAgVASNOPTResultCollection, __uuidof(IAgVASNOPTResultCollection));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileSNOPTOptimizer, __uuidof(_IAgVAProfileSNOPTOptimizer));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileSNOPTOptimizer, __uuidof(IAgVAProfileSNOPTOptimizer));
_COM_SMARTPTR_TYPEDEF(_IAgVASNOPTControl, __uuidof(_IAgVASNOPTControl));
_COM_SMARTPTR_TYPEDEF(_IAgVASNOPTResult, __uuidof(_IAgVASNOPTResult));
_COM_SMARTPTR_TYPEDEF(IAgVAIPOPTControl, __uuidof(IAgVAIPOPTControl));
_COM_SMARTPTR_TYPEDEF(IAgVAIPOPTControlCollection, __uuidof(IAgVAIPOPTControlCollection));
_COM_SMARTPTR_TYPEDEF(IAgVAIPOPTResult, __uuidof(IAgVAIPOPTResult));
_COM_SMARTPTR_TYPEDEF(IAgVAIPOPTResultCollection, __uuidof(IAgVAIPOPTResultCollection));
_COM_SMARTPTR_TYPEDEF(_IAgVAProfileIPOPTOptimizer, __uuidof(_IAgVAProfileIPOPTOptimizer));
_COM_SMARTPTR_TYPEDEF(IAgVAProfileIPOPTOptimizer, __uuidof(IAgVAProfileIPOPTOptimizer));
_COM_SMARTPTR_TYPEDEF(_IAgVAIPOPTControl, __uuidof(_IAgVAIPOPTControl));
_COM_SMARTPTR_TYPEDEF(_IAgVAIPOPTResult, __uuidof(_IAgVAIPOPTResult));
_COM_SMARTPTR_TYPEDEF(IAgVACentralBodyCollection, __uuidof(IAgVACentralBodyCollection));
_COM_SMARTPTR_TYPEDEF(IAgVACentralBody, __uuidof(IAgVACentralBody));
_COM_SMARTPTR_TYPEDEF(_IAgVACentralBody, __uuidof(_IAgVACentralBody));
_COM_SMARTPTR_TYPEDEF(IAgVASRPAeroT20, __uuidof(IAgVASRPAeroT20));
_COM_SMARTPTR_TYPEDEF(_IAgVASRPAeroT20, __uuidof(_IAgVASRPAeroT20));
_COM_SMARTPTR_TYPEDEF(IAgVASRPAeroT30, __uuidof(IAgVASRPAeroT30));
_COM_SMARTPTR_TYPEDEF(_IAgVASRPAeroT30, __uuidof(_IAgVASRPAeroT30));
_COM_SMARTPTR_TYPEDEF(IAgVASRPGSPM04aIIA, __uuidof(IAgVASRPGSPM04aIIA));
_COM_SMARTPTR_TYPEDEF(_IAgVASRPGSPM04aIIA, __uuidof(_IAgVASRPGSPM04aIIA));
_COM_SMARTPTR_TYPEDEF(IAgVASRPGSPM04aIIR, __uuidof(IAgVASRPGSPM04aIIR));
_COM_SMARTPTR_TYPEDEF(_IAgVASRPGSPM04aIIR, __uuidof(_IAgVASRPGSPM04aIIR));
_COM_SMARTPTR_TYPEDEF(IAgVASRPGSPM04aeIIA, __uuidof(IAgVASRPGSPM04aeIIA));
_COM_SMARTPTR_TYPEDEF(_IAgVASRPGSPM04aeIIA, __uuidof(_IAgVASRPGSPM04aeIIA));
_COM_SMARTPTR_TYPEDEF(IAgVASRPGSPM04aeIIR, __uuidof(IAgVASRPGSPM04aeIIR));
_COM_SMARTPTR_TYPEDEF(_IAgVASRPGSPM04aeIIR, __uuidof(_IAgVASRPGSPM04aeIIR));
_COM_SMARTPTR_TYPEDEF(IAgVASRPSpherical, __uuidof(IAgVASRPSpherical));
_COM_SMARTPTR_TYPEDEF(_IAgVASRPSpherical, __uuidof(_IAgVASRPSpherical));

//
// Type library items
//

struct __declspec(uuid("23367dfc-a0bc-4c79-83e9-4194ca49dc81"))
IAgVACalcObjectCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    STKObjects::IAgComponentInfoPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    STKObjects::IAgComponentInfoPtr Add (
        _bstr_t Name );
    STKObjects::IAgComponentInfoPtr GetItem (
        const _variant_t & IndexOrName );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    HRESULT Cut (
        const _variant_t & IndexOrName );
    STKObjects::IAgComponentInfoPtr Paste ( );
    STKObjects::IAgComponentInfoPtr InsertCopy (
        struct STKObjects::IAgComponentInfo * CalcObj );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppComponent ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppCalcObj ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct STKObjects::IAgComponentInfo * CalcObj,
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppRetVal ) = 0;
};

enum AgEVAElement
{
    eVAElementOsculating = 0,
    eVAElementKozaiIzsakMean = 1,
    eVAElementBrouwerLyddaneMeanLong = 2,
    eVAElementBrouwerLyddaneMeanShort = 3
};

enum AgEVABaseSelection
{
    eVABaseSelectionSpecify = 0,
    eVABaseSelectionCurrentSatellite = 1
};

enum AgEVAControlOrbitStateValue
{
    eVAControlOrbitStateValueVx = 0,
    eVAControlOrbitStateValueVy = 1,
    eVAControlOrbitStateValueVz = 2,
    eVAControlOrbitStateValueX = 3,
    eVAControlOrbitStateValueY = 4,
    eVAControlOrbitStateValueZ = 5
};

enum AgEVASegmentState
{
    eVASegmentStateInitial = 0,
    eVASegmentStateFinal = 1
};

enum AgEVADifferenceOrder
{
    eVADifferenceOrderInitialMinusCurrent = 0,
    eVADifferenceOrderCurrentMinusInitial = 1
};

enum AgEVASegmentDifferenceOrder
{
    eVASegmentDifferenceOrderCurrentMinusSegment = 0,
    eVASegmentDifferenceOrderSegmentMinusCurrent = 1
};

enum AgEVAControlRepeatingGroundTrackErr
{
    eVAControlRepeatingGroundTrackErrRefLon = 0,
    eVAControlRepeatingGroundTrackErrRepeatCount = 1
};

enum AgEVACalcObjectDirection
{
    eVACalcObjectDirectionNext = 0,
    eVACalcObjectDirectionPrevious = 1
};

enum AgEVAGravitationalParameterSource
{
    eVAGravitationalParameterSourceCbFile = 0,
    eVAGravitationalParameterSourceCbFileSystem = 1,
    eVAGravitationalParameterSourceDEFile = 2,
    eVAGravitationalParameterSourceGravityFile = 3
};

enum AgEVAReferenceRadiusSource
{
    eVAReferenceRadiusSourceCbFile = 0,
    eVAReferenceRadiusSourceGravityFile = 1
};

enum AgEVAGravCoeffNormalizationType
{
    eVAGravCoeffNormalized = 0,
    eVAGravCoeffUnnormalized = 1
};

enum AgEVAGravCoeffCoefficientType
{
    eVAGravCoeffCoefficientTypeZonal = 0,
    eVAGravCoeffCoefficientTypeCosine = 1,
    eVAGravCoeffCoefficientTypeSine = 2
};

enum AgEVASTMPertVariables
{
    eVASTMPertVariablePosX = 0,
    eVASTMPertVariablePosY = 1,
    eVASTMPertVariablePosZ = 2,
    eVASTMPertVariableVelX = 3,
    eVASTMPertVariableVelY = 4,
    eVASTMPertVariableVelZ = 5
};

struct __declspec(uuid("26bfa210-3a7c-4557-a735-21c29ded3007"))
IAgVAStateCalcHeightAboveTerrain : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("546655c8-b695-471a-84a4-db06c50d5fea"))
_IAgVAStateCalcHeightAboveTerrain : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("0038821d-02c0-4fcf-8f62-9eeeb459203e"))
IAgVAStateCalcEpoch : IUnknown
{};

struct __declspec(uuid("2ea7ff40-ce42-4e1c-8ee1-dc3e0cd40f2b"))
_IAgVAStateCalcEpoch : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("bb840088-a6a2-45f0-9224-be987346737d"))
IAgVAStateCalcOrbitDelaunayG : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVAElement ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAElement GetElementType ( );
    void PutElementType (
        enum AgEVAElement pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElement * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVAElement pVal ) = 0;
};

struct __declspec(uuid("7b13841b-046c-400a-84dc-92aa588f9cfb"))
_IAgVAStateCalcOrbitDelaunayG : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVAElement ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAElement GetElementType ( );
    void PutElementType (
        enum AgEVAElement pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElement * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVAElement pVal ) = 0;
};

struct __declspec(uuid("a6e867fb-7a83-4160-8672-618d48a3a40d"))
IAgVAStateCalcOrbitDelaunayH : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVAElement ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAElement GetElementType ( );
    void PutElementType (
        enum AgEVAElement pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElement * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVAElement pVal ) = 0;
};

struct __declspec(uuid("35360e9d-0372-4b1b-8659-2af3ce240ec3"))
_IAgVAStateCalcOrbitDelaunayH : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVAElement ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAElement GetElementType ( );
    void PutElementType (
        enum AgEVAElement pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElement * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVAElement pVal ) = 0;
};

struct __declspec(uuid("f62e2adc-ce06-4f99-8858-5994e3bb39d6"))
IAgVAStateCalcOrbitDelaunayL : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVAElement ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAElement GetElementType ( );
    void PutElementType (
        enum AgEVAElement pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElement * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVAElement pVal ) = 0;
};

struct __declspec(uuid("aa925842-452c-4c46-83e3-c75597715f89"))
_IAgVAStateCalcOrbitDelaunayL : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVAElement ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAElement GetElementType ( );
    void PutElementType (
        enum AgEVAElement pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElement * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVAElement pVal ) = 0;
};

struct __declspec(uuid("fea77fbf-a8bc-4486-aacb-de60372a2070"))
IAgVAStateCalcOrbitSemiLatusRectum : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVAElement ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAElement GetElementType ( );
    void PutElementType (
        enum AgEVAElement pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElement * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVAElement pVal ) = 0;
};

struct __declspec(uuid("e6ef7d3e-7afa-4bff-8afb-6460bcb6a513"))
_IAgVAStateCalcOrbitSemiLatusRectum : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVAElement ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAElement GetElementType ( );
    void PutElementType (
        enum AgEVAElement pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElement * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVAElement pVal ) = 0;
};

struct __declspec(uuid("f7413ed6-7726-4169-8b5f-450e3c2f781b"))
IAgVAStateCalcCartesianElem : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("c6b059b0-3e66-48de-855a-7db079faf87b"))
_IAgVAStateCalcCartesianElem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("4bdf1998-7a9e-41c2-9278-2c06f203d686"))
IAgVAStateCalcCartSTMElem : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetFinalVar,put=PutFinalVar))
    enum AgEVASTMPertVariables FinalVar;
    __declspec(property(get=GetInitVar,put=PutInitVar))
    enum AgEVASTMPertVariables InitVar;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVASTMPertVariables GetFinalVar ( );
    void PutFinalVar (
        enum AgEVASTMPertVariables pVal );
    enum AgEVASTMPertVariables GetInitVar ( );
    void PutInitVar (
        enum AgEVASTMPertVariables pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_FinalVar (
        /*[out,retval]*/ enum AgEVASTMPertVariables * pVal ) = 0;
      virtual HRESULT __stdcall put_FinalVar (
        /*[in]*/ enum AgEVASTMPertVariables pVal ) = 0;
      virtual HRESULT __stdcall get_InitVar (
        /*[out,retval]*/ enum AgEVASTMPertVariables * pVal ) = 0;
      virtual HRESULT __stdcall put_InitVar (
        /*[in]*/ enum AgEVASTMPertVariables pVal ) = 0;
};

struct __declspec(uuid("4131dc84-c1b9-4f8e-8e81-e824de9c4204"))
_IAgVAStateCalcCartSTMElem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetFinalVar,put=PutFinalVar))
    enum AgEVASTMPertVariables FinalVar;
    __declspec(property(get=GetInitVar,put=PutInitVar))
    enum AgEVASTMPertVariables InitVar;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVASTMPertVariables GetFinalVar ( );
    void PutFinalVar (
        enum AgEVASTMPertVariables pVal );
    enum AgEVASTMPertVariables GetInitVar ( );
    void PutInitVar (
        enum AgEVASTMPertVariables pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_FinalVar (
        /*[out,retval]*/ enum AgEVASTMPertVariables * pVal ) = 0;
      virtual HRESULT __stdcall put_FinalVar (
        /*[in]*/ enum AgEVASTMPertVariables pVal ) = 0;
      virtual HRESULT __stdcall get_InitVar (
        /*[out,retval]*/ enum AgEVASTMPertVariables * pVal ) = 0;
      virtual HRESULT __stdcall put_InitVar (
        /*[in]*/ enum AgEVASTMPertVariables pVal ) = 0;
};

struct __declspec(uuid("4380be0e-4386-430b-a629-3d0d13b3de8e"))
IAgVAStateCalcEnvironment : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetAtmosModelName,put=PutAtmosModelName))
    _bstr_t AtmosModelName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    _bstr_t GetAtmosModelName ( );
    void PutAtmosModelName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosModelName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosModelName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f072b514-784e-4d63-84c4-b5be49e10bc3"))
_IAgVAStateCalcEnvironment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetAtmosModelName,put=PutAtmosModelName))
    _bstr_t AtmosModelName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    _bstr_t GetAtmosModelName ( );
    void PutAtmosModelName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosModelName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosModelName (
        /*[in]*/ BSTR pVal ) = 0;
};

enum AgEVACalcObjectElem
{
    eVACalcObjectElemBrouwerLyddaneMeanLong = 0,
    eVACalcObjectElemBrouwerLyddaneMeanShort = 1,
    eVACalcObjectElemKozaiIzsakMean = 2,
    eVACalcObjectElemOsculating = 3
};

struct __declspec(uuid("55624cf3-6f1d-45a4-864b-4c470ac3c9a4"))
IAgVAStateCalcEquinoctialElem : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("2f5e711c-fc2c-4dc5-88d6-11c777a821bd"))
_IAgVAStateCalcEquinoctialElem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("80468b6e-67b6-4374-8008-3a32795824df"))
IAgVAStateCalcDamageFlux : IUnknown
{};

struct __declspec(uuid("fe9481ad-37b6-4362-9eb0-ba9a45c784e3"))
_IAgVAStateCalcDamageFlux : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("7f263c2c-cb20-4e31-8856-b03f4c8a7e39"))
IAgVAStateCalcDamageMassFlux : IUnknown
{};

struct __declspec(uuid("34dd4756-45f6-4d7d-ae38-524f099b8d20"))
_IAgVAStateCalcDamageMassFlux : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("279d283a-0267-4bf6-ad9f-af764c204d07"))
IAgVAStateCalcMagFieldDipoleL : IUnknown
{};

struct __declspec(uuid("1a014b6c-c079-40f9-aa66-61d67399a531"))
_IAgVAStateCalcMagFieldDipoleL : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("796a8edc-16c7-4c7d-a266-993a3d095b50"))
IAgVAStateCalcSEETMagFieldFieldLineSepAngle : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetTargetObject))
    STKObjects::IAgLinkToObjectPtr TargetObject;

    //
    // Wrapper methods for error-handling
    //

    STKObjects::IAgLinkToObjectPtr GetTargetObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TargetObject (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("efeece2a-d72c-4c36-822e-d9ddf1bef19d"))
_IAgVAStateCalcSEETMagFieldFieldLineSepAngle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetTargetObject))
    STKObjects::IAgLinkToObjectPtr TargetObject;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    STKObjects::IAgLinkToObjectPtr GetTargetObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_TargetObject (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("8f2d9f25-5431-4e4a-b5f6-f5ec11424e9f"))
IAgVAStateCalcImpactFlux : IUnknown
{};

struct __declspec(uuid("05bfdd67-f54d-447f-934f-4fbbb12180e5"))
_IAgVAStateCalcImpactFlux : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("a8df512c-6f92-44c3-a250-e808b1f18ef8"))
IAgVAStateCalcImpactMassFlux : IUnknown
{};

struct __declspec(uuid("f496846f-578d-47b3-a5e6-758c610e8e50"))
_IAgVAStateCalcImpactMassFlux : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("5994c707-1ed5-4ddf-ac6a-0797dcd92bc0"))
IAgVAStateCalcSEETSAAFlux : IUnknown
{};

struct __declspec(uuid("33657488-6a0e-4681-a96a-4792534b5b2b"))
_IAgVAStateCalcSEETSAAFlux : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("b1e61d64-632e-49c7-a32c-cbf0fb975c40"))
IAgVAStateCalcSEETVehTemp : IUnknown
{};

struct __declspec(uuid("028efd17-64f3-4579-8d8f-9db7a62cf284"))
_IAgVAStateCalcSEETVehTemp : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

enum AgEVACalcObjectReference
{
    eVACalcObjectReferenceBasic = 0,
    eVACalcObjectReferenceSpecified = 1
};

struct __declspec(uuid("5243a763-b905-454b-92b7-1845aaeeb60f"))
IAgVAStateCalcCloseApproachBearing : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("64a8e629-362b-4f66-97ba-2637fd7a5dec"))
_IAgVAStateCalcCloseApproachBearing : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("6da3778f-a669-4545-a63a-4f7af67298db"))
IAgVAStateCalcCloseApproachMag : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("e7f5039e-2c3a-4c70-bcfa-5eaaf84746a6"))
_IAgVAStateCalcCloseApproachMag : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("349212a5-cf52-46b4-9838-f0b0bbe4b164"))
IAgVAStateCalcCloseApproachTheta : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("f588e6a3-ca13-4d1c-a5fa-3b83d411c930"))
_IAgVAStateCalcCloseApproachTheta : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("940cf014-f12f-4dfd-a6f2-fbc59d1fb19f"))
IAgVAStateCalcCloseApproachX : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("cf02d30f-26fe-4bad-a969-bd4642647852"))
_IAgVAStateCalcCloseApproachX : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("3bb2f1fc-37e6-4015-94b3-798546ef66aa"))
IAgVAStateCalcCloseApproachY : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("ad8e3f8e-1be9-4731-a270-d0c9ea49fcca"))
_IAgVAStateCalcCloseApproachY : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("002e31b0-7d67-4078-ad08-c5db129d7d2a"))
IAgVAStateCalcCloseApproachCosBearing : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("83bb2769-2af9-430e-9c60-9dd53419514d"))
_IAgVAStateCalcCloseApproachCosBearing : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("6387564e-a4e9-495f-880e-8d347bc83e47"))
IAgVAStateCalcRelGroundTrackError : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetDirection,put=PutDirection))
    enum AgEVACalcObjectDirection Direction;
    __declspec(property(get=GetSigned,put=PutSigned))
    VARIANT_BOOL Signed;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectDirection GetDirection ( );
    void PutDirection (
        enum AgEVACalcObjectDirection pVal );
    VARIANT_BOOL GetSigned ( );
    void PutSigned (
        VARIANT_BOOL pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ enum AgEVACalcObjectDirection * pVal ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ enum AgEVACalcObjectDirection pVal ) = 0;
      virtual HRESULT __stdcall get_Signed (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Signed (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("5e9abdf2-b64b-4ca9-af3d-cfc738555abb"))
_IAgVAStateCalcRelGroundTrackError : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetDirection,put=PutDirection))
    enum AgEVACalcObjectDirection Direction;
    __declspec(property(get=GetSigned,put=PutSigned))
    VARIANT_BOOL Signed;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectDirection GetDirection ( );
    void PutDirection (
        enum AgEVACalcObjectDirection pVal );
    VARIANT_BOOL GetSigned ( );
    void PutSigned (
        VARIANT_BOOL pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ enum AgEVACalcObjectDirection * pVal ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ enum AgEVACalcObjectDirection pVal ) = 0;
      virtual HRESULT __stdcall get_Signed (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Signed (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("d0b3a61d-b244-4ee3-b82c-19efc71f9a6e"))
IAgVAStateCalcRelAtAOLMaster : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetDirection,put=PutDirection))
    enum AgEVACalcObjectDirection Direction;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    enum AgEVACalcObjectDirection GetDirection ( );
    void PutDirection (
        enum AgEVACalcObjectDirection pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ enum AgEVACalcObjectDirection * pVal ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ enum AgEVACalcObjectDirection pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("273893a0-662f-4407-ae02-d9bdacdceb3e"))
_IAgVAStateCalcRelAtAOLMaster : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetDirection,put=PutDirection))
    enum AgEVACalcObjectDirection Direction;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    enum AgEVACalcObjectDirection GetDirection ( );
    void PutDirection (
        enum AgEVACalcObjectDirection pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ enum AgEVACalcObjectDirection * pVal ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ enum AgEVACalcObjectDirection pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("74070adb-eb5f-45ad-bb37-07d008dd8b5b"))
IAgVAStateCalcDeltaFromMaster : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("8f87cb9a-122f-40ad-b6e7-7537875962ac"))
_IAgVAStateCalcDeltaFromMaster : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("c10d1029-be7e-4d25-81d3-bf785d316853"))
IAgVAStateCalcLonDriftRate : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("8858cf04-f502-469d-87ca-e26ea94e3cce"))
_IAgVAStateCalcLonDriftRate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("721e2e21-ff1f-474b-b9e5-91ea9d9741e3"))
IAgVAStateCalcMeanEarthLon : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("daeff464-023b-4bcd-9a38-02acb605f6ad"))
_IAgVAStateCalcMeanEarthLon : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f4437265-815b-4945-9f13-dc7b1a9206b7"))
IAgVAStateCalcRectifiedLon : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("da8f632c-dcdc-4c5b-9be3-0c7de541e806"))
_IAgVAStateCalcRectifiedLon : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("7e06c155-cec0-402a-a0f3-7cdc1685ee6e"))
IAgVAStateCalcGeodeticElem : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("2ba1c848-ec03-45d8-9cc3-b955ce254124"))
_IAgVAStateCalcGeodeticElem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("91421084-d1ab-44a2-91b4-bf2b69351266"))
IAgVAStateCalcRepeatingGroundTrackErr : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceLongitude,put=PutReferenceLongitude))
    _variant_t ReferenceLongitude;
    __declspec(property(get=GetRepeatCount,put=PutRepeatCount))
    double RepeatCount;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    _variant_t GetReferenceLongitude ( );
    void PutReferenceLongitude (
        const _variant_t & pVal );
    double GetRepeatCount ( );
    void PutRepeatCount (
        double pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlRepeatingGroundTrackErr Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlRepeatingGroundTrackErr Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlRepeatingGroundTrackErr Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceLongitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceLongitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlRepeatingGroundTrackErr Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlRepeatingGroundTrackErr Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlRepeatingGroundTrackErr Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("449eda3f-b5c2-4aaf-a7b2-f9ddd15d290b"))
_IAgVAStateCalcRepeatingGroundTrackErr : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceLongitude,put=PutReferenceLongitude))
    _variant_t ReferenceLongitude;
    __declspec(property(get=GetRepeatCount,put=PutRepeatCount))
    double RepeatCount;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    _variant_t GetReferenceLongitude ( );
    void PutReferenceLongitude (
        const _variant_t & pVal );
    double GetRepeatCount ( );
    void PutRepeatCount (
        double pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlRepeatingGroundTrackErr Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlRepeatingGroundTrackErr Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlRepeatingGroundTrackErr Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceLongitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceLongitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlRepeatingGroundTrackErr Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlRepeatingGroundTrackErr Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlRepeatingGroundTrackErr Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("64206d14-bda4-45f9-b485-18b23b9492ab"))
IAgVAStateCalcAltOfApoapsis : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("e5fae7eb-f678-41a3-9467-18c23c33e704"))
_IAgVAStateCalcAltOfApoapsis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("4562206f-5cfd-4f7a-8786-b935d75a0809"))
IAgVAStateCalcAltOfPeriapsis : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("183e78ad-d37f-4c2a-8040-7ce11ee1ee39"))
_IAgVAStateCalcAltOfPeriapsis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("6da7d915-fc6f-4806-9645-551bb8646708"))
IAgVAStateCalcArgOfLat : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("be8ae056-9f7f-4514-bbc0-2693603ac0d4"))
_IAgVAStateCalcArgOfLat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("17c50058-787b-4df1-aeac-2b735a854a8f"))
IAgVAStateCalcArgOfPeriapsis : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("c294ffa4-d782-4c60-ae8d-c556118be55b"))
_IAgVAStateCalcArgOfPeriapsis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("b743ab4e-2773-43cf-af33-482942bb6c44"))
IAgVAStateCalcEccAnomaly : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("c7cdce04-4905-4466-bc14-672569b78351"))
_IAgVAStateCalcEccAnomaly : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("7f0b7ee7-8d23-4056-a676-8ea5ed631c17"))
IAgVAStateCalcEccentricity : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("0e3c0d42-3561-4c26-9ed0-05ae501fe097"))
_IAgVAStateCalcEccentricity : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("b8a2c9db-bd55-4b0f-ba55-c38ef4c000b1"))
IAgVAStateCalcInclination : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("3694f9b1-87cd-42c0-a071-87bb070401c8"))
_IAgVAStateCalcInclination : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("6595ae58-6d67-4e70-b685-cd1670bd3d99"))
IAgVAStateCalcLonOfAscNode : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("8f7b71a0-75d1-4b76-a976-9ccdf43a7e78"))
_IAgVAStateCalcLonOfAscNode : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("ac62eebd-d3e3-4a5e-8073-979a56447186"))
IAgVAStateCalcMeanAnomaly : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("ba40cda5-3340-4a95-a36f-8e8ea9e8d8ac"))
_IAgVAStateCalcMeanAnomaly : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("d315106f-8e7c-4c83-a71f-42fc51dd24d1"))
IAgVAStateCalcMeanMotion : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("18332033-4644-4c39-8829-175c21007b15"))
_IAgVAStateCalcMeanMotion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("0409747f-5a23-468b-a2b0-d60492eab680"))
IAgVAStateCalcOrbitPeriod : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("c1a2cb30-a249-414b-837b-4272be9c0008"))
_IAgVAStateCalcOrbitPeriod : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("37fcbcd9-0688-4bc2-a6d3-8e7722bb9b28"))
IAgVAStateCalcRAAN : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("bf63f4e4-a956-4b9c-b61f-796f97136878"))
_IAgVAStateCalcRAAN : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("052655d2-c590-4570-be1a-54fd26193d81"))
IAgVAStateCalcRadOfApoapsis : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("53305059-7aa9-4795-a0b7-c270992659d9"))
_IAgVAStateCalcRadOfApoapsis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("d143ceb6-dd35-4200-b9cc-3bd5241289c0"))
IAgVAStateCalcRadOfPeriapsis : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("b171faa0-cbb5-497a-b0fd-60582bc3e2c0"))
_IAgVAStateCalcRadOfPeriapsis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("3aa4e8d1-430f-491b-b014-5f1c342a53ec"))
IAgVAStateCalcSemiMajorAxis : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("1d8778aa-7630-4d8b-b8d3-9307de164b6c"))
_IAgVAStateCalcSemiMajorAxis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("701c882f-2701-4501-9b22-b733bd17988e"))
IAgVAStateCalcTimePastAscNode : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("a956a7f1-c715-4f7b-ba31-559f4f3b78ff"))
_IAgVAStateCalcTimePastAscNode : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("06313b7a-1238-4ce3-b39a-cc91dcd52328"))
IAgVAStateCalcTimePastPeriapsis : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("f2832694-48d4-4ff5-9834-55ebdacd9de3"))
_IAgVAStateCalcTimePastPeriapsis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("52933885-c62f-4104-8385-fea16c8a92bb"))
IAgVAStateCalcDeltaV : IUnknown
{};

struct __declspec(uuid("bb67baee-39e9-4576-8698-c0a8f1d816f5"))
_IAgVAStateCalcDeltaV : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("e9d773b6-2ac0-47dd-a615-42955d90bd16"))
IAgVAStateCalcDeltaVSquared : IUnknown
{};

struct __declspec(uuid("ba47d4cf-c043-4600-a49c-89f59f5f7d61"))
_IAgVAStateCalcDeltaVSquared : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("81158974-48a6-4589-9794-bc3b3bad8494"))
IAgVAStateCalcMCSDeltaV : IUnknown
{};

struct __declspec(uuid("9c50069c-943b-4d99-ad2f-4d8413ff79bf"))
_IAgVAStateCalcMCSDeltaV : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("eb4959f2-956e-4c0c-b967-656df0c75991"))
IAgVAStateCalcMCSDeltaVSquared : IUnknown
{};

struct __declspec(uuid("e1451a74-00ef-46a3-9cc8-242108e2a190"))
_IAgVAStateCalcMCSDeltaVSquared : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("363a9d71-71f6-4f65-96c6-e389749d53ba"))
IAgVAStateCalcSequenceDeltaV : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetSequenceName,put=PutSequenceName))
    _bstr_t SequenceName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSequenceName ( );
    void PutSequenceName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SequenceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SequenceName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("55eee261-d371-4ca8-9516-e83a7439f12f"))
_IAgVAStateCalcSequenceDeltaV : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetSequenceName,put=PutSequenceName))
    _bstr_t SequenceName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetSequenceName ( );
    void PutSequenceName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_SequenceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SequenceName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("2523b0a0-9c7c-4c44-9d14-884f1271458a"))
IAgVAStateCalcSequenceDeltaVSquared : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetSequenceName,put=PutSequenceName))
    _bstr_t SequenceName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSequenceName ( );
    void PutSequenceName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SequenceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SequenceName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("8ba6fe0b-5d61-4c26-834d-2f38a68ff67d"))
_IAgVAStateCalcSequenceDeltaVSquared : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetSequenceName,put=PutSequenceName))
    _bstr_t SequenceName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetSequenceName ( );
    void PutSequenceName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_SequenceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SequenceName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("85b577be-8a3c-461d-b852-95b1f9f7e6f9"))
IAgVAStateCalcFuelMass : IUnknown
{};

struct __declspec(uuid("5c7d4fe0-1c0f-4748-8923-2308beca6a51"))
_IAgVAStateCalcFuelMass : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("5f1bc917-71f9-4ec7-b8ab-16837eb64585"))
IAgVAStateCalcDensity : IUnknown
{};

struct __declspec(uuid("57d675c5-1d38-48f1-bdd5-b75227a60b1f"))
_IAgVAStateCalcDensity : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("3007cd9b-332d-412a-9ca6-752961687153"))
IAgVAStateCalcInertialDeltaVMag : IUnknown
{};

struct __declspec(uuid("889319aa-f169-4369-b1d6-75cef3402b88"))
_IAgVAStateCalcInertialDeltaVMag : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("f3b9a532-e0eb-465c-8fe2-d7a47d66f629"))
IAgVAStateCalcInertialDeltaVx : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("0bfec896-1cec-4cf0-9753-4a91500c0ba9"))
_IAgVAStateCalcInertialDeltaVx : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("e2c73346-24a8-4981-b2ae-7315cd081f65"))
IAgVAStateCalcInertialDeltaVy : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("8a3f315f-0a20-4ea6-84c2-297e3d143bb3"))
_IAgVAStateCalcInertialDeltaVy : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("82af1d33-43e1-432c-8f6f-b6d782ea3961"))
IAgVAStateCalcInertialDeltaVz : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f5e31139-ccc6-445e-b707-0ebb39bb53e1"))
_IAgVAStateCalcInertialDeltaVz : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("1557bd86-3eeb-4b78-acb8-252bc7b52512"))
IAgVAStateCalcManeuverSpecificImpulse : IUnknown
{};

struct __declspec(uuid("7702f739-0278-4a26-8c17-654a3438278b"))
_IAgVAStateCalcManeuverSpecificImpulse : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("c703f766-32b1-40de-ab25-ba1491f71ef4"))
IAgVAStateCalcPressure : IUnknown
{};

struct __declspec(uuid("cea46a0b-1e67-499e-91a7-d68ae5bb8993"))
_IAgVAStateCalcPressure : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("614f8835-0910-4953-a9d7-51bd7f7f2206"))
IAgVAStateCalcTemperature : IUnknown
{};

struct __declspec(uuid("bd7f38ad-2914-47d4-8f8c-432f116efde3"))
_IAgVAStateCalcTemperature : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("6b073aeb-b59d-4774-8b2d-b90c90d77d62"))
IAgVAStateCalcVectorX : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;
    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetNormalize,put=PutNormalize))
    VARIANT_BOOL Normalize;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );
    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );
    VARIANT_BOOL GetNormalize ( );
    void PutNormalize (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Normalize (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Normalize (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("b442b2ce-cdc9-47a7-a2bd-dce2be2e5dcd"))
_IAgVAStateCalcVectorX : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;
    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetNormalize,put=PutNormalize))
    VARIANT_BOOL Normalize;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );
    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );
    VARIANT_BOOL GetNormalize ( );
    void PutNormalize (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Normalize (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Normalize (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("15aa86e8-1251-47cb-9726-a8ac3c352cbf"))
IAgVAStateCalcVectorY : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;
    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetNormalize,put=PutNormalize))
    VARIANT_BOOL Normalize;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );
    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );
    VARIANT_BOOL GetNormalize ( );
    void PutNormalize (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Normalize (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Normalize (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("16ee1cb3-1f56-4301-91a8-103949ceee7d"))
_IAgVAStateCalcVectorY : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;
    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetNormalize,put=PutNormalize))
    VARIANT_BOOL Normalize;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );
    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );
    VARIANT_BOOL GetNormalize ( );
    void PutNormalize (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Normalize (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Normalize (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("b5f8304b-d8cf-4a35-9a75-b36f29aeaece"))
IAgVAStateCalcVectorZ : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;
    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetNormalize,put=PutNormalize))
    VARIANT_BOOL Normalize;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );
    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );
    VARIANT_BOOL GetNormalize ( );
    void PutNormalize (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Normalize (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Normalize (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("addc08d6-8fa5-4fef-b7ab-4fb8798bbe47"))
_IAgVAStateCalcVectorZ : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;
    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetNormalize,put=PutNormalize))
    VARIANT_BOOL Normalize;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );
    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );
    VARIANT_BOOL GetNormalize ( );
    void PutNormalize (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Normalize (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Normalize (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("1b3cde7c-f1c4-4812-8816-f3b14e180276"))
IAgVAStateCalcMass : IUnknown
{};

struct __declspec(uuid("3ced1156-e034-4b83-8a78-c0ae06c88deb"))
_IAgVAStateCalcMass : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("b7e97ec8-bf97-4bf0-861a-ca18475bb85f"))
IAgVAStateCalcManeuverTotalMassFlowRate : IUnknown
{};

struct __declspec(uuid("c42485a9-c5a9-4eaf-88f0-c07aec7d39ff"))
_IAgVAStateCalcManeuverTotalMassFlowRate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("401066ef-41dd-42f8-8544-73ff212a5c6f"))
IAgVAStateCalcAbsoluteValue : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("8a7415d7-31fe-4541-85aa-cd4ebf809540"))
_IAgVAStateCalcAbsoluteValue : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("05bc0c4c-39ae-4899-806b-9987a0bf39fb"))
IAgVAStateCalcDifference : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetDifferenceOrder,put=PutDifferenceOrder))
    enum AgEVADifferenceOrder DifferenceOrder;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    enum AgEVADifferenceOrder GetDifferenceOrder ( );
    void PutDifferenceOrder (
        enum AgEVADifferenceOrder pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DifferenceOrder (
        /*[out,retval]*/ enum AgEVADifferenceOrder * pVal ) = 0;
      virtual HRESULT __stdcall put_DifferenceOrder (
        /*[in]*/ enum AgEVADifferenceOrder pVal ) = 0;
};

struct __declspec(uuid("d1009c4e-7d48-467f-9c83-42bcd4dcef24"))
_IAgVAStateCalcDifference : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetDifferenceOrder,put=PutDifferenceOrder))
    enum AgEVADifferenceOrder DifferenceOrder;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    enum AgEVADifferenceOrder GetDifferenceOrder ( );
    void PutDifferenceOrder (
        enum AgEVADifferenceOrder pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DifferenceOrder (
        /*[out,retval]*/ enum AgEVADifferenceOrder * pVal ) = 0;
      virtual HRESULT __stdcall put_DifferenceOrder (
        /*[in]*/ enum AgEVADifferenceOrder pVal ) = 0;
};

struct __declspec(uuid("8f0944a1-c295-440d-9490-d679efb22b50"))
IAgVAStateCalcDifferenceOtherSegment : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;
    __declspec(property(get=GetDifferenceOrder,put=PutDifferenceOrder))
    enum AgEVASegmentDifferenceOrder DifferenceOrder;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );
    enum AgEVASegmentDifferenceOrder GetDifferenceOrder ( );
    void PutDifferenceOrder (
        enum AgEVASegmentDifferenceOrder pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
      virtual HRESULT __stdcall get_DifferenceOrder (
        /*[out,retval]*/ enum AgEVASegmentDifferenceOrder * pVal ) = 0;
      virtual HRESULT __stdcall put_DifferenceOrder (
        /*[in]*/ enum AgEVASegmentDifferenceOrder pVal ) = 0;
};

struct __declspec(uuid("08dcad2a-29d1-4b42-b511-abb757096007"))
_IAgVAStateCalcDifferenceOtherSegment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;
    __declspec(property(get=GetDifferenceOrder,put=PutDifferenceOrder))
    enum AgEVASegmentDifferenceOrder DifferenceOrder;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );
    enum AgEVASegmentDifferenceOrder GetDifferenceOrder ( );
    void PutDifferenceOrder (
        enum AgEVASegmentDifferenceOrder pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
      virtual HRESULT __stdcall get_DifferenceOrder (
        /*[out,retval]*/ enum AgEVASegmentDifferenceOrder * pVal ) = 0;
      virtual HRESULT __stdcall put_DifferenceOrder (
        /*[in]*/ enum AgEVASegmentDifferenceOrder pVal ) = 0;
};

struct __declspec(uuid("eabce437-0e1c-4977-a119-f194e29ae4ad"))
IAgVAStateCalcPosDifferenceOtherSegment : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
};

struct __declspec(uuid("d539401b-b280-42d6-bf7d-42e77e499bf4"))
_IAgVAStateCalcPosDifferenceOtherSegment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
};

struct __declspec(uuid("401d8222-289e-4547-bfcb-1515cfad0748"))
IAgVAStateCalcVelDifferenceOtherSegment : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
};

struct __declspec(uuid("81ab09f4-9662-4ead-bdcc-56ddc90b0b22"))
_IAgVAStateCalcVelDifferenceOtherSegment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
};

struct __declspec(uuid("d8f61ea5-b93b-46dd-97cf-f659a317f5d6"))
IAgVAStateCalcPosVelDifferenceOtherSegment : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
};

struct __declspec(uuid("6e460203-2131-4b55-89ca-178869f9c250"))
_IAgVAStateCalcPosVelDifferenceOtherSegment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
};

struct __declspec(uuid("2871058e-f539-41be-8f1a-b8134b576467"))
IAgVAStateCalcValueAtSegment : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
};

struct __declspec(uuid("819e55d5-959f-4f8c-8289-606cc99e6011"))
_IAgVAStateCalcValueAtSegment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
};

struct __declspec(uuid("2ba3501a-cd09-4193-b514-70a66f913b78"))
IAgVAStateCalcMaxValue : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f56f1d83-8ffd-46c2-bacc-70cc58bd3b8f"))
_IAgVAStateCalcMaxValue : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f8dd2e1c-38df-4db7-ba0b-1427188d10bc"))
IAgVAStateCalcMinValue : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("cf79ea91-7881-4e2c-92d5-09248102a114"))
_IAgVAStateCalcMinValue : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("055a9a78-2c75-491d-836a-546faf761a28"))
IAgVAStateCalcNegative : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("47acb109-a209-4770-b0ba-36a1f5d150d6"))
_IAgVAStateCalcNegative : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("5498d720-d049-47d6-b49f-278be98c2a73"))
IAgVAStateCalcTrueAnomaly : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("e0f62bfb-45cb-4e44-b42e-5863834d32cb"))
_IAgVAStateCalcTrueAnomaly : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("7c0dc2b8-ea6e-4677-b8e4-36b39b652439"))
IAgVABDotRCalc : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetTargetBodyName,put=PutTargetBodyName))
    _bstr_t TargetBodyName;
    __declspec(property(get=GetRefVectorName,put=PutRefVectorName))
    _bstr_t RefVectorName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetTargetBodyName ( );
    void PutTargetBodyName (
        _bstr_t pVal );
    _bstr_t GetRefVectorName ( );
    void PutRefVectorName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TargetBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_TargetBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RefVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RefVectorName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("cef3d1a3-fbd5-4a70-a10a-b28aca542463"))
_IAgVABDotRCalc : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetTargetBodyName,put=PutTargetBodyName))
    _bstr_t TargetBodyName;
    __declspec(property(get=GetRefVectorName,put=PutRefVectorName))
    _bstr_t RefVectorName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetTargetBodyName ( );
    void PutTargetBodyName (
        _bstr_t pVal );
    _bstr_t GetRefVectorName ( );
    void PutRefVectorName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_TargetBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_TargetBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RefVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RefVectorName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("1266d39f-c556-486f-8b2e-a353ba64521b"))
IAgVABDotTCalc : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetTargetBodyName,put=PutTargetBodyName))
    _bstr_t TargetBodyName;
    __declspec(property(get=GetRefVectorName,put=PutRefVectorName))
    _bstr_t RefVectorName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetTargetBodyName ( );
    void PutTargetBodyName (
        _bstr_t pVal );
    _bstr_t GetRefVectorName ( );
    void PutRefVectorName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TargetBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_TargetBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RefVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RefVectorName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("41d84aec-f3ec-4242-a5e3-fedeb1d2ccd9"))
_IAgVABDotTCalc : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetTargetBodyName,put=PutTargetBodyName))
    _bstr_t TargetBodyName;
    __declspec(property(get=GetRefVectorName,put=PutRefVectorName))
    _bstr_t RefVectorName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetTargetBodyName ( );
    void PutTargetBodyName (
        _bstr_t pVal );
    _bstr_t GetRefVectorName ( );
    void PutRefVectorName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_TargetBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_TargetBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RefVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RefVectorName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("d20b31ac-db43-4e5b-9461-9355f65a621c"))
IAgVABMagCalc : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetTargetBodyName,put=PutTargetBodyName))
    _bstr_t TargetBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetTargetBodyName ( );
    void PutTargetBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TargetBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_TargetBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("95151737-c71f-41a7-835c-ecf4f501bdd1"))
_IAgVABMagCalc : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetTargetBodyName,put=PutTargetBodyName))
    _bstr_t TargetBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetTargetBodyName ( );
    void PutTargetBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_TargetBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_TargetBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("3a3bc247-05b2-42a1-b539-69c6529e5aae"))
IAgVABThetaCalc : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetTargetBodyName,put=PutTargetBodyName))
    _bstr_t TargetBodyName;
    __declspec(property(get=GetRefVectorName,put=PutRefVectorName))
    _bstr_t RefVectorName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetTargetBodyName ( );
    void PutTargetBodyName (
        _bstr_t pVal );
    _bstr_t GetRefVectorName ( );
    void PutRefVectorName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TargetBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_TargetBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RefVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RefVectorName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("3af397d2-09ca-46dc-9106-6abc723bd938"))
_IAgVABThetaCalc : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetTargetBodyName,put=PutTargetBodyName))
    _bstr_t TargetBodyName;
    __declspec(property(get=GetRefVectorName,put=PutRefVectorName))
    _bstr_t RefVectorName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetTargetBodyName ( );
    void PutTargetBodyName (
        _bstr_t pVal );
    _bstr_t GetRefVectorName ( );
    void PutRefVectorName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_TargetBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_TargetBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RefVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RefVectorName (
        /*[in]*/ BSTR pVal ) = 0;
};

enum AgEVACalcObjectCentralBodyReference
{
    eVACalcObjectCentralBodyReferenceSpecified = 0,
    eVACalcObjectCentralBodyReferenceParent = 1
};

struct __declspec(uuid("ed1ab6a1-a8ce-4c8a-ab71-dd4192a71dd9"))
IAgVAStateCalcDeltaDec : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceType,put=PutReferenceType))
    enum AgEVACalcObjectCentralBodyReference ReferenceType;
    __declspec(property(get=GetReferenceBody,put=PutReferenceBody))
    _bstr_t ReferenceBody;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectCentralBodyReference GetReferenceType ( );
    void PutReferenceType (
        enum AgEVACalcObjectCentralBodyReference pVal );
    _bstr_t GetReferenceBody ( );
    void PutReferenceBody (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceType (
        /*[out,retval]*/ enum AgEVACalcObjectCentralBodyReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceType (
        /*[in]*/ enum AgEVACalcObjectCentralBodyReference pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceBody (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceBody (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("0762e0dd-7f5b-4066-be82-c0f296bccacf"))
_IAgVAStateCalcDeltaDec : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceType,put=PutReferenceType))
    enum AgEVACalcObjectCentralBodyReference ReferenceType;
    __declspec(property(get=GetReferenceBody,put=PutReferenceBody))
    _bstr_t ReferenceBody;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectCentralBodyReference GetReferenceType ( );
    void PutReferenceType (
        enum AgEVACalcObjectCentralBodyReference pVal );
    _bstr_t GetReferenceBody ( );
    void PutReferenceBody (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceType (
        /*[out,retval]*/ enum AgEVACalcObjectCentralBodyReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceType (
        /*[in]*/ enum AgEVACalcObjectCentralBodyReference pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceBody (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceBody (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("0b9d54e4-2a46-4e31-ae9b-a4327e85f27f"))
IAgVAStateCalcDeltaRA : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceType,put=PutReferenceType))
    enum AgEVACalcObjectCentralBodyReference ReferenceType;
    __declspec(property(get=GetReferenceBody,put=PutReferenceBody))
    _bstr_t ReferenceBody;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectCentralBodyReference GetReferenceType ( );
    void PutReferenceType (
        enum AgEVACalcObjectCentralBodyReference pVal );
    _bstr_t GetReferenceBody ( );
    void PutReferenceBody (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceType (
        /*[out,retval]*/ enum AgEVACalcObjectCentralBodyReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceType (
        /*[in]*/ enum AgEVACalcObjectCentralBodyReference pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceBody (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceBody (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("fb2ba623-3e6d-43b6-ae72-f1ab6161133f"))
_IAgVAStateCalcDeltaRA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceType,put=PutReferenceType))
    enum AgEVACalcObjectCentralBodyReference ReferenceType;
    __declspec(property(get=GetReferenceBody,put=PutReferenceBody))
    _bstr_t ReferenceBody;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectCentralBodyReference GetReferenceType ( );
    void PutReferenceType (
        enum AgEVACalcObjectCentralBodyReference pVal );
    _bstr_t GetReferenceBody ( );
    void PutReferenceBody (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceType (
        /*[out,retval]*/ enum AgEVACalcObjectCentralBodyReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceType (
        /*[in]*/ enum AgEVACalcObjectCentralBodyReference pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceBody (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceBody (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("0737eaef-8fda-4a33-8d3f-71492335b3fe"))
IAgVAStateCalcApparentSolarLon : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("aa80136b-3812-44a8-9edb-f4d5a7265c46"))
_IAgVAStateCalcApparentSolarLon : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("71349155-fb85-4201-9da7-7cfb3b49aaaa"))
IAgVAStateCalcBetaAngle : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("b9d29dd8-b78f-47ce-bdad-354b061eb648"))
_IAgVAStateCalcBetaAngle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("9bac5517-6651-4240-9f39-c571a99df194"))
IAgVAStateCalcEarthMeanSolarLon : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("e83eaa6c-59d5-46b6-96d4-e98a0ee2f7ee"))
_IAgVAStateCalcEarthMeanSolarLon : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("006f00b4-f497-4e0f-a674-18508f16c9ef"))
IAgVAStateCalcLocalApparentSolarLon : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("d4890f05-6042-4dc2-af75-d815d52b793b"))
_IAgVAStateCalcLocalApparentSolarLon : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("067fae0e-5c20-45b3-b9e3-d8cb48a37bbb"))
IAgVAStateCalcLonOfPeriapsis : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("5796d284-4274-4bd7-ae09-a9bfad5f264d"))
_IAgVAStateCalcLonOfPeriapsis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("9c5cf0b2-0046-44aa-82f7-2ef03e34f7f4"))
IAgVAStateCalcOrbitStateValue : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetInputCoordSystemName,put=PutInputCoordSystemName))
    _bstr_t InputCoordSystemName;
    __declspec(property(get=GetX,put=PutX))
    _variant_t X;
    __declspec(property(get=GetY,put=PutY))
    _variant_t Y;
    __declspec(property(get=GetZ,put=PutZ))
    _variant_t Z;
    __declspec(property(get=GetVx,put=PutVx))
    _variant_t Vx;
    __declspec(property(get=GetVy,put=PutVy))
    _variant_t Vy;
    __declspec(property(get=GetVz,put=PutVz))
    _variant_t Vz;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    _bstr_t GetInputCoordSystemName ( );
    void PutInputCoordSystemName (
        _bstr_t pVal );
    _variant_t GetX ( );
    void PutX (
        const _variant_t & pVal );
    _variant_t GetY ( );
    void PutY (
        const _variant_t & pVal );
    _variant_t GetZ ( );
    void PutZ (
        const _variant_t & pVal );
    _variant_t GetVx ( );
    void PutVx (
        const _variant_t & pVal );
    _variant_t GetVy ( );
    void PutVy (
        const _variant_t & pVal );
    _variant_t GetVz ( );
    void PutVz (
        const _variant_t & pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlOrbitStateValue Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlOrbitStateValue Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlOrbitStateValue Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_InputCoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_InputCoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_X (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_X (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Y (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Z (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Z (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Vx (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Vx (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Vy (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Vy (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Vz (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Vz (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlOrbitStateValue Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlOrbitStateValue Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlOrbitStateValue Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("2bf370c7-9d66-47b5-a3f0-d3e2337504db"))
_IAgVAStateCalcOrbitStateValue : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetVz,put=PutVz))
    _variant_t Vz;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetInputCoordSystemName,put=PutInputCoordSystemName))
    _bstr_t InputCoordSystemName;
    __declspec(property(get=GetX,put=PutX))
    _variant_t X;
    __declspec(property(get=GetY,put=PutY))
    _variant_t Y;
    __declspec(property(get=GetZ,put=PutZ))
    _variant_t Z;
    __declspec(property(get=GetVx,put=PutVx))
    _variant_t Vx;
    __declspec(property(get=GetVy,put=PutVy))
    _variant_t Vy;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    _bstr_t GetInputCoordSystemName ( );
    void PutInputCoordSystemName (
        _bstr_t pVal );
    _variant_t GetX ( );
    void PutX (
        const _variant_t & pVal );
    _variant_t GetY ( );
    void PutY (
        const _variant_t & pVal );
    _variant_t GetZ ( );
    void PutZ (
        const _variant_t & pVal );
    _variant_t GetVx ( );
    void PutVx (
        const _variant_t & pVal );
    _variant_t GetVy ( );
    void PutVy (
        const _variant_t & pVal );
    _variant_t GetVz ( );
    void PutVz (
        const _variant_t & pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlOrbitStateValue Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlOrbitStateValue Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlOrbitStateValue Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_InputCoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_InputCoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_X (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_X (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Y (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Z (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Z (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Vx (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Vx (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Vy (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Vy (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Vz (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Vz (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlOrbitStateValue Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlOrbitStateValue Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlOrbitStateValue Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("786cf8d5-251c-4890-b1d9-a3438b942854"))
IAgVAStateCalcSignedEccentricity : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("8947e204-ef83-45f1-b307-f841d5257020"))
_IAgVAStateCalcSignedEccentricity : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("ade4a9ca-e07d-4563-a76f-61fdfb759880"))
IAgVAStateCalcTrueLon : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("7d028237-75c5-42de-90ae-e591fed8b362"))
_IAgVAStateCalcTrueLon : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("9bd3f0b1-b832-45a8-97f7-9efc56414bf2"))
IAgVAStateCalcPower : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetPowerSourceName,put=PutPowerSourceName))
    _bstr_t PowerSourceName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPowerSourceName ( );
    void PutPowerSourceName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PowerSourceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerSourceName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("0f6b1b88-6380-43ff-a25f-984c305914aa"))
_IAgVAStateCalcPower : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetPowerSourceName,put=PutPowerSourceName))
    _bstr_t PowerSourceName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetPowerSourceName ( );
    void PutPowerSourceName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_PowerSourceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerSourceName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f1528127-ba96-47dd-98c6-e21abb094e17"))
IAgVAStateCalcRelMotion : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetOriginAtMaster,put=PutOriginAtMaster))
    VARIANT_BOOL OriginAtMaster;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    VARIANT_BOOL GetOriginAtMaster ( );
    void PutOriginAtMaster (
        VARIANT_BOOL pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OriginAtMaster (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_OriginAtMaster (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("d0fe4cf5-45d0-4893-97ca-520ce97dce37"))
_IAgVAStateCalcRelMotion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetOriginAtMaster,put=PutOriginAtMaster))
    VARIANT_BOOL OriginAtMaster;
    __declspec(property(get=GetReferenceSelection,put=PutReferenceSelection))
    enum AgEVACalcObjectReference ReferenceSelection;
    __declspec(property(get=GetReference))
    STKObjects::IAgLinkToObjectPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    VARIANT_BOOL GetOriginAtMaster ( );
    void PutOriginAtMaster (
        VARIANT_BOOL pVal );
    enum AgEVACalcObjectReference GetReferenceSelection ( );
    void PutReferenceSelection (
        enum AgEVACalcObjectReference pVal );
    STKObjects::IAgLinkToObjectPtr GetReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OriginAtMaster (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_OriginAtMaster (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSelection (
        /*[out,retval]*/ enum AgEVACalcObjectReference * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceSelection (
        /*[in]*/ enum AgEVACalcObjectReference pVal ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("736ef44d-e8b2-4765-9069-06e99d0ec5cc"))
IAgVAStateCalcCustomFunction : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetResetFunctionName,put=PutResetFunctionName))
    _bstr_t ResetFunctionName;
    __declspec(property(get=GetEvalFunctionName,put=PutEvalFunctionName))
    _bstr_t EvalFunctionName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetResetFunctionName ( );
    void PutResetFunctionName (
        _bstr_t pVal );
    _bstr_t GetEvalFunctionName ( );
    void PutEvalFunctionName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ResetFunctionName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetFunctionName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_EvalFunctionName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_EvalFunctionName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("6599d436-da0f-4072-a210-2bf994d50a49"))
_IAgVAStateCalcCustomFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetResetFunctionName,put=PutResetFunctionName))
    _bstr_t ResetFunctionName;
    __declspec(property(get=GetEvalFunctionName,put=PutEvalFunctionName))
    _bstr_t EvalFunctionName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetResetFunctionName ( );
    void PutResetFunctionName (
        _bstr_t pVal );
    _bstr_t GetEvalFunctionName ( );
    void PutEvalFunctionName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_ResetFunctionName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetFunctionName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_EvalFunctionName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_EvalFunctionName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("9c1fd4eb-a7ec-481f-b07e-d5cd4095cc96"))
IAgVAStateCalcScript : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcArguments))
    IAgVACalcObjectCollectionPtr CalcArguments;
    __declspec(property(get=GetInlineFunc,put=PutInlineFunc))
    _bstr_t InlineFunc;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;

    //
    // Wrapper methods for error-handling
    //

    IAgVACalcObjectCollectionPtr GetCalcArguments ( );
    _bstr_t GetInlineFunc ( );
    void PutInlineFunc (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcArguments (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_InlineFunc (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_InlineFunc (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("045c99e2-823d-4d6c-aef9-e314c0b70846"))
_IAgVAStateCalcScript : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcArguments))
    IAgVACalcObjectCollectionPtr CalcArguments;
    __declspec(property(get=GetInlineFunc,put=PutInlineFunc))
    _bstr_t InlineFunc;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    IAgVACalcObjectCollectionPtr GetCalcArguments ( );
    _bstr_t GetInlineFunc ( );
    void PutInlineFunc (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcArguments (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_InlineFunc (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_InlineFunc (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("4c208fe4-cbfa-47e2-92b5-ddd1aa87b4c0"))
IAgVAStateCalcCd : IUnknown
{};

struct __declspec(uuid("25960071-0216-4843-aacb-ac79c33f8eaf"))
_IAgVAStateCalcCd : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("20954749-b218-4885-a3de-40b4728b5b3b"))
IAgVAStateCalcCr : IUnknown
{};

struct __declspec(uuid("430a382d-3f6e-4ec7-91b4-bf5abf3d5b06"))
_IAgVAStateCalcCr : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("5af16c02-8cea-4b0c-981c-46b1d8e60912"))
IAgVAStateCalcDragArea : IUnknown
{};

struct __declspec(uuid("acdc3479-50d4-44c9-8dd8-1ef29a55fd46"))
_IAgVAStateCalcDragArea : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("6610d07e-5a3c-4e56-8834-98b9af33e54f"))
IAgVAStateCalcRadiationPressureArea : IUnknown
{};

struct __declspec(uuid("b09ab4d7-cb93-4ecb-8966-9b5867683754"))
_IAgVAStateCalcRadiationPressureArea : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("804689a3-0621-47fc-a8b6-165c68ed2534"))
IAgVAStateCalcRadiationPressureCoefficient : IUnknown
{};

struct __declspec(uuid("a88d6ee6-1321-46bb-8b2f-5698ddc4ac58"))
_IAgVAStateCalcRadiationPressureCoefficient : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("b921f894-6ef4-4c94-ab60-1ea209b54e22"))
IAgVAStateCalcSRPArea : IUnknown
{};

struct __declspec(uuid("8e1670d1-7b25-4b12-a174-9d9783363cf8"))
_IAgVAStateCalcSRPArea : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("324a6747-28a4-46e6-bd2b-7ba5e39d089e"))
IAgVAStateCalcCosOfVerticalFPA : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("2ac898e7-08b5-4e20-adfc-5142c32c66f5"))
_IAgVAStateCalcCosOfVerticalFPA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("92e89b8b-dc04-47d6-a1dc-0993517240bc"))
IAgVAStateCalcDec : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("7148839f-8212-45a6-98c1-2ab8ce7a6bc6"))
_IAgVAStateCalcDec : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("87ebf651-34b7-483e-bbb9-223bd7ae0238"))
IAgVAStateCalcFPA : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("d6aa4852-6048-4e8e-8ed8-51b68213f2b0"))
_IAgVAStateCalcFPA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("b3486ad9-b333-49e8-a2cb-8007038cb4cc"))
IAgVAStateCalcRMag : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetReferencePointName,put=PutReferencePointName))
    _bstr_t ReferencePointName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    _bstr_t GetReferencePointName ( );
    void PutReferencePointName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferencePointName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferencePointName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("c61c3d75-e7ec-4ee2-af36-ac57251e2c46"))
_IAgVAStateCalcRMag : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetReferencePointName,put=PutReferencePointName))
    _bstr_t ReferencePointName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    _bstr_t GetReferencePointName ( );
    void PutReferencePointName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferencePointName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferencePointName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("b7b3bce3-df1d-46db-be71-7f07227de03f"))
IAgVAStateCalcRA : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("18dba5ab-f280-44a8-8348-f3d76c72d25a"))
_IAgVAStateCalcRA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("6f306665-45c3-4606-b10c-5af9cbf555bc"))
IAgVAStateCalcVMag : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("8938abab-2150-4a29-be75-12bcc4445f76"))
_IAgVAStateCalcVMag : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("03b84f7c-19da-47f1-be46-0b28dd2c549e"))
IAgVAStateCalcVelAz : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("4ddeeded-ddd8-4ff4-b72e-24a256e9359b"))
_IAgVAStateCalcVelAz : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("0c928b55-ee4e-4ba3-93aa-25edf7734fe7"))
IAgVAStateCalcC3Energy : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("d5c73ef2-d864-40ce-b547-612c6c419a1a"))
_IAgVAStateCalcC3Energy : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVACalcObjectElem ElementType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACalcObjectElem GetElementType ( );
    void PutElementType (
        enum AgEVACalcObjectElem pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVACalcObjectElem * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVACalcObjectElem pVal ) = 0;
};

struct __declspec(uuid("c983231d-37a7-4fa9-b802-475c5c345f05"))
IAgVAStateCalcInAsympDec : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("0c184c96-5f67-4f9c-a0ed-7666a7732ee3"))
_IAgVAStateCalcInAsympDec : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("9a50579b-2e08-405b-8a10-ff1083fb50f6"))
IAgVAStateCalcInAsympRA : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("8a6de699-a1cc-4a1c-b329-40da100c465e"))
_IAgVAStateCalcInAsympRA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("fb87ad42-efd1-48fc-a978-276fb73a8eb1"))
IAgVAStateCalcInVelAzAtPeriapsis : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("4cece680-393d-4bfa-ba81-8871295c1e9a"))
_IAgVAStateCalcInVelAzAtPeriapsis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("54c55cf7-07bd-407d-b37d-b9063d5ce02a"))
IAgVAStateCalcOutAsympDec : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("7fe523a5-52e6-4fea-a809-b8b2314ca3b4"))
_IAgVAStateCalcOutAsympDec : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("23162c45-77a7-4184-aa2c-e5e910bcd404"))
IAgVAStateCalcOutAsympRA : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("07f4bf58-edec-4e71-8685-17c48fc41191"))
_IAgVAStateCalcOutAsympRA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("8402ec80-fc58-4670-9e9e-bf1430db7f36"))
IAgVAStateCalcOutVelAzAtPeriapsis : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("6bc19143-c340-42a4-826f-ee5b7884aa76"))
_IAgVAStateCalcOutVelAzAtPeriapsis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("b3ab8c57-482b-41ee-8de3-714657b81686"))
IAgVAStateCalcDuration : IUnknown
{};

struct __declspec(uuid("4f0cb5e9-c2ee-415f-a8c6-716c8506921e"))
_IAgVAStateCalcDuration : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("109bd9e6-4e99-4608-bab9-f8421de34b70"))
IAgVAStateCalcUserValue : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetVariableName,put=PutVariableName))
    _bstr_t VariableName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetVariableName ( );
    void PutVariableName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_VariableName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VariableName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("2ee19b65-d69d-452a-aca4-be92a8f2e5fe"))
_IAgVAStateCalcUserValue : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetVariableName,put=PutVariableName))
    _bstr_t VariableName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetVariableName ( );
    void PutVariableName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_VariableName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VariableName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("ef3a0d25-3b77-4bbc-b604-b5dc6f9d8460"))
IAgVAStateCalcCrdnAngle : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAngleName,put=PutAngleName))
    _bstr_t AngleName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetAngleName ( );
    void PutAngleName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AngleName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AngleName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("1411dc72-4525-4e84-99ff-4f58dc6d9f49"))
_IAgVAStateCalcCrdnAngle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetAngleName,put=PutAngleName))
    _bstr_t AngleName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetAngleName ( );
    void PutAngleName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_AngleName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AngleName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("7c8dc464-29d9-4506-9f8f-b9edf0597c5c"))
IAgVAStateCalcAngle : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetVector1Name,put=PutVector1Name))
    _bstr_t Vector1Name;
    __declspec(property(get=GetVector2Name,put=PutVector2Name))
    _bstr_t Vector2Name;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetVector1Name ( );
    void PutVector1Name (
        _bstr_t pVal );
    _bstr_t GetVector2Name ( );
    void PutVector2Name (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Vector1Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Vector1Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Vector2Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Vector2Name (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("e70d5131-3952-4187-b342-dba07d4e6a4c"))
_IAgVAStateCalcAngle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetVector1Name,put=PutVector1Name))
    _bstr_t Vector1Name;
    __declspec(property(get=GetVector2Name,put=PutVector2Name))
    _bstr_t Vector2Name;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetVector1Name ( );
    void PutVector1Name (
        _bstr_t pVal );
    _bstr_t GetVector2Name ( );
    void PutVector2Name (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_Vector1Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Vector1Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Vector2Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Vector2Name (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("10ebb2b0-d54d-41cb-9152-e00668a06489"))
IAgVAStateCalcDotProduct : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetVector1Name,put=PutVector1Name))
    _bstr_t Vector1Name;
    __declspec(property(get=GetVector2Name,put=PutVector2Name))
    _bstr_t Vector2Name;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetVector1Name ( );
    void PutVector1Name (
        _bstr_t pVal );
    _bstr_t GetVector2Name ( );
    void PutVector2Name (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Vector1Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Vector1Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Vector2Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Vector2Name (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("d89aca84-27ea-49bb-870a-b48a0dabe60f"))
_IAgVAStateCalcDotProduct : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetVector1Name,put=PutVector1Name))
    _bstr_t Vector1Name;
    __declspec(property(get=GetVector2Name,put=PutVector2Name))
    _bstr_t Vector2Name;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetVector1Name ( );
    void PutVector1Name (
        _bstr_t pVal );
    _bstr_t GetVector2Name ( );
    void PutVector2Name (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_Vector1Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Vector1Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Vector2Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Vector2Name (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("8dd476f5-dda3-4071-bc5a-bff83898de35"))
IAgVAStateCalcVectorDec : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;
    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );
    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("6172d547-d399-4691-8c23-02dfe29ff4ea"))
_IAgVAStateCalcVectorDec : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;
    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );
    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("499b8f30-00be-4a6d-bb32-c49d09ce0aef"))
IAgVAStateCalcVectorMag : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("aa34eddc-9dfe-402c-981f-779e6c23cd15"))
_IAgVAStateCalcVectorMag : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("e81b14a2-e3cf-4929-a1ca-88726dec4f21"))
IAgVAStateCalcVectorRA : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;
    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );
    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("94125546-0216-4f66-b29d-c7c773d96616"))
_IAgVAStateCalcVectorRA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordAxesName,put=PutCoordAxesName))
    _bstr_t CoordAxesName;
    __declspec(property(get=GetVectorName,put=PutVectorName))
    _bstr_t VectorName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordAxesName ( );
    void PutCoordAxesName (
        _bstr_t pVal );
    _bstr_t GetVectorName ( );
    void PutVectorName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VectorName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("760ebb5b-e859-4416-8229-07aff47d7841"))
IAgVAStateCalcOnePtAccess : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAberrationType,put=PutAberrationType))
    enum STKObjects::AgEAberrationType AberrationType;
    __declspec(property(get=GetBaseSelectionType))
    enum AgEVABaseSelection BaseSelectionType;
    __declspec(property(get=GetBaseSelection))
    STKObjects::IAgLinkToObjectPtr BaseSelection;
    __declspec(property(get=GetClockHost,put=PutClockHost))
    enum STKObjects::AgEIvClockHost ClockHost;
    __declspec(property(get=GetSignalSense,put=PutSignalSense))
    enum STKObjects::AgEIvTimeSense SignalSense;
    __declspec(property(get=GetTargetObject))
    STKObjects::IAgLinkToObjectPtr TargetObject;
    __declspec(property(get=GetTimeDelayConvergenceTolerance,put=PutTimeDelayConvergenceTolerance))
    double TimeDelayConvergenceTolerance;
    __declspec(property(get=GetUseLightTimeDelay,put=PutUseLightTimeDelay))
    VARIANT_BOOL UseLightTimeDelay;

    //
    // Wrapper methods for error-handling
    //

    enum STKObjects::AgEAberrationType GetAberrationType ( );
    void PutAberrationType (
        enum STKObjects::AgEAberrationType pVal );
    HRESULT SetBaseSelection (
        enum AgEVABaseSelection Selection );
    enum AgEVABaseSelection GetBaseSelectionType ( );
    STKObjects::IAgLinkToObjectPtr GetBaseSelection ( );
    enum STKObjects::AgEIvClockHost GetClockHost ( );
    void PutClockHost (
        enum STKObjects::AgEIvClockHost pVal );
    enum STKObjects::AgEIvTimeSense GetSignalSense ( );
    void PutSignalSense (
        enum STKObjects::AgEIvTimeSense pVal );
    STKObjects::IAgLinkToObjectPtr GetTargetObject ( );
    double GetTimeDelayConvergenceTolerance ( );
    void PutTimeDelayConvergenceTolerance (
        double pVal );
    VARIANT_BOOL GetUseLightTimeDelay ( );
    void PutUseLightTimeDelay (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AberrationType (
        /*[out,retval]*/ enum STKObjects::AgEAberrationType * pVal ) = 0;
      virtual HRESULT __stdcall put_AberrationType (
        /*[in]*/ enum STKObjects::AgEAberrationType pVal ) = 0;
      virtual HRESULT __stdcall raw_SetBaseSelection (
        /*[in]*/ enum AgEVABaseSelection Selection ) = 0;
      virtual HRESULT __stdcall get_BaseSelectionType (
        /*[out,retval]*/ enum AgEVABaseSelection * pVal ) = 0;
      virtual HRESULT __stdcall get_BaseSelection (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ClockHost (
        /*[out,retval]*/ enum STKObjects::AgEIvClockHost * pVal ) = 0;
      virtual HRESULT __stdcall put_ClockHost (
        /*[in]*/ enum STKObjects::AgEIvClockHost pVal ) = 0;
      virtual HRESULT __stdcall get_SignalSense (
        /*[out,retval]*/ enum STKObjects::AgEIvTimeSense * pVal ) = 0;
      virtual HRESULT __stdcall put_SignalSense (
        /*[in]*/ enum STKObjects::AgEIvTimeSense pVal ) = 0;
      virtual HRESULT __stdcall get_TargetObject (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_TimeDelayConvergenceTolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimeDelayConvergenceTolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseLightTimeDelay (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseLightTimeDelay (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("98e4d34c-0994-43e1-89f3-a260f02342dd"))
_IAgVAStateCalcOnePtAccess : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTimeDelayConvergenceTolerance,put=PutTimeDelayConvergenceTolerance))
    double TimeDelayConvergenceTolerance;
    __declspec(property(get=GetUseLightTimeDelay,put=PutUseLightTimeDelay))
    VARIANT_BOOL UseLightTimeDelay;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetAberrationType,put=PutAberrationType))
    enum STKObjects::AgEAberrationType AberrationType;
    __declspec(property(get=GetBaseSelectionType))
    enum AgEVABaseSelection BaseSelectionType;
    __declspec(property(get=GetBaseSelection))
    STKObjects::IAgLinkToObjectPtr BaseSelection;
    __declspec(property(get=GetClockHost,put=PutClockHost))
    enum STKObjects::AgEIvClockHost ClockHost;
    __declspec(property(get=GetSignalSense,put=PutSignalSense))
    enum STKObjects::AgEIvTimeSense SignalSense;
    __declspec(property(get=GetTargetObject))
    STKObjects::IAgLinkToObjectPtr TargetObject;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum STKObjects::AgEAberrationType GetAberrationType ( );
    void PutAberrationType (
        enum STKObjects::AgEAberrationType pVal );
    HRESULT SetBaseSelection (
        enum AgEVABaseSelection Selection );
    enum AgEVABaseSelection GetBaseSelectionType ( );
    STKObjects::IAgLinkToObjectPtr GetBaseSelection ( );
    enum STKObjects::AgEIvClockHost GetClockHost ( );
    void PutClockHost (
        enum STKObjects::AgEIvClockHost pVal );
    enum STKObjects::AgEIvTimeSense GetSignalSense ( );
    void PutSignalSense (
        enum STKObjects::AgEIvTimeSense pVal );
    STKObjects::IAgLinkToObjectPtr GetTargetObject ( );
    double GetTimeDelayConvergenceTolerance ( );
    void PutTimeDelayConvergenceTolerance (
        double pVal );
    VARIANT_BOOL GetUseLightTimeDelay ( );
    void PutUseLightTimeDelay (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_AberrationType (
        /*[out,retval]*/ enum STKObjects::AgEAberrationType * pVal ) = 0;
      virtual HRESULT __stdcall put_AberrationType (
        /*[in]*/ enum STKObjects::AgEAberrationType pVal ) = 0;
      virtual HRESULT __stdcall raw_SetBaseSelection (
        /*[in]*/ enum AgEVABaseSelection Selection ) = 0;
      virtual HRESULT __stdcall get_BaseSelectionType (
        /*[out,retval]*/ enum AgEVABaseSelection * pVal ) = 0;
      virtual HRESULT __stdcall get_BaseSelection (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ClockHost (
        /*[out,retval]*/ enum STKObjects::AgEIvClockHost * pVal ) = 0;
      virtual HRESULT __stdcall put_ClockHost (
        /*[in]*/ enum STKObjects::AgEIvClockHost pVal ) = 0;
      virtual HRESULT __stdcall get_SignalSense (
        /*[out,retval]*/ enum STKObjects::AgEIvTimeSense * pVal ) = 0;
      virtual HRESULT __stdcall put_SignalSense (
        /*[in]*/ enum STKObjects::AgEIvTimeSense pVal ) = 0;
      virtual HRESULT __stdcall get_TargetObject (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_TimeDelayConvergenceTolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimeDelayConvergenceTolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseLightTimeDelay (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseLightTimeDelay (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("9b178952-fdec-4cd9-93ba-def95086ed1f"))
IAgVAStateCalcDifferenceAcrossSegmentsOtherSat : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;
    __declspec(property(get=GetDifferenceOrder,put=PutDifferenceOrder))
    enum AgEVASegmentDifferenceOrder DifferenceOrder;
    __declspec(property(get=GetReferenceSat))
    STKObjects::IAgLinkToObjectPtr ReferenceSat;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );
    enum AgEVASegmentDifferenceOrder GetDifferenceOrder ( );
    void PutDifferenceOrder (
        enum AgEVASegmentDifferenceOrder pVal );
    STKObjects::IAgLinkToObjectPtr GetReferenceSat ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
      virtual HRESULT __stdcall get_DifferenceOrder (
        /*[out,retval]*/ enum AgEVASegmentDifferenceOrder * pVal ) = 0;
      virtual HRESULT __stdcall put_DifferenceOrder (
        /*[in]*/ enum AgEVASegmentDifferenceOrder pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSat (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("74678160-840c-44cf-ae24-7d4bc4bed7b0"))
_IAgVAStateCalcDifferenceAcrossSegmentsOtherSat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;
    __declspec(property(get=GetDifferenceOrder,put=PutDifferenceOrder))
    enum AgEVASegmentDifferenceOrder DifferenceOrder;
    __declspec(property(get=GetReferenceSat))
    STKObjects::IAgLinkToObjectPtr ReferenceSat;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );
    enum AgEVASegmentDifferenceOrder GetDifferenceOrder ( );
    void PutDifferenceOrder (
        enum AgEVASegmentDifferenceOrder pVal );
    STKObjects::IAgLinkToObjectPtr GetReferenceSat ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
      virtual HRESULT __stdcall get_DifferenceOrder (
        /*[out,retval]*/ enum AgEVASegmentDifferenceOrder * pVal ) = 0;
      virtual HRESULT __stdcall put_DifferenceOrder (
        /*[in]*/ enum AgEVASegmentDifferenceOrder pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSat (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("f8a10e4b-f373-4ec2-9802-caf32ab91c97"))
IAgVAStateCalcValueAtSegmentOtherSat : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;
    __declspec(property(get=GetReferenceSat))
    STKObjects::IAgLinkToObjectPtr ReferenceSat;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );
    STKObjects::IAgLinkToObjectPtr GetReferenceSat ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSat (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("5345c940-0a05-4271-92ba-dddd0183f95e"))
_IAgVAStateCalcValueAtSegmentOtherSat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetOtherSegmentName,put=PutOtherSegmentName))
    _bstr_t OtherSegmentName;
    __declspec(property(get=GetSegmentStateToUse,put=PutSegmentStateToUse))
    enum AgEVASegmentState SegmentStateToUse;
    __declspec(property(get=GetReferenceSat))
    STKObjects::IAgLinkToObjectPtr ReferenceSat;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    _bstr_t GetOtherSegmentName ( );
    void PutOtherSegmentName (
        _bstr_t pVal );
    enum AgEVASegmentState GetSegmentStateToUse ( );
    void PutSegmentStateToUse (
        enum AgEVASegmentState pVal );
    STKObjects::IAgLinkToObjectPtr GetReferenceSat ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OtherSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OtherSegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentStateToUse (
        /*[out,retval]*/ enum AgEVASegmentState * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentStateToUse (
        /*[in]*/ enum AgEVASegmentState pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceSat (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
};

struct __declspec(uuid("f8453b94-3cde-4dd6-82c9-aa2ffe49eda3"))
IAgVAStateCalcRARate : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("a0ebc1e7-abaf-4f39-8a3c-0a137677a64b"))
_IAgVAStateCalcRARate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("63ef9d31-d2a1-42d8-b7c3-dc81a979c7dd"))
IAgVAStateCalcDecRate : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("253d1935-5f16-4f93-98f8-aa25f0127a6d"))
_IAgVAStateCalcDecRate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("cc125a79-7f0b-4610-bb58-113b3223e4cd"))
IAgVAStateCalcGravitationalParameter : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetGravSource,put=PutGravSource))
    enum AgEVAGravitationalParameterSource GravSource;
    __declspec(property(get=GetGravityFilename,put=PutGravityFilename))
    _bstr_t GravityFilename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAGravitationalParameterSource GetGravSource ( );
    void PutGravSource (
        enum AgEVAGravitationalParameterSource pVal );
    _bstr_t GetGravityFilename ( );
    void PutGravityFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_GravSource (
        /*[out,retval]*/ enum AgEVAGravitationalParameterSource * pVal ) = 0;
      virtual HRESULT __stdcall put_GravSource (
        /*[in]*/ enum AgEVAGravitationalParameterSource pVal ) = 0;
      virtual HRESULT __stdcall get_GravityFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_GravityFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("eb61e1eb-c1ab-47ed-b1f0-3e8e5179638e"))
_IAgVAStateCalcGravitationalParameter : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetGravSource,put=PutGravSource))
    enum AgEVAGravitationalParameterSource GravSource;
    __declspec(property(get=GetGravityFilename,put=PutGravityFilename))
    _bstr_t GravityFilename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAGravitationalParameterSource GetGravSource ( );
    void PutGravSource (
        enum AgEVAGravitationalParameterSource pVal );
    _bstr_t GetGravityFilename ( );
    void PutGravityFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_GravSource (
        /*[out,retval]*/ enum AgEVAGravitationalParameterSource * pVal ) = 0;
      virtual HRESULT __stdcall put_GravSource (
        /*[in]*/ enum AgEVAGravitationalParameterSource pVal ) = 0;
      virtual HRESULT __stdcall get_GravityFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_GravityFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("138f43cb-66cf-493b-94d6-3ea1ff216b12"))
IAgVAStateCalcReferenceRadius : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceRadiusSource,put=PutReferenceRadiusSource))
    enum AgEVAReferenceRadiusSource ReferenceRadiusSource;
    __declspec(property(get=GetGravityFilename,put=PutGravityFilename))
    _bstr_t GravityFilename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAReferenceRadiusSource GetReferenceRadiusSource ( );
    void PutReferenceRadiusSource (
        enum AgEVAReferenceRadiusSource pVal );
    _bstr_t GetGravityFilename ( );
    void PutGravityFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceRadiusSource (
        /*[out,retval]*/ enum AgEVAReferenceRadiusSource * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceRadiusSource (
        /*[in]*/ enum AgEVAReferenceRadiusSource pVal ) = 0;
      virtual HRESULT __stdcall get_GravityFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_GravityFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("d670bb1f-996e-4efd-8d93-75662503e14b"))
_IAgVAStateCalcReferenceRadius : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetReferenceRadiusSource,put=PutReferenceRadiusSource))
    enum AgEVAReferenceRadiusSource ReferenceRadiusSource;
    __declspec(property(get=GetGravityFilename,put=PutGravityFilename))
    _bstr_t GravityFilename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVAReferenceRadiusSource GetReferenceRadiusSource ( );
    void PutReferenceRadiusSource (
        enum AgEVAReferenceRadiusSource pVal );
    _bstr_t GetGravityFilename ( );
    void PutGravityFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceRadiusSource (
        /*[out,retval]*/ enum AgEVAReferenceRadiusSource * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceRadiusSource (
        /*[in]*/ enum AgEVAReferenceRadiusSource pVal ) = 0;
      virtual HRESULT __stdcall get_GravityFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_GravityFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("58ca0c2b-03b5-4c6b-b9a1-b908fea4aaeb"))
IAgVAStateCalcGravCoeff : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetGravityFilename,put=PutGravityFilename))
    _bstr_t GravityFilename;
    __declspec(property(get=GetCoefficientType,put=PutCoefficientType))
    enum AgEVAGravCoeffCoefficientType CoefficientType;
    __declspec(property(get=GetDegree,put=PutDegree))
    int Degree;
    __declspec(property(get=GetOrder,put=PutOrder))
    int Order;
    __declspec(property(get=GetNormalizationType,put=PutNormalizationType))
    enum AgEVAGravCoeffNormalizationType NormalizationType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    _bstr_t GetGravityFilename ( );
    void PutGravityFilename (
        _bstr_t pVal );
    enum AgEVAGravCoeffCoefficientType GetCoefficientType ( );
    void PutCoefficientType (
        enum AgEVAGravCoeffCoefficientType pVal );
    int GetDegree ( );
    void PutDegree (
        int pVal );
    int GetOrder ( );
    void PutOrder (
        int pVal );
    enum AgEVAGravCoeffNormalizationType GetNormalizationType ( );
    void PutNormalizationType (
        enum AgEVAGravCoeffNormalizationType pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_GravityFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_GravityFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CoefficientType (
        /*[out,retval]*/ enum AgEVAGravCoeffCoefficientType * pVal ) = 0;
      virtual HRESULT __stdcall put_CoefficientType (
        /*[in]*/ enum AgEVAGravCoeffCoefficientType pVal ) = 0;
      virtual HRESULT __stdcall get_Degree (
        /*[out,retval]*/ int * pVal ) = 0;
      virtual HRESULT __stdcall put_Degree (
        /*[in]*/ int pVal ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ int * pVal ) = 0;
      virtual HRESULT __stdcall put_Order (
        /*[in]*/ int pVal ) = 0;
      virtual HRESULT __stdcall get_NormalizationType (
        /*[out,retval]*/ enum AgEVAGravCoeffNormalizationType * pVal ) = 0;
      virtual HRESULT __stdcall put_NormalizationType (
        /*[in]*/ enum AgEVAGravCoeffNormalizationType pVal ) = 0;
};

struct __declspec(uuid("9a33981e-7e72-4130-9320-41100f3fa15e"))
_IAgVAStateCalcGravCoeff : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetGravityFilename,put=PutGravityFilename))
    _bstr_t GravityFilename;
    __declspec(property(get=GetCoefficientType,put=PutCoefficientType))
    enum AgEVAGravCoeffCoefficientType CoefficientType;
    __declspec(property(get=GetDegree,put=PutDegree))
    int Degree;
    __declspec(property(get=GetOrder,put=PutOrder))
    int Order;
    __declspec(property(get=GetNormalizationType,put=PutNormalizationType))
    enum AgEVAGravCoeffNormalizationType NormalizationType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    _bstr_t GetGravityFilename ( );
    void PutGravityFilename (
        _bstr_t pVal );
    enum AgEVAGravCoeffCoefficientType GetCoefficientType ( );
    void PutCoefficientType (
        enum AgEVAGravCoeffCoefficientType pVal );
    int GetDegree ( );
    void PutDegree (
        int pVal );
    int GetOrder ( );
    void PutOrder (
        int pVal );
    enum AgEVAGravCoeffNormalizationType GetNormalizationType ( );
    void PutNormalizationType (
        enum AgEVAGravCoeffNormalizationType pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_GravityFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_GravityFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CoefficientType (
        /*[out,retval]*/ enum AgEVAGravCoeffCoefficientType * pVal ) = 0;
      virtual HRESULT __stdcall put_CoefficientType (
        /*[in]*/ enum AgEVAGravCoeffCoefficientType pVal ) = 0;
      virtual HRESULT __stdcall get_Degree (
        /*[out,retval]*/ int * pVal ) = 0;
      virtual HRESULT __stdcall put_Degree (
        /*[in]*/ int pVal ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ int * pVal ) = 0;
      virtual HRESULT __stdcall put_Order (
        /*[in]*/ int pVal ) = 0;
      virtual HRESULT __stdcall get_NormalizationType (
        /*[out,retval]*/ enum AgEVAGravCoeffNormalizationType * pVal ) = 0;
      virtual HRESULT __stdcall put_NormalizationType (
        /*[in]*/ enum AgEVAGravCoeffNormalizationType pVal ) = 0;
};

struct __declspec(uuid("eb244dab-f781-423b-9770-aef5af8d73d4"))
IAgVAStateCalcSpeedOfLight : IUnknown
{};

struct __declspec(uuid("d2ef9649-178e-4498-a9dc-9389531df710"))
_IAgVAStateCalcSpeedOfLight : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("4ce6883f-c225-4383-85f1-cd7cadfb580d"))
IAgVAStateCalcScalar : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetScalarName,put=PutScalarName))
    _bstr_t ScalarName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetScalarName ( );
    void PutScalarName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ScalarName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalarName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("3d886e04-91f0-43f3-b571-0cf0d22169c5"))
_IAgVAStateCalcScalar : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetScalarName,put=PutScalarName))
    _bstr_t ScalarName;
    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    _bstr_t GetScalarName ( );
    void PutScalarName (
        _bstr_t pVal );
    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ScalarName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalarName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("d9631669-5685-4ae7-a731-1cddcfb97c29"))
IAgVAStateCalcApparentSolarTime : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("52e72520-8a95-492c-93e3-8f1ba34fe824"))
_IAgVAStateCalcApparentSolarTime : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("2add3fa9-d746-40e0-ad14-005d4eed493c"))
IAgVAStateCalcEarthMeanSolarTime : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("120dd377-b92d-42b7-bae8-71c26ef707a3"))
_IAgVAStateCalcEarthMeanSolarTime : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f9b390d9-0320-4f24-9866-7e237ea97f41"))
IAgVAStateCalcEarthMeanLocTimeAN : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("9d2bcfdf-8786-451b-9bbc-932fd9e5f522"))
_IAgVAStateCalcEarthMeanLocTimeAN : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
};

enum AgEVACbGravityModel
{
    eVACbGravityModelZonalsToJ4 = 0,
    eVACbGravityModelEarthSimple = 1,
    eVACbGravityModelWGS84 = 2,
    eVACbGravityModelEGM96 = 3,
    eVACbGravityModelGEMT1 = 4,
    eVACbGravityModelJGM2 = 5,
    eVACbGravityModelJGM3 = 6,
    eVACbGravityModelWSG84EGM96 = 7,
    eVACbGravityModelWGS84Old = 8,
    eVACbGravityModelGLGM2 = 9,
    eVACbGravityModelLP165P = 10,
    eVACbGravityModelIcarus1987 = 11,
    eVACbGravityModelMGNP180U = 12,
    eVACbGravityModelGMM1 = 13,
    eVACbGravityModelGMM2B = 14,
    eVACbGravityModelMars50c = 15,
    eVACbGravityModelJUP230 = 16,
    eVACbGravityModelAstron2004 = 17,
    eVACbGravityModelAstronAstro1991 = 18,
    eVACbGravityModelIcarus2001 = 19,
    eVACbGravityModelScience1998 = 20,
    eVACbGravityModelNature1996 = 21,
    eVACbGravityModelJGeoRes2001 = 22,
    eVACbGravityModelGGM01C = 23,
    eVACbGravityModelGGM02C = 24,
    eVACbGravityModelWGS72ZonalsToJ4 = 25,
    eVACbGravityModelLP100J = 26,
    eVACbGravityModelLP100K = 27,
    eVACbGravityModelLP150Q = 28,
    eVACbGravityModelLP75G = 29
};

enum AgEVACbShape
{
    eVACbShapeTriaxialEllipsoid = 0,
    eVACbShapeOblateSpheroid = 1,
    eVACbShapeSphere = 2
};

enum AgEVACbAttitude
{
    eVACbAttitudeIAU1994 = 0,
    eVACbAttitudeRotationCoefficientsFile = 1
};

enum AgEVACbEphemeris
{
    eVACbEphemerisAnalyticOrbit = 0,
    eVACbEphemerisFile = 1,
    eVACbEphemerisJPLDE = 2,
    eVACbEphemerisJPLSPICE = 3,
    eVACbEphemerisPlanetary = 4
};

struct __declspec(uuid("cba07fc9-67f8-4f09-9315-6bbac72a3008"))
IAgVACbGravityModel : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetGravitationalParam,put=PutGravitationalParam))
    double GravitationalParam;
    __declspec(property(get=GetRefDistance,put=PutRefDistance))
    double RefDistance;
    __declspec(property(get=GetJ2,put=PutJ2))
    double J2;
    __declspec(property(get=GetJ3,put=PutJ3))
    double J3;
    __declspec(property(get=GetJ4,put=PutJ4))
    double J4;

    //
    // Wrapper methods for error-handling
    //

    double GetGravitationalParam ( );
    void PutGravitationalParam (
        double pVal );
    double GetRefDistance ( );
    void PutRefDistance (
        double pVal );
    double GetJ2 ( );
    void PutJ2 (
        double pVal );
    double GetJ3 ( );
    void PutJ3 (
        double pVal );
    double GetJ4 ( );
    void PutJ4 (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GravitationalParam (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_GravitationalParam (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RefDistance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RefDistance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_J2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_J2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_J3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_J3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_J4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_J4 (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("f54d80f1-7aef-4c27-9665-7efa3f511626"))
IAgVACbShape : IUnknown
{};

struct __declspec(uuid("7e8e391c-bfa8-4983-98b7-5269c2c630ad"))
IAgVACbAttitude : IUnknown
{};

struct __declspec(uuid("60596b25-6791-4a04-80bf-404aaf0e4ec7"))
IAgVACbEphemeris : IUnknown
{};

struct __declspec(uuid("99cc0c4f-3226-410d-8a7b-4f24f746a90b"))
_IAgVACbGravityModel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGravitationalParam,put=PutGravitationalParam))
    double GravitationalParam;
    __declspec(property(get=GetRefDistance,put=PutRefDistance))
    double RefDistance;
    __declspec(property(get=GetJ2,put=PutJ2))
    double J2;
    __declspec(property(get=GetJ3,put=PutJ3))
    double J3;
    __declspec(property(get=GetJ4,put=PutJ4))
    double J4;

    //
    // Wrapper methods for error-handling
    //

    double GetGravitationalParam ( );
    void PutGravitationalParam (
        double pVal );
    double GetRefDistance ( );
    void PutRefDistance (
        double pVal );
    double GetJ2 ( );
    void PutJ2 (
        double pVal );
    double GetJ3 ( );
    void PutJ3 (
        double pVal );
    double GetJ4 ( );
    void PutJ4 (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GravitationalParam (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_GravitationalParam (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RefDistance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RefDistance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_J2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_J2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_J3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_J3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_J4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_J4 (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("617f0551-de91-4bde-ac00-297191bdca2d"))
IAgVACbShapeSphere : IAgVACbShape
{
    //
    // Property data
    //

    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;

    //
    // Wrapper methods for error-handling
    //

    double GetRadius ( );
    void PutRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("88a0e1fa-f1e5-48d3-8131-f5121dedd2df"))
_IAgVACbShapeSphere : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;

    //
    // Wrapper methods for error-handling
    //

    double GetRadius ( );
    void PutRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("00ed27e0-bddf-4cf2-9229-45e16934fef0"))
IAgVACbShapeOblateSpheroid : IAgVACbShape
{
    //
    // Property data
    //

    __declspec(property(get=GetMinRadius,put=PutMinRadius))
    double MinRadius;
    __declspec(property(get=GetMaxRadius,put=PutMaxRadius))
    double MaxRadius;
    __declspec(property(get=GetFlatteningCoefficient))
    double FlatteningCoefficient;

    //
    // Wrapper methods for error-handling
    //

    double GetMinRadius ( );
    void PutMinRadius (
        double pVal );
    double GetMaxRadius ( );
    void PutMaxRadius (
        double pVal );
    double GetFlatteningCoefficient ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MinRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinRadius (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRadius (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_FlatteningCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
};

struct __declspec(uuid("754dd46c-99db-4e96-8475-6a3de5d7f210"))
_IAgVACbShapeOblateSpheroid : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMinRadius,put=PutMinRadius))
    double MinRadius;
    __declspec(property(get=GetMaxRadius,put=PutMaxRadius))
    double MaxRadius;
    __declspec(property(get=GetFlatteningCoefficient))
    double FlatteningCoefficient;

    //
    // Wrapper methods for error-handling
    //

    double GetMinRadius ( );
    void PutMinRadius (
        double pVal );
    double GetMaxRadius ( );
    void PutMaxRadius (
        double pVal );
    double GetFlatteningCoefficient ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MinRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinRadius (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRadius (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_FlatteningCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
};

struct __declspec(uuid("e2f5cc4c-fbf6-4d67-beeb-28b2c72bba01"))
IAgVACbShapeTriaxialEllipsoid : IAgVACbShape
{
    //
    // Property data
    //

    __declspec(property(get=GetSemiMajorAxis,put=PutSemiMajorAxis))
    double SemiMajorAxis;
    __declspec(property(get=GetSemiMidAxis,put=PutSemiMidAxis))
    double SemiMidAxis;
    __declspec(property(get=GetSemiMinorAxis,put=PutSemiMinorAxis))
    double SemiMinorAxis;

    //
    // Wrapper methods for error-handling
    //

    double GetSemiMajorAxis ( );
    void PutSemiMajorAxis (
        double pVal );
    double GetSemiMidAxis ( );
    void PutSemiMidAxis (
        double pVal );
    double GetSemiMinorAxis ( );
    void PutSemiMinorAxis (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SemiMajorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemiMidAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMidAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemiMinorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMinorAxis (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("e76822ef-2fe8-4c0e-8f56-cb09d912dd42"))
_IAgVACbShapeTriaxialEllipsoid : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSemiMajorAxis,put=PutSemiMajorAxis))
    double SemiMajorAxis;
    __declspec(property(get=GetSemiMidAxis,put=PutSemiMidAxis))
    double SemiMidAxis;
    __declspec(property(get=GetSemiMinorAxis,put=PutSemiMinorAxis))
    double SemiMinorAxis;

    //
    // Wrapper methods for error-handling
    //

    double GetSemiMajorAxis ( );
    void PutSemiMajorAxis (
        double pVal );
    double GetSemiMidAxis ( );
    void PutSemiMidAxis (
        double pVal );
    double GetSemiMinorAxis ( );
    void PutSemiMinorAxis (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SemiMajorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemiMidAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMidAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemiMinorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMinorAxis (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("6bc9c580-b027-40e1-807c-ca9b5ef4f35c"))
IAgVACbAttitudeRotationCoefficientsFile : IAgVACbAttitude
{
    //
    // Property data
    //

    __declspec(property(get=GetFilename,put=PutFilename))
    _bstr_t Filename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFilename ( );
    void PutFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Filename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Filename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("9b61edd4-a121-441e-aa77-a49547ab1575"))
_IAgVACbAttitudeRotationCoefficientsFile : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFilename,put=PutFilename))
    _bstr_t Filename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFilename ( );
    void PutFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Filename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Filename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("db1b826e-fec8-48ff-96e8-e43fa6100dbe"))
IAgVACbAttitudeIAU1994 : IAgVACbAttitude
{
    //
    // Property data
    //

    __declspec(property(get=GetRightAscension,put=PutRightAscension))
    _variant_t RightAscension;
    __declspec(property(get=GetDeclination,put=PutDeclination))
    _variant_t Declination;
    __declspec(property(get=GetRightAscensionRate,put=PutRightAscensionRate))
    double RightAscensionRate;
    __declspec(property(get=GetDeclinationRate,put=PutDeclinationRate))
    double DeclinationRate;
    __declspec(property(get=GetRotationOffset,put=PutRotationOffset))
    _variant_t RotationOffset;
    __declspec(property(get=GetRotationRate,put=PutRotationRate))
    double RotationRate;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetRightAscension ( );
    void PutRightAscension (
        const _variant_t & pVal );
    _variant_t GetDeclination ( );
    void PutDeclination (
        const _variant_t & pVal );
    double GetRightAscensionRate ( );
    void PutRightAscensionRate (
        double pVal );
    double GetDeclinationRate ( );
    void PutDeclinationRate (
        double pVal );
    _variant_t GetRotationOffset ( );
    void PutRotationOffset (
        const _variant_t & pVal );
    double GetRotationRate ( );
    void PutRotationRate (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RightAscension (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RightAscension (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Declination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Declination (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RightAscensionRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RightAscensionRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DeclinationRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DeclinationRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RotationOffset (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RotationOffset (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RotationRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RotationRate (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("26ee77f2-4482-4164-9e35-fde56204ed24"))
_IAgVACbAttitudeIAU1994 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRightAscension,put=PutRightAscension))
    _variant_t RightAscension;
    __declspec(property(get=GetDeclination,put=PutDeclination))
    _variant_t Declination;
    __declspec(property(get=GetRightAscensionRate,put=PutRightAscensionRate))
    double RightAscensionRate;
    __declspec(property(get=GetDeclinationRate,put=PutDeclinationRate))
    double DeclinationRate;
    __declspec(property(get=GetRotationOffset,put=PutRotationOffset))
    _variant_t RotationOffset;
    __declspec(property(get=GetRotationRate,put=PutRotationRate))
    double RotationRate;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetRightAscension ( );
    void PutRightAscension (
        const _variant_t & pVal );
    _variant_t GetDeclination ( );
    void PutDeclination (
        const _variant_t & pVal );
    double GetRightAscensionRate ( );
    void PutRightAscensionRate (
        double pVal );
    double GetDeclinationRate ( );
    void PutDeclinationRate (
        double pVal );
    _variant_t GetRotationOffset ( );
    void PutRotationOffset (
        const _variant_t & pVal );
    double GetRotationRate ( );
    void PutRotationRate (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RightAscension (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RightAscension (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Declination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Declination (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RightAscensionRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RightAscensionRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DeclinationRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DeclinationRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RotationOffset (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RotationOffset (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RotationRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RotationRate (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("6681f9f0-a7bf-4779-a40a-0194d56fc844"))
IAgVACbEphemerisAnalyticOrbit : IAgVACbEphemeris
{
    //
    // Property data
    //

    __declspec(property(get=GetEpoch,put=PutEpoch))
    double Epoch;
    __declspec(property(get=GetSemiMajorAxis,put=PutSemiMajorAxis))
    double SemiMajorAxis;
    __declspec(property(get=GetSemiMajorAxisRate,put=PutSemiMajorAxisRate))
    double SemiMajorAxisRate;
    __declspec(property(get=GetEccentricity,put=PutEccentricity))
    double Eccentricity;
    __declspec(property(get=GetEccentricityRate,put=PutEccentricityRate))
    double EccentricityRate;
    __declspec(property(get=GetInclination,put=PutInclination))
    _variant_t Inclination;
    __declspec(property(get=GetInclinationRate,put=PutInclinationRate))
    double InclinationRate;
    __declspec(property(get=GetRAAN,put=PutRAAN))
    _variant_t RAAN;
    __declspec(property(get=GetRAANRate,put=PutRAANRate))
    double RAANRate;
    __declspec(property(get=GetArgOfPeriapsis,put=PutArgOfPeriapsis))
    _variant_t ArgOfPeriapsis;
    __declspec(property(get=GetArgOfPeriapsisRate,put=PutArgOfPeriapsisRate))
    double ArgOfPeriapsisRate;
    __declspec(property(get=GetMeanLongitude,put=PutMeanLongitude))
    _variant_t MeanLongitude;
    __declspec(property(get=GetMeanLongitudeRate,put=PutMeanLongitudeRate))
    double MeanLongitudeRate;

    //
    // Wrapper methods for error-handling
    //

    double GetEpoch ( );
    void PutEpoch (
        double pVal );
    double GetSemiMajorAxis ( );
    void PutSemiMajorAxis (
        double pVal );
    double GetSemiMajorAxisRate ( );
    void PutSemiMajorAxisRate (
        double pVal );
    double GetEccentricity ( );
    void PutEccentricity (
        double pVal );
    double GetEccentricityRate ( );
    void PutEccentricityRate (
        double pVal );
    _variant_t GetInclination ( );
    void PutInclination (
        const _variant_t & pVal );
    double GetInclinationRate ( );
    void PutInclinationRate (
        double pVal );
    _variant_t GetRAAN ( );
    void PutRAAN (
        const _variant_t & pVal );
    double GetRAANRate ( );
    void PutRAANRate (
        double pVal );
    _variant_t GetArgOfPeriapsis ( );
    void PutArgOfPeriapsis (
        const _variant_t & pVal );
    double GetArgOfPeriapsisRate ( );
    void PutArgOfPeriapsisRate (
        double pVal );
    _variant_t GetMeanLongitude ( );
    void PutMeanLongitude (
        const _variant_t & pVal );
    double GetMeanLongitudeRate ( );
    void PutMeanLongitudeRate (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Epoch (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Epoch (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemiMajorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemiMajorAxisRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxisRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Eccentricity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Eccentricity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EccentricityRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_EccentricityRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inclination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Inclination (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_InclinationRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InclinationRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RAAN (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAAN (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RAANRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RAANRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfPeriapsisRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfPeriapsisRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MeanLongitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanLongitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_MeanLongitudeRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanLongitudeRate (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("56bf5ce8-b216-4ccc-a66e-f087a40b9939"))
_IAgVACbEphemerisAnalyticOrbit : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEpoch,put=PutEpoch))
    double Epoch;
    __declspec(property(get=GetSemiMajorAxis,put=PutSemiMajorAxis))
    double SemiMajorAxis;
    __declspec(property(get=GetSemiMajorAxisRate,put=PutSemiMajorAxisRate))
    double SemiMajorAxisRate;
    __declspec(property(get=GetEccentricity,put=PutEccentricity))
    double Eccentricity;
    __declspec(property(get=GetEccentricityRate,put=PutEccentricityRate))
    double EccentricityRate;
    __declspec(property(get=GetInclination,put=PutInclination))
    _variant_t Inclination;
    __declspec(property(get=GetInclinationRate,put=PutInclinationRate))
    double InclinationRate;
    __declspec(property(get=GetRAAN,put=PutRAAN))
    _variant_t RAAN;
    __declspec(property(get=GetRAANRate,put=PutRAANRate))
    double RAANRate;
    __declspec(property(get=GetArgOfPeriapsis,put=PutArgOfPeriapsis))
    _variant_t ArgOfPeriapsis;
    __declspec(property(get=GetArgOfPeriapsisRate,put=PutArgOfPeriapsisRate))
    double ArgOfPeriapsisRate;
    __declspec(property(get=GetMeanLongitude,put=PutMeanLongitude))
    _variant_t MeanLongitude;
    __declspec(property(get=GetMeanLongitudeRate,put=PutMeanLongitudeRate))
    double MeanLongitudeRate;

    //
    // Wrapper methods for error-handling
    //

    double GetEpoch ( );
    void PutEpoch (
        double pVal );
    double GetSemiMajorAxis ( );
    void PutSemiMajorAxis (
        double pVal );
    double GetSemiMajorAxisRate ( );
    void PutSemiMajorAxisRate (
        double pVal );
    double GetEccentricity ( );
    void PutEccentricity (
        double pVal );
    double GetEccentricityRate ( );
    void PutEccentricityRate (
        double pVal );
    _variant_t GetInclination ( );
    void PutInclination (
        const _variant_t & pVal );
    double GetInclinationRate ( );
    void PutInclinationRate (
        double pVal );
    _variant_t GetRAAN ( );
    void PutRAAN (
        const _variant_t & pVal );
    double GetRAANRate ( );
    void PutRAANRate (
        double pVal );
    _variant_t GetArgOfPeriapsis ( );
    void PutArgOfPeriapsis (
        const _variant_t & pVal );
    double GetArgOfPeriapsisRate ( );
    void PutArgOfPeriapsisRate (
        double pVal );
    _variant_t GetMeanLongitude ( );
    void PutMeanLongitude (
        const _variant_t & pVal );
    double GetMeanLongitudeRate ( );
    void PutMeanLongitudeRate (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Epoch (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Epoch (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemiMajorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemiMajorAxisRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxisRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Eccentricity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Eccentricity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EccentricityRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_EccentricityRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inclination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Inclination (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_InclinationRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InclinationRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RAAN (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAAN (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RAANRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RAANRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfPeriapsisRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfPeriapsisRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MeanLongitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanLongitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_MeanLongitudeRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanLongitudeRate (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("c0b1a5df-d426-4f99-90e5-33bc2af733f6"))
IAgVACbEphemerisJPLSpice : IAgVACbEphemeris
{
    //
    // Property data
    //

    __declspec(property(get=GetJPLSpiceId,put=PutJPLSpiceId))
    _bstr_t JPLSpiceId;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetJPLSpiceId ( );
    void PutJPLSpiceId (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_JPLSpiceId (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_JPLSpiceId (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("276d939e-61a0-4a7b-a1c1-144d3ab2aedc"))
_IAgVACbEphemerisJPLSpice : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetJPLSpiceId,put=PutJPLSpiceId))
    _bstr_t JPLSpiceId;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetJPLSpiceId ( );
    void PutJPLSpiceId (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_JPLSpiceId (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_JPLSpiceId (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("fb155b57-0a0b-4c61-a6db-94e7f17a6f86"))
IAgVACbEphemerisFile : IAgVACbEphemeris
{
    //
    // Property data
    //

    __declspec(property(get=GetFilename,put=PutFilename))
    _bstr_t Filename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFilename ( );
    void PutFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Filename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Filename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("175d0ae3-0f29-450c-9084-3f0673cada9a"))
_IAgVACbEphemerisFile : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFilename,put=PutFilename))
    _bstr_t Filename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFilename ( );
    void PutFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Filename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Filename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("d2f8f341-4109-4e7f-9999-ac4f4ac0733a"))
IAgVACbEphemerisJPLDE : IAgVACbEphemeris
{
    //
    // Property data
    //

    __declspec(property(get=GetJPLDEFilename,put=PutJPLDEFilename))
    _bstr_t JPLDEFilename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetJPLDEFilename ( );
    void PutJPLDEFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_JPLDEFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_JPLDEFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f3c5d704-92de-42a7-853f-70235ddf8d64"))
_IAgVACbEphemerisJPLDE : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetJPLDEFilename,put=PutJPLDEFilename))
    _bstr_t JPLDEFilename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetJPLDEFilename ( );
    void PutJPLDEFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_JPLDEFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_JPLDEFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("388f07ef-c8a2-44d6-952f-224f731d70cf"))
IAgVACbEphemerisPlanetary : IAgVACbEphemeris
{
    //
    // Property data
    //

    __declspec(property(get=GetPlanetaryFilename,put=PutPlanetaryFilename))
    _bstr_t PlanetaryFilename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPlanetaryFilename ( );
    void PutPlanetaryFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PlanetaryFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PlanetaryFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f09fe311-4057-4ac4-a360-0efa026f5fa7"))
_IAgVACbEphemerisPlanetary : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPlanetaryFilename,put=PutPlanetaryFilename))
    _bstr_t PlanetaryFilename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPlanetaryFilename ( );
    void PutPlanetaryFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PlanetaryFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PlanetaryFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

enum AgEVAControlPowerInternal
{
    eVAControlPowerInternalGeneratedPower = 0,
    eVAControlPowerInternalPercentDegradation = 1,
    eVAControlPowerInternalEpoch = 2
};

enum AgEVAControlPowerProcessed
{
    eVAControlPowerProcessedEfficiency = 0,
    eVAControlPowerProcessedLoad = 1
};

enum AgEVAControlPowerSolarArray
{
    eVAControlPowerSolarArrayC0 = 0,
    eVAControlPowerSolarArrayC1 = 1,
    eVAControlPowerSolarArrayC2 = 2,
    eVAControlPowerSolarArrayC3 = 3,
    eVAControlPowerSolarArrayC4 = 4,
    eVAControlPowerSolarArrayArea = 5,
    eVAControlPowerSolarArrayEfficiency = 6,
    eVAControlPowerSolarArrayCellEfficiency = 7,
    eVAControlPowerSolarArrayConcentration = 8,
    eVAControlPowerSolarArrayInclinationToSunLine = 9,
    eVAControlPowerSolarArrayPercentDegradation = 10,
    eVAControlPowerSolarArrayEpoch = 11
};

struct __declspec(uuid("ff62ca9f-ba31-4702-b47a-ba0583aa979a"))
IAgVAPowerInternal : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetGeneratedPower,put=PutGeneratedPower))
    double GeneratedPower;
    __declspec(property(get=GetPercentDegradationPerYear,put=PutPercentDegradationPerYear))
    double PercentDegradationPerYear;
    __declspec(property(get=GetReferenceEpoch,put=PutReferenceEpoch))
    _variant_t ReferenceEpoch;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    double GetGeneratedPower ( );
    void PutGeneratedPower (
        double pVal );
    double GetPercentDegradationPerYear ( );
    void PutPercentDegradationPerYear (
        double pVal );
    _variant_t GetReferenceEpoch ( );
    void PutReferenceEpoch (
        const _variant_t & pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlPowerInternal Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlPowerInternal Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlPowerInternal Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GeneratedPower (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_GeneratedPower (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PercentDegradationPerYear (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PercentDegradationPerYear (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceEpoch (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceEpoch (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlPowerInternal Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlPowerInternal Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlPowerInternal Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("2375cd46-5549-42d8-befe-dda385afcb93"))
_IAgVAPowerInternal : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGeneratedPower,put=PutGeneratedPower))
    double GeneratedPower;
    __declspec(property(get=GetPercentDegradationPerYear,put=PutPercentDegradationPerYear))
    double PercentDegradationPerYear;
    __declspec(property(get=GetReferenceEpoch,put=PutReferenceEpoch))
    _variant_t ReferenceEpoch;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double GetGeneratedPower ( );
    void PutGeneratedPower (
        double pVal );
    double GetPercentDegradationPerYear ( );
    void PutPercentDegradationPerYear (
        double pVal );
    _variant_t GetReferenceEpoch ( );
    void PutReferenceEpoch (
        const _variant_t & pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlPowerInternal Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlPowerInternal Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlPowerInternal Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GeneratedPower (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_GeneratedPower (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PercentDegradationPerYear (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PercentDegradationPerYear (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceEpoch (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceEpoch (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlPowerInternal Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlPowerInternal Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlPowerInternal Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("bc3d9305-ebe3-4804-bdca-b25c349ec6a6"))
IAgVAPowerProcessed : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetLoad,put=PutLoad))
    double Load;
    __declspec(property(get=GetEfficiency,put=PutEfficiency))
    double Efficiency;
    __declspec(property(get=GetInputPowerSourceName,put=PutInputPowerSourceName))
    _bstr_t InputPowerSourceName;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    double GetLoad ( );
    void PutLoad (
        double pVal );
    double GetEfficiency ( );
    void PutEfficiency (
        double pVal );
    _bstr_t GetInputPowerSourceName ( );
    void PutInputPowerSourceName (
        _bstr_t pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlPowerProcessed Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlPowerProcessed Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlPowerProcessed Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Load (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Load (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Efficiency (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Efficiency (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_InputPowerSourceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_InputPowerSourceName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlPowerProcessed Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlPowerProcessed Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlPowerProcessed Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("ed2f809e-8ca4-4cee-aef4-a226f25d5d52"))
_IAgVAPowerProcessed : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLoad,put=PutLoad))
    double Load;
    __declspec(property(get=GetEfficiency,put=PutEfficiency))
    double Efficiency;
    __declspec(property(get=GetInputPowerSourceName,put=PutInputPowerSourceName))
    _bstr_t InputPowerSourceName;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double GetLoad ( );
    void PutLoad (
        double pVal );
    double GetEfficiency ( );
    void PutEfficiency (
        double pVal );
    _bstr_t GetInputPowerSourceName ( );
    void PutInputPowerSourceName (
        _bstr_t pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlPowerProcessed Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlPowerProcessed Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlPowerProcessed Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Load (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Load (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Efficiency (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Efficiency (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_InputPowerSourceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_InputPowerSourceName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlPowerProcessed Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlPowerProcessed Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlPowerProcessed Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("6bda62eb-39f2-41d1-bc74-6c054a103072"))
IAgVAPowerSolarArray : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetArea,put=PutArea))
    double Area;
    __declspec(property(get=GetConcentration,put=PutConcentration))
    double Concentration;
    __declspec(property(get=GetCellEfficiencyPercent,put=PutCellEfficiencyPercent))
    double CellEfficiencyPercent;
    __declspec(property(get=GetArrayEfficiencyPercent,put=PutArrayEfficiencyPercent))
    double ArrayEfficiencyPercent;
    __declspec(property(get=GetPercentDegradationPerYear,put=PutPercentDegradationPerYear))
    double PercentDegradationPerYear;
    __declspec(property(get=GetReferenceEpoch,put=PutReferenceEpoch))
    _variant_t ReferenceEpoch;
    __declspec(property(get=GetInclinationToSunLine,put=PutInclinationToSunLine))
    _variant_t InclinationToSunLine;
    __declspec(property(get=GetC0,put=PutC0))
    double C0;
    __declspec(property(get=GetC1,put=PutC1))
    double C1;
    __declspec(property(get=GetC2,put=PutC2))
    double C2;
    __declspec(property(get=GetC3,put=PutC3))
    double C3;
    __declspec(property(get=GetC4,put=PutC4))
    double C4;
    __declspec(property(get=GetApproximationFormula))
    _bstr_t ApproximationFormula;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    double GetArea ( );
    void PutArea (
        double pVal );
    double GetConcentration ( );
    void PutConcentration (
        double pVal );
    double GetCellEfficiencyPercent ( );
    void PutCellEfficiencyPercent (
        double pVal );
    double GetArrayEfficiencyPercent ( );
    void PutArrayEfficiencyPercent (
        double pVal );
    double GetPercentDegradationPerYear ( );
    void PutPercentDegradationPerYear (
        double pVal );
    _variant_t GetReferenceEpoch ( );
    void PutReferenceEpoch (
        const _variant_t & pVal );
    _variant_t GetInclinationToSunLine ( );
    void PutInclinationToSunLine (
        const _variant_t & pVal );
    double GetC0 ( );
    void PutC0 (
        double pVal );
    double GetC1 ( );
    void PutC1 (
        double pVal );
    double GetC2 ( );
    void PutC2 (
        double pVal );
    double GetC3 ( );
    void PutC3 (
        double pVal );
    double GetC4 ( );
    void PutC4 (
        double pVal );
    _bstr_t GetApproximationFormula ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlPowerSolarArray Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlPowerSolarArray Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlPowerSolarArray Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Area (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Concentration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Concentration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_CellEfficiencyPercent (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_CellEfficiencyPercent (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ArrayEfficiencyPercent (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ArrayEfficiencyPercent (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PercentDegradationPerYear (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PercentDegradationPerYear (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceEpoch (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceEpoch (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_InclinationToSunLine (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_InclinationToSunLine (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_C0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ApproximationFormula (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlPowerSolarArray Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlPowerSolarArray Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlPowerSolarArray Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("88b58f3f-faea-4e34-813f-80b56ad0d2ab"))
_IAgVAPowerSolarArray : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetArea,put=PutArea))
    double Area;
    __declspec(property(get=GetConcentration,put=PutConcentration))
    double Concentration;
    __declspec(property(get=GetCellEfficiencyPercent,put=PutCellEfficiencyPercent))
    double CellEfficiencyPercent;
    __declspec(property(get=GetArrayEfficiencyPercent,put=PutArrayEfficiencyPercent))
    double ArrayEfficiencyPercent;
    __declspec(property(get=GetPercentDegradationPerYear,put=PutPercentDegradationPerYear))
    double PercentDegradationPerYear;
    __declspec(property(get=GetReferenceEpoch,put=PutReferenceEpoch))
    _variant_t ReferenceEpoch;
    __declspec(property(get=GetInclinationToSunLine,put=PutInclinationToSunLine))
    _variant_t InclinationToSunLine;
    __declspec(property(get=GetC0,put=PutC0))
    double C0;
    __declspec(property(get=GetC1,put=PutC1))
    double C1;
    __declspec(property(get=GetC2,put=PutC2))
    double C2;
    __declspec(property(get=GetC3,put=PutC3))
    double C3;
    __declspec(property(get=GetC4,put=PutC4))
    double C4;
    __declspec(property(get=GetApproximationFormula))
    _bstr_t ApproximationFormula;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    double GetArea ( );
    void PutArea (
        double pVal );
    double GetConcentration ( );
    void PutConcentration (
        double pVal );
    double GetCellEfficiencyPercent ( );
    void PutCellEfficiencyPercent (
        double pVal );
    double GetArrayEfficiencyPercent ( );
    void PutArrayEfficiencyPercent (
        double pVal );
    double GetPercentDegradationPerYear ( );
    void PutPercentDegradationPerYear (
        double pVal );
    _variant_t GetReferenceEpoch ( );
    void PutReferenceEpoch (
        const _variant_t & pVal );
    _variant_t GetInclinationToSunLine ( );
    void PutInclinationToSunLine (
        const _variant_t & pVal );
    double GetC0 ( );
    void PutC0 (
        double pVal );
    double GetC1 ( );
    void PutC1 (
        double pVal );
    double GetC2 ( );
    void PutC2 (
        double pVal );
    double GetC3 ( );
    void PutC3 (
        double pVal );
    double GetC4 ( );
    void PutC4 (
        double pVal );
    _bstr_t GetApproximationFormula ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlPowerSolarArray Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlPowerSolarArray Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlPowerSolarArray Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Area (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Concentration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Concentration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_CellEfficiencyPercent (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_CellEfficiencyPercent (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ArrayEfficiencyPercent (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ArrayEfficiencyPercent (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PercentDegradationPerYear (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PercentDegradationPerYear (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceEpoch (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceEpoch (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_InclinationToSunLine (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_InclinationToSunLine (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_C0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ApproximationFormula (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlPowerSolarArray Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlPowerSolarArray Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlPowerSolarArray Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("56f07437-830d-487c-b7e4-cfec6b7cd37a"))
IAgVAPluginProperties : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAvailableProperties))
    SAFEARRAY * AvailableProperties;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetProperty (
        _bstr_t Path );
    HRESULT SetProperty (
        _bstr_t Path,
        const _variant_t & PropertyValue );
    SAFEARRAY * GetAvailableProperties ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_GetProperty (
        /*[in]*/ BSTR Path,
        /*[out,retval]*/ VARIANT * pPropertyValue ) = 0;
      virtual HRESULT __stdcall raw_SetProperty (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT PropertyValue ) = 0;
      virtual HRESULT __stdcall get_AvailableProperties (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

enum AgEVAThirdBodyMode
{
    eVAThirdBodyModeGravityField = 0,
    eVAThirdBodyModePointMass = 1
};

enum AgEVAGravParamSource
{
    eVAGravParamSourceCbFile = 0,
    eVAGravParamSourceDEFile = 1,
    eVAGravParamSourceUser = 2,
    eVAGravParamSourceCbFileSystem = 3
};

enum AgEVAEphemSource
{
    eVAEphemSourceCbFile = 0,
    eVAEphemSourceDEFile = 1,
    eVAEphemSourceSPICEBary = 2,
    eVAEphemSourceSPICEBody = 3
};

enum AgEVASolarForceMethod
{
    eVASolarForceMethodLuminosity = 0,
    eVASolarForceMethodMeanFlux = 1
};

enum AgEVAShadowModel
{
    eVAShadowModelCylindrical = 0,
    eVAShadowModelDualCone = 1,
    eVAShadowModelNone = 2
};

enum AgEVASunPosition
{
    eVASunPositionApparent = 0,
    eVASunPositionApparentToTrueCb = 1,
    eVASunPositionTrue = 2
};

enum AgEVAAtmosDataSource
{
    eVAAtmosDataSourceConstant = 0,
    eVAAtmosDataSourceFile = 1
};

enum AgEVAGeoMagneticFluxSource
{
    eVAGeoMagneticFluxSourceAp = 0,
    eVAGeoMagneticFluxSourceKp = 1
};

enum AgEVAGeoMagneticFluxUpdateRate
{
    eVAGeoMagneticFluxUpdateRate3Hourly = 0,
    eVAGeoMagneticFluxUpdateRate3HourlyCubicSpline = 1,
    eVAGeoMagneticFluxUpdateRate3HourlyInterpolated = 2,
    eVAGeoMagneticFluxUpdateRateDaily = 3
};

enum AgEVADragModelType
{
    eVADragModelTypeSpherical = 0,
    eVADragModelTypePlugin = 1
};

enum AgEVAMarsGRAMDensityType
{
    eVAMarsGRAMDensityTypeLow = 0,
    eVAMarsGRAMDensityTypeMean = 1,
    eVAMarsGRAMDensityTypeHigh = 2,
    eVAMarsGRAMDensityTypeRandomlyPerturbed = 3
};

struct __declspec(uuid("1c377039-f8fc-4ed2-b654-9a57be7284b5"))
IAgVAGeneralRelativityFunction : IUnknown
{};

struct __declspec(uuid("77771498-39b1-4b6c-b99d-7904dd678cdc"))
_IAgVAGeneralRelativityFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("7dd23830-c8c3-4a2b-b4f2-874ad2480ccf"))
IAgVAStateTransFunction : IUnknown
{};

struct __declspec(uuid("b1790a1e-e92b-47f0-91aa-9b07b9a53bf9"))
_IAgVAStateTransFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("d3785a9d-261d-4e04-96a4-f4d8b6b20bd1"))
IAgVARadiationPressureFunction : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetIncludeAlbedo,put=PutIncludeAlbedo))
    VARIANT_BOOL IncludeAlbedo;
    __declspec(property(get=GetIncludeThermalRadiationPressure,put=PutIncludeThermalRadiationPressure))
    VARIANT_BOOL IncludeThermalRadiationPressure;
    __declspec(property(get=GetGroundReflectionModelFilename,put=PutGroundReflectionModelFilename))
    _bstr_t GroundReflectionModelFilename;
    __declspec(property(get=GetCentralBodyName))
    _bstr_t CentralBodyName;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetIncludeAlbedo ( );
    void PutIncludeAlbedo (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetIncludeThermalRadiationPressure ( );
    void PutIncludeThermalRadiationPressure (
        VARIANT_BOOL pVal );
    _bstr_t GetGroundReflectionModelFilename ( );
    void PutGroundReflectionModelFilename (
        _bstr_t pVal );
    _bstr_t GetCentralBodyName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IncludeAlbedo (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeAlbedo (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeThermalRadiationPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeThermalRadiationPressure (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_GroundReflectionModelFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_GroundReflectionModelFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("e9f44733-f2e2-4644-ab56-10850a155086"))
_IAgVARadiationPressureFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIncludeAlbedo,put=PutIncludeAlbedo))
    VARIANT_BOOL IncludeAlbedo;
    __declspec(property(get=GetIncludeThermalRadiationPressure,put=PutIncludeThermalRadiationPressure))
    VARIANT_BOOL IncludeThermalRadiationPressure;
    __declspec(property(get=GetGroundReflectionModelFilename,put=PutGroundReflectionModelFilename))
    _bstr_t GroundReflectionModelFilename;
    __declspec(property(get=GetCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetIncludeAlbedo ( );
    void PutIncludeAlbedo (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetIncludeThermalRadiationPressure ( );
    void PutIncludeThermalRadiationPressure (
        VARIANT_BOOL pVal );
    _bstr_t GetGroundReflectionModelFilename ( );
    void PutGroundReflectionModelFilename (
        _bstr_t pVal );
    _bstr_t GetCentralBodyName ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IncludeAlbedo (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeAlbedo (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeThermalRadiationPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeThermalRadiationPressure (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_GroundReflectionModelFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_GroundReflectionModelFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("57e7a95d-c8b5-4031-917a-250d49a48c6f"))
IAgVAYarkovskyFunc : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=Getalpha,put=Putalpha))
    double alpha;
    __declspec(property(get=GetR0,put=PutR0))
    double R0;
    __declspec(property(get=GetNM,put=PutNM))
    double NM;
    __declspec(property(get=GetNN,put=PutNN))
    double NN;
    __declspec(property(get=GetNK,put=PutNK))
    double NK;
    __declspec(property(get=GetA1,put=PutA1))
    double A1;
    __declspec(property(get=GetA2,put=PutA2))
    double A2;
    __declspec(property(get=GetA3,put=PutA3))
    double A3;

    //
    // Wrapper methods for error-handling
    //

    double Getalpha ( );
    void Putalpha (
        double pVal );
    double GetR0 ( );
    void PutR0 (
        double pVal );
    double GetNM ( );
    void PutNM (
        double pVal );
    double GetNN ( );
    void PutNN (
        double pVal );
    double GetNK ( );
    void PutNK (
        double pVal );
    double GetA1 ( );
    void PutA1 (
        double pVal );
    double GetA2 ( );
    void PutA2 (
        double pVal );
    double GetA3 ( );
    void PutA3 (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_alpha (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_alpha (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_R0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_R0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_NM (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_NM (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_NN (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_NN (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_NK (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_NK (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_A1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_A1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_A2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_A2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_A3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_A3 (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("0945cb69-5c72-409b-9ad7-243e82d77a2b"))
_IAgVAYarkovskyFunc : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getalpha,put=Putalpha))
    double alpha;
    __declspec(property(get=GetR0,put=PutR0))
    double R0;
    __declspec(property(get=GetNM,put=PutNM))
    double NM;
    __declspec(property(get=GetNN,put=PutNN))
    double NN;
    __declspec(property(get=GetNK,put=PutNK))
    double NK;
    __declspec(property(get=GetA1,put=PutA1))
    double A1;
    __declspec(property(get=GetA2,put=PutA2))
    double A2;
    __declspec(property(get=GetA3,put=PutA3))
    double A3;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double Getalpha ( );
    void Putalpha (
        double pVal );
    double GetR0 ( );
    void PutR0 (
        double pVal );
    double GetNM ( );
    void PutNM (
        double pVal );
    double GetNN ( );
    void PutNN (
        double pVal );
    double GetNK ( );
    void PutNK (
        double pVal );
    double GetA1 ( );
    void PutA1 (
        double pVal );
    double GetA2 ( );
    void PutA2 (
        double pVal );
    double GetA3 ( );
    void PutA3 (
        double pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_alpha (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_alpha (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_R0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_R0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_NM (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_NM (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_NN (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_NN (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_NK (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_NK (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_A1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_A1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_A2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_A2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_A3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_A3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("32517b95-6d72-4a1b-b1d2-b944576f5c01"))
IAgVABlendedDensity : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDensityBlendingAltRange,put=PutDensityBlendingAltRange))
    double DensityBlendingAltRange;
    __declspec(property(get=GetAtmDensityModelName))
    _bstr_t AtmDensityModelName;
    __declspec(property(get=GetLowAltAtmDensityModelName))
    _bstr_t LowAltAtmDensityModelName;
    __declspec(property(get=GetUseApproxAltitude,put=PutUseApproxAltitude))
    VARIANT_BOOL UseApproxAltitude;
    __declspec(property(get=GetLowerBoundUpperAtmModel))
    double LowerBoundUpperAtmModel;

    //
    // Wrapper methods for error-handling
    //

    HRESULT AtmDensityModel (
        struct STKObjects::IAgComponentInfo * pInVal );
    HRESULT LowAltAtmDensityModel (
        struct STKObjects::IAgComponentInfo * pInVal );
    double GetDensityBlendingAltRange ( );
    void PutDensityBlendingAltRange (
        double pVal );
    _bstr_t GetAtmDensityModelName ( );
    _bstr_t GetLowAltAtmDensityModelName ( );
    VARIANT_BOOL GetUseApproxAltitude ( );
    void PutUseApproxAltitude (
        VARIANT_BOOL pVal );
    double GetLowerBoundUpperAtmModel ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_AtmDensityModel (
        /*[in]*/ struct STKObjects::IAgComponentInfo * pInVal ) = 0;
      virtual HRESULT __stdcall raw_LowAltAtmDensityModel (
        /*[in]*/ struct STKObjects::IAgComponentInfo * pInVal ) = 0;
      virtual HRESULT __stdcall get_DensityBlendingAltRange (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityBlendingAltRange (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmDensityModelName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LowAltAtmDensityModelName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UseApproxAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproxAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBoundUpperAtmModel (
        /*[out,retval]*/ double * pVal ) = 0;
};

struct __declspec(uuid("1404bdf1-1f85-4203-86d4-ddae6f1943f9"))
_IAgVABlendedDensity : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDensityBlendingAltRange,put=PutDensityBlendingAltRange))
    double DensityBlendingAltRange;
    __declspec(property(get=GetAtmDensityModelName))
    _bstr_t AtmDensityModelName;
    __declspec(property(get=GetLowAltAtmDensityModelName))
    _bstr_t LowAltAtmDensityModelName;
    __declspec(property(get=GetUseApproxAltitude,put=PutUseApproxAltitude))
    VARIANT_BOOL UseApproxAltitude;
    __declspec(property(get=GetLowerBoundUpperAtmModel))
    double LowerBoundUpperAtmModel;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    HRESULT AtmDensityModel (
        struct STKObjects::IAgComponentInfo * pInVal );
    HRESULT LowAltAtmDensityModel (
        struct STKObjects::IAgComponentInfo * pInVal );
    double GetDensityBlendingAltRange ( );
    void PutDensityBlendingAltRange (
        double pVal );
    _bstr_t GetAtmDensityModelName ( );
    _bstr_t GetLowAltAtmDensityModelName ( );
    VARIANT_BOOL GetUseApproxAltitude ( );
    void PutUseApproxAltitude (
        VARIANT_BOOL pVal );
    double GetLowerBoundUpperAtmModel ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_AtmDensityModel (
        /*[in]*/ struct STKObjects::IAgComponentInfo * pInVal ) = 0;
      virtual HRESULT __stdcall raw_LowAltAtmDensityModel (
        /*[in]*/ struct STKObjects::IAgComponentInfo * pInVal ) = 0;
      virtual HRESULT __stdcall get_DensityBlendingAltRange (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityBlendingAltRange (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmDensityModelName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LowAltAtmDensityModelName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UseApproxAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproxAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBoundUpperAtmModel (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("35ddda79-da96-46c5-b92f-435e5f99324e"))
IAgVADragModelPlugin : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetPluginIdentifier,put=PutPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPluginIdentifier ( );
    void PutPluginIdentifier (
        _bstr_t pVal );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PluginIdentifier (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
};

struct __declspec(uuid("bf9d2a46-cf1e-47a2-a7c9-45a72d24f30f"))
_IAgVADragModelPlugin : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPluginIdentifier,put=PutPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPluginIdentifier ( );
    void PutPluginIdentifier (
        _bstr_t pVal );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PluginIdentifier (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("3715351b-3494-40a7-a26a-6c1662fdd5b1"))
IAgVACira72Function : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("14f2a0ba-aa7b-4350-869c-d2fd690dfd29"))
_IAgVACira72Function : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("08fe099e-bbbe-47e8-94da-3299e2651107"))
IAgVAExponential : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetReferenceDensity,put=PutReferenceDensity))
    double ReferenceDensity;
    __declspec(property(get=GetReferenceAltitude,put=PutReferenceAltitude))
    double ReferenceAltitude;
    __declspec(property(get=GetScaleAltitude,put=PutScaleAltitude))
    double ScaleAltitude;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    double GetReferenceDensity ( );
    void PutReferenceDensity (
        double pVal );
    double GetReferenceAltitude ( );
    void PutReferenceAltitude (
        double pVal );
    double GetScaleAltitude ( );
    void PutScaleAltitude (
        double pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceDensity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceDensity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceAltitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceAltitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ScaleAltitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ScaleAltitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("fa7bb0ed-5e10-4d56-8392-0d00fe630474"))
_IAgVAExponential : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetReferenceDensity,put=PutReferenceDensity))
    double ReferenceDensity;
    __declspec(property(get=GetReferenceAltitude,put=PutReferenceAltitude))
    double ReferenceAltitude;
    __declspec(property(get=GetScaleAltitude,put=PutScaleAltitude))
    double ScaleAltitude;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    double GetReferenceDensity ( );
    void PutReferenceDensity (
        double pVal );
    double GetReferenceAltitude ( );
    void PutReferenceAltitude (
        double pVal );
    double GetScaleAltitude ( );
    void PutScaleAltitude (
        double pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceDensity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceDensity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceAltitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceAltitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ScaleAltitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ScaleAltitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("0d0ffb87-67cc-4d0d-b031-90350dfed669"))
IAgVAHarrisPriester : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("18d977c8-9841-4f7c-8538-8a5f6996db13"))
_IAgVAHarrisPriester : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("0c9d6333-233e-45a0-85ee-4d30919ca6b2"))
IAgVADensityModelPlugin : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetPluginIdentifier,put=PutPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetUsesAugmentedSpaceWeather))
    VARIANT_BOOL UsesAugmentedSpaceWeather;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10,put=PutF10))
    double F10;
    __declspec(property(get=GetF10Avg,put=PutF10Avg))
    double F10Avg;
    __declspec(property(get=GetM10,put=PutM10))
    double M10;
    __declspec(property(get=GetM10Avg,put=PutM10Avg))
    double M10Avg;
    __declspec(property(get=GetS10,put=PutS10))
    double S10;
    __declspec(property(get=GetS10Avg,put=PutS10Avg))
    double S10Avg;
    __declspec(property(get=GetY10,put=PutY10))
    double Y10;
    __declspec(property(get=GetY10Avg,put=PutY10Avg))
    double Y10Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetDstDTc,put=PutDstDTc))
    double DstDTc;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetAtmosAugDataFile,put=PutAtmosAugDataFile))
    _bstr_t AtmosAugDataFile;
    __declspec(property(get=GetAtmosAugDTCFile,put=PutAtmosAugDTCFile))
    _bstr_t AtmosAugDTCFile;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPluginIdentifier ( );
    void PutPluginIdentifier (
        _bstr_t pVal );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10 ( );
    void PutF10 (
        double pVal );
    double GetF10Avg ( );
    void PutF10Avg (
        double pVal );
    double GetM10 ( );
    void PutM10 (
        double pVal );
    double GetM10Avg ( );
    void PutM10Avg (
        double pVal );
    double GetS10 ( );
    void PutS10 (
        double pVal );
    double GetS10Avg ( );
    void PutS10Avg (
        double pVal );
    double GetY10 ( );
    void PutY10 (
        double pVal );
    double GetY10Avg ( );
    void PutY10Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    double GetDstDTc ( );
    void PutDstDTc (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetAtmosAugDataFile ( );
    void PutAtmosAugDataFile (
        _bstr_t pVal );
    _bstr_t GetAtmosAugDTCFile ( );
    void PutAtmosAugDTCFile (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );
    VARIANT_BOOL GetUsesAugmentedSpaceWeather ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PluginIdentifier (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_M10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_M10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_M10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_M10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_S10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_S10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_S10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_S10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Y10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Y10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Y10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Y10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DstDTc (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DstDTc (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosAugDataFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAugDataFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosAugDTCFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAugDTCFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_UsesAugmentedSpaceWeather (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("14aa2f55-8234-4ed3-842d-5eead30228a5"))
_IAgVADensityModelPlugin : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetAtmosAugDataFile,put=PutAtmosAugDataFile))
    _bstr_t AtmosAugDataFile;
    __declspec(property(get=GetAtmosAugDTCFile,put=PutAtmosAugDTCFile))
    _bstr_t AtmosAugDTCFile;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;
    __declspec(property(get=GetUsesAugmentedSpaceWeather))
    VARIANT_BOOL UsesAugmentedSpaceWeather;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetPluginIdentifier,put=PutPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10,put=PutF10))
    double F10;
    __declspec(property(get=GetF10Avg,put=PutF10Avg))
    double F10Avg;
    __declspec(property(get=GetM10,put=PutM10))
    double M10;
    __declspec(property(get=GetM10Avg,put=PutM10Avg))
    double M10Avg;
    __declspec(property(get=GetS10,put=PutS10))
    double S10;
    __declspec(property(get=GetS10Avg,put=PutS10Avg))
    double S10Avg;
    __declspec(property(get=GetY10,put=PutY10))
    double Y10;
    __declspec(property(get=GetY10Avg,put=PutY10Avg))
    double Y10Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetDstDTc,put=PutDstDTc))
    double DstDTc;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPluginIdentifier ( );
    void PutPluginIdentifier (
        _bstr_t pVal );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10 ( );
    void PutF10 (
        double pVal );
    double GetF10Avg ( );
    void PutF10Avg (
        double pVal );
    double GetM10 ( );
    void PutM10 (
        double pVal );
    double GetM10Avg ( );
    void PutM10Avg (
        double pVal );
    double GetS10 ( );
    void PutS10 (
        double pVal );
    double GetS10Avg ( );
    void PutS10Avg (
        double pVal );
    double GetY10 ( );
    void PutY10 (
        double pVal );
    double GetY10Avg ( );
    void PutY10Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    double GetDstDTc ( );
    void PutDstDTc (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetAtmosAugDataFile ( );
    void PutAtmosAugDataFile (
        _bstr_t pVal );
    _bstr_t GetAtmosAugDTCFile ( );
    void PutAtmosAugDTCFile (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );
    VARIANT_BOOL GetUsesAugmentedSpaceWeather ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PluginIdentifier (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_M10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_M10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_M10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_M10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_S10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_S10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_S10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_S10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Y10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Y10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Y10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Y10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DstDTc (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DstDTc (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosAugDataFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAugDataFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosAugDTCFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAugDTCFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_UsesAugmentedSpaceWeather (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("dc33d259-2c37-4196-b633-3a65bd66d98b"))
IAgVAJacchiaRoberts : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("d37b72b1-761b-4f2a-84d3-85483bed302b"))
_IAgVAJacchiaRoberts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("cb91bc6b-57f0-4058-af31-1bdb58d7e84d"))
IAgVAJacchiaBowman2008 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10,put=PutF10))
    double F10;
    __declspec(property(get=GetF10Avg,put=PutF10Avg))
    double F10Avg;
    __declspec(property(get=GetM10,put=PutM10))
    double M10;
    __declspec(property(get=GetM10Avg,put=PutM10Avg))
    double M10Avg;
    __declspec(property(get=GetS10,put=PutS10))
    double S10;
    __declspec(property(get=GetS10Avg,put=PutS10Avg))
    double S10Avg;
    __declspec(property(get=GetY10,put=PutY10))
    double Y10;
    __declspec(property(get=GetY10Avg,put=PutY10Avg))
    double Y10Avg;
    __declspec(property(get=GetDstDTc,put=PutDstDTc))
    double DstDTc;
    __declspec(property(get=GetAtmosAugDataFile,put=PutAtmosAugDataFile))
    _bstr_t AtmosAugDataFile;
    __declspec(property(get=GetAtmosAugDTCFile,put=PutAtmosAugDTCFile))
    _bstr_t AtmosAugDTCFile;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10 ( );
    void PutF10 (
        double pVal );
    double GetF10Avg ( );
    void PutF10Avg (
        double pVal );
    double GetM10 ( );
    void PutM10 (
        double pVal );
    double GetM10Avg ( );
    void PutM10Avg (
        double pVal );
    double GetS10 ( );
    void PutS10 (
        double pVal );
    double GetS10Avg ( );
    void PutS10Avg (
        double pVal );
    double GetY10 ( );
    void PutY10 (
        double pVal );
    double GetY10Avg ( );
    void PutY10Avg (
        double pVal );
    double GetDstDTc ( );
    void PutDstDTc (
        double pVal );
    _bstr_t GetAtmosAugDataFile ( );
    void PutAtmosAugDataFile (
        _bstr_t pVal );
    _bstr_t GetAtmosAugDTCFile ( );
    void PutAtmosAugDTCFile (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_M10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_M10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_M10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_M10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_S10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_S10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_S10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_S10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Y10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Y10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Y10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Y10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DstDTc (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DstDTc (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosAugDataFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAugDataFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosAugDTCFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAugDTCFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("dd7a56cb-dfa2-4141-a854-ff218f084393"))
_IAgVAJacchiaBowman2008 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10,put=PutF10))
    double F10;
    __declspec(property(get=GetF10Avg,put=PutF10Avg))
    double F10Avg;
    __declspec(property(get=GetM10,put=PutM10))
    double M10;
    __declspec(property(get=GetM10Avg,put=PutM10Avg))
    double M10Avg;
    __declspec(property(get=GetS10,put=PutS10))
    double S10;
    __declspec(property(get=GetS10Avg,put=PutS10Avg))
    double S10Avg;
    __declspec(property(get=GetY10,put=PutY10))
    double Y10;
    __declspec(property(get=GetY10Avg,put=PutY10Avg))
    double Y10Avg;
    __declspec(property(get=GetDstDTc,put=PutDstDTc))
    double DstDTc;
    __declspec(property(get=GetAtmosAugDataFile,put=PutAtmosAugDataFile))
    _bstr_t AtmosAugDataFile;
    __declspec(property(get=GetAtmosAugDTCFile,put=PutAtmosAugDTCFile))
    _bstr_t AtmosAugDTCFile;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10 ( );
    void PutF10 (
        double pVal );
    double GetF10Avg ( );
    void PutF10Avg (
        double pVal );
    double GetM10 ( );
    void PutM10 (
        double pVal );
    double GetM10Avg ( );
    void PutM10Avg (
        double pVal );
    double GetS10 ( );
    void PutS10 (
        double pVal );
    double GetS10Avg ( );
    void PutS10Avg (
        double pVal );
    double GetY10 ( );
    void PutY10 (
        double pVal );
    double GetY10Avg ( );
    void PutY10Avg (
        double pVal );
    double GetDstDTc ( );
    void PutDstDTc (
        double pVal );
    _bstr_t GetAtmosAugDataFile ( );
    void PutAtmosAugDataFile (
        _bstr_t pVal );
    _bstr_t GetAtmosAugDTCFile ( );
    void PutAtmosAugDTCFile (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_M10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_M10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_M10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_M10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_S10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_S10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_S10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_S10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Y10 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Y10 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Y10Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Y10Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DstDTc (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DstDTc (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosAugDataFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAugDataFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosAugDTCFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAugDTCFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("b29c2899-38e4-4c38-a929-8780431c835c"))
IAgVAJacchia_1960 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("bb2e1958-4787-433f-8e04-4dd92628b54e"))
_IAgVAJacchia_1960 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("6e7a8f24-3cef-4863-94c2-d06dbb1b172f"))
IAgVAJacchia_1970 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("ea9db8ba-dcb9-49d4-9951-98d51a0eb021"))
_IAgVAJacchia_1970 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("21b8cff7-81f1-41f1-93ec-454ddcd4b88b"))
IAgVAJacchia_1971 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("d9fb4548-ef09-47ec-a737-2ab33af154c1"))
_IAgVAJacchia_1971 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("8d4a3904-42c0-470f-b70e-5e46fef18af8"))
IAgVAMSISE_1990 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("2e5cf7be-6d9a-43b7-a8dd-c2763f2313bf"))
_IAgVAMSISE_1990 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("af4a00a9-22a9-4d44-a3f7-ff5bb18c5566"))
IAgVAMSIS_1986 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("f87c1063-aa1d-4618-b2fb-f060d45c5394"))
_IAgVAMSIS_1986 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("d607452d-1735-4ca7-a416-fee4d4f5d1df"))
IAgVANRLMSISE_2000 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("71b4b675-20e7-4fed-99b4-5da700f621fc"))
_IAgVANRLMSISE_2000 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("ebe736bc-2145-4281-9bb8-62e7236733cc"))
IAgVAUS_Standard_Atmosphere : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("d94647b3-06b1-4720-9050-82ffa1587430"))
_IAgVAUS_Standard_Atmosphere : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("27039ec0-4de7-40a2-8aa5-46cce755e777"))
IAgVAMarsGRAM37 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDataDirectory,put=PutDataDirectory))
    _bstr_t DataDirectory;
    __declspec(property(get=GetNamelistFile,put=PutNamelistFile))
    _bstr_t NamelistFile;
    __declspec(property(get=GetDensityType,put=PutDensityType))
    enum AgEVAMarsGRAMDensityType DensityType;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    _bstr_t GetDataDirectory ( );
    void PutDataDirectory (
        _bstr_t pVal );
    _bstr_t GetNamelistFile ( );
    void PutNamelistFile (
        _bstr_t pVal );
    enum AgEVAMarsGRAMDensityType GetDensityType ( );
    void PutDensityType (
        enum AgEVAMarsGRAMDensityType pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_DataDirectory (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DataDirectory (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_NamelistFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_NamelistFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DensityType (
        /*[out,retval]*/ enum AgEVAMarsGRAMDensityType * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityType (
        /*[in]*/ enum AgEVAMarsGRAMDensityType pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("05883269-3979-4a85-8fc1-fe61a8ba1e85"))
_IAgVAMarsGRAM37 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDataDirectory,put=PutDataDirectory))
    _bstr_t DataDirectory;
    __declspec(property(get=GetNamelistFile,put=PutNamelistFile))
    _bstr_t NamelistFile;
    __declspec(property(get=GetDensityType,put=PutDensityType))
    enum AgEVAMarsGRAMDensityType DensityType;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    _bstr_t GetDataDirectory ( );
    void PutDataDirectory (
        _bstr_t pVal );
    _bstr_t GetNamelistFile ( );
    void PutNamelistFile (
        _bstr_t pVal );
    enum AgEVAMarsGRAMDensityType GetDensityType ( );
    void PutDensityType (
        enum AgEVAMarsGRAMDensityType pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_DataDirectory (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DataDirectory (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_NamelistFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_NamelistFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DensityType (
        /*[out,retval]*/ enum AgEVAMarsGRAMDensityType * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityType (
        /*[in]*/ enum AgEVAMarsGRAMDensityType pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("504a0ef5-5f65-4693-bfbe-e4e554cc060b"))
IAgVAMarsGRAM2005 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDataDirectory,put=PutDataDirectory))
    _bstr_t DataDirectory;
    __declspec(property(get=GetNamelistFile,put=PutNamelistFile))
    _bstr_t NamelistFile;
    __declspec(property(get=GetDensityType,put=PutDensityType))
    enum AgEVAMarsGRAMDensityType DensityType;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    _bstr_t GetDataDirectory ( );
    void PutDataDirectory (
        _bstr_t pVal );
    _bstr_t GetNamelistFile ( );
    void PutNamelistFile (
        _bstr_t pVal );
    enum AgEVAMarsGRAMDensityType GetDensityType ( );
    void PutDensityType (
        enum AgEVAMarsGRAMDensityType pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_DataDirectory (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DataDirectory (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_NamelistFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_NamelistFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DensityType (
        /*[out,retval]*/ enum AgEVAMarsGRAMDensityType * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityType (
        /*[in]*/ enum AgEVAMarsGRAMDensityType pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("b6e4920a-3696-4bff-993d-ac10bd6124ad"))
_IAgVAMarsGRAM2005 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDataDirectory,put=PutDataDirectory))
    _bstr_t DataDirectory;
    __declspec(property(get=GetNamelistFile,put=PutNamelistFile))
    _bstr_t NamelistFile;
    __declspec(property(get=GetDensityType,put=PutDensityType))
    enum AgEVAMarsGRAMDensityType DensityType;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    _bstr_t GetDataDirectory ( );
    void PutDataDirectory (
        _bstr_t pVal );
    _bstr_t GetNamelistFile ( );
    void PutNamelistFile (
        _bstr_t pVal );
    enum AgEVAMarsGRAMDensityType GetDensityType ( );
    void PutDensityType (
        enum AgEVAMarsGRAMDensityType pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_DataDirectory (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DataDirectory (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_NamelistFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_NamelistFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DensityType (
        /*[out,retval]*/ enum AgEVAMarsGRAMDensityType * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityType (
        /*[in]*/ enum AgEVAMarsGRAMDensityType pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("ed9c4e0d-7a5e-4927-86f2-661b2cf7f238"))
IAgVAMarsGRAM2010 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDataDirectory,put=PutDataDirectory))
    _bstr_t DataDirectory;
    __declspec(property(get=GetNamelistFile,put=PutNamelistFile))
    _bstr_t NamelistFile;
    __declspec(property(get=GetDensityType,put=PutDensityType))
    enum AgEVAMarsGRAMDensityType DensityType;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    _bstr_t GetDataDirectory ( );
    void PutDataDirectory (
        _bstr_t pVal );
    _bstr_t GetNamelistFile ( );
    void PutNamelistFile (
        _bstr_t pVal );
    enum AgEVAMarsGRAMDensityType GetDensityType ( );
    void PutDensityType (
        enum AgEVAMarsGRAMDensityType pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_DataDirectory (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DataDirectory (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_NamelistFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_NamelistFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DensityType (
        /*[out,retval]*/ enum AgEVAMarsGRAMDensityType * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityType (
        /*[in]*/ enum AgEVAMarsGRAMDensityType pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("2c768754-458e-47f5-a5cc-61b8fa37f7d2"))
_IAgVAMarsGRAM2010 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDataDirectory,put=PutDataDirectory))
    _bstr_t DataDirectory;
    __declspec(property(get=GetNamelistFile,put=PutNamelistFile))
    _bstr_t NamelistFile;
    __declspec(property(get=GetDensityType,put=PutDensityType))
    enum AgEVAMarsGRAMDensityType DensityType;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    _bstr_t GetDataDirectory ( );
    void PutDataDirectory (
        _bstr_t pVal );
    _bstr_t GetNamelistFile ( );
    void PutNamelistFile (
        _bstr_t pVal );
    enum AgEVAMarsGRAMDensityType GetDensityType ( );
    void PutDensityType (
        enum AgEVAMarsGRAMDensityType pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_DataDirectory (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DataDirectory (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_NamelistFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_NamelistFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DensityType (
        /*[out,retval]*/ enum AgEVAMarsGRAMDensityType * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityType (
        /*[in]*/ enum AgEVAMarsGRAMDensityType pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("7789eba7-4cbf-4607-8528-a0bfd3ac2496"))
IAgVAMarsGRAM2001 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDataDirectory,put=PutDataDirectory))
    _bstr_t DataDirectory;
    __declspec(property(get=GetNamelistFile,put=PutNamelistFile))
    _bstr_t NamelistFile;
    __declspec(property(get=GetDensityType,put=PutDensityType))
    enum AgEVAMarsGRAMDensityType DensityType;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    _bstr_t GetDataDirectory ( );
    void PutDataDirectory (
        _bstr_t pVal );
    _bstr_t GetNamelistFile ( );
    void PutNamelistFile (
        _bstr_t pVal );
    enum AgEVAMarsGRAMDensityType GetDensityType ( );
    void PutDensityType (
        enum AgEVAMarsGRAMDensityType pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_DataDirectory (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DataDirectory (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_NamelistFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_NamelistFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DensityType (
        /*[out,retval]*/ enum AgEVAMarsGRAMDensityType * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityType (
        /*[in]*/ enum AgEVAMarsGRAMDensityType pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("a34fa53a-5329-46e0-a54c-7baa44707ad9"))
_IAgVAMarsGRAM2001 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDataDirectory,put=PutDataDirectory))
    _bstr_t DataDirectory;
    __declspec(property(get=GetNamelistFile,put=PutNamelistFile))
    _bstr_t NamelistFile;
    __declspec(property(get=GetDensityType,put=PutDensityType))
    enum AgEVAMarsGRAMDensityType DensityType;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    _bstr_t GetDataDirectory ( );
    void PutDataDirectory (
        _bstr_t pVal );
    _bstr_t GetNamelistFile ( );
    void PutNamelistFile (
        _bstr_t pVal );
    enum AgEVAMarsGRAMDensityType GetDensityType ( );
    void PutDensityType (
        enum AgEVAMarsGRAMDensityType pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_DataDirectory (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DataDirectory (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_NamelistFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_NamelistFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DensityType (
        /*[out,retval]*/ enum AgEVAMarsGRAMDensityType * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityType (
        /*[in]*/ enum AgEVAMarsGRAMDensityType pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("8c2e9298-941a-436b-80fe-f6b98ae2a877"))
IAgVAMarsGRAM2000 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDataDirectory,put=PutDataDirectory))
    _bstr_t DataDirectory;
    __declspec(property(get=GetNamelistFile,put=PutNamelistFile))
    _bstr_t NamelistFile;
    __declspec(property(get=GetDensityType,put=PutDensityType))
    enum AgEVAMarsGRAMDensityType DensityType;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    _bstr_t GetDataDirectory ( );
    void PutDataDirectory (
        _bstr_t pVal );
    _bstr_t GetNamelistFile ( );
    void PutNamelistFile (
        _bstr_t pVal );
    enum AgEVAMarsGRAMDensityType GetDensityType ( );
    void PutDensityType (
        enum AgEVAMarsGRAMDensityType pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_DataDirectory (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DataDirectory (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_NamelistFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_NamelistFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DensityType (
        /*[out,retval]*/ enum AgEVAMarsGRAMDensityType * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityType (
        /*[in]*/ enum AgEVAMarsGRAMDensityType pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("8433f84c-4fbb-488b-9bc3-5dccfed6ec6f"))
_IAgVAMarsGRAM2000 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetDataDirectory,put=PutDataDirectory))
    _bstr_t DataDirectory;
    __declspec(property(get=GetNamelistFile,put=PutNamelistFile))
    _bstr_t NamelistFile;
    __declspec(property(get=GetDensityType,put=PutDensityType))
    enum AgEVAMarsGRAMDensityType DensityType;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    _bstr_t GetDataDirectory ( );
    void PutDataDirectory (
        _bstr_t pVal );
    _bstr_t GetNamelistFile ( );
    void PutNamelistFile (
        _bstr_t pVal );
    enum AgEVAMarsGRAMDensityType GetDensityType ( );
    void PutDensityType (
        enum AgEVAMarsGRAMDensityType pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_DataDirectory (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DataDirectory (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_NamelistFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_NamelistFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DensityType (
        /*[out,retval]*/ enum AgEVAMarsGRAMDensityType * pVal ) = 0;
      virtual HRESULT __stdcall put_DensityType (
        /*[in]*/ enum AgEVAMarsGRAMDensityType pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
};

struct __declspec(uuid("636ae395-c2f7-4e3e-91bc-57a76b98d18f"))
IAgVADTM2012 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
};

struct __declspec(uuid("926147c7-e058-490d-84a4-8b25cf330297"))
_IAgVADTM2012 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseApproximateAltitude,put=PutUseApproximateAltitude))
    VARIANT_BOOL UseApproximateAltitude;
    __declspec(property(get=GetComputesTemperature))
    VARIANT_BOOL ComputesTemperature;
    __declspec(property(get=GetComputesPressure))
    VARIANT_BOOL ComputesPressure;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetAtmosDataSource,put=PutAtmosDataSource))
    enum AgEVAAtmosDataSource AtmosDataSource;
    __declspec(property(get=GetF10p7Avg,put=PutF10p7Avg))
    double F10p7Avg;
    __declspec(property(get=GetAtmosDataFilename,put=PutAtmosDataFilename))
    _bstr_t AtmosDataFilename;
    __declspec(property(get=GetDragModelType,put=PutDragModelType))
    enum AgEVADragModelType DragModelType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDragModelPluginName,put=PutDragModelPluginName))
    _bstr_t DragModelPluginName;
    __declspec(property(get=GetDragModelPlugin))
    IAgVADragModelPluginPtr DragModelPlugin;
    __declspec(property(get=GetF10p7,put=PutF10p7))
    double F10p7;
    __declspec(property(get=GetKp,put=PutKp))
    double Kp;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxSource,put=PutAtmosDataGeoMagneticFluxSource))
    enum AgEVAGeoMagneticFluxSource AtmosDataGeoMagneticFluxSource;
    __declspec(property(get=GetAtmosDataGeoMagneticFluxUpdateRate,put=PutAtmosDataGeoMagneticFluxUpdateRate))
    enum AgEVAGeoMagneticFluxUpdateRate AtmosDataGeoMagneticFluxUpdateRate;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetUseApproximateAltitude ( );
    void PutUseApproximateAltitude (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetComputesTemperature ( );
    VARIANT_BOOL GetComputesPressure ( );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    enum AgEVAAtmosDataSource GetAtmosDataSource ( );
    void PutAtmosDataSource (
        enum AgEVAAtmosDataSource pVal );
    double GetF10p7Avg ( );
    void PutF10p7Avg (
        double pVal );
    _bstr_t GetAtmosDataFilename ( );
    void PutAtmosDataFilename (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVADragModelType GetDragModelType ( );
    void PutDragModelType (
        enum AgEVADragModelType pVal );
    _bstr_t GetDragModelPluginName ( );
    void PutDragModelPluginName (
        _bstr_t pVal );
    IAgVADragModelPluginPtr GetDragModelPlugin ( );
    double GetF10p7 ( );
    void PutF10p7 (
        double pVal );
    double GetKp ( );
    void PutKp (
        double pVal );
    enum AgEVAGeoMagneticFluxSource GetAtmosDataGeoMagneticFluxSource ( );
    void PutAtmosDataGeoMagneticFluxSource (
        enum AgEVAGeoMagneticFluxSource pVal );
    enum AgEVAGeoMagneticFluxUpdateRate GetAtmosDataGeoMagneticFluxUpdateRate ( );
    void PutAtmosDataGeoMagneticFluxUpdateRate (
        enum AgEVAGeoMagneticFluxUpdateRate pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApproximateAltitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseApproximateAltitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesTemperature (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ComputesPressure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataSource (
        /*[out,retval]*/ enum AgEVAAtmosDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataSource (
        /*[in]*/ enum AgEVAAtmosDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_F10p7Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7Avg (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_DragModelType (
        /*[out,retval]*/ enum AgEVADragModelType * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelType (
        /*[in]*/ enum AgEVADragModelType pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DragModelPluginName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_DragModelPlugin (
        /*[out,retval]*/ struct IAgVADragModelPlugin * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_F10p7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_F10p7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Kp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Kp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxSource (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxSource * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxSource (
        /*[in]*/ enum AgEVAGeoMagneticFluxSource pVal ) = 0;
      virtual HRESULT __stdcall get_AtmosDataGeoMagneticFluxUpdateRate (
        /*[out,retval]*/ enum AgEVAGeoMagneticFluxUpdateRate * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosDataGeoMagneticFluxUpdateRate (
        /*[in]*/ enum AgEVAGeoMagneticFluxUpdateRate pVal ) = 0;
};

struct __declspec(uuid("2011ee7a-7c3e-408f-abf6-5b8944e4c1bb"))
IAgVAGravityFieldFunction : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetGravityFilename,put=PutGravityFilename))
    _bstr_t GravityFilename;
    __declspec(property(get=GetDegree,put=PutDegree))
    long Degree;
    __declspec(property(get=GetOrder,put=PutOrder))
    long Order;
    __declspec(property(get=GetMaxDegreeText))
    _bstr_t MaxDegreeText;
    __declspec(property(get=GetMaxOrderText))
    _bstr_t MaxOrderText;
    __declspec(property(get=GetIncludeTimeDependentSolidTides,put=PutIncludeTimeDependentSolidTides))
    VARIANT_BOOL IncludeTimeDependentSolidTides;
    __declspec(property(get=GetSolidTideMinAmp,put=PutSolidTideMinAmp))
    double SolidTideMinAmp;
    __declspec(property(get=GetUseOceanTides,put=PutUseOceanTides))
    VARIANT_BOOL UseOceanTides;
    __declspec(property(get=GetOceanTideMinAmp,put=PutOceanTideMinAmp))
    double OceanTideMinAmp;
    __declspec(property(get=GetMinRadiusPercent,put=PutMinRadiusPercent))
    double MinRadiusPercent;
    __declspec(property(get=GetCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetOceanTideMaxDegree,put=PutOceanTideMaxDegree))
    long OceanTideMaxDegree;
    __declspec(property(get=GetOceanTideMaxOrder,put=PutOceanTideMaxOrder))
    long OceanTideMaxOrder;
    __declspec(property(get=GetSolidTideType,put=PutSolidTideType))
    enum STKObjects::AgESolidTide SolidTideType;
    __declspec(property(get=GetTruncateSolidTides,put=PutTruncateSolidTides))
    VARIANT_BOOL TruncateSolidTides;
    __declspec(property(get=GetUseSecularVariations,put=PutUseSecularVariations))
    VARIANT_BOOL UseSecularVariations;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetGravityFilename ( );
    void PutGravityFilename (
        _bstr_t pVal );
    long GetDegree ( );
    void PutDegree (
        long pVal );
    long GetOrder ( );
    void PutOrder (
        long pVal );
    _bstr_t GetMaxDegreeText ( );
    _bstr_t GetMaxOrderText ( );
    VARIANT_BOOL GetIncludeTimeDependentSolidTides ( );
    void PutIncludeTimeDependentSolidTides (
        VARIANT_BOOL pVal );
    double GetSolidTideMinAmp ( );
    void PutSolidTideMinAmp (
        double pVal );
    VARIANT_BOOL GetUseOceanTides ( );
    void PutUseOceanTides (
        VARIANT_BOOL pVal );
    double GetOceanTideMinAmp ( );
    void PutOceanTideMinAmp (
        double pVal );
    double GetMinRadiusPercent ( );
    void PutMinRadiusPercent (
        double pVal );
    _bstr_t GetCentralBodyName ( );
    long GetOceanTideMaxDegree ( );
    void PutOceanTideMaxDegree (
        long pVal );
    long GetOceanTideMaxOrder ( );
    void PutOceanTideMaxOrder (
        long pVal );
    enum STKObjects::AgESolidTide GetSolidTideType ( );
    void PutSolidTideType (
        enum STKObjects::AgESolidTide pSolidTide );
    VARIANT_BOOL GetTruncateSolidTides ( );
    void PutTruncateSolidTides (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseSecularVariations ( );
    void PutUseSecularVariations (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GravityFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_GravityFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Degree (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Degree (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Order (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_MaxDegreeText (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_MaxOrderText (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeTimeDependentSolidTides (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeTimeDependentSolidTides (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolidTideMinAmp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolidTideMinAmp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseOceanTides (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseOceanTides (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_OceanTideMinAmp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_OceanTideMinAmp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinRadiusPercent (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinRadiusPercent (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_OceanTideMaxDegree (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_OceanTideMaxDegree (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_OceanTideMaxOrder (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_OceanTideMaxOrder (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_SolidTideType (
        /*[out,retval]*/ enum STKObjects::AgESolidTide * pSolidTide ) = 0;
      virtual HRESULT __stdcall put_SolidTideType (
        /*[in]*/ enum STKObjects::AgESolidTide pSolidTide ) = 0;
      virtual HRESULT __stdcall get_TruncateSolidTides (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_TruncateSolidTides (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseSecularVariations (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSecularVariations (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("d817249b-d06d-4a9b-9e50-8f664f5b25fc"))
_IAgVAGravityFieldFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGravityFilename,put=PutGravityFilename))
    _bstr_t GravityFilename;
    __declspec(property(get=GetDegree,put=PutDegree))
    long Degree;
    __declspec(property(get=GetOrder,put=PutOrder))
    long Order;
    __declspec(property(get=GetMaxDegreeText))
    _bstr_t MaxDegreeText;
    __declspec(property(get=GetMaxOrderText))
    _bstr_t MaxOrderText;
    __declspec(property(get=GetIncludeTimeDependentSolidTides,put=PutIncludeTimeDependentSolidTides))
    VARIANT_BOOL IncludeTimeDependentSolidTides;
    __declspec(property(get=GetSolidTideMinAmp,put=PutSolidTideMinAmp))
    double SolidTideMinAmp;
    __declspec(property(get=GetUseOceanTides,put=PutUseOceanTides))
    VARIANT_BOOL UseOceanTides;
    __declspec(property(get=GetOceanTideMinAmp,put=PutOceanTideMinAmp))
    double OceanTideMinAmp;
    __declspec(property(get=GetMinRadiusPercent,put=PutMinRadiusPercent))
    double MinRadiusPercent;
    __declspec(property(get=GetCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetOceanTideMaxDegree,put=PutOceanTideMaxDegree))
    long OceanTideMaxDegree;
    __declspec(property(get=GetOceanTideMaxOrder,put=PutOceanTideMaxOrder))
    long OceanTideMaxOrder;
    __declspec(property(get=GetSolidTideType,put=PutSolidTideType))
    enum STKObjects::AgESolidTide SolidTideType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetTruncateSolidTides,put=PutTruncateSolidTides))
    VARIANT_BOOL TruncateSolidTides;
    __declspec(property(get=GetUseSecularVariations,put=PutUseSecularVariations))
    VARIANT_BOOL UseSecularVariations;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetGravityFilename ( );
    void PutGravityFilename (
        _bstr_t pVal );
    long GetDegree ( );
    void PutDegree (
        long pVal );
    long GetOrder ( );
    void PutOrder (
        long pVal );
    _bstr_t GetMaxDegreeText ( );
    _bstr_t GetMaxOrderText ( );
    VARIANT_BOOL GetIncludeTimeDependentSolidTides ( );
    void PutIncludeTimeDependentSolidTides (
        VARIANT_BOOL pVal );
    double GetSolidTideMinAmp ( );
    void PutSolidTideMinAmp (
        double pVal );
    VARIANT_BOOL GetUseOceanTides ( );
    void PutUseOceanTides (
        VARIANT_BOOL pVal );
    double GetOceanTideMinAmp ( );
    void PutOceanTideMinAmp (
        double pVal );
    double GetMinRadiusPercent ( );
    void PutMinRadiusPercent (
        double pVal );
    _bstr_t GetCentralBodyName ( );
    long GetOceanTideMaxDegree ( );
    void PutOceanTideMaxDegree (
        long pVal );
    long GetOceanTideMaxOrder ( );
    void PutOceanTideMaxOrder (
        long pVal );
    enum STKObjects::AgESolidTide GetSolidTideType ( );
    void PutSolidTideType (
        enum STKObjects::AgESolidTide pSolidTide );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetTruncateSolidTides ( );
    void PutTruncateSolidTides (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseSecularVariations ( );
    void PutUseSecularVariations (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GravityFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_GravityFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Degree (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Degree (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Order (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_MaxDegreeText (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_MaxOrderText (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeTimeDependentSolidTides (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeTimeDependentSolidTides (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolidTideMinAmp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolidTideMinAmp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseOceanTides (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseOceanTides (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_OceanTideMinAmp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_OceanTideMinAmp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinRadiusPercent (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinRadiusPercent (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_OceanTideMaxDegree (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_OceanTideMaxDegree (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_OceanTideMaxOrder (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_OceanTideMaxOrder (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_SolidTideType (
        /*[out,retval]*/ enum STKObjects::AgESolidTide * pSolidTide ) = 0;
      virtual HRESULT __stdcall put_SolidTideType (
        /*[in]*/ enum STKObjects::AgESolidTide pSolidTide ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_TruncateSolidTides (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_TruncateSolidTides (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseSecularVariations (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSecularVariations (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("0421f516-1a39-4a3b-afc3-9fa172ff8ca1"))
IAgVAPointMassFunction : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetGravSource,put=PutGravSource))
    enum AgEVAGravParamSource GravSource;
    __declspec(property(get=GetMu,put=PutMu))
    double Mu;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAGravParamSource GetGravSource ( );
    void PutGravSource (
        enum AgEVAGravParamSource pVal );
    double GetMu ( );
    void PutMu (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GravSource (
        /*[out,retval]*/ enum AgEVAGravParamSource * pVal ) = 0;
      virtual HRESULT __stdcall put_GravSource (
        /*[in]*/ enum AgEVAGravParamSource pVal ) = 0;
      virtual HRESULT __stdcall get_Mu (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Mu (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("02be8d4b-4990-434b-b989-7d731173da4c"))
_IAgVAPointMassFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGravSource,put=PutGravSource))
    enum AgEVAGravParamSource GravSource;
    __declspec(property(get=GetMu,put=PutMu))
    double Mu;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAGravParamSource GetGravSource ( );
    void PutGravSource (
        enum AgEVAGravParamSource pVal );
    double GetMu ( );
    void PutMu (
        double pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GravSource (
        /*[out,retval]*/ enum AgEVAGravParamSource * pVal ) = 0;
      virtual HRESULT __stdcall put_GravSource (
        /*[in]*/ enum AgEVAGravParamSource pVal ) = 0;
      virtual HRESULT __stdcall get_Mu (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Mu (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("bc3b511f-6002-4a81-a5ff-15dedb1994fc"))
IAgVATwoBodyFunction : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetGravSource,put=PutGravSource))
    enum AgEVAGravParamSource GravSource;
    __declspec(property(get=GetMu,put=PutMu))
    double Mu;
    __declspec(property(get=GetMinRadiusPercent,put=PutMinRadiusPercent))
    double MinRadiusPercent;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAGravParamSource GetGravSource ( );
    void PutGravSource (
        enum AgEVAGravParamSource pVal );
    double GetMu ( );
    void PutMu (
        double pVal );
    double GetMinRadiusPercent ( );
    void PutMinRadiusPercent (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GravSource (
        /*[out,retval]*/ enum AgEVAGravParamSource * pVal ) = 0;
      virtual HRESULT __stdcall put_GravSource (
        /*[in]*/ enum AgEVAGravParamSource pVal ) = 0;
      virtual HRESULT __stdcall get_Mu (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Mu (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinRadiusPercent (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinRadiusPercent (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("9d628a10-979a-466a-a02c-4bc5732f1491"))
_IAgVATwoBodyFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGravSource,put=PutGravSource))
    enum AgEVAGravParamSource GravSource;
    __declspec(property(get=GetMu,put=PutMu))
    double Mu;
    __declspec(property(get=GetMinRadiusPercent,put=PutMinRadiusPercent))
    double MinRadiusPercent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAGravParamSource GetGravSource ( );
    void PutGravSource (
        enum AgEVAGravParamSource pVal );
    double GetMu ( );
    void PutMu (
        double pVal );
    double GetMinRadiusPercent ( );
    void PutMinRadiusPercent (
        double pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GravSource (
        /*[out,retval]*/ enum AgEVAGravParamSource * pVal ) = 0;
      virtual HRESULT __stdcall put_GravSource (
        /*[in]*/ enum AgEVAGravParamSource pVal ) = 0;
      virtual HRESULT __stdcall get_Mu (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Mu (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinRadiusPercent (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinRadiusPercent (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("73655e84-7b64-423b-b719-979c37e91c12"))
IAgVAHPOPPluginFunction : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetPluginIdentifier,put=PutPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPluginIdentifier ( );
    void PutPluginIdentifier (
        _bstr_t pVal );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PluginIdentifier (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
};

struct __declspec(uuid("2847f738-6b69-4118-81f2-0cc5096ab859"))
_IAgVAHPOPPluginFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPluginIdentifier,put=PutPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPluginIdentifier ( );
    void PutPluginIdentifier (
        _bstr_t pVal );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PluginIdentifier (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("f817dbe1-f572-4b20-bfe2-7bea81f6b7a6"))
IAgVAEOMFuncPluginFunction : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetPluginIdentifier,put=PutPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPluginIdentifier ( );
    void PutPluginIdentifier (
        _bstr_t pVal );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PluginIdentifier (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
};

struct __declspec(uuid("78c6ede7-41f6-419e-ab9d-9d9dedd21a8f"))
_IAgVAEOMFuncPluginFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPluginIdentifier,put=PutPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPluginIdentifier ( );
    void PutPluginIdentifier (
        _bstr_t pVal );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PluginIdentifier (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("15706c17-c342-4089-944f-526e971d6dd6"))
IAgVAThirdBodyFunction : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetThirdBodyName,put=PutThirdBodyName))
    _bstr_t ThirdBodyName;
    __declspec(property(get=GetEphemSource,put=PutEphemSource))
    enum AgEVAEphemSource EphemSource;
    __declspec(property(get=GetMode))
    STKObjects::IAgComponentInfoPtr Mode;
    __declspec(property(get=GetModeType))
    enum AgEVAThirdBodyMode ModeType;
    __declspec(property(get=GetEphemerisSourceWarning))
    _bstr_t EphemerisSourceWarning;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetThirdBodyName ( );
    void PutThirdBodyName (
        _bstr_t pVal );
    enum AgEVAEphemSource GetEphemSource ( );
    void PutEphemSource (
        enum AgEVAEphemSource pVal );
    STKObjects::IAgComponentInfoPtr GetMode ( );
    HRESULT SetModeType (
        enum AgEVAThirdBodyMode Mode );
    enum AgEVAThirdBodyMode GetModeType ( );
    _bstr_t GetEphemerisSourceWarning ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ThirdBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ThirdBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_EphemSource (
        /*[out,retval]*/ enum AgEVAEphemSource * pVal ) = 0;
      virtual HRESULT __stdcall put_EphemSource (
        /*[in]*/ enum AgEVAEphemSource pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppComponent ) = 0;
      virtual HRESULT __stdcall raw_SetModeType (
        /*[in]*/ enum AgEVAThirdBodyMode Mode ) = 0;
      virtual HRESULT __stdcall get_ModeType (
        /*[out,retval]*/ enum AgEVAThirdBodyMode * pVal ) = 0;
      virtual HRESULT __stdcall get_EphemerisSourceWarning (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("226c147f-ec86-4a27-b4e0-f9d83ee7eb21"))
_IAgVAThirdBodyFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetThirdBodyName,put=PutThirdBodyName))
    _bstr_t ThirdBodyName;
    __declspec(property(get=GetEphemSource,put=PutEphemSource))
    enum AgEVAEphemSource EphemSource;
    __declspec(property(get=GetMode))
    STKObjects::IAgComponentInfoPtr Mode;
    __declspec(property(get=GetModeType))
    enum AgEVAThirdBodyMode ModeType;
    __declspec(property(get=GetEphemerisSourceWarning))
    _bstr_t EphemerisSourceWarning;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetThirdBodyName ( );
    void PutThirdBodyName (
        _bstr_t pVal );
    enum AgEVAEphemSource GetEphemSource ( );
    void PutEphemSource (
        enum AgEVAEphemSource pVal );
    STKObjects::IAgComponentInfoPtr GetMode ( );
    HRESULT SetModeType (
        enum AgEVAThirdBodyMode Mode );
    enum AgEVAThirdBodyMode GetModeType ( );
    _bstr_t GetEphemerisSourceWarning ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ThirdBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ThirdBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_EphemSource (
        /*[out,retval]*/ enum AgEVAEphemSource * pVal ) = 0;
      virtual HRESULT __stdcall put_EphemSource (
        /*[in]*/ enum AgEVAEphemSource pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppComponent ) = 0;
      virtual HRESULT __stdcall raw_SetModeType (
        /*[in]*/ enum AgEVAThirdBodyMode Mode ) = 0;
      virtual HRESULT __stdcall get_ModeType (
        /*[out,retval]*/ enum AgEVAThirdBodyMode * pVal ) = 0;
      virtual HRESULT __stdcall get_EphemerisSourceWarning (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

enum AgEVAControlEngineConstAcc
{
    eVAControlEngineConstAccGrav = 0,
    eVAControlEngineConstAccAcceleration = 1,
    eVAControlEngineConstAccIsp = 2
};

enum AgEVAControlEngineConstant
{
    eVAControlEngineConstantGrav = 0,
    eVAControlEngineConstantThrust = 1,
    eVAControlEngineConstantIsp = 2
};

enum AgEVAControlEngineCustom
{
    eVAControlEngineCustomGrav = 0
};

enum AgEVAControlEngineIon
{
    eVAControlEngineIonFlowRateC0 = 0,
    eVAControlEngineIonFlowRateC1 = 1,
    eVAControlEngineIonFlowRateC2 = 2,
    eVAControlEngineIonFlowRateC3 = 3,
    eVAControlEngineIonGrav = 4,
    eVAControlEngineIonIspC0 = 5,
    eVAControlEngineIonIspC1 = 6,
    eVAControlEngineIonIspC2 = 7,
    eVAControlEngineIonIspC3 = 8,
    eVAControlEngineIonMassFlowEfficiencyC0 = 9,
    eVAControlEngineIonMassFlowEfficiencyC1 = 10,
    eVAControlEngineIonMassFlowEfficiencyC2 = 11,
    eVAControlEngineIonMassFlowEfficiencyC3 = 12,
    eVAControlEngineIonMaxInputPower = 13,
    eVAControlEngineIonMinRequiredPower = 14,
    eVAControlEngineIonPercentDegradationPerYear = 15,
    eVAControlEngineIonPercentThrottle = 16,
    eVAControlEngineIonPowerEfficiencyC0 = 17,
    eVAControlEngineIonPowerEfficiencyC1 = 18,
    eVAControlEngineIonPowerEfficiencyC2 = 19,
    eVAControlEngineIonPowerEfficiencyC3 = 20,
    eVAControlEngineIonReferenceEpoch = 21
};

enum AgEVAControlEngineModelPoly
{
    eVAControlEngineModelPolyThrustC0 = 0,
    eVAControlEngineModelPolyThrustC1 = 1,
    eVAControlEngineModelPolyThrustC2 = 2,
    eVAControlEngineModelPolyThrustC3 = 3,
    eVAControlEngineModelPolyThrustC4 = 4,
    eVAControlEngineModelPolyThrustC5 = 5,
    eVAControlEngineModelPolyThrustC6 = 6,
    eVAControlEngineModelPolyThrustC7 = 7,
    eVAControlEngineModelPolyThrustB7 = 8,
    eVAControlEngineModelPolyThrustE4 = 9,
    eVAControlEngineModelPolyThrustE5 = 10,
    eVAControlEngineModelPolyThrustE6 = 11,
    eVAControlEngineModelPolyThrustE7 = 12,
    eVAControlEngineModelPolyThrustK0 = 13,
    eVAControlEngineModelPolyThrustK1 = 14,
    eVAControlEngineModelPolyThrustReferenceTemp = 15,
    eVAControlEngineModelPolyIspC0 = 16,
    eVAControlEngineModelPolyIspC1 = 17,
    eVAControlEngineModelPolyIspC2 = 18,
    eVAControlEngineModelPolyIspC3 = 19,
    eVAControlEngineModelPolyIspC4 = 20,
    eVAControlEngineModelPolyIspC5 = 21,
    eVAControlEngineModelPolyIspC6 = 22,
    eVAControlEngineModelPolyIspC7 = 23,
    eVAControlEngineModelPolyIspB7 = 24,
    eVAControlEngineModelPolyIspE4 = 25,
    eVAControlEngineModelPolyIspE5 = 26,
    eVAControlEngineModelPolyIspE6 = 27,
    eVAControlEngineModelPolyIspE7 = 28,
    eVAControlEngineModelPolyIspK0 = 29,
    eVAControlEngineModelPolyIspK1 = 30,
    eVAControlEngineModelPolyIspReferenceTemp = 31,
    eVAControlEngineModelPolyGrav = 32
};

enum AgEVAEngineModelFunction
{
    eVAEngineModelFunctionIsp = 0,
    eVAEngineModelFunctionPower = 1,
    eVAEngineModelFunctionIspAndPower = 2
};

struct __declspec(uuid("8ccd3bb0-8288-49c3-8d54-fdb77bdfd00f"))
IAgVAEngineModelThrustCoefficients : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetC0,put=PutC0))
    double C0;
    __declspec(property(get=GetC1,put=PutC1))
    double C1;
    __declspec(property(get=GetC2,put=PutC2))
    double C2;
    __declspec(property(get=GetC3,put=PutC3))
    double C3;
    __declspec(property(get=GetC4,put=PutC4))
    double C4;
    __declspec(property(get=GetC5,put=PutC5))
    double C5;
    __declspec(property(get=GetC6,put=PutC6))
    double C6;
    __declspec(property(get=GetC7,put=PutC7))
    double C7;
    __declspec(property(get=GetE4,put=PutE4))
    double E4;
    __declspec(property(get=GetE5,put=PutE5))
    double E5;
    __declspec(property(get=GetE6,put=PutE6))
    double E6;
    __declspec(property(get=GetE7,put=PutE7))
    double E7;
    __declspec(property(get=GetB7,put=PutB7))
    double B7;
    __declspec(property(get=GetK0,put=PutK0))
    double K0;
    __declspec(property(get=GetK1,put=PutK1))
    double K1;
    __declspec(property(get=GetReferenceTemp,put=PutReferenceTemp))
    double ReferenceTemp;

    //
    // Wrapper methods for error-handling
    //

    double GetC0 ( );
    void PutC0 (
        double pVal );
    double GetC1 ( );
    void PutC1 (
        double pVal );
    double GetC2 ( );
    void PutC2 (
        double pVal );
    double GetC3 ( );
    void PutC3 (
        double pVal );
    double GetC4 ( );
    void PutC4 (
        double pVal );
    double GetC5 ( );
    void PutC5 (
        double pVal );
    double GetC6 ( );
    void PutC6 (
        double pVal );
    double GetC7 ( );
    void PutC7 (
        double pVal );
    double GetE4 ( );
    void PutE4 (
        double pVal );
    double GetE5 ( );
    void PutE5 (
        double pVal );
    double GetE6 ( );
    void PutE6 (
        double pVal );
    double GetE7 ( );
    void PutE7 (
        double pVal );
    double GetB7 ( );
    void PutB7 (
        double pVal );
    double GetK0 ( );
    void PutK0 (
        double pVal );
    double GetK1 ( );
    void PutK1 (
        double pVal );
    double GetReferenceTemp ( );
    void PutReferenceTemp (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_C0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C5 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C5 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C6 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C6 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E5 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E5 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E6 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E6 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_B7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_B7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceTemp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceTemp (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("a71fbe05-c92d-4c21-92c2-124258196080"))
_IAgVAEngineModelThrustCoefficients : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetC0,put=PutC0))
    double C0;
    __declspec(property(get=GetC1,put=PutC1))
    double C1;
    __declspec(property(get=GetC2,put=PutC2))
    double C2;
    __declspec(property(get=GetC3,put=PutC3))
    double C3;
    __declspec(property(get=GetC4,put=PutC4))
    double C4;
    __declspec(property(get=GetC5,put=PutC5))
    double C5;
    __declspec(property(get=GetC6,put=PutC6))
    double C6;
    __declspec(property(get=GetC7,put=PutC7))
    double C7;
    __declspec(property(get=GetE4,put=PutE4))
    double E4;
    __declspec(property(get=GetE5,put=PutE5))
    double E5;
    __declspec(property(get=GetE6,put=PutE6))
    double E6;
    __declspec(property(get=GetE7,put=PutE7))
    double E7;
    __declspec(property(get=GetB7,put=PutB7))
    double B7;
    __declspec(property(get=GetK0,put=PutK0))
    double K0;
    __declspec(property(get=GetK1,put=PutK1))
    double K1;
    __declspec(property(get=GetReferenceTemp,put=PutReferenceTemp))
    double ReferenceTemp;

    //
    // Wrapper methods for error-handling
    //

    double GetC0 ( );
    void PutC0 (
        double pVal );
    double GetC1 ( );
    void PutC1 (
        double pVal );
    double GetC2 ( );
    void PutC2 (
        double pVal );
    double GetC3 ( );
    void PutC3 (
        double pVal );
    double GetC4 ( );
    void PutC4 (
        double pVal );
    double GetC5 ( );
    void PutC5 (
        double pVal );
    double GetC6 ( );
    void PutC6 (
        double pVal );
    double GetC7 ( );
    void PutC7 (
        double pVal );
    double GetE4 ( );
    void PutE4 (
        double pVal );
    double GetE5 ( );
    void PutE5 (
        double pVal );
    double GetE6 ( );
    void PutE6 (
        double pVal );
    double GetE7 ( );
    void PutE7 (
        double pVal );
    double GetB7 ( );
    void PutB7 (
        double pVal );
    double GetK0 ( );
    void PutK0 (
        double pVal );
    double GetK1 ( );
    void PutK1 (
        double pVal );
    double GetReferenceTemp ( );
    void PutReferenceTemp (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_C0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C5 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C5 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C6 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C6 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E5 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E5 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E6 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E6 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_B7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_B7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceTemp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceTemp (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("f20f4dd3-d675-4e97-910d-a19ef27de66c"))
IAgVAEngineModelIspCoefficients : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetC0,put=PutC0))
    double C0;
    __declspec(property(get=GetC1,put=PutC1))
    double C1;
    __declspec(property(get=GetC2,put=PutC2))
    double C2;
    __declspec(property(get=GetC3,put=PutC3))
    double C3;
    __declspec(property(get=GetC4,put=PutC4))
    double C4;
    __declspec(property(get=GetC5,put=PutC5))
    double C5;
    __declspec(property(get=GetC6,put=PutC6))
    double C6;
    __declspec(property(get=GetC7,put=PutC7))
    double C7;
    __declspec(property(get=GetE4,put=PutE4))
    double E4;
    __declspec(property(get=GetE5,put=PutE5))
    double E5;
    __declspec(property(get=GetE6,put=PutE6))
    double E6;
    __declspec(property(get=GetE7,put=PutE7))
    double E7;
    __declspec(property(get=GetB7,put=PutB7))
    double B7;
    __declspec(property(get=GetK0,put=PutK0))
    double K0;
    __declspec(property(get=GetK1,put=PutK1))
    double K1;
    __declspec(property(get=GetReferenceTemp,put=PutReferenceTemp))
    double ReferenceTemp;

    //
    // Wrapper methods for error-handling
    //

    double GetC0 ( );
    void PutC0 (
        double pVal );
    double GetC1 ( );
    void PutC1 (
        double pVal );
    double GetC2 ( );
    void PutC2 (
        double pVal );
    double GetC3 ( );
    void PutC3 (
        double pVal );
    double GetC4 ( );
    void PutC4 (
        double pVal );
    double GetC5 ( );
    void PutC5 (
        double pVal );
    double GetC6 ( );
    void PutC6 (
        double pVal );
    double GetC7 ( );
    void PutC7 (
        double pVal );
    double GetE4 ( );
    void PutE4 (
        double pVal );
    double GetE5 ( );
    void PutE5 (
        double pVal );
    double GetE6 ( );
    void PutE6 (
        double pVal );
    double GetE7 ( );
    void PutE7 (
        double pVal );
    double GetB7 ( );
    void PutB7 (
        double pVal );
    double GetK0 ( );
    void PutK0 (
        double pVal );
    double GetK1 ( );
    void PutK1 (
        double pVal );
    double GetReferenceTemp ( );
    void PutReferenceTemp (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_C0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C5 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C5 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C6 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C6 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E5 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E5 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E6 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E6 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_B7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_B7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceTemp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceTemp (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("7f3f82ba-1023-452a-adc5-444b48df3105"))
_IAgVAEngineModelIspCoefficients : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetC0,put=PutC0))
    double C0;
    __declspec(property(get=GetC1,put=PutC1))
    double C1;
    __declspec(property(get=GetC2,put=PutC2))
    double C2;
    __declspec(property(get=GetC3,put=PutC3))
    double C3;
    __declspec(property(get=GetC4,put=PutC4))
    double C4;
    __declspec(property(get=GetC5,put=PutC5))
    double C5;
    __declspec(property(get=GetC6,put=PutC6))
    double C6;
    __declspec(property(get=GetC7,put=PutC7))
    double C7;
    __declspec(property(get=GetE4,put=PutE4))
    double E4;
    __declspec(property(get=GetE5,put=PutE5))
    double E5;
    __declspec(property(get=GetE6,put=PutE6))
    double E6;
    __declspec(property(get=GetE7,put=PutE7))
    double E7;
    __declspec(property(get=GetB7,put=PutB7))
    double B7;
    __declspec(property(get=GetK0,put=PutK0))
    double K0;
    __declspec(property(get=GetK1,put=PutK1))
    double K1;
    __declspec(property(get=GetReferenceTemp,put=PutReferenceTemp))
    double ReferenceTemp;

    //
    // Wrapper methods for error-handling
    //

    double GetC0 ( );
    void PutC0 (
        double pVal );
    double GetC1 ( );
    void PutC1 (
        double pVal );
    double GetC2 ( );
    void PutC2 (
        double pVal );
    double GetC3 ( );
    void PutC3 (
        double pVal );
    double GetC4 ( );
    void PutC4 (
        double pVal );
    double GetC5 ( );
    void PutC5 (
        double pVal );
    double GetC6 ( );
    void PutC6 (
        double pVal );
    double GetC7 ( );
    void PutC7 (
        double pVal );
    double GetE4 ( );
    void PutE4 (
        double pVal );
    double GetE5 ( );
    void PutE5 (
        double pVal );
    double GetE6 ( );
    void PutE6 (
        double pVal );
    double GetE7 ( );
    void PutE7 (
        double pVal );
    double GetB7 ( );
    void PutB7 (
        double pVal );
    double GetK0 ( );
    void PutK0 (
        double pVal );
    double GetK1 ( );
    void PutK1 (
        double pVal );
    double GetReferenceTemp ( );
    void PutReferenceTemp (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_C0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C5 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C5 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C6 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C6 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E5 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E5 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E6 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E6 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_E7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_E7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_B7 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_B7 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceTemp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceTemp (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("71bf09dc-9326-41ff-a2bf-cc781bc6c449"))
IAgVAEngineConstAcc : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetAcceleration,put=PutAcceleration))
    double Acceleration;
    __declspec(property(get=GetIsp,put=PutIsp))
    double Isp;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    double GetAcceleration ( );
    void PutAcceleration (
        double pVal );
    double GetIsp ( );
    void PutIsp (
        double pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlEngineConstAcc Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlEngineConstAcc Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlEngineConstAcc Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Acceleration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Acceleration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Isp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Isp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlEngineConstAcc Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlEngineConstAcc Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlEngineConstAcc Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("ce36d323-1a27-40c3-bea6-798dc1f7ebf7"))
_IAgVAEngineConstAcc : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetAcceleration,put=PutAcceleration))
    double Acceleration;
    __declspec(property(get=GetIsp,put=PutIsp))
    double Isp;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    double GetAcceleration ( );
    void PutAcceleration (
        double pVal );
    double GetIsp ( );
    void PutIsp (
        double pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlEngineConstAcc Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlEngineConstAcc Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlEngineConstAcc Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Acceleration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Acceleration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Isp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Isp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlEngineConstAcc Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlEngineConstAcc Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlEngineConstAcc Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("f25f5caa-db2b-4331-9d13-5670d8613c01"))
IAgVAEngineConstant : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetThrust,put=PutThrust))
    double Thrust;
    __declspec(property(get=GetIsp,put=PutIsp))
    double Isp;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    double GetThrust ( );
    void PutThrust (
        double pVal );
    double GetIsp ( );
    void PutIsp (
        double pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlEngineConstant Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlEngineConstant Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlEngineConstant Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Thrust (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Thrust (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Isp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Isp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlEngineConstant Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlEngineConstant Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlEngineConstant Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("071705cb-b3ac-4bfb-b3c4-9eb289e327d2"))
_IAgVAEngineConstant : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetThrust,put=PutThrust))
    double Thrust;
    __declspec(property(get=GetIsp,put=PutIsp))
    double Isp;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    double GetThrust ( );
    void PutThrust (
        double pVal );
    double GetIsp ( );
    void PutIsp (
        double pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlEngineConstant Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlEngineConstant Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlEngineConstant Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Thrust (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Thrust (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Isp (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Isp (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlEngineConstant Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlEngineConstant Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlEngineConstant Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("481cbbdf-926c-46bc-8e1f-2575be400b17"))
IAgVAEngineDefinition : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetIspC0,put=PutIspC0))
    double IspC0;
    __declspec(property(get=GetIspC1,put=PutIspC1))
    double IspC1;
    __declspec(property(get=GetIspC2,put=PutIspC2))
    double IspC2;
    __declspec(property(get=GetIspC3,put=PutIspC3))
    double IspC3;
    __declspec(property(get=GetMassFlowRateEquationType,put=PutMassFlowRateEquationType))
    enum AgEVAEngineModelFunction MassFlowRateEquationType;
    __declspec(property(get=GetMassFlowRateC0,put=PutMassFlowRateC0))
    double MassFlowRateC0;
    __declspec(property(get=GetMassFlowRateC1,put=PutMassFlowRateC1))
    double MassFlowRateC1;
    __declspec(property(get=GetMassFlowRateC2,put=PutMassFlowRateC2))
    double MassFlowRateC2;
    __declspec(property(get=GetMassFlowRateC3,put=PutMassFlowRateC3))
    double MassFlowRateC3;
    __declspec(property(get=GetMassFlowRateEquation))
    _bstr_t MassFlowRateEquation;
    __declspec(property(get=GetMassFlowEfficiencyC0,put=PutMassFlowEfficiencyC0))
    double MassFlowEfficiencyC0;
    __declspec(property(get=GetMassFlowEfficiencyC1,put=PutMassFlowEfficiencyC1))
    double MassFlowEfficiencyC1;
    __declspec(property(get=GetMassFlowEfficiencyC2,put=PutMassFlowEfficiencyC2))
    double MassFlowEfficiencyC2;
    __declspec(property(get=GetMassFlowEfficiencyC3,put=PutMassFlowEfficiencyC3))
    double MassFlowEfficiencyC3;
    __declspec(property(get=GetMassFlowEfficiencyIndependentVar,put=PutMassFlowEfficiencyIndependentVar))
    enum AgEVAEngineModelFunction MassFlowEfficiencyIndependentVar;
    __declspec(property(get=GetMassFlowEfficiencyEquation))
    _bstr_t MassFlowEfficiencyEquation;
    __declspec(property(get=GetPowerEfficiencyC0,put=PutPowerEfficiencyC0))
    double PowerEfficiencyC0;
    __declspec(property(get=GetPowerEfficiencyC1,put=PutPowerEfficiencyC1))
    double PowerEfficiencyC1;
    __declspec(property(get=GetPowerEfficiencyC2,put=PutPowerEfficiencyC2))
    double PowerEfficiencyC2;
    __declspec(property(get=GetPowerEfficiencyC3,put=PutPowerEfficiencyC3))
    double PowerEfficiencyC3;
    __declspec(property(get=GetPowerEfficiencyIndependentVar,put=PutPowerEfficiencyIndependentVar))
    enum AgEVAEngineModelFunction PowerEfficiencyIndependentVar;
    __declspec(property(get=GetPowerEfficiencyEquation))
    _bstr_t PowerEfficiencyEquation;
    __declspec(property(get=GetInputPowerSourceName))
    _bstr_t InputPowerSourceName;

    //
    // Wrapper methods for error-handling
    //

    double GetIspC0 ( );
    void PutIspC0 (
        double pVal );
    double GetIspC1 ( );
    void PutIspC1 (
        double pVal );
    double GetIspC2 ( );
    void PutIspC2 (
        double pVal );
    double GetIspC3 ( );
    void PutIspC3 (
        double pVal );
    enum AgEVAEngineModelFunction GetMassFlowRateEquationType ( );
    void PutMassFlowRateEquationType (
        enum AgEVAEngineModelFunction pVal );
    double GetMassFlowRateC0 ( );
    void PutMassFlowRateC0 (
        double pVal );
    double GetMassFlowRateC1 ( );
    void PutMassFlowRateC1 (
        double pVal );
    double GetMassFlowRateC2 ( );
    void PutMassFlowRateC2 (
        double pVal );
    double GetMassFlowRateC3 ( );
    void PutMassFlowRateC3 (
        double pVal );
    _bstr_t GetMassFlowRateEquation ( );
    double GetMassFlowEfficiencyC0 ( );
    void PutMassFlowEfficiencyC0 (
        double pVal );
    double GetMassFlowEfficiencyC1 ( );
    void PutMassFlowEfficiencyC1 (
        double pVal );
    double GetMassFlowEfficiencyC2 ( );
    void PutMassFlowEfficiencyC2 (
        double pVal );
    double GetMassFlowEfficiencyC3 ( );
    void PutMassFlowEfficiencyC3 (
        double pVal );
    enum AgEVAEngineModelFunction GetMassFlowEfficiencyIndependentVar ( );
    void PutMassFlowEfficiencyIndependentVar (
        enum AgEVAEngineModelFunction pVal );
    _bstr_t GetMassFlowEfficiencyEquation ( );
    double GetPowerEfficiencyC0 ( );
    void PutPowerEfficiencyC0 (
        double pVal );
    double GetPowerEfficiencyC1 ( );
    void PutPowerEfficiencyC1 (
        double pVal );
    double GetPowerEfficiencyC2 ( );
    void PutPowerEfficiencyC2 (
        double pVal );
    double GetPowerEfficiencyC3 ( );
    void PutPowerEfficiencyC3 (
        double pVal );
    enum AgEVAEngineModelFunction GetPowerEfficiencyIndependentVar ( );
    void PutPowerEfficiencyIndependentVar (
        enum AgEVAEngineModelFunction pVal );
    _bstr_t GetPowerEfficiencyEquation ( );
    _bstr_t GetInputPowerSourceName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IspC0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_IspC0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_IspC1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_IspC1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_IspC2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_IspC2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_IspC3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_IspC3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateEquationType (
        /*[out,retval]*/ enum AgEVAEngineModelFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowRateEquationType (
        /*[in]*/ enum AgEVAEngineModelFunction pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateC0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowRateC0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateC1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowRateC1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateC2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowRateC2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateC3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowRateC3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateEquation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyC0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowEfficiencyC0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyC1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowEfficiencyC1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyC2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowEfficiencyC2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyC3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowEfficiencyC3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyIndependentVar (
        /*[out,retval]*/ enum AgEVAEngineModelFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowEfficiencyIndependentVar (
        /*[in]*/ enum AgEVAEngineModelFunction pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyEquation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyC0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerEfficiencyC0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyC1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerEfficiencyC1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyC2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerEfficiencyC2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyC3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerEfficiencyC3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyIndependentVar (
        /*[out,retval]*/ enum AgEVAEngineModelFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerEfficiencyIndependentVar (
        /*[in]*/ enum AgEVAEngineModelFunction pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyEquation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InputPowerSourceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("498f2033-c01f-4bd4-b8a8-168827938e78"))
_IAgVAEngineDefinition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPowerEfficiencyIndependentVar,put=PutPowerEfficiencyIndependentVar))
    enum AgEVAEngineModelFunction PowerEfficiencyIndependentVar;
    __declspec(property(get=GetPowerEfficiencyEquation))
    _bstr_t PowerEfficiencyEquation;
    __declspec(property(get=GetInputPowerSourceName))
    _bstr_t InputPowerSourceName;
    __declspec(property(get=GetIspC0,put=PutIspC0))
    double IspC0;
    __declspec(property(get=GetIspC1,put=PutIspC1))
    double IspC1;
    __declspec(property(get=GetIspC2,put=PutIspC2))
    double IspC2;
    __declspec(property(get=GetIspC3,put=PutIspC3))
    double IspC3;
    __declspec(property(get=GetMassFlowRateEquationType,put=PutMassFlowRateEquationType))
    enum AgEVAEngineModelFunction MassFlowRateEquationType;
    __declspec(property(get=GetMassFlowRateC0,put=PutMassFlowRateC0))
    double MassFlowRateC0;
    __declspec(property(get=GetMassFlowRateC1,put=PutMassFlowRateC1))
    double MassFlowRateC1;
    __declspec(property(get=GetMassFlowRateC2,put=PutMassFlowRateC2))
    double MassFlowRateC2;
    __declspec(property(get=GetMassFlowRateC3,put=PutMassFlowRateC3))
    double MassFlowRateC3;
    __declspec(property(get=GetMassFlowRateEquation))
    _bstr_t MassFlowRateEquation;
    __declspec(property(get=GetMassFlowEfficiencyC0,put=PutMassFlowEfficiencyC0))
    double MassFlowEfficiencyC0;
    __declspec(property(get=GetMassFlowEfficiencyC1,put=PutMassFlowEfficiencyC1))
    double MassFlowEfficiencyC1;
    __declspec(property(get=GetMassFlowEfficiencyC2,put=PutMassFlowEfficiencyC2))
    double MassFlowEfficiencyC2;
    __declspec(property(get=GetMassFlowEfficiencyC3,put=PutMassFlowEfficiencyC3))
    double MassFlowEfficiencyC3;
    __declspec(property(get=GetMassFlowEfficiencyIndependentVar,put=PutMassFlowEfficiencyIndependentVar))
    enum AgEVAEngineModelFunction MassFlowEfficiencyIndependentVar;
    __declspec(property(get=GetMassFlowEfficiencyEquation))
    _bstr_t MassFlowEfficiencyEquation;
    __declspec(property(get=GetPowerEfficiencyC0,put=PutPowerEfficiencyC0))
    double PowerEfficiencyC0;
    __declspec(property(get=GetPowerEfficiencyC1,put=PutPowerEfficiencyC1))
    double PowerEfficiencyC1;
    __declspec(property(get=GetPowerEfficiencyC2,put=PutPowerEfficiencyC2))
    double PowerEfficiencyC2;
    __declspec(property(get=GetPowerEfficiencyC3,put=PutPowerEfficiencyC3))
    double PowerEfficiencyC3;

    //
    // Wrapper methods for error-handling
    //

    double GetIspC0 ( );
    void PutIspC0 (
        double pVal );
    double GetIspC1 ( );
    void PutIspC1 (
        double pVal );
    double GetIspC2 ( );
    void PutIspC2 (
        double pVal );
    double GetIspC3 ( );
    void PutIspC3 (
        double pVal );
    enum AgEVAEngineModelFunction GetMassFlowRateEquationType ( );
    void PutMassFlowRateEquationType (
        enum AgEVAEngineModelFunction pVal );
    double GetMassFlowRateC0 ( );
    void PutMassFlowRateC0 (
        double pVal );
    double GetMassFlowRateC1 ( );
    void PutMassFlowRateC1 (
        double pVal );
    double GetMassFlowRateC2 ( );
    void PutMassFlowRateC2 (
        double pVal );
    double GetMassFlowRateC3 ( );
    void PutMassFlowRateC3 (
        double pVal );
    _bstr_t GetMassFlowRateEquation ( );
    double GetMassFlowEfficiencyC0 ( );
    void PutMassFlowEfficiencyC0 (
        double pVal );
    double GetMassFlowEfficiencyC1 ( );
    void PutMassFlowEfficiencyC1 (
        double pVal );
    double GetMassFlowEfficiencyC2 ( );
    void PutMassFlowEfficiencyC2 (
        double pVal );
    double GetMassFlowEfficiencyC3 ( );
    void PutMassFlowEfficiencyC3 (
        double pVal );
    enum AgEVAEngineModelFunction GetMassFlowEfficiencyIndependentVar ( );
    void PutMassFlowEfficiencyIndependentVar (
        enum AgEVAEngineModelFunction pVal );
    _bstr_t GetMassFlowEfficiencyEquation ( );
    double GetPowerEfficiencyC0 ( );
    void PutPowerEfficiencyC0 (
        double pVal );
    double GetPowerEfficiencyC1 ( );
    void PutPowerEfficiencyC1 (
        double pVal );
    double GetPowerEfficiencyC2 ( );
    void PutPowerEfficiencyC2 (
        double pVal );
    double GetPowerEfficiencyC3 ( );
    void PutPowerEfficiencyC3 (
        double pVal );
    enum AgEVAEngineModelFunction GetPowerEfficiencyIndependentVar ( );
    void PutPowerEfficiencyIndependentVar (
        enum AgEVAEngineModelFunction pVal );
    _bstr_t GetPowerEfficiencyEquation ( );
    _bstr_t GetInputPowerSourceName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IspC0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_IspC0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_IspC1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_IspC1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_IspC2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_IspC2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_IspC3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_IspC3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateEquationType (
        /*[out,retval]*/ enum AgEVAEngineModelFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowRateEquationType (
        /*[in]*/ enum AgEVAEngineModelFunction pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateC0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowRateC0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateC1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowRateC1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateC2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowRateC2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateC3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowRateC3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowRateEquation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyC0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowEfficiencyC0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyC1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowEfficiencyC1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyC2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowEfficiencyC2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyC3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowEfficiencyC3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyIndependentVar (
        /*[out,retval]*/ enum AgEVAEngineModelFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_MassFlowEfficiencyIndependentVar (
        /*[in]*/ enum AgEVAEngineModelFunction pVal ) = 0;
      virtual HRESULT __stdcall get_MassFlowEfficiencyEquation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyC0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerEfficiencyC0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyC1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerEfficiencyC1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyC2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerEfficiencyC2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyC3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerEfficiencyC3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyIndependentVar (
        /*[out,retval]*/ enum AgEVAEngineModelFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_PowerEfficiencyIndependentVar (
        /*[in]*/ enum AgEVAEngineModelFunction pVal ) = 0;
      virtual HRESULT __stdcall get_PowerEfficiencyEquation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InputPowerSourceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("304b74ed-314e-47ba-b7aa-6d5a12907873"))
IAgVAEngineIon : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetInputPowerSourceName,put=PutInputPowerSourceName))
    _bstr_t InputPowerSourceName;
    __declspec(property(get=GetMinRequiredPower,put=PutMinRequiredPower))
    double MinRequiredPower;
    __declspec(property(get=GetMaxInputPower,put=PutMaxInputPower))
    double MaxInputPower;
    __declspec(property(get=GetPercentDegradationPerYear,put=PutPercentDegradationPerYear))
    double PercentDegradationPerYear;
    __declspec(property(get=GetReferenceEpoch,put=PutReferenceEpoch))
    _variant_t ReferenceEpoch;
    __declspec(property(get=GetPercentThrottle,put=PutPercentThrottle))
    double PercentThrottle;
    __declspec(property(get=GetEngineDefinition))
    IAgVAEngineDefinitionPtr EngineDefinition;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    _bstr_t GetInputPowerSourceName ( );
    void PutInputPowerSourceName (
        _bstr_t pPowerSource );
    double GetMinRequiredPower ( );
    void PutMinRequiredPower (
        double pVal );
    double GetMaxInputPower ( );
    void PutMaxInputPower (
        double pVal );
    double GetPercentDegradationPerYear ( );
    void PutPercentDegradationPerYear (
        double pVal );
    _variant_t GetReferenceEpoch ( );
    void PutReferenceEpoch (
        const _variant_t & pVal );
    double GetPercentThrottle ( );
    void PutPercentThrottle (
        double pVal );
    IAgVAEngineDefinitionPtr GetEngineDefinition ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlEngineIon Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlEngineIon Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlEngineIon Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_InputPowerSourceName (
        /*[out,retval]*/ BSTR * pPowerSource ) = 0;
      virtual HRESULT __stdcall put_InputPowerSourceName (
        /*[in]*/ BSTR pPowerSource ) = 0;
      virtual HRESULT __stdcall get_MinRequiredPower (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinRequiredPower (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxInputPower (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxInputPower (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PercentDegradationPerYear (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PercentDegradationPerYear (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceEpoch (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceEpoch (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_PercentThrottle (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PercentThrottle (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EngineDefinition (
        /*[out,retval]*/ struct IAgVAEngineDefinition * * ppVAEngineDefinition ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlEngineIon Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlEngineIon Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlEngineIon Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("d48469d2-b0cc-4fbc-997c-f0e6fb84d52a"))
_IAgVAEngineIon : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetInputPowerSourceName,put=PutInputPowerSourceName))
    _bstr_t InputPowerSourceName;
    __declspec(property(get=GetMinRequiredPower,put=PutMinRequiredPower))
    double MinRequiredPower;
    __declspec(property(get=GetMaxInputPower,put=PutMaxInputPower))
    double MaxInputPower;
    __declspec(property(get=GetPercentDegradationPerYear,put=PutPercentDegradationPerYear))
    double PercentDegradationPerYear;
    __declspec(property(get=GetReferenceEpoch,put=PutReferenceEpoch))
    _variant_t ReferenceEpoch;
    __declspec(property(get=GetPercentThrottle,put=PutPercentThrottle))
    double PercentThrottle;
    __declspec(property(get=GetEngineDefinition))
    IAgVAEngineDefinitionPtr EngineDefinition;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    _bstr_t GetInputPowerSourceName ( );
    void PutInputPowerSourceName (
        _bstr_t pPowerSource );
    double GetMinRequiredPower ( );
    void PutMinRequiredPower (
        double pVal );
    double GetMaxInputPower ( );
    void PutMaxInputPower (
        double pVal );
    double GetPercentDegradationPerYear ( );
    void PutPercentDegradationPerYear (
        double pVal );
    _variant_t GetReferenceEpoch ( );
    void PutReferenceEpoch (
        const _variant_t & pVal );
    double GetPercentThrottle ( );
    void PutPercentThrottle (
        double pVal );
    IAgVAEngineDefinitionPtr GetEngineDefinition ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlEngineIon Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlEngineIon Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlEngineIon Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_InputPowerSourceName (
        /*[out,retval]*/ BSTR * pPowerSource ) = 0;
      virtual HRESULT __stdcall put_InputPowerSourceName (
        /*[in]*/ BSTR pPowerSource ) = 0;
      virtual HRESULT __stdcall get_MinRequiredPower (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinRequiredPower (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxInputPower (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxInputPower (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PercentDegradationPerYear (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PercentDegradationPerYear (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceEpoch (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ReferenceEpoch (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_PercentThrottle (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PercentThrottle (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EngineDefinition (
        /*[out,retval]*/ struct IAgVAEngineDefinition * * ppVAEngineDefinition ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlEngineIon Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlEngineIon Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlEngineIon Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("e05f6d1b-05d9-4e33-bc67-050b55bad7cb"))
IAgVAEngineCustom : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetEvalFunctionName,put=PutEvalFunctionName))
    _bstr_t EvalFunctionName;
    __declspec(property(get=GetPostFunctionName,put=PutPostFunctionName))
    _bstr_t PostFunctionName;
    __declspec(property(get=GetPreFunctionName,put=PutPreFunctionName))
    _bstr_t PreFunctionName;
    __declspec(property(get=GetSegStartFunctionName,put=PutSegStartFunctionName))
    _bstr_t SegStartFunctionName;
    __declspec(property(get=GetUpdateFunctionName,put=PutUpdateFunctionName))
    _bstr_t UpdateFunctionName;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    _bstr_t GetEvalFunctionName ( );
    void PutEvalFunctionName (
        _bstr_t pEvalFunction );
    _bstr_t GetPostFunctionName ( );
    void PutPostFunctionName (
        _bstr_t pPostFunction );
    _bstr_t GetPreFunctionName ( );
    void PutPreFunctionName (
        _bstr_t pPreFunction );
    _bstr_t GetSegStartFunctionName ( );
    void PutSegStartFunctionName (
        _bstr_t pSegStartFunction );
    _bstr_t GetUpdateFunctionName ( );
    void PutUpdateFunctionName (
        _bstr_t pUpdateFunction );
    HRESULT EnableControlParameter (
        enum AgEVAControlEngineCustom Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlEngineCustom Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlEngineCustom Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EvalFunctionName (
        /*[out,retval]*/ BSTR * pEvalFunction ) = 0;
      virtual HRESULT __stdcall put_EvalFunctionName (
        /*[in]*/ BSTR pEvalFunction ) = 0;
      virtual HRESULT __stdcall get_PostFunctionName (
        /*[out,retval]*/ BSTR * pPostFunction ) = 0;
      virtual HRESULT __stdcall put_PostFunctionName (
        /*[in]*/ BSTR pPostFunction ) = 0;
      virtual HRESULT __stdcall get_PreFunctionName (
        /*[out,retval]*/ BSTR * pPreFunction ) = 0;
      virtual HRESULT __stdcall put_PreFunctionName (
        /*[in]*/ BSTR pPreFunction ) = 0;
      virtual HRESULT __stdcall get_SegStartFunctionName (
        /*[out,retval]*/ BSTR * pSegStartFunction ) = 0;
      virtual HRESULT __stdcall put_SegStartFunctionName (
        /*[in]*/ BSTR pSegStartFunction ) = 0;
      virtual HRESULT __stdcall get_UpdateFunctionName (
        /*[out,retval]*/ BSTR * pUpdateFunction ) = 0;
      virtual HRESULT __stdcall put_UpdateFunctionName (
        /*[in]*/ BSTR pUpdateFunction ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlEngineCustom Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlEngineCustom Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlEngineCustom Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("6b7342c3-279b-41d4-8fae-d62683f93caf"))
_IAgVAEngineCustom : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetEvalFunctionName,put=PutEvalFunctionName))
    _bstr_t EvalFunctionName;
    __declspec(property(get=GetPostFunctionName,put=PutPostFunctionName))
    _bstr_t PostFunctionName;
    __declspec(property(get=GetPreFunctionName,put=PutPreFunctionName))
    _bstr_t PreFunctionName;
    __declspec(property(get=GetSegStartFunctionName,put=PutSegStartFunctionName))
    _bstr_t SegStartFunctionName;
    __declspec(property(get=GetUpdateFunctionName,put=PutUpdateFunctionName))
    _bstr_t UpdateFunctionName;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    _bstr_t GetEvalFunctionName ( );
    void PutEvalFunctionName (
        _bstr_t pEvalFunction );
    _bstr_t GetPostFunctionName ( );
    void PutPostFunctionName (
        _bstr_t pPostFunction );
    _bstr_t GetPreFunctionName ( );
    void PutPreFunctionName (
        _bstr_t pPreFunction );
    _bstr_t GetSegStartFunctionName ( );
    void PutSegStartFunctionName (
        _bstr_t pSegStartFunction );
    _bstr_t GetUpdateFunctionName ( );
    void PutUpdateFunctionName (
        _bstr_t pUpdateFunction );
    HRESULT EnableControlParameter (
        enum AgEVAControlEngineCustom Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlEngineCustom Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlEngineCustom Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EvalFunctionName (
        /*[out,retval]*/ BSTR * pEvalFunction ) = 0;
      virtual HRESULT __stdcall put_EvalFunctionName (
        /*[in]*/ BSTR pEvalFunction ) = 0;
      virtual HRESULT __stdcall get_PostFunctionName (
        /*[out,retval]*/ BSTR * pPostFunction ) = 0;
      virtual HRESULT __stdcall put_PostFunctionName (
        /*[in]*/ BSTR pPostFunction ) = 0;
      virtual HRESULT __stdcall get_PreFunctionName (
        /*[out,retval]*/ BSTR * pPreFunction ) = 0;
      virtual HRESULT __stdcall put_PreFunctionName (
        /*[in]*/ BSTR pPreFunction ) = 0;
      virtual HRESULT __stdcall get_SegStartFunctionName (
        /*[out,retval]*/ BSTR * pSegStartFunction ) = 0;
      virtual HRESULT __stdcall put_SegStartFunctionName (
        /*[in]*/ BSTR pSegStartFunction ) = 0;
      virtual HRESULT __stdcall get_UpdateFunctionName (
        /*[out,retval]*/ BSTR * pUpdateFunction ) = 0;
      virtual HRESULT __stdcall put_UpdateFunctionName (
        /*[in]*/ BSTR pUpdateFunction ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlEngineCustom Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlEngineCustom Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlEngineCustom Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("23733b21-d306-4845-848a-372b95634f13"))
IAgVAEnginePlugin : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetPluginIdentifier,put=PutPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    _bstr_t GetPluginIdentifier ( );
    void PutPluginIdentifier (
        _bstr_t pVal );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PluginIdentifier (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
};

struct __declspec(uuid("eb4f4752-e7d3-42e9-98f9-a44764ae59e5"))
_IAgVAEnginePlugin : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetPluginIdentifier,put=PutPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    _bstr_t GetPluginIdentifier ( );
    void PutPluginIdentifier (
        _bstr_t pVal );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PluginIdentifier (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("9a51ed34-6000-4ed5-8f54-2708256a238c"))
IAgVAEngineModelPoly : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetThrustCoefficients))
    IAgVAEngineModelThrustCoefficientsPtr ThrustCoefficients;
    __declspec(property(get=GetIspCoefficients))
    IAgVAEngineModelIspCoefficientsPtr IspCoefficients;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    IAgVAEngineModelThrustCoefficientsPtr GetThrustCoefficients ( );
    IAgVAEngineModelIspCoefficientsPtr GetIspCoefficients ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlEngineModelPoly Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlEngineModelPoly Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlEngineModelPoly Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ThrustCoefficients (
        /*[out,retval]*/ struct IAgVAEngineModelThrustCoefficients * * ppVAEngineModelThrustCoefficients ) = 0;
      virtual HRESULT __stdcall get_IspCoefficients (
        /*[out,retval]*/ struct IAgVAEngineModelIspCoefficients * * ppVAEngineModelIspCoefficients ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlEngineModelPoly Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlEngineModelPoly Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlEngineModelPoly Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("6109a886-0aa5-406e-979b-982416eadde8"))
_IAgVAEngineModelPoly : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getg,put=Putg))
    double g;
    __declspec(property(get=GetThrustCoefficients))
    IAgVAEngineModelThrustCoefficientsPtr ThrustCoefficients;
    __declspec(property(get=GetIspCoefficients))
    IAgVAEngineModelIspCoefficientsPtr IspCoefficients;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double Getg ( );
    void Putg (
        double pVal );
    IAgVAEngineModelThrustCoefficientsPtr GetThrustCoefficients ( );
    IAgVAEngineModelIspCoefficientsPtr GetIspCoefficients ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlEngineModelPoly Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlEngineModelPoly Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlEngineModelPoly Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_g (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_g (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ThrustCoefficients (
        /*[out,retval]*/ struct IAgVAEngineModelThrustCoefficients * * ppVAEngineModelThrustCoefficients ) = 0;
      virtual HRESULT __stdcall get_IspCoefficients (
        /*[out,retval]*/ struct IAgVAEngineModelIspCoefficients * * ppVAEngineModelIspCoefficients ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlEngineModelPoly Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlEngineModelPoly Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlEngineModelPoly Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

enum AgEVAControlThrusters
{
    eVAControlThrustersEquivOnTime = 0,
    eVAControlThrustersThrustEfficiency = 1,
    eVAControlThrustersSphericalAzimuth = 2,
    eVAControlThrustersSphericalElevation = 3,
    eVAControlThrustersCartesianX = 4,
    eVAControlThrustersCartesianY = 5,
    eVAControlThrustersCartesianZ = 6
};

enum AgEVAThrusterDirection
{
    eVAThrusterDirectionAcceleration = 0,
    eVAThrusterDirectionExhaust = 1
};

struct __declspec(uuid("4bb58088-5d1f-41d9-a109-736ea54e2e84"))
IAgVAThruster : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetEngineModelName,put=PutEngineModelName))
    _bstr_t EngineModelName;
    __declspec(property(get=GetThrusterEfficiency,put=PutThrusterEfficiency))
    double ThrusterEfficiency;
    __declspec(property(get=GetEquivalentOnTime,put=PutEquivalentOnTime))
    double EquivalentOnTime;
    __declspec(property(get=GetThrusterDirection))
    STKUtil::IAgDirectionPtr ThrusterDirection;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    IAgVAThrusterPtr Copy ( );
    _bstr_t GetEngineModelName ( );
    void PutEngineModelName (
        _bstr_t pVal );
    double GetThrusterEfficiency ( );
    void PutThrusterEfficiency (
        double pVal );
    double GetEquivalentOnTime ( );
    void PutEquivalentOnTime (
        double pVal );
    STKUtil::IAgDirectionPtr GetThrusterDirection ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlThrusters Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlThrusters Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlThrusters Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAThruster * * ppVAThruster ) = 0;
      virtual HRESULT __stdcall get_EngineModelName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_EngineModelName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ThrusterEfficiency (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrusterEfficiency (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EquivalentOnTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_EquivalentOnTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ThrusterDirection (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlThrusters Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlThrusters Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlThrusters Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("a6e259d0-a949-4b54-a4bc-de37d6a06c69"))
_IAgVAThruster : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEngineModelName,put=PutEngineModelName))
    _bstr_t EngineModelName;
    __declspec(property(get=GetThrusterEfficiency,put=PutThrusterEfficiency))
    double ThrusterEfficiency;
    __declspec(property(get=GetEquivalentOnTime,put=PutEquivalentOnTime))
    double EquivalentOnTime;
    __declspec(property(get=GetThrusterDirection))
    STKUtil::IAgDirectionPtr ThrusterDirection;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetEngineModelName ( );
    void PutEngineModelName (
        _bstr_t pVal );
    double GetThrusterEfficiency ( );
    void PutThrusterEfficiency (
        double pVal );
    double GetEquivalentOnTime ( );
    void PutEquivalentOnTime (
        double pVal );
    STKUtil::IAgDirectionPtr GetThrusterDirection ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    IAgVAThrusterPtr Copy ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlThrusters Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlThrusters Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlThrusters Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_EngineModelName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_EngineModelName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ThrusterEfficiency (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrusterEfficiency (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EquivalentOnTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_EquivalentOnTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ThrusterDirection (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAThruster * * ppVAThruster ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlThrusters Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlThrusters Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlThrusters Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("531c112f-bbbd-47c1-b8f9-73713a52563b"))
IAgVAThrusterSetCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAThrusterPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAThrusterPtr GetItem (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVAThrusterPtr Add (
        _bstr_t ThrusterName );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    HRESULT RemoveAll ( );
    HRESULT Cut (
        const _variant_t & IndexOrName );
    IAgVAThrusterPtr Paste ( );
    IAgVAThrusterPtr InsertCopy (
        struct IAgVAThruster * Thruster );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAThruster * * ppVAThruster ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR ThrusterName,
        /*[out,retval]*/ struct IAgVAThruster * * ppVAThruster ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[out,retval]*/ struct IAgVAThruster * * ppVAThruster ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct IAgVAThruster * Thruster,
        /*[out,retval]*/ struct IAgVAThruster * * ppRetVal ) = 0;
};

struct __declspec(uuid("2730484f-b9f2-4c2e-90c9-c43b72245aa5"))
IAgVAThrusterSet : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDirectionDefinition,put=PutDirectionDefinition))
    enum AgEVAThrusterDirection DirectionDefinition;
    __declspec(property(get=GetThrusters))
    IAgVAThrusterSetCollectionPtr Thrusters;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAThrusterDirection GetDirectionDefinition ( );
    void PutDirectionDefinition (
        enum AgEVAThrusterDirection pVal );
    IAgVAThrusterSetCollectionPtr GetThrusters ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DirectionDefinition (
        /*[out,retval]*/ enum AgEVAThrusterDirection * pVal ) = 0;
      virtual HRESULT __stdcall put_DirectionDefinition (
        /*[in]*/ enum AgEVAThrusterDirection pVal ) = 0;
      virtual HRESULT __stdcall get_Thrusters (
        /*[out,retval]*/ struct IAgVAThrusterSetCollection * * ppVAThrusterSetCollection ) = 0;
};

struct __declspec(uuid("1f203ee1-bb61-4a54-b493-97fc0494e7e8"))
_IAgVAThrusterSet : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDirectionDefinition,put=PutDirectionDefinition))
    enum AgEVAThrusterDirection DirectionDefinition;
    __declspec(property(get=GetThrusters))
    IAgVAThrusterSetCollectionPtr Thrusters;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAThrusterDirection GetDirectionDefinition ( );
    void PutDirectionDefinition (
        enum AgEVAThrusterDirection pVal );
    IAgVAThrusterSetCollectionPtr GetThrusters ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DirectionDefinition (
        /*[out,retval]*/ enum AgEVAThrusterDirection * pVal ) = 0;
      virtual HRESULT __stdcall put_DirectionDefinition (
        /*[in]*/ enum AgEVAThrusterDirection pVal ) = 0;
      virtual HRESULT __stdcall get_Thrusters (
        /*[out,retval]*/ struct IAgVAThrusterSetCollection * * ppVAThrusterSetCollection ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

enum AgEVACriteria
{
    eVACriteriaEquals = 0,
    eVACriteriaGreaterThan = 1,
    eVACriteriaGreaterThanMinimum = 2,
    eVACriteriaLessThan = 3,
    eVACriteriaLessThanMaximum = 4,
    eVACriteriaNotEqualTo = 5
};

struct __declspec(uuid("0df01141-5819-4eb5-8d66-081b6cf0835e"))
IAgVAAsTriggerCondition : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCriteria,put=PutCriteria))
    enum AgEVACriteria Criteria;
    __declspec(property(get=GetCalcObject,put=PutCalcObject))
    STKObjects::IAgComponentInfoPtr CalcObject;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetTolerance,put=PutTolerance))
    _variant_t Tolerance;
    __declspec(property(get=GetUseAbsoluteValue,put=PutUseAbsoluteValue))
    VARIANT_BOOL UseAbsoluteValue;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVACriteria GetCriteria ( );
    void PutCriteria (
        enum AgEVACriteria pVal );
    STKObjects::IAgComponentInfoPtr GetCalcObject ( );
    void PutCalcObject (
        struct STKObjects::IAgComponentInfo * ppComponent );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pRetVal );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & pRetVal );
    _variant_t GetTolerance ( );
    void PutTolerance (
        const _variant_t & pRetVal );
    VARIANT_BOOL GetUseAbsoluteValue ( );
    void PutUseAbsoluteValue (
        VARIANT_BOOL pVal );
    HRESULT CopyCalcObjectToClipboard ( );
    HRESULT PasteCalcObjectFromClipboard ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Criteria (
        /*[out,retval]*/ enum AgEVACriteria * pVal ) = 0;
      virtual HRESULT __stdcall put_Criteria (
        /*[in]*/ enum AgEVACriteria pVal ) = 0;
      virtual HRESULT __stdcall get_CalcObject (
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppComponent ) = 0;
      virtual HRESULT __stdcall put_CalcObject (
        /*[in]*/ struct STKObjects::IAgComponentInfo * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT pRetVal ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall put_Tolerance (
        /*[in]*/ VARIANT pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseAbsoluteValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseAbsoluteValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall raw_CopyCalcObjectToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PasteCalcObjectFromClipboard ( ) = 0;
};

struct __declspec(uuid("8afc05e2-4d42-4b7b-9d8d-bfab3d54b755"))
IAgVAConstraintCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAAsTriggerConditionPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAAsTriggerConditionPtr Add (
        _bstr_t ResultName );
    IAgVAAsTriggerConditionPtr GetItem (
        const _variant_t & IndexOrName );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    HRESULT Cut (
        const _variant_t & IndexOrName );
    IAgVAAsTriggerConditionPtr Paste ( );
    IAgVAAsTriggerConditionPtr InsertCopy (
        struct IAgVAAsTriggerCondition * Cond );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ struct IAgVAAsTriggerCondition * * ppResult ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAAsTriggerCondition * * ppComponent ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[out,retval]*/ struct IAgVAAsTriggerCondition * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct IAgVAAsTriggerCondition * Cond,
        /*[out,retval]*/ struct IAgVAAsTriggerCondition * * ppRetVal ) = 0;
};

struct __declspec(uuid("f7976ae5-d912-45a0-b6e6-dd908394f3b5"))
_IAgVAAsTriggerCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCriteria,put=PutCriteria))
    enum AgEVACriteria Criteria;
    __declspec(property(get=GetCalcObject,put=PutCalcObject))
    STKObjects::IAgComponentInfoPtr CalcObject;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetTolerance,put=PutTolerance))
    _variant_t Tolerance;
    __declspec(property(get=GetUseAbsoluteValue,put=PutUseAbsoluteValue))
    VARIANT_BOOL UseAbsoluteValue;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVACriteria GetCriteria ( );
    void PutCriteria (
        enum AgEVACriteria pVal );
    STKObjects::IAgComponentInfoPtr GetCalcObject ( );
    void PutCalcObject (
        struct STKObjects::IAgComponentInfo * ppComponent );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pRetVal );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & pRetVal );
    _variant_t GetTolerance ( );
    void PutTolerance (
        const _variant_t & pRetVal );
    VARIANT_BOOL GetUseAbsoluteValue ( );
    void PutUseAbsoluteValue (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    HRESULT CopyCalcObjectToClipboard ( );
    HRESULT PasteCalcObjectFromClipboard ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Criteria (
        /*[out,retval]*/ enum AgEVACriteria * pVal ) = 0;
      virtual HRESULT __stdcall put_Criteria (
        /*[in]*/ enum AgEVACriteria pVal ) = 0;
      virtual HRESULT __stdcall get_CalcObject (
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppComponent ) = 0;
      virtual HRESULT __stdcall put_CalcObject (
        /*[in]*/ struct STKObjects::IAgComponentInfo * ppComponent ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT pRetVal ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall put_Tolerance (
        /*[in]*/ VARIANT pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseAbsoluteValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseAbsoluteValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall raw_CopyCalcObjectToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PasteCalcObjectFromClipboard ( ) = 0;
};

struct __declspec(uuid("102cbf4d-beb6-425b-a2ad-a45c2eaab086"))
IAgVACustomFunctionScriptEngine : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetScriptFilename,put=PutScriptFilename))
    _bstr_t ScriptFilename;
    __declspec(property(get=GetFileExtensionName,put=PutFileExtensionName))
    _bstr_t FileExtensionName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetScriptFilename ( );
    void PutScriptFilename (
        _bstr_t pVal );
    _bstr_t GetFileExtensionName ( );
    void PutFileExtensionName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ScriptFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ScriptFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_FileExtensionName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_FileExtensionName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("5c3eb066-72ba-434d-825b-996e39a67c57"))
_IAgVACustomFunctionScriptEngine : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetScriptFilename,put=PutScriptFilename))
    _bstr_t ScriptFilename;
    __declspec(property(get=GetFileExtensionName,put=PutFileExtensionName))
    _bstr_t FileExtensionName;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetScriptFilename ( );
    void PutScriptFilename (
        _bstr_t pVal );
    _bstr_t GetFileExtensionName ( );
    void PutFileExtensionName (
        _bstr_t pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ScriptFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ScriptFilename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_FileExtensionName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_FileExtensionName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

enum AgEVAErrorControl
{
    eVAErrorControlAbsolute = 0,
    eVAErrorControlRelativeByComponent = 1,
    eVAErrorControlRelativeToState = 2,
    eVAErrorControlRelativeToStep = 3
};

enum AgEVAPredictorCorrector
{
    eVAPredictorCorrectorFull = 0,
    eVAPredictorCorrectorPseudo = 1
};

enum AgEVANumericalIntegrator
{
    eVANumericalIntegratorRK4thAdapt = 0,
    eVANumericalIntegratorRKF7th8th = 1,
    eVANumericalIntegratorRKV8th9th = 2,
    eVANumericalIntegratorBulirschStoer = 3,
    eVANumericalIntegratorGaussJackson = 4,
    eVANumericalIntegratorRK2nd3rd = 5,
    eVANumericalIntegratorRK4th5th = 6,
    eVANumericalIntegratorRK4th = 7
};

enum AgEVACoeffRKV8th9th
{
    eVACoeffRKV8th9th1978 = 0,
    eVACoeffRKV8th9thEfficient = 1
};

struct __declspec(uuid("89f61406-495a-4fab-86f1-04d1a7947a6a"))
IAgVANumericalIntegrator : IUnknown
{};

struct __declspec(uuid("1682275d-6a5e-495c-a7b6-776684fb28f8"))
IAgVAPropagatorFunctionCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    STKObjects::IAgComponentInfoPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    STKObjects::IAgComponentInfoPtr Add (
        _bstr_t ResultName );
    STKObjects::IAgComponentInfoPtr GetItem (
        const _variant_t & IndexOrName );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    HRESULT RemoveAll ( );
    HRESULT Cut (
        const _variant_t & IndexOrName );
    STKObjects::IAgComponentInfoPtr Paste ( );
    STKObjects::IAgComponentInfoPtr InsertCopy (
        struct STKObjects::IAgComponentInfo * PropFunc );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppComponent ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppVAPropFunc ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct STKObjects::IAgComponentInfo * PropFunc,
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("3464bc24-ccb8-4aa7-b5f0-a42e1ecdbb0e"))
IAgVANumericalPropagatorWrapper : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetUseVariationOfParameters,put=PutUseVariationOfParameters))
    VARIANT_BOOL UseVariationOfParameters;
    __declspec(property(get=GetUseRegularizedTime,put=PutUseRegularizedTime))
    VARIANT_BOOL UseRegularizedTime;
    __declspec(property(get=GetRegularizedTimeExponent,put=PutRegularizedTimeExponent))
    double RegularizedTimeExponent;
    __declspec(property(get=GetRegularizedTimeStepsPerOrbit,put=PutRegularizedTimeStepsPerOrbit))
    long RegularizedTimeStepsPerOrbit;
    __declspec(property(get=GetPropagatorFunctions))
    IAgVAPropagatorFunctionCollectionPtr PropagatorFunctions;
    __declspec(property(get=GetNumericalIntegrator))
    IAgVANumericalIntegratorPtr NumericalIntegrator;
    __declspec(property(get=GetNumericalIntegratorType))
    enum AgEVANumericalIntegrator NumericalIntegratorType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    VARIANT_BOOL GetUseVariationOfParameters ( );
    void PutUseVariationOfParameters (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseRegularizedTime ( );
    void PutUseRegularizedTime (
        VARIANT_BOOL pVal );
    double GetRegularizedTimeExponent ( );
    void PutRegularizedTimeExponent (
        double pVal );
    long GetRegularizedTimeStepsPerOrbit ( );
    void PutRegularizedTimeStepsPerOrbit (
        long pVal );
    IAgVAPropagatorFunctionCollectionPtr GetPropagatorFunctions ( );
    IAgVANumericalIntegratorPtr GetNumericalIntegrator ( );
    enum AgEVANumericalIntegrator GetNumericalIntegratorType ( );
    HRESULT SetNumericalIntegrator (
        enum AgEVANumericalIntegrator Integrator );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UseVariationOfParameters (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseVariationOfParameters (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseRegularizedTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseRegularizedTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_RegularizedTimeExponent (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RegularizedTimeExponent (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RegularizedTimeStepsPerOrbit (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_RegularizedTimeStepsPerOrbit (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_PropagatorFunctions (
        /*[out,retval]*/ struct IAgVAPropagatorFunctionCollection * * ppVAPropagatorFunctionCollection ) = 0;
      virtual HRESULT __stdcall get_NumericalIntegrator (
        /*[out,retval]*/ struct IAgVANumericalIntegrator * * ppVANumericalIntegrator ) = 0;
      virtual HRESULT __stdcall get_NumericalIntegratorType (
        /*[out,retval]*/ enum AgEVANumericalIntegrator * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetNumericalIntegrator (
        /*[in]*/ enum AgEVANumericalIntegrator Integrator ) = 0;
};

struct __declspec(uuid("d75c4a9b-02ee-47b4-91d5-f329d6c13caf"))
_IAgVANumericalPropagatorWrapper : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetUseVariationOfParameters,put=PutUseVariationOfParameters))
    VARIANT_BOOL UseVariationOfParameters;
    __declspec(property(get=GetUseRegularizedTime,put=PutUseRegularizedTime))
    VARIANT_BOOL UseRegularizedTime;
    __declspec(property(get=GetRegularizedTimeExponent,put=PutRegularizedTimeExponent))
    double RegularizedTimeExponent;
    __declspec(property(get=GetRegularizedTimeStepsPerOrbit,put=PutRegularizedTimeStepsPerOrbit))
    long RegularizedTimeStepsPerOrbit;
    __declspec(property(get=GetPropagatorFunctions))
    IAgVAPropagatorFunctionCollectionPtr PropagatorFunctions;
    __declspec(property(get=GetNumericalIntegrator))
    IAgVANumericalIntegratorPtr NumericalIntegrator;
    __declspec(property(get=GetNumericalIntegratorType))
    enum AgEVANumericalIntegrator NumericalIntegratorType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    VARIANT_BOOL GetUseVariationOfParameters ( );
    void PutUseVariationOfParameters (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseRegularizedTime ( );
    void PutUseRegularizedTime (
        VARIANT_BOOL pVal );
    double GetRegularizedTimeExponent ( );
    void PutRegularizedTimeExponent (
        double pVal );
    long GetRegularizedTimeStepsPerOrbit ( );
    void PutRegularizedTimeStepsPerOrbit (
        long pVal );
    IAgVAPropagatorFunctionCollectionPtr GetPropagatorFunctions ( );
    IAgVANumericalIntegratorPtr GetNumericalIntegrator ( );
    enum AgEVANumericalIntegrator GetNumericalIntegratorType ( );
    HRESULT SetNumericalIntegrator (
        enum AgEVANumericalIntegrator Integrator );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UseVariationOfParameters (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseVariationOfParameters (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseRegularizedTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseRegularizedTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_RegularizedTimeExponent (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RegularizedTimeExponent (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RegularizedTimeStepsPerOrbit (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_RegularizedTimeStepsPerOrbit (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_PropagatorFunctions (
        /*[out,retval]*/ struct IAgVAPropagatorFunctionCollection * * ppVAPropagatorFunctionCollection ) = 0;
      virtual HRESULT __stdcall get_NumericalIntegrator (
        /*[out,retval]*/ struct IAgVANumericalIntegrator * * ppVANumericalIntegrator ) = 0;
      virtual HRESULT __stdcall get_NumericalIntegratorType (
        /*[out,retval]*/ enum AgEVANumericalIntegrator * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetNumericalIntegrator (
        /*[in]*/ enum AgEVANumericalIntegrator Integrator ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
};

struct __declspec(uuid("814aae65-9fcd-4e8b-a60e-77da333ddb7b"))
IAgVABulirschStoerIntegrator : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxSequences,put=PutMaxSequences))
    long MaxSequences;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;
    __declspec(property(get=GetTolerance,put=PutTolerance))
    double Tolerance;
    __declspec(property(get=GetFirstSafetyCoefficient,put=PutFirstSafetyCoefficient))
    double FirstSafetyCoefficient;
    __declspec(property(get=GetSecondSafetyCoefficient,put=PutSecondSafetyCoefficient))
    double SecondSafetyCoefficient;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pVal );
    double GetMinStep ( );
    void PutMinStep (
        double pVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pVal );
    long GetMaxSequences ( );
    void PutMaxSequences (
        long pVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );
    double GetTolerance ( );
    void PutTolerance (
        double pVal );
    double GetFirstSafetyCoefficient ( );
    void PutFirstSafetyCoefficient (
        double pVal );
    double GetSecondSafetyCoefficient ( );
    void PutSecondSafetyCoefficient (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxSequences (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxSequences (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Tolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_FirstSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FirstSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SecondSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SecondSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("e49e0da1-54a3-4f29-9316-39d05b08dc47"))
_IAgVABulirschStoerIntegrator : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxSequences,put=PutMaxSequences))
    long MaxSequences;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;
    __declspec(property(get=GetTolerance,put=PutTolerance))
    double Tolerance;
    __declspec(property(get=GetFirstSafetyCoefficient,put=PutFirstSafetyCoefficient))
    double FirstSafetyCoefficient;
    __declspec(property(get=GetSecondSafetyCoefficient,put=PutSecondSafetyCoefficient))
    double SecondSafetyCoefficient;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pVal );
    double GetMinStep ( );
    void PutMinStep (
        double pVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pVal );
    long GetMaxSequences ( );
    void PutMaxSequences (
        long pVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );
    double GetTolerance ( );
    void PutTolerance (
        double pVal );
    double GetFirstSafetyCoefficient ( );
    void PutFirstSafetyCoefficient (
        double pVal );
    double GetSecondSafetyCoefficient ( );
    void PutSecondSafetyCoefficient (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxSequences (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxSequences (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Tolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_FirstSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FirstSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SecondSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SecondSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("6efb44b1-edaa-468f-b4e9-874e0f8c25ac"))
IAgVAGaussJacksonIntegrator : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetMaxCorrectorRelErr,put=PutMaxCorrectorRelErr))
    double MaxCorrectorRelErr;
    __declspec(property(get=GetCorrectorMode,put=PutCorrectorMode))
    enum AgEVAPredictorCorrector CorrectorMode;
    __declspec(property(get=GetMaxCorrectorIterations,put=PutMaxCorrectorIterations))
    long MaxCorrectorIterations;
    __declspec(property(get=GetSingleStepIntegrator))
    IAgVANumericalIntegratorPtr SingleStepIntegrator;
    __declspec(property(get=GetSingleStepIntegratorType))
    enum AgEVANumericalIntegrator SingleStepIntegratorType;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    double GetMaxCorrectorRelErr ( );
    void PutMaxCorrectorRelErr (
        double pVal );
    enum AgEVAPredictorCorrector GetCorrectorMode ( );
    void PutCorrectorMode (
        enum AgEVAPredictorCorrector pVal );
    long GetMaxCorrectorIterations ( );
    void PutMaxCorrectorIterations (
        long pVal );
    IAgVANumericalIntegratorPtr GetSingleStepIntegrator ( );
    enum AgEVANumericalIntegrator GetSingleStepIntegratorType ( );
    HRESULT SetSingleStepIntegrator (
        enum AgEVANumericalIntegrator Integrator );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxCorrectorRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxCorrectorRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_CorrectorMode (
        /*[out,retval]*/ enum AgEVAPredictorCorrector * pVal ) = 0;
      virtual HRESULT __stdcall put_CorrectorMode (
        /*[in]*/ enum AgEVAPredictorCorrector pVal ) = 0;
      virtual HRESULT __stdcall get_MaxCorrectorIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxCorrectorIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_SingleStepIntegrator (
        /*[out,retval]*/ struct IAgVANumericalIntegrator * * ppVANumericalIntegrator ) = 0;
      virtual HRESULT __stdcall get_SingleStepIntegratorType (
        /*[out,retval]*/ enum AgEVANumericalIntegrator * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSingleStepIntegrator (
        /*[in]*/ enum AgEVANumericalIntegrator Integrator ) = 0;
};

struct __declspec(uuid("f3d23293-a8ae-49cd-b535-22972a2e02f2"))
_IAgVAGaussJacksonIntegrator : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetMaxCorrectorRelErr,put=PutMaxCorrectorRelErr))
    double MaxCorrectorRelErr;
    __declspec(property(get=GetCorrectorMode,put=PutCorrectorMode))
    enum AgEVAPredictorCorrector CorrectorMode;
    __declspec(property(get=GetMaxCorrectorIterations,put=PutMaxCorrectorIterations))
    long MaxCorrectorIterations;
    __declspec(property(get=GetSingleStepIntegrator))
    IAgVANumericalIntegratorPtr SingleStepIntegrator;
    __declspec(property(get=GetSingleStepIntegratorType))
    enum AgEVANumericalIntegrator SingleStepIntegratorType;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    double GetMaxCorrectorRelErr ( );
    void PutMaxCorrectorRelErr (
        double pVal );
    enum AgEVAPredictorCorrector GetCorrectorMode ( );
    void PutCorrectorMode (
        enum AgEVAPredictorCorrector pVal );
    long GetMaxCorrectorIterations ( );
    void PutMaxCorrectorIterations (
        long pVal );
    IAgVANumericalIntegratorPtr GetSingleStepIntegrator ( );
    enum AgEVANumericalIntegrator GetSingleStepIntegratorType ( );
    HRESULT SetSingleStepIntegrator (
        enum AgEVANumericalIntegrator Integrator );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxCorrectorRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxCorrectorRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_CorrectorMode (
        /*[out,retval]*/ enum AgEVAPredictorCorrector * pVal ) = 0;
      virtual HRESULT __stdcall put_CorrectorMode (
        /*[in]*/ enum AgEVAPredictorCorrector pVal ) = 0;
      virtual HRESULT __stdcall get_MaxCorrectorIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxCorrectorIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_SingleStepIntegrator (
        /*[out,retval]*/ struct IAgVANumericalIntegrator * * ppVANumericalIntegrator ) = 0;
      virtual HRESULT __stdcall get_SingleStepIntegratorType (
        /*[out,retval]*/ enum AgEVANumericalIntegrator * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSingleStepIntegrator (
        /*[in]*/ enum AgEVANumericalIntegrator Integrator ) = 0;
};

struct __declspec(uuid("9b49bc07-b81b-4439-9c8f-50afd92b11b0"))
IAgVARK2nd3rd : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxAbsErr,put=PutMaxAbsErr))
    double MaxAbsErr;
    __declspec(property(get=GetHighSafetyCoefficient,put=PutHighSafetyCoefficient))
    double HighSafetyCoefficient;
    __declspec(property(get=GetLowSafetyCoefficient,put=PutLowSafetyCoefficient))
    double LowSafetyCoefficient;
    __declspec(property(get=GetErrorControl,put=PutErrorControl))
    enum AgEVAErrorControl ErrorControl;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pVal );
    double GetMinStep ( );
    void PutMinStep (
        double pVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pVal );
    double GetMaxAbsErr ( );
    void PutMaxAbsErr (
        double pVal );
    double GetHighSafetyCoefficient ( );
    void PutHighSafetyCoefficient (
        double pVal );
    double GetLowSafetyCoefficient ( );
    void PutLowSafetyCoefficient (
        double pVal );
    enum AgEVAErrorControl GetErrorControl ( );
    void PutErrorControl (
        enum AgEVAErrorControl pVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxAbsErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxAbsErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HighSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_HighSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LowSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LowSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ErrorControl (
        /*[out,retval]*/ enum AgEVAErrorControl * pVal ) = 0;
      virtual HRESULT __stdcall put_ErrorControl (
        /*[in]*/ enum AgEVAErrorControl pVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("19f9f259-abf0-40d7-bb82-fb266ba4ff52"))
_IAgVARK2nd3rd : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxAbsErr,put=PutMaxAbsErr))
    double MaxAbsErr;
    __declspec(property(get=GetHighSafetyCoefficient,put=PutHighSafetyCoefficient))
    double HighSafetyCoefficient;
    __declspec(property(get=GetLowSafetyCoefficient,put=PutLowSafetyCoefficient))
    double LowSafetyCoefficient;
    __declspec(property(get=GetErrorControl,put=PutErrorControl))
    enum AgEVAErrorControl ErrorControl;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pVal );
    double GetMinStep ( );
    void PutMinStep (
        double pVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pVal );
    double GetMaxAbsErr ( );
    void PutMaxAbsErr (
        double pVal );
    double GetHighSafetyCoefficient ( );
    void PutHighSafetyCoefficient (
        double pVal );
    double GetLowSafetyCoefficient ( );
    void PutLowSafetyCoefficient (
        double pVal );
    enum AgEVAErrorControl GetErrorControl ( );
    void PutErrorControl (
        enum AgEVAErrorControl pVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxAbsErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxAbsErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HighSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_HighSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LowSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LowSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ErrorControl (
        /*[out,retval]*/ enum AgEVAErrorControl * pVal ) = 0;
      virtual HRESULT __stdcall put_ErrorControl (
        /*[in]*/ enum AgEVAErrorControl pVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("d7bfce3a-f674-4290-86ce-3c197398ada9"))
IAgVARK4th : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("b91cfa8a-2989-42df-9dfe-098d7c4a8929"))
_IAgVARK4th : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("3213fdc3-912e-4b75-a32e-c5ed90b2953a"))
IAgVARK4th5th : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxAbsErr,put=PutMaxAbsErr))
    double MaxAbsErr;
    __declspec(property(get=GetHighSafetyCoefficient,put=PutHighSafetyCoefficient))
    double HighSafetyCoefficient;
    __declspec(property(get=GetLowSafetyCoefficient,put=PutLowSafetyCoefficient))
    double LowSafetyCoefficient;
    __declspec(property(get=GetErrorControl,put=PutErrorControl))
    enum AgEVAErrorControl ErrorControl;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pVal );
    double GetMinStep ( );
    void PutMinStep (
        double pVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pVal );
    double GetMaxAbsErr ( );
    void PutMaxAbsErr (
        double pVal );
    double GetHighSafetyCoefficient ( );
    void PutHighSafetyCoefficient (
        double pVal );
    double GetLowSafetyCoefficient ( );
    void PutLowSafetyCoefficient (
        double pVal );
    enum AgEVAErrorControl GetErrorControl ( );
    void PutErrorControl (
        enum AgEVAErrorControl pVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxAbsErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxAbsErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HighSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_HighSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LowSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LowSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ErrorControl (
        /*[out,retval]*/ enum AgEVAErrorControl * pVal ) = 0;
      virtual HRESULT __stdcall put_ErrorControl (
        /*[in]*/ enum AgEVAErrorControl pVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("f7792c2c-6834-4ace-b571-ac14862e8a1e"))
_IAgVARK4th5th : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxAbsErr,put=PutMaxAbsErr))
    double MaxAbsErr;
    __declspec(property(get=GetHighSafetyCoefficient,put=PutHighSafetyCoefficient))
    double HighSafetyCoefficient;
    __declspec(property(get=GetLowSafetyCoefficient,put=PutLowSafetyCoefficient))
    double LowSafetyCoefficient;
    __declspec(property(get=GetErrorControl,put=PutErrorControl))
    enum AgEVAErrorControl ErrorControl;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pVal );
    double GetMinStep ( );
    void PutMinStep (
        double pVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pVal );
    double GetMaxAbsErr ( );
    void PutMaxAbsErr (
        double pVal );
    double GetHighSafetyCoefficient ( );
    void PutHighSafetyCoefficient (
        double pVal );
    double GetLowSafetyCoefficient ( );
    void PutLowSafetyCoefficient (
        double pVal );
    enum AgEVAErrorControl GetErrorControl ( );
    void PutErrorControl (
        enum AgEVAErrorControl pVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxAbsErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxAbsErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HighSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_HighSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LowSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LowSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ErrorControl (
        /*[out,retval]*/ enum AgEVAErrorControl * pVal ) = 0;
      virtual HRESULT __stdcall put_ErrorControl (
        /*[in]*/ enum AgEVAErrorControl pVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("1b5bb579-f5d7-465b-a5f0-8e34c6c49d22"))
IAgVARK4thAdapt : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxAbsErr,put=PutMaxAbsErr))
    double MaxAbsErr;
    __declspec(property(get=GetHighSafetyCoefficient,put=PutHighSafetyCoefficient))
    double HighSafetyCoefficient;
    __declspec(property(get=GetLowSafetyCoefficient,put=PutLowSafetyCoefficient))
    double LowSafetyCoefficient;
    __declspec(property(get=GetErrorControl,put=PutErrorControl))
    enum AgEVAErrorControl ErrorControl;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pVal );
    double GetMinStep ( );
    void PutMinStep (
        double pVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pVal );
    double GetMaxAbsErr ( );
    void PutMaxAbsErr (
        double pVal );
    double GetHighSafetyCoefficient ( );
    void PutHighSafetyCoefficient (
        double pVal );
    double GetLowSafetyCoefficient ( );
    void PutLowSafetyCoefficient (
        double pVal );
    enum AgEVAErrorControl GetErrorControl ( );
    void PutErrorControl (
        enum AgEVAErrorControl pVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxAbsErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxAbsErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HighSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_HighSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LowSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LowSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ErrorControl (
        /*[out,retval]*/ enum AgEVAErrorControl * pVal ) = 0;
      virtual HRESULT __stdcall put_ErrorControl (
        /*[in]*/ enum AgEVAErrorControl pVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("e58e7826-36d7-4d5f-b500-fc6fa321e4dc"))
_IAgVARK4thAdapt : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxAbsErr,put=PutMaxAbsErr))
    double MaxAbsErr;
    __declspec(property(get=GetHighSafetyCoefficient,put=PutHighSafetyCoefficient))
    double HighSafetyCoefficient;
    __declspec(property(get=GetLowSafetyCoefficient,put=PutLowSafetyCoefficient))
    double LowSafetyCoefficient;
    __declspec(property(get=GetErrorControl,put=PutErrorControl))
    enum AgEVAErrorControl ErrorControl;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pVal );
    double GetMinStep ( );
    void PutMinStep (
        double pVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pVal );
    double GetMaxAbsErr ( );
    void PutMaxAbsErr (
        double pVal );
    double GetHighSafetyCoefficient ( );
    void PutHighSafetyCoefficient (
        double pVal );
    double GetLowSafetyCoefficient ( );
    void PutLowSafetyCoefficient (
        double pVal );
    enum AgEVAErrorControl GetErrorControl ( );
    void PutErrorControl (
        enum AgEVAErrorControl pVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxAbsErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxAbsErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HighSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_HighSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LowSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LowSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ErrorControl (
        /*[out,retval]*/ enum AgEVAErrorControl * pVal ) = 0;
      virtual HRESULT __stdcall put_ErrorControl (
        /*[in]*/ enum AgEVAErrorControl pVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("585d4c63-5a7d-42ee-8f31-d95dd145863f"))
IAgVARKF7th8th : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxAbsErr,put=PutMaxAbsErr))
    double MaxAbsErr;
    __declspec(property(get=GetHighSafetyCoefficient,put=PutHighSafetyCoefficient))
    double HighSafetyCoefficient;
    __declspec(property(get=GetLowSafetyCoefficient,put=PutLowSafetyCoefficient))
    double LowSafetyCoefficient;
    __declspec(property(get=GetErrorControl,put=PutErrorControl))
    enum AgEVAErrorControl ErrorControl;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pVal );
    double GetMinStep ( );
    void PutMinStep (
        double pVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pVal );
    double GetMaxAbsErr ( );
    void PutMaxAbsErr (
        double pVal );
    double GetHighSafetyCoefficient ( );
    void PutHighSafetyCoefficient (
        double pVal );
    double GetLowSafetyCoefficient ( );
    void PutLowSafetyCoefficient (
        double pVal );
    enum AgEVAErrorControl GetErrorControl ( );
    void PutErrorControl (
        enum AgEVAErrorControl pVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxAbsErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxAbsErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HighSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_HighSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LowSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LowSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ErrorControl (
        /*[out,retval]*/ enum AgEVAErrorControl * pVal ) = 0;
      virtual HRESULT __stdcall put_ErrorControl (
        /*[in]*/ enum AgEVAErrorControl pVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("d5427974-cbe5-4240-ac5c-29ca8642345b"))
_IAgVARKF7th8th : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxAbsErr,put=PutMaxAbsErr))
    double MaxAbsErr;
    __declspec(property(get=GetHighSafetyCoefficient,put=PutHighSafetyCoefficient))
    double HighSafetyCoefficient;
    __declspec(property(get=GetLowSafetyCoefficient,put=PutLowSafetyCoefficient))
    double LowSafetyCoefficient;
    __declspec(property(get=GetErrorControl,put=PutErrorControl))
    enum AgEVAErrorControl ErrorControl;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pVal );
    double GetMinStep ( );
    void PutMinStep (
        double pVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pVal );
    double GetMaxAbsErr ( );
    void PutMaxAbsErr (
        double pVal );
    double GetHighSafetyCoefficient ( );
    void PutHighSafetyCoefficient (
        double pVal );
    double GetLowSafetyCoefficient ( );
    void PutLowSafetyCoefficient (
        double pVal );
    enum AgEVAErrorControl GetErrorControl ( );
    void PutErrorControl (
        enum AgEVAErrorControl pVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxAbsErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxAbsErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HighSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_HighSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LowSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LowSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ErrorControl (
        /*[out,retval]*/ enum AgEVAErrorControl * pVal ) = 0;
      virtual HRESULT __stdcall put_ErrorControl (
        /*[in]*/ enum AgEVAErrorControl pVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("7253edb2-a200-47ef-8ff1-ba7bc4151e1e"))
IAgVARKV8th9th : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxAbsErr,put=PutMaxAbsErr))
    double MaxAbsErr;
    __declspec(property(get=GetHighSafetyCoefficient,put=PutHighSafetyCoefficient))
    double HighSafetyCoefficient;
    __declspec(property(get=GetLowSafetyCoefficient,put=PutLowSafetyCoefficient))
    double LowSafetyCoefficient;
    __declspec(property(get=GetErrorControl,put=PutErrorControl))
    enum AgEVAErrorControl ErrorControl;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;
    __declspec(property(get=GetCoeffType,put=PutCoeffType))
    enum AgEVACoeffRKV8th9th CoeffType;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pVal );
    double GetMinStep ( );
    void PutMinStep (
        double pVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pVal );
    double GetMaxAbsErr ( );
    void PutMaxAbsErr (
        double pVal );
    double GetHighSafetyCoefficient ( );
    void PutHighSafetyCoefficient (
        double pVal );
    double GetLowSafetyCoefficient ( );
    void PutLowSafetyCoefficient (
        double pVal );
    enum AgEVAErrorControl GetErrorControl ( );
    void PutErrorControl (
        enum AgEVAErrorControl pVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );
    enum AgEVACoeffRKV8th9th GetCoeffType ( );
    void PutCoeffType (
        enum AgEVACoeffRKV8th9th pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxAbsErr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxAbsErr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HighSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_HighSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LowSafetyCoefficient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LowSafetyCoefficient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ErrorControl (
        /*[out,retval]*/ enum AgEVAErrorControl * pVal ) = 0;
      virtual HRESULT __stdcall put_ErrorControl (
        /*[in]*/ enum AgEVAErrorControl pVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_CoeffType (
        /*[out,retval]*/ enum AgEVACoeffRKV8th9th * pVal ) = 0;
      virtual HRESULT __stdcall put_CoeffType (
        /*[in]*/ enum AgEVACoeffRKV8th9th pVal ) = 0;
};

struct __declspec(uuid("44e4ac2d-ccc3-4706-9ab7-fa39630c46ce"))
_IAgVARKV8th9th : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetInitialStep,put=PutInitialStep))
    double InitialStep;
    __declspec(property(get=GetUseFixedStep,put=PutUseFixedStep))
    VARIANT_BOOL UseFixedStep;
    __declspec(property(get=GetUseMaxStep,put=PutUseMaxStep))
    VARIANT_BOOL UseMaxStep;
    __declspec(property(get=GetUseMinStep,put=PutUseMinStep))
    VARIANT_BOOL UseMinStep;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    double MaxStep;
    __declspec(property(get=GetMinStep,put=PutMinStep))
    double MinStep;
    __declspec(property(get=GetMaxRelErr,put=PutMaxRelErr))
    double MaxRelErr;
    __declspec(property(get=GetMaxAbsErr,put=PutMaxAbsErr))
    double MaxAbsErr;
    __declspec(property(get=GetHighSafetyCoefficient,put=PutHighSafetyCoefficient))
    double HighSafetyCoefficient;
    __declspec(property(get=GetLowSafetyCoefficient,put=PutLowSafetyCoefficient))
    double LowSafetyCoefficient;
    __declspec(property(get=GetErrorControl,put=PutErrorControl))
    enum AgEVAErrorControl ErrorControl;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;
    __declspec(property(get=GetCoeffType,put=PutCoeffType))
    enum AgEVACoeffRKV8th9th CoeffType;

    //
    // Wrapper methods for error-handling
    //

    double GetInitialStep ( );
    void PutInitialStep (
        double pRetVal );
    VARIANT_BOOL GetUseFixedStep ( );
    void PutUseFixedStep (
        VARIANT_BOOL pRetVal );
    VARIANT_BOOL GetUseMaxStep ( );
    void PutUseMaxStep (
        VARIANT_BOOL pRetVal );
    VARIANT_BOOL GetUseMinStep ( );
    void PutUseMinStep (
        VARIANT_BOOL pRetVal );
    double GetMaxStep ( );
    void PutMaxStep (
        double pRetVal );
    double GetMinStep ( );
    void PutMinStep (
        double pRetVal );
    double GetMaxRelErr ( );
    void PutMaxRelErr (
        double pRetVal );
    double GetMaxAbsErr ( );
    void PutMaxAbsErr (
        double pRetVal );
    double GetHighSafetyCoefficient ( );
    void PutHighSafetyCoefficient (
        double pRetVal );
    double GetLowSafetyCoefficient ( );
    void PutLowSafetyCoefficient (
        double pRetVal );
    enum AgEVAErrorControl GetErrorControl ( );
    void PutErrorControl (
        enum AgEVAErrorControl pRetVal );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pRetVal );
    enum AgEVACoeffRKV8th9th GetCoeffType ( );
    void PutCoeffType (
        enum AgEVACoeffRKV8th9th pRetVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InitialStep (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_InitialStep (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseFixedStep (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_UseFixedStep (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxStep (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxStep (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseMinStep (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_UseMinStep (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_MinStep (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MinStep (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_MaxRelErr (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MaxRelErr (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_MaxAbsErr (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MaxAbsErr (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_HighSafetyCoefficient (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_HighSafetyCoefficient (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_LowSafetyCoefficient (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_LowSafetyCoefficient (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_ErrorControl (
        /*[out,retval]*/ enum AgEVAErrorControl * pRetVal ) = 0;
      virtual HRESULT __stdcall put_ErrorControl (
        /*[in]*/ enum AgEVAErrorControl pRetVal ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pRetVal ) = 0;
      virtual HRESULT __stdcall get_CoeffType (
        /*[out,retval]*/ enum AgEVACoeffRKV8th9th * pRetVal ) = 0;
      virtual HRESULT __stdcall put_CoeffType (
        /*[in]*/ enum AgEVACoeffRKV8th9th pRetVal ) = 0;
};

struct __declspec(uuid("92e1c48c-5cd4-49b3-9c32-8cacf4fad259"))
AgVADriverMCS;
    // [ default ] interface _IAgVADriverMCS
    // interface IAgVADriverMCS
    // interface IAgVePropagator

enum AgEVASegmentType
{
    eVASegmentTypeInitialState = 0,
    eVASegmentTypeLaunch = 1,
    eVASegmentTypeManeuver = 2,
    eVASegmentTypeFollow = 3,
    eVASegmentTypeHold = 4,
    eVASegmentTypePropagate = 5,
    eVASegmentTypeSequence = 6,
    eVASegmentTypeReturn = 7,
    eVASegmentTypeTargetSequence = 8,
    eVASegmentTypeStop = 9,
    eVASegmentTypeUpdate = 10,
    eVASegmentTypeBackwardSequence = 11,
    eVASegmentTypeEnd = 12
};

struct __declspec(uuid("0bb9dd7d-f226-4c0e-ba79-1ae878d647f8"))
IAgVABPlaneCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    _bstr_t Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Add (
        _bstr_t BPlaneName );
    HRESULT Remove (
        _bstr_t BPlaneName );
    HRESULT RemoveAll ( );
    _bstr_t GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR BPlaneName ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ BSTR BPlaneName ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum AgEVARunCode
{
    eVARunCodeMarching = 0,
    eVARunCodeProfileFailure = 1,
    eVARunCodeError = 2,
    eVARunCodeStopped = 3,
    eVARunCodeReturned = 4,
    eVARunCodeCancelled = 5,
    eVARunCodeHitGlobalStop = 6
};

struct __declspec(uuid("efa927ab-52de-4ed8-9443-71ff6834dc74"))
IAgVAMCSSegmentProperties : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDisplayCoordinateSystem,put=PutDisplayCoordinateSystem))
    _bstr_t DisplayCoordinateSystem;
    __declspec(property(get=GetColor,put=PutColor))
    OLE_COLOR Color;
    __declspec(property(get=GetUpdateAnimationTimeAfterRun,put=PutUpdateAnimationTimeAfterRun))
    VARIANT_BOOL UpdateAnimationTimeAfterRun;
    __declspec(property(get=GetBPlanes))
    IAgVABPlaneCollectionPtr BPlanes;
    __declspec(property(get=GetLastRunCode))
    enum AgEVARunCode LastRunCode;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDisplayCoordinateSystem ( );
    void PutDisplayCoordinateSystem (
        _bstr_t pDisplayCoordinateSystem );
    OLE_COLOR GetColor ( );
    void PutColor (
        OLE_COLOR pVal );
    VARIANT_BOOL GetUpdateAnimationTimeAfterRun ( );
    void PutUpdateAnimationTimeAfterRun (
        VARIANT_BOOL pVal );
    HRESULT ApplyFinalStateToBPlanes ( );
    IAgVABPlaneCollectionPtr GetBPlanes ( );
    enum AgEVARunCode GetLastRunCode ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DisplayCoordinateSystem (
        /*[out,retval]*/ BSTR * pDisplayCoordinateSystem ) = 0;
      virtual HRESULT __stdcall put_DisplayCoordinateSystem (
        /*[in]*/ BSTR pDisplayCoordinateSystem ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ OLE_COLOR * pVal ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ OLE_COLOR pVal ) = 0;
      virtual HRESULT __stdcall get_UpdateAnimationTimeAfterRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdateAnimationTimeAfterRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall raw_ApplyFinalStateToBPlanes ( ) = 0;
      virtual HRESULT __stdcall get_BPlanes (
        /*[out,retval]*/ struct IAgVABPlaneCollection * * ppVABPlaneCollection ) = 0;
      virtual HRESULT __stdcall get_LastRunCode (
        /*[out,retval]*/ enum AgEVARunCode * pVal ) = 0;
};

enum AgEVAElementType
{
    eVAElementTypeCartesian = 0,
    eVAElementTypeKeplerian = 1,
    eVAElementTypeModKeplerian = 2,
    eVAElementTypeSpherical = 3,
    eVAElementTypeTargetVectorIncomingAsymptote = 4,
    eVAElementTypeTargetVectorOutgoingAsymptote = 5,
    eVAElementTypeMixedSpherical = 6,
    eVAElementTypeDelaunay = 7,
    eVAElementTypeEquinoctial = 8,
    eVAElementTypeGeodetic = 9
};

struct __declspec(uuid("e2fcd5c6-dffe-4a6c-ba12-c89750bfeec6"))
IAgVAElement : IUnknown
{};

struct __declspec(uuid("f54459c0-dc2d-406d-8fe8-5128b08cdcf0"))
IAgVAState : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetElementType))
    enum AgEVAElementType ElementType;
    __declspec(property(get=GetElement))
    IAgVAElementPtr Element;
    __declspec(property(get=GetEpoch,put=PutEpoch))
    _variant_t Epoch;
    __declspec(property(get=GetCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetDryMass,put=PutDryMass))
    double DryMass;
    __declspec(property(get=GetFuelMass,put=PutFuelMass))
    double FuelMass;
    __declspec(property(get=GetDragArea,put=PutDragArea))
    double DragArea;
    __declspec(property(get=GetSRPArea,put=PutSRPArea))
    double SRPArea;
    __declspec(property(get=GetTankPressure,put=PutTankPressure))
    double TankPressure;
    __declspec(property(get=GetTankTemperature,put=PutTankTemperature))
    double TankTemperature;
    __declspec(property(get=GetFuelDensity,put=PutFuelDensity))
    double FuelDensity;
    __declspec(property(get=GetCr,put=PutCr))
    double Cr;
    __declspec(property(get=GetCd,put=PutCd))
    double Cd;
    __declspec(property(get=GetRadiationPressureCoeff,put=PutRadiationPressureCoeff))
    double RadiationPressureCoeff;
    __declspec(property(get=GetRadiationPressureArea,put=PutRadiationPressureArea))
    double RadiationPressureArea;
    __declspec(property(get=GetK1,put=PutK1))
    double K1;
    __declspec(property(get=GetK2,put=PutK2))
    double K2;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAElementType GetElementType ( );
    HRESULT SetElementType (
        enum AgEVAElementType ElementType );
    IAgVAElementPtr GetElement ( );
    _variant_t GetEpoch ( );
    void PutEpoch (
        const _variant_t & pEpoch );
    _bstr_t GetCoordSystemName ( );
    double GetDryMass ( );
    void PutDryMass (
        double pDryMass );
    double GetFuelMass ( );
    void PutFuelMass (
        double pFuelMass );
    double GetDragArea ( );
    void PutDragArea (
        double pFuelMass );
    double GetSRPArea ( );
    void PutSRPArea (
        double pSRPArea );
    double GetTankPressure ( );
    void PutTankPressure (
        double pTankPressure );
    double GetTankTemperature ( );
    void PutTankTemperature (
        double pTankTemperature );
    double GetFuelDensity ( );
    void PutFuelDensity (
        double pFuelDensity );
    double GetCr ( );
    void PutCr (
        double pCr );
    double GetCd ( );
    void PutCd (
        double pCd );
    double GetRadiationPressureCoeff ( );
    void PutRadiationPressureCoeff (
        double pRadiationPressureCoeff );
    double GetRadiationPressureArea ( );
    void PutRadiationPressureArea (
        double pRadiationPressureArea );
    double GetK1 ( );
    void PutK1 (
        double pK1 );
    double GetK2 ( );
    void PutK2 (
        double pK2 );
    IAgVAStatePtr GetInFrameName (
        _bstr_t FrameName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElementType * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetElementType (
        /*[in]*/ enum AgEVAElementType ElementType ) = 0;
      virtual HRESULT __stdcall get_Element (
        /*[out,retval]*/ struct IAgVAElement * * ppVAElement ) = 0;
      virtual HRESULT __stdcall get_Epoch (
        /*[out,retval]*/ VARIANT * pEpoch ) = 0;
      virtual HRESULT __stdcall put_Epoch (
        /*[in]*/ VARIANT pEpoch ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pCoordSysName ) = 0;
      virtual HRESULT __stdcall get_DryMass (
        /*[out,retval]*/ double * pDryMass ) = 0;
      virtual HRESULT __stdcall put_DryMass (
        /*[in]*/ double pDryMass ) = 0;
      virtual HRESULT __stdcall get_FuelMass (
        /*[out,retval]*/ double * pFuelMass ) = 0;
      virtual HRESULT __stdcall put_FuelMass (
        /*[in]*/ double pFuelMass ) = 0;
      virtual HRESULT __stdcall get_DragArea (
        /*[out,retval]*/ double * pFuelMass ) = 0;
      virtual HRESULT __stdcall put_DragArea (
        /*[in]*/ double pFuelMass ) = 0;
      virtual HRESULT __stdcall get_SRPArea (
        /*[out,retval]*/ double * pSRPArea ) = 0;
      virtual HRESULT __stdcall put_SRPArea (
        /*[in]*/ double pSRPArea ) = 0;
      virtual HRESULT __stdcall get_TankPressure (
        /*[out,retval]*/ double * pTankPressure ) = 0;
      virtual HRESULT __stdcall put_TankPressure (
        /*[in]*/ double pTankPressure ) = 0;
      virtual HRESULT __stdcall get_TankTemperature (
        /*[out,retval]*/ double * pTankTemperature ) = 0;
      virtual HRESULT __stdcall put_TankTemperature (
        /*[in]*/ double pTankTemperature ) = 0;
      virtual HRESULT __stdcall get_FuelDensity (
        /*[out,retval]*/ double * pFuelDensity ) = 0;
      virtual HRESULT __stdcall put_FuelDensity (
        /*[in]*/ double pFuelDensity ) = 0;
      virtual HRESULT __stdcall get_Cr (
        /*[out,retval]*/ double * pCr ) = 0;
      virtual HRESULT __stdcall put_Cr (
        /*[in]*/ double pCr ) = 0;
      virtual HRESULT __stdcall get_Cd (
        /*[out,retval]*/ double * pCd ) = 0;
      virtual HRESULT __stdcall put_Cd (
        /*[in]*/ double pCd ) = 0;
      virtual HRESULT __stdcall get_RadiationPressureCoeff (
        /*[out,retval]*/ double * pRadiationPressureCoeff ) = 0;
      virtual HRESULT __stdcall put_RadiationPressureCoeff (
        /*[in]*/ double pRadiationPressureCoeff ) = 0;
      virtual HRESULT __stdcall get_RadiationPressureArea (
        /*[out,retval]*/ double * pRadiationPressureArea ) = 0;
      virtual HRESULT __stdcall put_RadiationPressureArea (
        /*[in]*/ double pRadiationPressureArea ) = 0;
      virtual HRESULT __stdcall get_K1 (
        /*[out,retval]*/ double * pK1 ) = 0;
      virtual HRESULT __stdcall put_K1 (
        /*[in]*/ double pK1 ) = 0;
      virtual HRESULT __stdcall get_K2 (
        /*[out,retval]*/ double * pK2 ) = 0;
      virtual HRESULT __stdcall put_K2 (
        /*[in]*/ double pK2 ) = 0;
      virtual HRESULT __stdcall raw_GetInFrameName (
        /*[in]*/ BSTR FrameName,
        /*[out,retval]*/ struct IAgVAState * * ppOrbitState ) = 0;
};

struct __declspec(uuid("87cbbb81-d986-4a3b-bb44-92082ed40f2d"))
IAgVAMCSSegment : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
};

struct __declspec(uuid("e30fe5d4-eccd-4c2c-a0d3-0013680df30b"))
IAgVAMCSSegmentCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAMCSSegmentPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAMCSSegmentPtr GetItem (
        const _variant_t & IndexOrName );
    IAgVAMCSSegmentPtr Insert (
        enum AgEVASegmentType SegmentType,
        _bstr_t SegmentName,
        _bstr_t SegmentToInsertBefore );
    HRESULT Remove (
        _bstr_t SegmentNameToRemove );
    HRESULT RemoveAll ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    HRESULT Cut (
        _bstr_t SegmentNameToCut );
    IAgVAMCSSegmentPtr Paste (
        _bstr_t SegmentToPasteBefore );
    IAgVAMCSSegmentPtr InsertCopy (
        struct IAgVAMCSSegment * Segment,
        _bstr_t SegmentToInsertBefore );
    IAgVAMCSSegmentPtr InsertByName (
        _bstr_t SegmentName,
        _bstr_t SegmentToInsertBefore );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAMCSSegment * * ppVAMCSSegment ) = 0;
      virtual HRESULT __stdcall raw_Insert (
        /*[in]*/ enum AgEVASegmentType SegmentType,
        /*[in]*/ BSTR SegmentName,
        /*[in]*/ BSTR SegmentToInsertBefore,
        /*[out,retval]*/ struct IAgVAMCSSegment * * ppMCSSegment ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ BSTR SegmentNameToRemove ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ BSTR SegmentNameToCut ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[in]*/ BSTR SegmentToPasteBefore,
        /*[out,retval]*/ struct IAgVAMCSSegment * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct IAgVAMCSSegment * Segment,
        /*[in]*/ BSTR SegmentToInsertBefore,
        /*[out,retval]*/ struct IAgVAMCSSegment * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_InsertByName (
        /*[in]*/ BSTR SegmentName,
        /*[in]*/ BSTR SegmentToInsertBefore,
        /*[out,retval]*/ struct IAgVAMCSSegment * * ppMCSSegment ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("e7d7f715-efcf-4da8-b619-4bfb4ccd0475"))
IAgVAUserVariableDefinition : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetVariableName,put=PutVariableName))
    _bstr_t VariableName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );
    _bstr_t GetVariableName ( );
    void PutVariableName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VariableName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VariableName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("344227ea-4706-4020-aa2e-cc8e2b086137"))
IAgVAUserVariableDefinitionCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAUserVariableDefinitionPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAUserVariableDefinitionPtr GetItem (
        const _variant_t & IndexOrName );
    IAgVAUserVariableDefinitionPtr Add (
        _bstr_t ParameterName );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    HRESULT RemoveAll ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAUserVariableDefinition * * ppVAUserVariableDefinition ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR ParameterName,
        /*[out,retval]*/ struct IAgVAUserVariableDefinition * * ppVAUserVariableDefinition ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum AgEVASmartRunMode
{
    eVASmartRunModeEntireMCS = 0,
    eVASmartRunModeOnlyChanged = 1
};

struct __declspec(uuid("e4706bf1-76cb-409f-96d7-d7294d627fe7"))
IAgVAMCSOptions : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDrawTrajectoryIn2D,put=PutDrawTrajectoryIn2D))
    VARIANT_BOOL DrawTrajectoryIn2D;
    __declspec(property(get=GetGenerateEphemeris,put=PutGenerateEphemeris))
    VARIANT_BOOL GenerateEphemeris;
    __declspec(property(get=GetDrawTrajectoryIn3D,put=PutDrawTrajectoryIn3D))
    VARIANT_BOOL DrawTrajectoryIn3D;
    __declspec(property(get=GetUserVariables))
    IAgVAUserVariableDefinitionCollectionPtr UserVariables;
    __declspec(property(get=GetUpdateAnimationTimeForAllObjects,put=PutUpdateAnimationTimeForAllObjects))
    VARIANT_BOOL UpdateAnimationTimeForAllObjects;
    __declspec(property(get=GetSmartRunMode,put=PutSmartRunMode))
    enum AgEVASmartRunMode SmartRunMode;
    __declspec(property(get=GetClearDWCGraphicsBeforeEachRun,put=PutClearDWCGraphicsBeforeEachRun))
    VARIANT_BOOL ClearDWCGraphicsBeforeEachRun;
    __declspec(property(get=GetClearAdditionalBPlanePoints,put=PutClearAdditionalBPlanePoints))
    VARIANT_BOOL ClearAdditionalBPlanePoints;
    __declspec(property(get=GetPropagateOnApply,put=PutPropagateOnApply))
    VARIANT_BOOL PropagateOnApply;
    __declspec(property(get=GetEnableTrajectorySegmentColors,put=PutEnableTrajectorySegmentColors))
    VARIANT_BOOL EnableTrajectorySegmentColors;
    __declspec(property(get=GetSaveNumbersInRawFormat,put=PutSaveNumbersInRawFormat))
    VARIANT_BOOL SaveNumbersInRawFormat;
    __declspec(property(get=GetStoppingConditionTimeTolerance,put=PutStoppingConditionTimeTolerance))
    double StoppingConditionTimeTolerance;
    __declspec(property(get=GetEnableSegmentControls,put=PutEnableSegmentControls))
    VARIANT_BOOL EnableSegmentControls;
    __declspec(property(get=GetEnableSegmentResults,put=PutEnableSegmentResults))
    VARIANT_BOOL EnableSegmentResults;
    __declspec(property(get=GetEnableLogging,put=PutEnableLogging))
    VARIANT_BOOL EnableLogging;
    __declspec(property(get=GetGraphicsUpdateRate,put=PutGraphicsUpdateRate))
    double GraphicsUpdateRate;
    __declspec(property(get=GetPromoteControls,put=PutPromoteControls))
    VARIANT_BOOL PromoteControls;
    __declspec(property(get=GetUseNominalSettings,put=PutUseNominalSettings))
    VARIANT_BOOL UseNominalSettings;
    __declspec(property(get=GetMinEphemStep,put=PutMinEphemStep))
    double MinEphemStep;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetDrawTrajectoryIn2D ( );
    void PutDrawTrajectoryIn2D (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetDrawTrajectoryIn3D ( );
    void PutDrawTrajectoryIn3D (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUpdateAnimationTimeForAllObjects ( );
    void PutUpdateAnimationTimeForAllObjects (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetClearDWCGraphicsBeforeEachRun ( );
    void PutClearDWCGraphicsBeforeEachRun (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetClearAdditionalBPlanePoints ( );
    void PutClearAdditionalBPlanePoints (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetPropagateOnApply ( );
    void PutPropagateOnApply (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableTrajectorySegmentColors ( );
    void PutEnableTrajectorySegmentColors (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetSaveNumbersInRawFormat ( );
    void PutSaveNumbersInRawFormat (
        VARIANT_BOOL pVal );
    double GetStoppingConditionTimeTolerance ( );
    void PutStoppingConditionTimeTolerance (
        double pVal );
    VARIANT_BOOL GetEnableSegmentControls ( );
    void PutEnableSegmentControls (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableSegmentResults ( );
    void PutEnableSegmentResults (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableLogging ( );
    void PutEnableLogging (
        VARIANT_BOOL pVal );
    double GetGraphicsUpdateRate ( );
    void PutGraphicsUpdateRate (
        double pVal );
    VARIANT_BOOL GetPromoteControls ( );
    void PutPromoteControls (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseNominalSettings ( );
    void PutUseNominalSettings (
        VARIANT_BOOL pVal );
    double GetMinEphemStep ( );
    void PutMinEphemStep (
        double pVal );
    VARIANT_BOOL GetGenerateEphemeris ( );
    void PutGenerateEphemeris (
        VARIANT_BOOL pVal );
    IAgVAUserVariableDefinitionCollectionPtr GetUserVariables ( );
    enum AgEVASmartRunMode GetSmartRunMode ( );
    void PutSmartRunMode (
        enum AgEVASmartRunMode pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DrawTrajectoryIn2D (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_DrawTrajectoryIn2D (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DrawTrajectoryIn3D (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_DrawTrajectoryIn3D (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UpdateAnimationTimeForAllObjects (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdateAnimationTimeForAllObjects (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ClearDWCGraphicsBeforeEachRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ClearDWCGraphicsBeforeEachRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ClearAdditionalBPlanePoints (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ClearAdditionalBPlanePoints (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_PropagateOnApply (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_PropagateOnApply (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableTrajectorySegmentColors (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableTrajectorySegmentColors (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SaveNumbersInRawFormat (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_SaveNumbersInRawFormat (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_StoppingConditionTimeTolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_StoppingConditionTimeTolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EnableSegmentControls (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableSegmentControls (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableSegmentResults (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableSegmentResults (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableLogging (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableLogging (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_GraphicsUpdateRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_GraphicsUpdateRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PromoteControls (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_PromoteControls (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseNominalSettings (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseNominalSettings (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MinEphemStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinEphemStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_GenerateEphemeris (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_GenerateEphemeris (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UserVariables (
        /*[out,retval]*/ struct IAgVAUserVariableDefinitionCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_SmartRunMode (
        /*[out,retval]*/ enum AgEVASmartRunMode * pVal ) = 0;
      virtual HRESULT __stdcall put_SmartRunMode (
        /*[in]*/ enum AgEVASmartRunMode pVal ) = 0;
};

struct __declspec(uuid("c5c0b5e3-ee5e-4f28-8dbc-f6ebb9a7cf9a"))
IAgVAAutomaticSequence : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetSequence))
    IAgVAMCSSegmentCollectionPtr Sequence;

    //
    // Wrapper methods for error-handling
    //

    IAgVAAutomaticSequencePtr MakeCopy (
        _bstr_t UniqueName );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    IAgVAMCSSegmentCollectionPtr GetSequence ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_MakeCopy (
        /*[in]*/ BSTR UniqueName,
        /*[out,retval]*/ struct IAgVAAutomaticSequence * * ppAutomaticSequence ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Sequence (
        /*[out,retval]*/ struct IAgVAMCSSegmentCollection * * ppVAMCSSegmentCollection ) = 0;
};

struct __declspec(uuid("eded4c83-c733-40fe-a8ec-23b7f1ba44a4"))
IAgVAAutomaticSequenceCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAAutomaticSequencePtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAAutomaticSequencePtr GetItem (
        const _variant_t & IndexOrName );
    IAgVAAutomaticSequencePtr Add (
        _bstr_t Name );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAAutomaticSequence * * ppVAAutomaticSequence ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAgVAAutomaticSequence * * ppVAAutomaticSequence ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum AgEVAClearEphemerisDirection
{
    eVAClearEphemerisBefore = -1,
    eVAClearEphemerisNoClear = 0,
    eVAClearEphemerisAfter = 1
};

struct __declspec(uuid("dbc8c2ec-6798-4162-b3d9-26622192e68d"))
IAgVACalculationGraphCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    _bstr_t Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    HRESULT Add (
        _bstr_t GraphName );
    HRESULT Remove (
        _bstr_t GraphName );
    HRESULT RemoveAll ( );
    long GetCount ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR GraphName ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ BSTR GraphName ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("baa24cf1-0358-49b2-9d55-b5cc82114b3e"))
_IAgVADriverMCS : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMainSequence))
    IAgVAMCSSegmentCollectionPtr MainSequence;
    __declspec(property(get=GetOptions))
    IAgVAMCSOptionsPtr Options;
    __declspec(property(get=GetAutoSequence))
    IAgVAAutomaticSequenceCollectionPtr AutoSequence;
    __declspec(property(get=GetCalculationGraphs))
    IAgVACalculationGraphCollectionPtr CalculationGraphs;

    //
    // Wrapper methods for error-handling
    //

    IAgVAMCSSegmentCollectionPtr GetMainSequence ( );
    IAgVAMCSOptionsPtr GetOptions ( );
    IAgVAAutomaticSequenceCollectionPtr GetAutoSequence ( );
    HRESULT RunMCS ( );
    HRESULT BeginRun ( );
    HRESULT EndRun ( );
    HRESULT ClearDWCGraphics ( );
    HRESULT ResetAllProfiles ( );
    HRESULT ApplyAllProfileChanges ( );
    HRESULT AppendRun ( );
    HRESULT AppendRunFromTime (
        const _variant_t & Epoch,
        enum AgEVAClearEphemerisDirection ClearEphemerisDirection );
    HRESULT AppendRunFromState (
        struct IAgVAState * AppendState,
        enum AgEVAClearEphemerisDirection ClearEphemerisDirection );
    enum AgEVARunCode RunMCS2 ( );
    IAgVACalculationGraphCollectionPtr GetCalculationGraphs ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MainSequence (
        /*[out,retval]*/ struct IAgVAMCSSegmentCollection * * ppVAMCSSegmentCollection ) = 0;
      virtual HRESULT __stdcall get_Options (
        /*[out,retval]*/ struct IAgVAMCSOptions * * ppVAMCSOptions ) = 0;
      virtual HRESULT __stdcall get_AutoSequence (
        /*[out,retval]*/ struct IAgVAAutomaticSequenceCollection * * ppVAAutomaticSequenceCollection ) = 0;
      virtual HRESULT __stdcall raw_RunMCS ( ) = 0;
      virtual HRESULT __stdcall raw_BeginRun ( ) = 0;
      virtual HRESULT __stdcall raw_EndRun ( ) = 0;
      virtual HRESULT __stdcall raw_ClearDWCGraphics ( ) = 0;
      virtual HRESULT __stdcall raw_ResetAllProfiles ( ) = 0;
      virtual HRESULT __stdcall raw_ApplyAllProfileChanges ( ) = 0;
      virtual HRESULT __stdcall raw_AppendRun ( ) = 0;
      virtual HRESULT __stdcall raw_AppendRunFromTime (
        /*[in]*/ VARIANT Epoch,
        /*[in]*/ enum AgEVAClearEphemerisDirection ClearEphemerisDirection ) = 0;
      virtual HRESULT __stdcall raw_AppendRunFromState (
        /*[in]*/ struct IAgVAState * AppendState,
        /*[in]*/ enum AgEVAClearEphemerisDirection ClearEphemerisDirection ) = 0;
      virtual HRESULT __stdcall raw_RunMCS2 (
        /*[out,retval]*/ enum AgEVARunCode * pRunCode ) = 0;
      virtual HRESULT __stdcall get_CalculationGraphs (
        /*[out,retval]*/ struct IAgVACalculationGraphCollection * * ppVACalculationGraphCollection ) = 0;
};

struct __declspec(uuid("cd671d91-4854-4beb-86b1-e9106296bcc1"))
IAgVADriverMCS : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetMainSequence))
    IAgVAMCSSegmentCollectionPtr MainSequence;
    __declspec(property(get=GetOptions))
    IAgVAMCSOptionsPtr Options;
    __declspec(property(get=GetAutoSequence))
    IAgVAAutomaticSequenceCollectionPtr AutoSequence;
    __declspec(property(get=GetCalculationGraphs))
    IAgVACalculationGraphCollectionPtr CalculationGraphs;

    //
    // Wrapper methods for error-handling
    //

    IAgVAMCSSegmentCollectionPtr GetMainSequence ( );
    IAgVAMCSOptionsPtr GetOptions ( );
    IAgVAAutomaticSequenceCollectionPtr GetAutoSequence ( );
    HRESULT RunMCS ( );
    HRESULT BeginRun ( );
    HRESULT EndRun ( );
    HRESULT ClearDWCGraphics ( );
    HRESULT ResetAllProfiles ( );
    HRESULT ApplyAllProfileChanges ( );
    HRESULT AppendRun ( );
    HRESULT AppendRunFromTime (
        const _variant_t & Epoch,
        enum AgEVAClearEphemerisDirection ClearEphemerisDirection );
    HRESULT AppendRunFromState (
        struct IAgVAState * AppendState,
        enum AgEVAClearEphemerisDirection ClearEphemerisDirection );
    enum AgEVARunCode RunMCS2 ( );
    IAgVACalculationGraphCollectionPtr GetCalculationGraphs ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MainSequence (
        /*[out,retval]*/ struct IAgVAMCSSegmentCollection * * ppVAMCSSegmentCollection ) = 0;
      virtual HRESULT __stdcall get_Options (
        /*[out,retval]*/ struct IAgVAMCSOptions * * ppVAMCSOptions ) = 0;
      virtual HRESULT __stdcall get_AutoSequence (
        /*[out,retval]*/ struct IAgVAAutomaticSequenceCollection * * ppVAAutomaticSequenceCollection ) = 0;
      virtual HRESULT __stdcall raw_RunMCS ( ) = 0;
      virtual HRESULT __stdcall raw_BeginRun ( ) = 0;
      virtual HRESULT __stdcall raw_EndRun ( ) = 0;
      virtual HRESULT __stdcall raw_ClearDWCGraphics ( ) = 0;
      virtual HRESULT __stdcall raw_ResetAllProfiles ( ) = 0;
      virtual HRESULT __stdcall raw_ApplyAllProfileChanges ( ) = 0;
      virtual HRESULT __stdcall raw_AppendRun ( ) = 0;
      virtual HRESULT __stdcall raw_AppendRunFromTime (
        /*[in]*/ VARIANT Epoch,
        /*[in]*/ enum AgEVAClearEphemerisDirection ClearEphemerisDirection ) = 0;
      virtual HRESULT __stdcall raw_AppendRunFromState (
        /*[in]*/ struct IAgVAState * AppendState,
        /*[in]*/ enum AgEVAClearEphemerisDirection ClearEphemerisDirection ) = 0;
      virtual HRESULT __stdcall raw_RunMCS2 (
        /*[out,retval]*/ enum AgEVARunCode * pRunCode ) = 0;
      virtual HRESULT __stdcall get_CalculationGraphs (
        /*[out,retval]*/ struct IAgVACalculationGraphCollection * * ppVACalculationGraphCollection ) = 0;
};

struct __declspec(uuid("8b2fef60-2658-45b6-82a0-c7d07608d970"))
AgVAMCSSegmentCollection;
    // [ default ] interface IUnknown
    // interface IAgVAMCSSegmentCollection
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("3085ed60-f22a-4b90-b6e9-103fe69bfec4"))
IAgRuntimeTypeInfoProvider : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("5fb77b5a-26f8-49dd-9f1e-b0664f4263d5"))
AgVAMCSEnd;
    // [ default ] interface _IAgVAMCSEnd
    // interface IAgVAMCSEnd
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgComponentInfo

struct __declspec(uuid("b70c02f8-ca47-4c7e-b70c-502c676ea2e6"))
_IAgVAMCSEnd : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("f2283676-341e-438b-b8a9-f4c3a8980ea3"))
IAgVAMCSEnd : IUnknown
{};

struct __declspec(uuid("3672227d-7a3e-49c5-8f24-7428b6e48b2b"))
AgVAMCSInitialState;
    // [ default ] interface _IAgVAMCSInitialState
    // interface IAgVAMCSInitialState
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("cc0e069b-2b64-47b9-a331-1aaaaf02b59e"))
IAgVASpacecraftParameters : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDryMass,put=PutDryMass))
    double DryMass;
    __declspec(property(get=GetCd,put=PutCd))
    double Cd;
    __declspec(property(get=GetDragArea,put=PutDragArea))
    double DragArea;
    __declspec(property(get=GetCr,put=PutCr))
    double Cr;
    __declspec(property(get=GetSolarRadiationPressureArea,put=PutSolarRadiationPressureArea))
    double SolarRadiationPressureArea;
    __declspec(property(get=GetCk,put=PutCk))
    double Ck;
    __declspec(property(get=GetRadiationPressureArea,put=PutRadiationPressureArea))
    double RadiationPressureArea;
    __declspec(property(get=GetK1,put=PutK1))
    double K1;
    __declspec(property(get=GetK2,put=PutK2))
    double K2;

    //
    // Wrapper methods for error-handling
    //

    double GetDryMass ( );
    void PutDryMass (
        double pVal );
    double GetCd ( );
    void PutCd (
        double pVal );
    double GetDragArea ( );
    void PutDragArea (
        double pVal );
    double GetCr ( );
    void PutCr (
        double pVal );
    double GetSolarRadiationPressureArea ( );
    void PutSolarRadiationPressureArea (
        double pVal );
    double GetCk ( );
    void PutCk (
        double pVal );
    double GetRadiationPressureArea ( );
    void PutRadiationPressureArea (
        double pVal );
    double GetK1 ( );
    void PutK1 (
        double pVal );
    double GetK2 ( );
    void PutK2 (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DryMass (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DryMass (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Cd (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Cd (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DragArea (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DragArea (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Cr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Cr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadiationPressureArea (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadiationPressureArea (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Ck (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Ck (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RadiationPressureArea (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiationPressureArea (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K2 (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("e6c1ca39-da5d-4523-a00b-e9476ae2dbc8"))
IAgVAFuelTank : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetTankPressure,put=PutTankPressure))
    double TankPressure;
    __declspec(property(get=GetTankVolume,put=PutTankVolume))
    double TankVolume;
    __declspec(property(get=GetTankTemperature,put=PutTankTemperature))
    double TankTemperature;
    __declspec(property(get=GetFuelDensity,put=PutFuelDensity))
    double FuelDensity;
    __declspec(property(get=GetFuelMass,put=PutFuelMass))
    double FuelMass;
    __declspec(property(get=GetMaximumFuelMass,put=PutMaximumFuelMass))
    double MaximumFuelMass;

    //
    // Wrapper methods for error-handling
    //

    double GetTankPressure ( );
    void PutTankPressure (
        double pVal );
    double GetTankVolume ( );
    void PutTankVolume (
        double pVal );
    double GetTankTemperature ( );
    void PutTankTemperature (
        double pVal );
    double GetFuelDensity ( );
    void PutFuelDensity (
        double pVal );
    double GetFuelMass ( );
    void PutFuelMass (
        double pVal );
    double GetMaximumFuelMass ( );
    void PutMaximumFuelMass (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TankPressure (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TankPressure (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TankVolume (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TankVolume (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TankTemperature (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TankTemperature (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_FuelDensity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FuelDensity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_FuelMass (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FuelMass (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaximumFuelMass (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaximumFuelMass (
        /*[in]*/ double pVal ) = 0;
};

enum AgEVAControlInitState
{
    eVAControlInitStateFuelMass = 300,
    eVAControlInitStateCartesianVx = 301,
    eVAControlInitStateCartesianVy = 302,
    eVAControlInitStateCartesianVz = 303,
    eVAControlInitStateCartesianX = 304,
    eVAControlInitStateCartesianY = 305,
    eVAControlInitStateCartesianZ = 306,
    eVAControlInitStateCd = 307,
    eVAControlInitStateCr = 308,
    eVAControlInitStateDragArea = 309,
    eVAControlInitStateDryMass = 310,
    eVAControlInitStateEpoch = 311,
    eVAControlInitStateFuelDensity = 312,
    eVAControlInitStateK1 = 313,
    eVAControlInitStateK2 = 314,
    eVAControlInitStateKeplerianEcc = 315,
    eVAControlInitStateKeplerianInc = 316,
    eVAControlInitStateKeplerianRAAN = 317,
    eVAControlInitStateKeplerianSMA = 318,
    eVAControlInitStateKeplerianTA = 319,
    eVAControlInitStateKeplerianW = 320,
    eVAControlInitStateModifiedKeplerianEcc = 321,
    eVAControlInitStateModifiedKeplerianInc = 322,
    eVAControlInitStateModifiedKeplerianRAAN = 323,
    eVAControlInitStateModifiedKeplerianRp = 324,
    eVAControlInitStateModifiedKeplerianTA = 325,
    eVAControlInitStateModifiedKeplerianW = 326,
    eVAControlInitStateRadiationPressureArea = 327,
    eVAControlInitStateCk = 328,
    eVAControlInitStateSphericalAz = 329,
    eVAControlInitStateSphericalDec = 330,
    eVAControlInitStateSphericalHorizFPA = 331,
    eVAControlInitStateSphericalRA = 332,
    eVAControlInitStateSphericalRMag = 333,
    eVAControlInitStateSphericalVMag = 334,
    eVAControlInitStateSRPArea = 335,
    eVAControlInitStateTankPressure = 336,
    eVAControlInitStateTankTemp = 337,
    eVAControlInitStateTargetVecInAsympDec = 338,
    eVAControlInitStateTargetVecInAsympRA = 339,
    eVAControlInitStateTargetVecInVelAzAtPeriapsis = 340,
    eVAControlInitStateTargetVecInC3 = 341,
    eVAControlInitStateTargetVecInRadOfPeriapsis = 342,
    eVAControlInitStateTargetVecInTrueAnomaly = 343,
    eVAControlInitStateTargetVecOutAsympDec = 344,
    eVAControlInitStateTargetVecOutAsympRA = 345,
    eVAControlInitStateTargetVecOutVelAzAtPeriapsis = 346,
    eVAControlInitStateTargetVecOutC3 = 347,
    eVAControlInitStateTargetVecOutRadOfPeriapsis = 348,
    eVAControlInitStateTargetVecOutTrueAnomaly = 349,
    eVAControlInitStateMaxFuelMass = 350,
    eVAControlInitStateTankVolume = 351,
    eVAControlInitStateDelaunayG = 352,
    eVAControlInitStateDelaunayH = 353,
    eVAControlInitStateDelaunayInc = 354,
    eVAControlInitStateDelaunayL = 355,
    eVAControlInitStateDelaunayMeanAnomaly = 356,
    eVAControlInitStateDelaunayRAAN = 357,
    eVAControlInitStateDelaunaySemiLatusRectum = 358,
    eVAControlInitStateDelaunaySMA = 359,
    eVAControlInitStateDelaunayW = 360,
    eVAControlInitStateEquinoctialH = 361,
    eVAControlInitStateEquinoctialK = 362,
    eVAControlInitStateEquinoctialMeanLongitude = 363,
    eVAControlInitStateEquinoctialMeanMotion = 364,
    eVAControlInitStateEquinoctialP = 365,
    eVAControlInitStateEquinoctialQ = 366,
    eVAControlInitStateEquinoctialSMA = 367,
    eVAControlInitStateMixedSphericalAltitude = 368,
    eVAControlInitStateMixedSphericalAzimuth = 369,
    eVAControlInitStateMixedSphericalHorizFPA = 370,
    eVAControlInitStateMixedSphericalLatitude = 371,
    eVAControlInitStateMixedSphericalLongitude = 372,
    eVAControlInitStateMixedSphericalVerticalFPA = 373,
    eVAControlInitStateMixedSphericalVMag = 374,
    eVAControlInitStateSphericalVerticalFPA = 375,
    eVAControlInitStateKeplerianApoapsisAltShape = 376,
    eVAControlInitStateKeplerianApoapsisAltSize = 377,
    eVAControlInitStateKeplerianApoapsisRadShape = 378,
    eVAControlInitStateKeplerianApoapsisRadSize = 379,
    eVAControlInitStateKeplerianArgLat = 380,
    eVAControlInitStateKeplerianEccAnomaly = 381,
    eVAControlInitStateKeplerianLAN = 382,
    eVAControlInitStateKeplerianMeanAnomaly = 383,
    eVAControlInitStateKeplerianMeanMotion = 384,
    eVAControlInitStateKeplerianPeriapsisAltShape = 385,
    eVAControlInitStateKeplerianPeriapsisAltSize = 386,
    eVAControlInitStateKeplerianPeriapsisRadShape = 387,
    eVAControlInitStateKeplerianPeriapsisRadSize = 388,
    eVAControlInitStateKeplerianPeriod = 389,
    eVAControlInitStateKeplerianTimePastAN = 390,
    eVAControlInitStateKeplerianTimePastPeriapsis = 391
};

struct __declspec(uuid("837d7080-f9c9-4986-8b02-c2cbf922395a"))
IAgVAUserVariable : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetVariableName))
    _bstr_t VariableName;
    __declspec(property(get=GetVariableValue,put=PutVariableValue))
    _variant_t VariableValue;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetUnitDimension ( );
    _bstr_t GetVariableName ( );
    _variant_t GetVariableValue ( );
    void PutVariableValue (
        const _variant_t & pVal );
    HRESULT EnableControlParameter ( );
    HRESULT DisableControlParameter ( );
    VARIANT_BOOL IsControlParameterEnabled ( );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_VariableName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_VariableValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VariableValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter ( ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter ( ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("ea74908a-c16c-4799-9469-c741788e01b4"))
IAgVAUserVariableCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAUserVariablePtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAUserVariablePtr GetItem (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAUserVariable * * ppVAUserVariable ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("63de1bbd-59c9-400c-83d3-8e8126d13b9c"))
_IAgVAMCSInitialState : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetOrbitEpoch,put=PutOrbitEpoch))
    _variant_t OrbitEpoch;
    __declspec(property(get=GetSpacecraftParameters))
    IAgVASpacecraftParametersPtr SpacecraftParameters;
    __declspec(property(get=GetFuelTank))
    IAgVAFuelTankPtr FuelTank;
    __declspec(property(get=GetElementType))
    enum AgEVAElementType ElementType;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetElement))
    IAgVAElementPtr Element;
    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetUserVariables))
    IAgVAUserVariableCollectionPtr UserVariables;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    _variant_t GetOrbitEpoch ( );
    void PutOrbitEpoch (
        const _variant_t & pVal );
    IAgVASpacecraftParametersPtr GetSpacecraftParameters ( );
    IAgVAFuelTankPtr GetFuelTank ( );
    enum AgEVAElementType GetElementType ( );
    HRESULT SetElementType (
        enum AgEVAElementType ElementType );
    IAgVAElementPtr GetElement ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlInitState Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlInitState Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlInitState Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    IAgVAUserVariableCollectionPtr GetUserVariables ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OrbitEpoch (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_OrbitEpoch (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_SpacecraftParameters (
        /*[out,retval]*/ struct IAgVASpacecraftParameters * * ppSpacecraftParameters ) = 0;
      virtual HRESULT __stdcall get_FuelTank (
        /*[out,retval]*/ struct IAgVAFuelTank * * ppVAFuelTank ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElementType * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetElementType (
        /*[in]*/ enum AgEVAElementType ElementType ) = 0;
      virtual HRESULT __stdcall get_Element (
        /*[out,retval]*/ struct IAgVAElement * * ppVAElement ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlInitState Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlInitState Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlInitState Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_UserVariables (
        /*[out,retval]*/ struct IAgVAUserVariableCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("7a49a480-235a-4226-9f51-a1c16f3ffd93"))
IAgVAMCSInitialState : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCoordSystemName,put=PutCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetOrbitEpoch,put=PutOrbitEpoch))
    _variant_t OrbitEpoch;
    __declspec(property(get=GetSpacecraftParameters))
    IAgVASpacecraftParametersPtr SpacecraftParameters;
    __declspec(property(get=GetFuelTank))
    IAgVAFuelTankPtr FuelTank;
    __declspec(property(get=GetElementType))
    enum AgEVAElementType ElementType;
    __declspec(property(get=GetElement))
    IAgVAElementPtr Element;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetUserVariables))
    IAgVAUserVariableCollectionPtr UserVariables;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCoordSystemName ( );
    void PutCoordSystemName (
        _bstr_t pVal );
    _variant_t GetOrbitEpoch ( );
    void PutOrbitEpoch (
        const _variant_t & pVal );
    IAgVASpacecraftParametersPtr GetSpacecraftParameters ( );
    IAgVAFuelTankPtr GetFuelTank ( );
    enum AgEVAElementType GetElementType ( );
    HRESULT SetElementType (
        enum AgEVAElementType ElementType );
    IAgVAElementPtr GetElement ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlInitState Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlInitState Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlInitState Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    IAgVAUserVariableCollectionPtr GetUserVariables ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystemName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_OrbitEpoch (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_OrbitEpoch (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_SpacecraftParameters (
        /*[out,retval]*/ struct IAgVASpacecraftParameters * * ppSpacecraftParameters ) = 0;
      virtual HRESULT __stdcall get_FuelTank (
        /*[out,retval]*/ struct IAgVAFuelTank * * ppVAFuelTank ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElementType * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetElementType (
        /*[in]*/ enum AgEVAElementType ElementType ) = 0;
      virtual HRESULT __stdcall get_Element (
        /*[out,retval]*/ struct IAgVAElement * * ppVAElement ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlInitState Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlInitState Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlInitState Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_UserVariables (
        /*[out,retval]*/ struct IAgVAUserVariableCollection * * ppRetVal ) = 0;
};

struct __declspec(uuid("0d11b482-14f7-4331-8954-c92d08947b87"))
AgVASpacecraftParameters;
    // [ default ] interface _IAgVASpacecraftParameters
    // interface IAgVASpacecraftParameters
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("3adcfe2f-c010-4b77-a038-ba42cd3215c5"))
_IAgVASpacecraftParameters : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDryMass,put=PutDryMass))
    double DryMass;
    __declspec(property(get=GetCd,put=PutCd))
    double Cd;
    __declspec(property(get=GetDragArea,put=PutDragArea))
    double DragArea;
    __declspec(property(get=GetCr,put=PutCr))
    double Cr;
    __declspec(property(get=GetSolarRadiationPressureArea,put=PutSolarRadiationPressureArea))
    double SolarRadiationPressureArea;
    __declspec(property(get=GetCk,put=PutCk))
    double Ck;
    __declspec(property(get=GetRadiationPressureArea,put=PutRadiationPressureArea))
    double RadiationPressureArea;
    __declspec(property(get=GetK1,put=PutK1))
    double K1;
    __declspec(property(get=GetK2,put=PutK2))
    double K2;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    double GetDryMass ( );
    void PutDryMass (
        double pVal );
    double GetCd ( );
    void PutCd (
        double pVal );
    double GetDragArea ( );
    void PutDragArea (
        double pVal );
    double GetCr ( );
    void PutCr (
        double pVal );
    double GetSolarRadiationPressureArea ( );
    void PutSolarRadiationPressureArea (
        double pVal );
    double GetCk ( );
    void PutCk (
        double pVal );
    double GetRadiationPressureArea ( );
    void PutRadiationPressureArea (
        double pVal );
    double GetK1 ( );
    void PutK1 (
        double pVal );
    double GetK2 ( );
    void PutK2 (
        double pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DryMass (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DryMass (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Cd (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Cd (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DragArea (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DragArea (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Cr (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Cr (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadiationPressureArea (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadiationPressureArea (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Ck (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Ck (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RadiationPressureArea (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiationPressureArea (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_K2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_K2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("deabbbbd-17b2-4ee1-95b7-542682b82e3e"))
AgVAFuelTank;
    // [ default ] interface _IAgVAFuelTank
    // interface IAgVAFuelTank
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("5414c3c7-be44-4c3a-825c-30679ec61d58"))
_IAgVAFuelTank : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTankPressure,put=PutTankPressure))
    double TankPressure;
    __declspec(property(get=GetTankVolume,put=PutTankVolume))
    double TankVolume;
    __declspec(property(get=GetTankTemperature,put=PutTankTemperature))
    double TankTemperature;
    __declspec(property(get=GetFuelDensity,put=PutFuelDensity))
    double FuelDensity;
    __declspec(property(get=GetFuelMass,put=PutFuelMass))
    double FuelMass;
    __declspec(property(get=GetMaximumFuelMass,put=PutMaximumFuelMass))
    double MaximumFuelMass;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    double GetTankPressure ( );
    void PutTankPressure (
        double pVal );
    double GetTankVolume ( );
    void PutTankVolume (
        double pVal );
    double GetTankTemperature ( );
    void PutTankTemperature (
        double pVal );
    double GetFuelDensity ( );
    void PutFuelDensity (
        double pVal );
    double GetFuelMass ( );
    void PutFuelMass (
        double pVal );
    double GetMaximumFuelMass ( );
    void PutMaximumFuelMass (
        double pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TankPressure (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TankPressure (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TankVolume (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TankVolume (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TankTemperature (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TankTemperature (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_FuelDensity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FuelDensity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_FuelMass (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FuelMass (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaximumFuelMass (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaximumFuelMass (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("cad4a91f-cecf-4020-8e30-218bb4ce84ea"))
AgVAElementCartesian;
    // [ default ] interface _IAgVAElementCartesian
    // interface IAgVAElement
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgVAElementCartesian

struct __declspec(uuid("5cdd349d-449a-4fd1-9e5b-6442f366c3a4"))
_IAgVAElementCartesian : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetX,put=PutX))
    double X;
    __declspec(property(get=GetY,put=PutY))
    double Y;
    __declspec(property(get=GetZ,put=PutZ))
    double Z;
    __declspec(property(get=GetVx,put=PutVx))
    double Vx;
    __declspec(property(get=GetVy,put=PutVy))
    double Vy;
    __declspec(property(get=GetVz,put=PutVz))
    double Vz;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    double GetX ( );
    void PutX (
        double pVal );
    double GetY ( );
    void PutY (
        double pVal );
    double GetZ ( );
    void PutZ (
        double pVal );
    double GetVx ( );
    void PutVx (
        double pVal );
    double GetVy ( );
    void PutVy (
        double pVal );
    double GetVz ( );
    void PutVz (
        double pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_X (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_X (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Y (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Z (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Z (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Vx (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Vx (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Vy (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Vy (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Vz (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Vz (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("37bcd2d9-1334-4ce3-a69b-0f01b8b533fc"))
IAgVAElementCartesian : IAgVAElement
{
    //
    // Property data
    //

    __declspec(property(get=GetX,put=PutX))
    double X;
    __declspec(property(get=GetY,put=PutY))
    double Y;
    __declspec(property(get=GetZ,put=PutZ))
    double Z;
    __declspec(property(get=GetVx,put=PutVx))
    double Vx;
    __declspec(property(get=GetVy,put=PutVy))
    double Vy;
    __declspec(property(get=GetVz,put=PutVz))
    double Vz;

    //
    // Wrapper methods for error-handling
    //

    double GetX ( );
    void PutX (
        double pVal );
    double GetY ( );
    void PutY (
        double pVal );
    double GetZ ( );
    void PutZ (
        double pVal );
    double GetVx ( );
    void PutVx (
        double pVal );
    double GetVy ( );
    void PutVy (
        double pVal );
    double GetVz ( );
    void PutVz (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_X (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_X (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Y (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Z (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Z (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Vx (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Vx (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Vy (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Vy (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Vz (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Vz (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("51a47063-b4dc-4cd6-b55b-a3bc7e484179"))
AgVAElementKeplerian;
    // [ default ] interface _IAgVAElementKeplerian
    // interface IAgVAElement
    // interface IAgVAElementKeplerian

struct __declspec(uuid("4a2929d9-09d0-4d58-86fe-c55491409f8e"))
_IAgVAElementKeplerian : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSemiMajorAxis,put=PutSemiMajorAxis))
    double SemiMajorAxis;
    __declspec(property(get=GetEccentricity,put=PutEccentricity))
    double Eccentricity;
    __declspec(property(get=GetInclination,put=PutInclination))
    _variant_t Inclination;
    __declspec(property(get=GetRAAN,put=PutRAAN))
    _variant_t RAAN;
    __declspec(property(get=GetArgOfPeriapsis,put=PutArgOfPeriapsis))
    _variant_t ArgOfPeriapsis;
    __declspec(property(get=GetTrueAnomaly,put=PutTrueAnomaly))
    _variant_t TrueAnomaly;
    __declspec(property(get=GetApoapsisAltitudeSize,put=PutApoapsisAltitudeSize))
    double ApoapsisAltitudeSize;
    __declspec(property(get=GetApoapsisRadiusSize,put=PutApoapsisRadiusSize))
    double ApoapsisRadiusSize;
    __declspec(property(get=GetMeanMotion,put=PutMeanMotion))
    double MeanMotion;
    __declspec(property(get=GetPeriapsisAltitudeSize,put=PutPeriapsisAltitudeSize))
    double PeriapsisAltitudeSize;
    __declspec(property(get=GetPeriapsisRadiusSize,put=PutPeriapsisRadiusSize))
    double PeriapsisRadiusSize;
    __declspec(property(get=GetPeriod,put=PutPeriod))
    double Period;
    __declspec(property(get=GetLAN,put=PutLAN))
    _variant_t LAN;
    __declspec(property(get=GetArgOfLatitude,put=PutArgOfLatitude))
    _variant_t ArgOfLatitude;
    __declspec(property(get=GetEccentricAnomaly,put=PutEccentricAnomaly))
    _variant_t EccentricAnomaly;
    __declspec(property(get=GetMeanAnomaly,put=PutMeanAnomaly))
    _variant_t MeanAnomaly;
    __declspec(property(get=GetTimePastAscNode,put=PutTimePastAscNode))
    double TimePastAscNode;
    __declspec(property(get=GetTimePastPeriapsis,put=PutTimePastPeriapsis))
    double TimePastPeriapsis;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVAElement ElementType;
    __declspec(property(get=GetApoapsisAltitudeShape,put=PutApoapsisAltitudeShape))
    double ApoapsisAltitudeShape;
    __declspec(property(get=GetApoapsisRadiusShape,put=PutApoapsisRadiusShape))
    double ApoapsisRadiusShape;
    __declspec(property(get=GetPeriapsisAltitudeShape,put=PutPeriapsisAltitudeShape))
    double PeriapsisAltitudeShape;
    __declspec(property(get=GetPeriapsisRadiusShape,put=PutPeriapsisRadiusShape))
    double PeriapsisRadiusShape;

    //
    // Wrapper methods for error-handling
    //

    double GetSemiMajorAxis ( );
    void PutSemiMajorAxis (
        double pVal );
    double GetEccentricity ( );
    void PutEccentricity (
        double pVal );
    _variant_t GetInclination ( );
    void PutInclination (
        const _variant_t & pVal );
    _variant_t GetRAAN ( );
    void PutRAAN (
        const _variant_t & pVal );
    _variant_t GetArgOfPeriapsis ( );
    void PutArgOfPeriapsis (
        const _variant_t & pVal );
    _variant_t GetTrueAnomaly ( );
    void PutTrueAnomaly (
        const _variant_t & pVal );
    double GetApoapsisAltitudeSize ( );
    void PutApoapsisAltitudeSize (
        double pVal );
    double GetApoapsisRadiusSize ( );
    void PutApoapsisRadiusSize (
        double pVal );
    double GetMeanMotion ( );
    void PutMeanMotion (
        double pVal );
    double GetPeriapsisAltitudeSize ( );
    void PutPeriapsisAltitudeSize (
        double pVal );
    double GetPeriapsisRadiusSize ( );
    void PutPeriapsisRadiusSize (
        double pVal );
    double GetPeriod ( );
    void PutPeriod (
        double pVal );
    _variant_t GetLAN ( );
    void PutLAN (
        const _variant_t & pVal );
    _variant_t GetArgOfLatitude ( );
    void PutArgOfLatitude (
        const _variant_t & pVal );
    _variant_t GetEccentricAnomaly ( );
    void PutEccentricAnomaly (
        const _variant_t & pVal );
    _variant_t GetMeanAnomaly ( );
    void PutMeanAnomaly (
        const _variant_t & pVal );
    double GetTimePastAscNode ( );
    void PutTimePastAscNode (
        double pVal );
    double GetTimePastPeriapsis ( );
    void PutTimePastPeriapsis (
        double pVal );
    enum AgEVAElement GetElementType ( );
    void PutElementType (
        enum AgEVAElement pVal );
    double GetApoapsisAltitudeShape ( );
    void PutApoapsisAltitudeShape (
        double pVal );
    double GetApoapsisRadiusShape ( );
    void PutApoapsisRadiusShape (
        double pVal );
    double GetPeriapsisAltitudeShape ( );
    void PutPeriapsisAltitudeShape (
        double pVal );
    double GetPeriapsisRadiusShape ( );
    void PutPeriapsisRadiusShape (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SemiMajorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Eccentricity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Eccentricity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inclination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Inclination (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RAAN (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAAN (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_TrueAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_TrueAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ApoapsisAltitudeSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ApoapsisAltitudeSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ApoapsisRadiusSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ApoapsisRadiusSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MeanMotion (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanMotion (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PeriapsisAltitudeSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PeriapsisAltitudeSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PeriapsisRadiusSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PeriapsisRadiusSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Period (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Period (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LAN (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LAN (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfLatitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfLatitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_EccentricAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_EccentricAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_MeanAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_TimePastAscNode (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimePastAscNode (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TimePastPeriapsis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimePastPeriapsis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElement * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVAElement pVal ) = 0;
      virtual HRESULT __stdcall get_ApoapsisAltitudeShape (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ApoapsisAltitudeShape (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ApoapsisRadiusShape (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ApoapsisRadiusShape (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PeriapsisAltitudeShape (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PeriapsisAltitudeShape (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PeriapsisRadiusShape (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PeriapsisRadiusShape (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("693b4ddf-1e53-4e0e-862d-22773337cd27"))
IAgVAElementKeplerian : IAgVAElement
{
    //
    // Property data
    //

    __declspec(property(get=GetSemiMajorAxis,put=PutSemiMajorAxis))
    double SemiMajorAxis;
    __declspec(property(get=GetPeriapsisRadiusShape,put=PutPeriapsisRadiusShape))
    double PeriapsisRadiusShape;
    __declspec(property(get=GetEccentricity,put=PutEccentricity))
    double Eccentricity;
    __declspec(property(get=GetInclination,put=PutInclination))
    _variant_t Inclination;
    __declspec(property(get=GetRAAN,put=PutRAAN))
    _variant_t RAAN;
    __declspec(property(get=GetArgOfPeriapsis,put=PutArgOfPeriapsis))
    _variant_t ArgOfPeriapsis;
    __declspec(property(get=GetTrueAnomaly,put=PutTrueAnomaly))
    _variant_t TrueAnomaly;
    __declspec(property(get=GetApoapsisAltitudeSize,put=PutApoapsisAltitudeSize))
    double ApoapsisAltitudeSize;
    __declspec(property(get=GetApoapsisRadiusSize,put=PutApoapsisRadiusSize))
    double ApoapsisRadiusSize;
    __declspec(property(get=GetMeanMotion,put=PutMeanMotion))
    double MeanMotion;
    __declspec(property(get=GetPeriapsisAltitudeSize,put=PutPeriapsisAltitudeSize))
    double PeriapsisAltitudeSize;
    __declspec(property(get=GetPeriapsisRadiusSize,put=PutPeriapsisRadiusSize))
    double PeriapsisRadiusSize;
    __declspec(property(get=GetPeriod,put=PutPeriod))
    double Period;
    __declspec(property(get=GetLAN,put=PutLAN))
    _variant_t LAN;
    __declspec(property(get=GetArgOfLatitude,put=PutArgOfLatitude))
    _variant_t ArgOfLatitude;
    __declspec(property(get=GetEccentricAnomaly,put=PutEccentricAnomaly))
    _variant_t EccentricAnomaly;
    __declspec(property(get=GetMeanAnomaly,put=PutMeanAnomaly))
    _variant_t MeanAnomaly;
    __declspec(property(get=GetTimePastAscNode,put=PutTimePastAscNode))
    double TimePastAscNode;
    __declspec(property(get=GetTimePastPeriapsis,put=PutTimePastPeriapsis))
    double TimePastPeriapsis;
    __declspec(property(get=GetElementType,put=PutElementType))
    enum AgEVAElement ElementType;
    __declspec(property(get=GetApoapsisAltitudeShape,put=PutApoapsisAltitudeShape))
    double ApoapsisAltitudeShape;
    __declspec(property(get=GetApoapsisRadiusShape,put=PutApoapsisRadiusShape))
    double ApoapsisRadiusShape;
    __declspec(property(get=GetPeriapsisAltitudeShape,put=PutPeriapsisAltitudeShape))
    double PeriapsisAltitudeShape;

    //
    // Wrapper methods for error-handling
    //

    double GetSemiMajorAxis ( );
    void PutSemiMajorAxis (
        double pVal );
    double GetEccentricity ( );
    void PutEccentricity (
        double pVal );
    _variant_t GetInclination ( );
    void PutInclination (
        const _variant_t & pVal );
    _variant_t GetRAAN ( );
    void PutRAAN (
        const _variant_t & pVal );
    _variant_t GetArgOfPeriapsis ( );
    void PutArgOfPeriapsis (
        const _variant_t & pVal );
    _variant_t GetTrueAnomaly ( );
    void PutTrueAnomaly (
        const _variant_t & pVal );
    double GetApoapsisAltitudeSize ( );
    void PutApoapsisAltitudeSize (
        double pVal );
    double GetApoapsisRadiusSize ( );
    void PutApoapsisRadiusSize (
        double pVal );
    double GetMeanMotion ( );
    void PutMeanMotion (
        double pVal );
    double GetPeriapsisAltitudeSize ( );
    void PutPeriapsisAltitudeSize (
        double pVal );
    double GetPeriapsisRadiusSize ( );
    void PutPeriapsisRadiusSize (
        double pVal );
    double GetPeriod ( );
    void PutPeriod (
        double pVal );
    _variant_t GetLAN ( );
    void PutLAN (
        const _variant_t & pVal );
    _variant_t GetArgOfLatitude ( );
    void PutArgOfLatitude (
        const _variant_t & pVal );
    _variant_t GetEccentricAnomaly ( );
    void PutEccentricAnomaly (
        const _variant_t & pVal );
    _variant_t GetMeanAnomaly ( );
    void PutMeanAnomaly (
        const _variant_t & pVal );
    double GetTimePastAscNode ( );
    void PutTimePastAscNode (
        double pVal );
    double GetTimePastPeriapsis ( );
    void PutTimePastPeriapsis (
        double pVal );
    enum AgEVAElement GetElementType ( );
    void PutElementType (
        enum AgEVAElement pVal );
    double GetApoapsisAltitudeShape ( );
    void PutApoapsisAltitudeShape (
        double pVal );
    double GetApoapsisRadiusShape ( );
    void PutApoapsisRadiusShape (
        double pVal );
    double GetPeriapsisAltitudeShape ( );
    void PutPeriapsisAltitudeShape (
        double pVal );
    double GetPeriapsisRadiusShape ( );
    void PutPeriapsisRadiusShape (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SemiMajorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Eccentricity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Eccentricity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inclination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Inclination (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RAAN (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAAN (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_TrueAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_TrueAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ApoapsisAltitudeSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ApoapsisAltitudeSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ApoapsisRadiusSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ApoapsisRadiusSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MeanMotion (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanMotion (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PeriapsisAltitudeSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PeriapsisAltitudeSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PeriapsisRadiusSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PeriapsisRadiusSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Period (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Period (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LAN (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LAN (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfLatitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfLatitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_EccentricAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_EccentricAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_MeanAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_TimePastAscNode (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimePastAscNode (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TimePastPeriapsis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimePastPeriapsis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElement * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        /*[in]*/ enum AgEVAElement pVal ) = 0;
      virtual HRESULT __stdcall get_ApoapsisAltitudeShape (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ApoapsisAltitudeShape (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ApoapsisRadiusShape (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ApoapsisRadiusShape (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PeriapsisAltitudeShape (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PeriapsisAltitudeShape (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PeriapsisRadiusShape (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PeriapsisRadiusShape (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("28ccb460-ad08-4ffa-931c-a84e59150629"))
AgVAElementModifiedKeplerian;
    // [ default ] interface _IAgVAElementModifiedKeplerian
    // interface IAgVAElement
    // interface IAgVAElementModifiedKeplerian

struct __declspec(uuid("40234196-e68a-4dbf-9af1-e74223d759dd"))
_IAgVAElementModifiedKeplerian : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRadiusOfPeriapsis,put=PutRadiusOfPeriapsis))
    double RadiusOfPeriapsis;
    __declspec(property(get=GetEccentricity,put=PutEccentricity))
    double Eccentricity;
    __declspec(property(get=GetInclination,put=PutInclination))
    _variant_t Inclination;
    __declspec(property(get=GetRAAN,put=PutRAAN))
    _variant_t RAAN;
    __declspec(property(get=GetArgOfPeriapsis,put=PutArgOfPeriapsis))
    _variant_t ArgOfPeriapsis;
    __declspec(property(get=GetTrueAnomaly,put=PutTrueAnomaly))
    _variant_t TrueAnomaly;

    //
    // Wrapper methods for error-handling
    //

    double GetRadiusOfPeriapsis ( );
    void PutRadiusOfPeriapsis (
        double pVal );
    double GetEccentricity ( );
    void PutEccentricity (
        double pVal );
    _variant_t GetInclination ( );
    void PutInclination (
        const _variant_t & pVal );
    _variant_t GetRAAN ( );
    void PutRAAN (
        const _variant_t & pVal );
    _variant_t GetArgOfPeriapsis ( );
    void PutArgOfPeriapsis (
        const _variant_t & pVal );
    _variant_t GetTrueAnomaly ( );
    void PutTrueAnomaly (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadiusOfPeriapsis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusOfPeriapsis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Eccentricity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Eccentricity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inclination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Inclination (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RAAN (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAAN (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_TrueAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_TrueAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("e779c398-4b3d-4113-88e7-62d52aa59200"))
IAgVAElementModifiedKeplerian : IAgVAElement
{
    //
    // Property data
    //

    __declspec(property(get=GetRadiusOfPeriapsis,put=PutRadiusOfPeriapsis))
    double RadiusOfPeriapsis;
    __declspec(property(get=GetEccentricity,put=PutEccentricity))
    double Eccentricity;
    __declspec(property(get=GetInclination,put=PutInclination))
    _variant_t Inclination;
    __declspec(property(get=GetRAAN,put=PutRAAN))
    _variant_t RAAN;
    __declspec(property(get=GetArgOfPeriapsis,put=PutArgOfPeriapsis))
    _variant_t ArgOfPeriapsis;
    __declspec(property(get=GetTrueAnomaly,put=PutTrueAnomaly))
    _variant_t TrueAnomaly;

    //
    // Wrapper methods for error-handling
    //

    double GetRadiusOfPeriapsis ( );
    void PutRadiusOfPeriapsis (
        double pVal );
    double GetEccentricity ( );
    void PutEccentricity (
        double pVal );
    _variant_t GetInclination ( );
    void PutInclination (
        const _variant_t & pVal );
    _variant_t GetRAAN ( );
    void PutRAAN (
        const _variant_t & pVal );
    _variant_t GetArgOfPeriapsis ( );
    void PutArgOfPeriapsis (
        const _variant_t & pVal );
    _variant_t GetTrueAnomaly ( );
    void PutTrueAnomaly (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadiusOfPeriapsis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusOfPeriapsis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Eccentricity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Eccentricity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inclination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Inclination (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RAAN (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAAN (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_TrueAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_TrueAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("6f708320-cc3b-4ba9-87bd-e5978434d124"))
AgVAElementEquinoctial;
    // [ default ] interface _IAgVAElementEquinoctial
    // interface IAgVAElement
    // interface IAgVAElementEquinoctial

enum AgEVAFormulation
{
    eVAFormulationPosigrade = 0,
    eVAFormulationRetrograde = 1
};

struct __declspec(uuid("0dcaec84-e0c5-4ca3-ae16-3b38f7e99e5d"))
_IAgVAElementEquinoctial : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSemiMajorAxis,put=PutSemiMajorAxis))
    double SemiMajorAxis;
    __declspec(property(get=GetMeanMotion,put=PutMeanMotion))
    double MeanMotion;
    __declspec(property(get=Geth,put=Puth))
    double h;
    __declspec(property(get=Getk,put=Putk))
    double k;
    __declspec(property(get=Getp,put=Putp))
    double p;
    __declspec(property(get=Getq,put=Putq))
    double q;
    __declspec(property(get=GetMeanLongitude,put=PutMeanLongitude))
    _variant_t MeanLongitude;
    __declspec(property(get=GetFormulation,put=PutFormulation))
    enum AgEVAFormulation Formulation;

    //
    // Wrapper methods for error-handling
    //

    double GetSemiMajorAxis ( );
    void PutSemiMajorAxis (
        double pVal );
    double GetMeanMotion ( );
    void PutMeanMotion (
        double pVal );
    double Geth ( );
    void Puth (
        double pVal );
    double Getk ( );
    void Putk (
        double pVal );
    double Getp ( );
    void Putp (
        double pVal );
    double Getq ( );
    void Putq (
        double pVal );
    _variant_t GetMeanLongitude ( );
    void PutMeanLongitude (
        const _variant_t & pVal );
    enum AgEVAFormulation GetFormulation ( );
    void PutFormulation (
        enum AgEVAFormulation pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SemiMajorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MeanMotion (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanMotion (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_h (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_h (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_k (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_k (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_p (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_p (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_q (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_q (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MeanLongitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanLongitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Formulation (
        /*[out,retval]*/ enum AgEVAFormulation * pVal ) = 0;
      virtual HRESULT __stdcall put_Formulation (
        /*[in]*/ enum AgEVAFormulation pVal ) = 0;
};

struct __declspec(uuid("b1f5a467-9d83-4732-b66f-465546a1c461"))
IAgVAElementEquinoctial : IAgVAElement
{
    //
    // Property data
    //

    __declspec(property(get=GetSemiMajorAxis,put=PutSemiMajorAxis))
    double SemiMajorAxis;
    __declspec(property(get=GetMeanMotion,put=PutMeanMotion))
    double MeanMotion;
    __declspec(property(get=Geth,put=Puth))
    double h;
    __declspec(property(get=Getk,put=Putk))
    double k;
    __declspec(property(get=Getp,put=Putp))
    double p;
    __declspec(property(get=Getq,put=Putq))
    double q;
    __declspec(property(get=GetMeanLongitude,put=PutMeanLongitude))
    _variant_t MeanLongitude;
    __declspec(property(get=GetFormulation,put=PutFormulation))
    enum AgEVAFormulation Formulation;

    //
    // Wrapper methods for error-handling
    //

    double GetSemiMajorAxis ( );
    void PutSemiMajorAxis (
        double pVal );
    double GetMeanMotion ( );
    void PutMeanMotion (
        double pVal );
    double Geth ( );
    void Puth (
        double pVal );
    double Getk ( );
    void Putk (
        double pVal );
    double Getp ( );
    void Putp (
        double pVal );
    double Getq ( );
    void Putq (
        double pVal );
    _variant_t GetMeanLongitude ( );
    void PutMeanLongitude (
        const _variant_t & pVal );
    enum AgEVAFormulation GetFormulation ( );
    void PutFormulation (
        enum AgEVAFormulation pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SemiMajorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MeanMotion (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanMotion (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_h (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_h (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_k (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_k (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_p (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_p (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_q (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_q (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MeanLongitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanLongitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Formulation (
        /*[out,retval]*/ enum AgEVAFormulation * pVal ) = 0;
      virtual HRESULT __stdcall put_Formulation (
        /*[in]*/ enum AgEVAFormulation pVal ) = 0;
};

struct __declspec(uuid("0bc1bbb7-48c3-4717-b94a-20a18a6cdfa9"))
AgVAElementDelaunay;
    // [ default ] interface _IAgVAElementDelaunay
    // interface IAgVAElement
    // interface IAgVAElementDelaunay

struct __declspec(uuid("27c63574-d944-4d5f-ac3b-449532820c2f"))
_IAgVAElementDelaunay : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMeanAnomaly,put=PutMeanAnomaly))
    _variant_t MeanAnomaly;
    __declspec(property(get=GetArgOfPeriapsis,put=PutArgOfPeriapsis))
    _variant_t ArgOfPeriapsis;
    __declspec(property(get=GetRAAN,put=PutRAAN))
    _variant_t RAAN;
    __declspec(property(get=GetDelaunayL,put=PutDelaunayL))
    double DelaunayL;
    __declspec(property(get=GetSemiMajorAxis,put=PutSemiMajorAxis))
    double SemiMajorAxis;
    __declspec(property(get=GetDelaunayG,put=PutDelaunayG))
    double DelaunayG;
    __declspec(property(get=GetSemilatusRectum,put=PutSemilatusRectum))
    double SemilatusRectum;
    __declspec(property(get=GetDelaunayH,put=PutDelaunayH))
    double DelaunayH;
    __declspec(property(get=GetInclination,put=PutInclination))
    _variant_t Inclination;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetMeanAnomaly ( );
    void PutMeanAnomaly (
        const _variant_t & pVal );
    _variant_t GetArgOfPeriapsis ( );
    void PutArgOfPeriapsis (
        const _variant_t & pVal );
    _variant_t GetRAAN ( );
    void PutRAAN (
        const _variant_t & pVal );
    double GetDelaunayL ( );
    void PutDelaunayL (
        double pVal );
    double GetSemiMajorAxis ( );
    void PutSemiMajorAxis (
        double pVal );
    double GetDelaunayG ( );
    void PutDelaunayG (
        double pVal );
    double GetSemilatusRectum ( );
    void PutSemilatusRectum (
        double pVal );
    double GetDelaunayH ( );
    void PutDelaunayH (
        double pVal );
    _variant_t GetInclination ( );
    void PutInclination (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MeanAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RAAN (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAAN (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DelaunayL (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DelaunayL (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemiMajorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DelaunayG (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DelaunayG (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemilatusRectum (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemilatusRectum (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DelaunayH (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DelaunayH (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inclination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Inclination (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("e2a293a4-eae7-4c55-9c11-0372356c4e81"))
IAgVAElementDelaunay : IAgVAElement
{
    //
    // Property data
    //

    __declspec(property(get=GetMeanAnomaly,put=PutMeanAnomaly))
    _variant_t MeanAnomaly;
    __declspec(property(get=GetArgOfPeriapsis,put=PutArgOfPeriapsis))
    _variant_t ArgOfPeriapsis;
    __declspec(property(get=GetRAAN,put=PutRAAN))
    _variant_t RAAN;
    __declspec(property(get=GetDelaunayL,put=PutDelaunayL))
    double DelaunayL;
    __declspec(property(get=GetSemiMajorAxis,put=PutSemiMajorAxis))
    double SemiMajorAxis;
    __declspec(property(get=GetDelaunayG,put=PutDelaunayG))
    double DelaunayG;
    __declspec(property(get=GetSemilatusRectum,put=PutSemilatusRectum))
    double SemilatusRectum;
    __declspec(property(get=GetDelaunayH,put=PutDelaunayH))
    double DelaunayH;
    __declspec(property(get=GetInclination,put=PutInclination))
    _variant_t Inclination;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetMeanAnomaly ( );
    void PutMeanAnomaly (
        const _variant_t & pVal );
    _variant_t GetArgOfPeriapsis ( );
    void PutArgOfPeriapsis (
        const _variant_t & pVal );
    _variant_t GetRAAN ( );
    void PutRAAN (
        const _variant_t & pVal );
    double GetDelaunayL ( );
    void PutDelaunayL (
        double pVal );
    double GetSemiMajorAxis ( );
    void PutSemiMajorAxis (
        double pVal );
    double GetDelaunayG ( );
    void PutDelaunayG (
        double pVal );
    double GetSemilatusRectum ( );
    void PutSemilatusRectum (
        double pVal );
    double GetDelaunayH ( );
    void PutDelaunayH (
        double pVal );
    _variant_t GetInclination ( );
    void PutInclination (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MeanAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ArgOfPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ArgOfPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RAAN (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAAN (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DelaunayL (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DelaunayL (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemiMajorAxis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemiMajorAxis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DelaunayG (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DelaunayG (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SemilatusRectum (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SemilatusRectum (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_DelaunayH (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DelaunayH (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inclination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Inclination (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("a8918ede-5c4c-429a-a113-0686b0ae5556"))
AgVAElementMixedSpherical;
    // [ default ] interface _IAgVAElementMixedSpherical
    // interface IAgVAElement
    // interface IAgVAElementMixedSpherical

struct __declspec(uuid("7a334389-245f-4164-b6d6-b2a8f6aeafba"))
_IAgVAElementMixedSpherical : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetAltitude,put=PutAltitude))
    double Altitude;
    __declspec(property(get=GetHorizontalFlightPathAngle,put=PutHorizontalFlightPathAngle))
    _variant_t HorizontalFlightPathAngle;
    __declspec(property(get=GetVelocityAzimuth,put=PutVelocityAzimuth))
    _variant_t VelocityAzimuth;
    __declspec(property(get=GetVelocityMagnitude,put=PutVelocityMagnitude))
    double VelocityMagnitude;
    __declspec(property(get=GetVerticalFlightPathAngle,put=PutVerticalFlightPathAngle))
    _variant_t VerticalFlightPathAngle;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    double GetAltitude ( );
    void PutAltitude (
        double pVal );
    _variant_t GetHorizontalFlightPathAngle ( );
    void PutHorizontalFlightPathAngle (
        const _variant_t & pVal );
    _variant_t GetVelocityAzimuth ( );
    void PutVelocityAzimuth (
        const _variant_t & pVal );
    double GetVelocityMagnitude ( );
    void PutVelocityMagnitude (
        double pVal );
    _variant_t GetVerticalFlightPathAngle ( );
    void PutVerticalFlightPathAngle (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Altitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlightPathAngle (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_HorizontalFlightPathAngle (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityAzimuth (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityAzimuth (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_VerticalFlightPathAngle (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VerticalFlightPathAngle (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("e3ccda55-52c3-4079-a69c-8269269fad75"))
IAgVAElementMixedSpherical : IAgVAElement
{
    //
    // Property data
    //

    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetAltitude,put=PutAltitude))
    double Altitude;
    __declspec(property(get=GetHorizontalFlightPathAngle,put=PutHorizontalFlightPathAngle))
    _variant_t HorizontalFlightPathAngle;
    __declspec(property(get=GetVelocityAzimuth,put=PutVelocityAzimuth))
    _variant_t VelocityAzimuth;
    __declspec(property(get=GetVelocityMagnitude,put=PutVelocityMagnitude))
    double VelocityMagnitude;
    __declspec(property(get=GetVerticalFlightPathAngle,put=PutVerticalFlightPathAngle))
    _variant_t VerticalFlightPathAngle;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    double GetAltitude ( );
    void PutAltitude (
        double pVal );
    _variant_t GetHorizontalFlightPathAngle ( );
    void PutHorizontalFlightPathAngle (
        const _variant_t & pVal );
    _variant_t GetVelocityAzimuth ( );
    void PutVelocityAzimuth (
        const _variant_t & pVal );
    double GetVelocityMagnitude ( );
    void PutVelocityMagnitude (
        double pVal );
    _variant_t GetVerticalFlightPathAngle ( );
    void PutVerticalFlightPathAngle (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Altitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlightPathAngle (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_HorizontalFlightPathAngle (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityAzimuth (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityAzimuth (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_VerticalFlightPathAngle (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VerticalFlightPathAngle (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("b148f2bc-c3f3-4ec1-96bb-08b59f7368d6"))
AgVAElementSpherical;
    // [ default ] interface _IAgVAElementSpherical
    // interface IAgVAElement
    // interface IAgVAElementSpherical

struct __declspec(uuid("35b296b5-8901-4daa-b6f6-156068df0432"))
_IAgVAElementSpherical : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRightAscension,put=PutRightAscension))
    _variant_t RightAscension;
    __declspec(property(get=GetDeclination,put=PutDeclination))
    _variant_t Declination;
    __declspec(property(get=GetRadiusMagnitude,put=PutRadiusMagnitude))
    double RadiusMagnitude;
    __declspec(property(get=GetHorizontalFlightPathAngle,put=PutHorizontalFlightPathAngle))
    _variant_t HorizontalFlightPathAngle;
    __declspec(property(get=GetVelocityAzimuth,put=PutVelocityAzimuth))
    _variant_t VelocityAzimuth;
    __declspec(property(get=GetVelocityMagnitude,put=PutVelocityMagnitude))
    double VelocityMagnitude;
    __declspec(property(get=GetVerticalFlightPathAngle,put=PutVerticalFlightPathAngle))
    _variant_t VerticalFlightPathAngle;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetRightAscension ( );
    void PutRightAscension (
        const _variant_t & pVal );
    _variant_t GetDeclination ( );
    void PutDeclination (
        const _variant_t & pVal );
    double GetRadiusMagnitude ( );
    void PutRadiusMagnitude (
        double pVal );
    _variant_t GetHorizontalFlightPathAngle ( );
    void PutHorizontalFlightPathAngle (
        const _variant_t & pVal );
    _variant_t GetVelocityAzimuth ( );
    void PutVelocityAzimuth (
        const _variant_t & pVal );
    double GetVelocityMagnitude ( );
    void PutVelocityMagnitude (
        double pVal );
    _variant_t GetVerticalFlightPathAngle ( );
    void PutVerticalFlightPathAngle (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RightAscension (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RightAscension (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Declination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Declination (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RadiusMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlightPathAngle (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_HorizontalFlightPathAngle (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityAzimuth (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityAzimuth (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_VerticalFlightPathAngle (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VerticalFlightPathAngle (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("2c4e6bbd-8c72-4729-9be2-78392391c394"))
IAgVAElementSpherical : IAgVAElement
{
    //
    // Property data
    //

    __declspec(property(get=GetRightAscension,put=PutRightAscension))
    _variant_t RightAscension;
    __declspec(property(get=GetDeclination,put=PutDeclination))
    _variant_t Declination;
    __declspec(property(get=GetRadiusMagnitude,put=PutRadiusMagnitude))
    double RadiusMagnitude;
    __declspec(property(get=GetHorizontalFlightPathAngle,put=PutHorizontalFlightPathAngle))
    _variant_t HorizontalFlightPathAngle;
    __declspec(property(get=GetVelocityAzimuth,put=PutVelocityAzimuth))
    _variant_t VelocityAzimuth;
    __declspec(property(get=GetVelocityMagnitude,put=PutVelocityMagnitude))
    double VelocityMagnitude;
    __declspec(property(get=GetVerticalFlightPathAngle,put=PutVerticalFlightPathAngle))
    _variant_t VerticalFlightPathAngle;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetRightAscension ( );
    void PutRightAscension (
        const _variant_t & pVal );
    _variant_t GetDeclination ( );
    void PutDeclination (
        const _variant_t & pVal );
    double GetRadiusMagnitude ( );
    void PutRadiusMagnitude (
        double pVal );
    _variant_t GetHorizontalFlightPathAngle ( );
    void PutHorizontalFlightPathAngle (
        const _variant_t & pVal );
    _variant_t GetVelocityAzimuth ( );
    void PutVelocityAzimuth (
        const _variant_t & pVal );
    double GetVelocityMagnitude ( );
    void PutVelocityMagnitude (
        double pVal );
    _variant_t GetVerticalFlightPathAngle ( );
    void PutVerticalFlightPathAngle (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RightAscension (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RightAscension (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Declination (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Declination (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RadiusMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlightPathAngle (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_HorizontalFlightPathAngle (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityAzimuth (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityAzimuth (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_VerticalFlightPathAngle (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VerticalFlightPathAngle (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("d9bb3b0d-3ef4-4ffa-af15-c6cf13cf366b"))
AgVAElementTargetVectorIncomingAsymptote;
    // [ default ] interface _IAgVAElementTargetVectorIncomingAsymptote
    // interface IAgVAElement
    // interface IAgVAElementTargetVectorIncomingAsymptote

struct __declspec(uuid("c473713f-f9ed-4784-9d87-66ec1048e14a"))
_IAgVAElementTargetVectorIncomingAsymptote : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRadiusOfPeriapsis,put=PutRadiusOfPeriapsis))
    double RadiusOfPeriapsis;
    __declspec(property(get=GetC3Energy,put=PutC3Energy))
    double C3Energy;
    __declspec(property(get=GetRAIncomingAsymptote,put=PutRAIncomingAsymptote))
    _variant_t RAIncomingAsymptote;
    __declspec(property(get=GetDeclinationIncomingAsymptote,put=PutDeclinationIncomingAsymptote))
    _variant_t DeclinationIncomingAsymptote;
    __declspec(property(get=GetVelocityAzimuthPeriapsis,put=PutVelocityAzimuthPeriapsis))
    _variant_t VelocityAzimuthPeriapsis;
    __declspec(property(get=GetTrueAnomaly,put=PutTrueAnomaly))
    _variant_t TrueAnomaly;

    //
    // Wrapper methods for error-handling
    //

    double GetRadiusOfPeriapsis ( );
    void PutRadiusOfPeriapsis (
        double pVal );
    double GetC3Energy ( );
    void PutC3Energy (
        double pVal );
    _variant_t GetRAIncomingAsymptote ( );
    void PutRAIncomingAsymptote (
        const _variant_t & pVal );
    _variant_t GetDeclinationIncomingAsymptote ( );
    void PutDeclinationIncomingAsymptote (
        const _variant_t & pVal );
    _variant_t GetVelocityAzimuthPeriapsis ( );
    void PutVelocityAzimuthPeriapsis (
        const _variant_t & pVal );
    _variant_t GetTrueAnomaly ( );
    void PutTrueAnomaly (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadiusOfPeriapsis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusOfPeriapsis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C3Energy (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C3Energy (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RAIncomingAsymptote (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAIncomingAsymptote (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DeclinationIncomingAsymptote (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_DeclinationIncomingAsymptote (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityAzimuthPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityAzimuthPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_TrueAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_TrueAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("a04c2515-d192-4430-814c-0844438711dd"))
IAgVAElementTargetVectorIncomingAsymptote : IAgVAElement
{
    //
    // Property data
    //

    __declspec(property(get=GetRadiusOfPeriapsis,put=PutRadiusOfPeriapsis))
    double RadiusOfPeriapsis;
    __declspec(property(get=GetC3Energy,put=PutC3Energy))
    double C3Energy;
    __declspec(property(get=GetRAIncomingAsymptote,put=PutRAIncomingAsymptote))
    _variant_t RAIncomingAsymptote;
    __declspec(property(get=GetDeclinationIncomingAsymptote,put=PutDeclinationIncomingAsymptote))
    _variant_t DeclinationIncomingAsymptote;
    __declspec(property(get=GetVelocityAzimuthPeriapsis,put=PutVelocityAzimuthPeriapsis))
    _variant_t VelocityAzimuthPeriapsis;
    __declspec(property(get=GetTrueAnomaly,put=PutTrueAnomaly))
    _variant_t TrueAnomaly;

    //
    // Wrapper methods for error-handling
    //

    double GetRadiusOfPeriapsis ( );
    void PutRadiusOfPeriapsis (
        double pVal );
    double GetC3Energy ( );
    void PutC3Energy (
        double pVal );
    _variant_t GetRAIncomingAsymptote ( );
    void PutRAIncomingAsymptote (
        const _variant_t & pVal );
    _variant_t GetDeclinationIncomingAsymptote ( );
    void PutDeclinationIncomingAsymptote (
        const _variant_t & pVal );
    _variant_t GetVelocityAzimuthPeriapsis ( );
    void PutVelocityAzimuthPeriapsis (
        const _variant_t & pVal );
    _variant_t GetTrueAnomaly ( );
    void PutTrueAnomaly (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadiusOfPeriapsis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusOfPeriapsis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C3Energy (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C3Energy (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RAIncomingAsymptote (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAIncomingAsymptote (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DeclinationIncomingAsymptote (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_DeclinationIncomingAsymptote (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityAzimuthPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityAzimuthPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_TrueAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_TrueAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("12291710-0ebe-4e41-a5fb-cf653b845116"))
AgVAElementTargetVectorOutgoingAsymptote;
    // [ default ] interface _IAgVAElementTargetVectorOutgoingAsymptote
    // interface IAgVAElement
    // interface IAgVAElementTargetVectorOutgoingAsymptote

struct __declspec(uuid("a94cf29b-7318-4233-8a6f-bc2c7bf14ea4"))
_IAgVAElementTargetVectorOutgoingAsymptote : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRadiusOfPeriapsis,put=PutRadiusOfPeriapsis))
    double RadiusOfPeriapsis;
    __declspec(property(get=GetC3Energy,put=PutC3Energy))
    double C3Energy;
    __declspec(property(get=GetRAOutgoingAsymptote,put=PutRAOutgoingAsymptote))
    _variant_t RAOutgoingAsymptote;
    __declspec(property(get=GetDeclinationOutgoingAsymptote,put=PutDeclinationOutgoingAsymptote))
    _variant_t DeclinationOutgoingAsymptote;
    __declspec(property(get=GetVelocityAzimuthPeriapsis,put=PutVelocityAzimuthPeriapsis))
    _variant_t VelocityAzimuthPeriapsis;
    __declspec(property(get=GetTrueAnomaly,put=PutTrueAnomaly))
    _variant_t TrueAnomaly;

    //
    // Wrapper methods for error-handling
    //

    double GetRadiusOfPeriapsis ( );
    void PutRadiusOfPeriapsis (
        double pVal );
    double GetC3Energy ( );
    void PutC3Energy (
        double pVal );
    _variant_t GetRAOutgoingAsymptote ( );
    void PutRAOutgoingAsymptote (
        const _variant_t & pVal );
    _variant_t GetDeclinationOutgoingAsymptote ( );
    void PutDeclinationOutgoingAsymptote (
        const _variant_t & pVal );
    _variant_t GetVelocityAzimuthPeriapsis ( );
    void PutVelocityAzimuthPeriapsis (
        const _variant_t & pVal );
    _variant_t GetTrueAnomaly ( );
    void PutTrueAnomaly (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadiusOfPeriapsis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusOfPeriapsis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C3Energy (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C3Energy (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RAOutgoingAsymptote (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAOutgoingAsymptote (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DeclinationOutgoingAsymptote (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_DeclinationOutgoingAsymptote (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityAzimuthPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityAzimuthPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_TrueAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_TrueAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("6161ff46-0829-4d02-bfa9-a9f2a547c2ac"))
IAgVAElementTargetVectorOutgoingAsymptote : IAgVAElement
{
    //
    // Property data
    //

    __declspec(property(get=GetRadiusOfPeriapsis,put=PutRadiusOfPeriapsis))
    double RadiusOfPeriapsis;
    __declspec(property(get=GetC3Energy,put=PutC3Energy))
    double C3Energy;
    __declspec(property(get=GetRAOutgoingAsymptote,put=PutRAOutgoingAsymptote))
    _variant_t RAOutgoingAsymptote;
    __declspec(property(get=GetDeclinationOutgoingAsymptote,put=PutDeclinationOutgoingAsymptote))
    _variant_t DeclinationOutgoingAsymptote;
    __declspec(property(get=GetVelocityAzimuthPeriapsis,put=PutVelocityAzimuthPeriapsis))
    _variant_t VelocityAzimuthPeriapsis;
    __declspec(property(get=GetTrueAnomaly,put=PutTrueAnomaly))
    _variant_t TrueAnomaly;

    //
    // Wrapper methods for error-handling
    //

    double GetRadiusOfPeriapsis ( );
    void PutRadiusOfPeriapsis (
        double pVal );
    double GetC3Energy ( );
    void PutC3Energy (
        double pVal );
    _variant_t GetRAOutgoingAsymptote ( );
    void PutRAOutgoingAsymptote (
        const _variant_t & pVal );
    _variant_t GetDeclinationOutgoingAsymptote ( );
    void PutDeclinationOutgoingAsymptote (
        const _variant_t & pVal );
    _variant_t GetVelocityAzimuthPeriapsis ( );
    void PutVelocityAzimuthPeriapsis (
        const _variant_t & pVal );
    _variant_t GetTrueAnomaly ( );
    void PutTrueAnomaly (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadiusOfPeriapsis (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusOfPeriapsis (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_C3Energy (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_C3Energy (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RAOutgoingAsymptote (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RAOutgoingAsymptote (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DeclinationOutgoingAsymptote (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_DeclinationOutgoingAsymptote (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VelocityAzimuthPeriapsis (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VelocityAzimuthPeriapsis (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_TrueAnomaly (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_TrueAnomaly (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("2eafe6c9-f785-4ae3-aa53-1937cb200f28"))
AgVAElementGeodetic;
    // [ default ] interface _IAgVAElementGeodetic
    // interface IAgVAElement
    // interface IAgVAElementGeodetic

struct __declspec(uuid("9c9eff4f-a490-401a-86e0-4ffaeefb9d73"))
_IAgVAElementGeodetic : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetAltitude,put=PutAltitude))
    double Altitude;
    __declspec(property(get=GetRadiusMagnitude,put=PutRadiusMagnitude))
    double RadiusMagnitude;
    __declspec(property(get=GetLatitudeRate,put=PutLatitudeRate))
    double LatitudeRate;
    __declspec(property(get=GetLongitudeRate,put=PutLongitudeRate))
    double LongitudeRate;
    __declspec(property(get=GetAltitudeRate,put=PutAltitudeRate))
    double AltitudeRate;
    __declspec(property(get=GetRadiusRate,put=PutRadiusRate))
    double RadiusRate;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    double GetAltitude ( );
    void PutAltitude (
        double pVal );
    double GetRadiusMagnitude ( );
    void PutRadiusMagnitude (
        double pVal );
    double GetLatitudeRate ( );
    void PutLatitudeRate (
        double pVal );
    double GetLongitudeRate ( );
    void PutLongitudeRate (
        double pVal );
    double GetAltitudeRate ( );
    void PutAltitudeRate (
        double pVal );
    double GetRadiusRate ( );
    void PutRadiusRate (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Altitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RadiusMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LatitudeRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LatitudeRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LongitudeRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LongitudeRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AltitudeRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AltitudeRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RadiusRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusRate (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("f499d588-41ea-4f2d-a264-1ab657755a6c"))
IAgVAElementGeodetic : IAgVAElement
{
    //
    // Property data
    //

    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetAltitude,put=PutAltitude))
    double Altitude;
    __declspec(property(get=GetRadiusMagnitude,put=PutRadiusMagnitude))
    double RadiusMagnitude;
    __declspec(property(get=GetLatitudeRate,put=PutLatitudeRate))
    double LatitudeRate;
    __declspec(property(get=GetLongitudeRate,put=PutLongitudeRate))
    double LongitudeRate;
    __declspec(property(get=GetAltitudeRate,put=PutAltitudeRate))
    double AltitudeRate;
    __declspec(property(get=GetRadiusRate,put=PutRadiusRate))
    double RadiusRate;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    double GetAltitude ( );
    void PutAltitude (
        double pVal );
    double GetRadiusMagnitude ( );
    void PutRadiusMagnitude (
        double pVal );
    double GetLatitudeRate ( );
    void PutLatitudeRate (
        double pVal );
    double GetLongitudeRate ( );
    void PutLongitudeRate (
        double pVal );
    double GetAltitudeRate ( );
    void PutAltitudeRate (
        double pVal );
    double GetRadiusRate ( );
    void PutRadiusRate (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Altitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RadiusMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LatitudeRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LatitudeRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LongitudeRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LongitudeRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AltitudeRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AltitudeRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RadiusRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RadiusRate (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("7e4fcf3d-8d21-4b16-9400-6178d64e53eb"))
AgVAMCSPropagate;
    // [ default ] interface _IAgVAMCSPropagate
    // interface IAgVAMCSSegment
    // interface IAgVAMCSPropagate
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgRuntimeTypeInfoProvider

enum AgEVAControlStoppingCondition
{
    eVAControlStoppingConditionTripValue = 0
};

enum AgEVAStoppingCondition
{
    eVAStoppingConditionBasic = 0,
    eVAStoppingConditionBefore = 1,
    eVAStoppingConditionOnePtAccess = 2,
    eVAStoppingConditionLighting = 3
};

struct __declspec(uuid("6fc21c61-c209-4bae-a4f5-9303d8ba6962"))
IAgVAStoppingConditionComponent : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetStoppingConditionType))
    enum AgEVAStoppingCondition StoppingConditionType;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAStoppingCondition GetStoppingConditionType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_StoppingConditionType (
        /*[out,retval]*/ enum AgEVAStoppingCondition * pEVAStoppingCondition ) = 0;
};

struct __declspec(uuid("b345fff0-1847-42c7-870f-b62ec4fccbc5"))
IAgVAStoppingConditionElement : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetActive,put=PutActive))
    VARIANT_BOOL Active;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetProperties))
    IAgVAStoppingConditionComponentPtr Properties;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetActive ( );
    void PutActive (
        VARIANT_BOOL pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlStoppingCondition Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlStoppingCondition Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlStoppingCondition Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    IAgVAStoppingConditionComponentPtr GetProperties ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Active (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlStoppingCondition Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlStoppingCondition Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlStoppingCondition Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAStoppingConditionComponent * * ppRetVal ) = 0;
};

struct __declspec(uuid("e1a84d2b-0a8a-42cb-b756-41cb60847eb4"))
IAgVAStoppingConditionCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAStoppingConditionElementPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAStoppingConditionElementPtr GetItem (
        const _variant_t & IndexOrName );
    IAgVAStoppingConditionElementPtr Add (
        _bstr_t ConditionName );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    HRESULT Cut (
        const _variant_t & IndexOrName );
    IAgVAStoppingConditionElementPtr Paste ( );
    IAgVAStoppingConditionElementPtr InsertCopy (
        struct IAgVAStoppingConditionElement * StopCond );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAStoppingConditionElement * * ppVAStoppingCondition ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR ConditionName,
        /*[out,retval]*/ struct IAgVAStoppingConditionElement * * ppVAStoppingCondition ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[out,retval]*/ struct IAgVAStoppingConditionElement * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct IAgVAStoppingConditionElement * StopCond,
        /*[out,retval]*/ struct IAgVAStoppingConditionElement * * ppRetVal ) = 0;
};

enum AgEVAControlAdvanced
{
    eVAControlPropagateMaxPropTime = 600,
    eVAControlPropagateMinPropTime = 601
};

struct __declspec(uuid("5a4f00f5-91c2-4d4e-bef6-d0cf54046b1c"))
_IAgVAMCSPropagate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetPropagatorName,put=PutPropagatorName))
    _bstr_t PropagatorName;
    __declspec(property(get=GetStoppingConditions))
    IAgVAStoppingConditionCollectionPtr StoppingConditions;
    __declspec(property(get=GetMinPropagationTime,put=PutMinPropagationTime))
    double MinPropagationTime;
    __declspec(property(get=GetMaxPropagationTime,put=PutMaxPropagationTime))
    double MaxPropagationTime;
    __declspec(property(get=GetEnableMaxPropagationTime,put=PutEnableMaxPropagationTime))
    VARIANT_BOOL EnableMaxPropagationTime;
    __declspec(property(get=GetEnableWarningMessage,put=PutEnableWarningMessage))
    VARIANT_BOOL EnableWarningMessage;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetOverrideMaxPropagationTime,put=PutOverrideMaxPropagationTime))
    VARIANT_BOOL OverrideMaxPropagationTime;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    _bstr_t GetPropagatorName ( );
    void PutPropagatorName (
        _bstr_t pVal );
    IAgVAStoppingConditionCollectionPtr GetStoppingConditions ( );
    double GetMinPropagationTime ( );
    void PutMinPropagationTime (
        double pVal );
    double GetMaxPropagationTime ( );
    void PutMaxPropagationTime (
        double pVal );
    VARIANT_BOOL GetEnableMaxPropagationTime ( );
    void PutEnableMaxPropagationTime (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableWarningMessage ( );
    void PutEnableWarningMessage (
        VARIANT_BOOL pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlAdvanced Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlAdvanced Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlAdvanced Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetOverrideMaxPropagationTime ( );
    void PutOverrideMaxPropagationTime (
        VARIANT_BOOL pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_PropagatorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PropagatorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_StoppingConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppVAStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_MinPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EnableMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableWarningMessage (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableWarningMessage (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlAdvanced Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlAdvanced Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlAdvanced Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_OverrideMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_OverrideMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("ff8a6c4f-d45d-4f7f-8bf2-bd737fcbc068"))
IAgVAMCSPropagate : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetPropagatorName,put=PutPropagatorName))
    _bstr_t PropagatorName;
    __declspec(property(get=GetStoppingConditions))
    IAgVAStoppingConditionCollectionPtr StoppingConditions;
    __declspec(property(get=GetMinPropagationTime,put=PutMinPropagationTime))
    double MinPropagationTime;
    __declspec(property(get=GetMaxPropagationTime,put=PutMaxPropagationTime))
    double MaxPropagationTime;
    __declspec(property(get=GetEnableMaxPropagationTime,put=PutEnableMaxPropagationTime))
    VARIANT_BOOL EnableMaxPropagationTime;
    __declspec(property(get=GetEnableWarningMessage,put=PutEnableWarningMessage))
    VARIANT_BOOL EnableWarningMessage;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetOverrideMaxPropagationTime,put=PutOverrideMaxPropagationTime))
    VARIANT_BOOL OverrideMaxPropagationTime;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPropagatorName ( );
    void PutPropagatorName (
        _bstr_t pVal );
    IAgVAStoppingConditionCollectionPtr GetStoppingConditions ( );
    double GetMinPropagationTime ( );
    void PutMinPropagationTime (
        double pVal );
    double GetMaxPropagationTime ( );
    void PutMaxPropagationTime (
        double pVal );
    VARIANT_BOOL GetEnableMaxPropagationTime ( );
    void PutEnableMaxPropagationTime (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableWarningMessage ( );
    void PutEnableWarningMessage (
        VARIANT_BOOL pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlAdvanced Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlAdvanced Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlAdvanced Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    VARIANT_BOOL GetOverrideMaxPropagationTime ( );
    void PutOverrideMaxPropagationTime (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PropagatorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PropagatorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_StoppingConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppVAStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_MinPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EnableMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableWarningMessage (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableWarningMessage (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlAdvanced Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlAdvanced Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlAdvanced Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_OverrideMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_OverrideMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("62e311f1-ab97-4f24-96dd-3a7853c8c35c"))
AgVAState;
    // [ default ] interface _IAgVAState
    // interface IAgVAState
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("cd5d3088-ebfd-4e73-8893-8b971cf0862b"))
_IAgVAState : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetElementType))
    enum AgEVAElementType ElementType;
    __declspec(property(get=GetElement))
    IAgVAElementPtr Element;
    __declspec(property(get=GetEpoch,put=PutEpoch))
    _variant_t Epoch;
    __declspec(property(get=GetCoordSystemName))
    _bstr_t CoordSystemName;
    __declspec(property(get=GetDryMass,put=PutDryMass))
    double DryMass;
    __declspec(property(get=GetFuelMass,put=PutFuelMass))
    double FuelMass;
    __declspec(property(get=GetDragArea,put=PutDragArea))
    double DragArea;
    __declspec(property(get=GetSRPArea,put=PutSRPArea))
    double SRPArea;
    __declspec(property(get=GetTankPressure,put=PutTankPressure))
    double TankPressure;
    __declspec(property(get=GetTankTemperature,put=PutTankTemperature))
    double TankTemperature;
    __declspec(property(get=GetFuelDensity,put=PutFuelDensity))
    double FuelDensity;
    __declspec(property(get=GetCr,put=PutCr))
    double Cr;
    __declspec(property(get=GetCd,put=PutCd))
    double Cd;
    __declspec(property(get=GetRadiationPressureCoeff,put=PutRadiationPressureCoeff))
    double RadiationPressureCoeff;
    __declspec(property(get=GetRadiationPressureArea,put=PutRadiationPressureArea))
    double RadiationPressureArea;
    __declspec(property(get=GetK1,put=PutK1))
    double K1;
    __declspec(property(get=GetK2,put=PutK2))
    double K2;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAElementType GetElementType ( );
    HRESULT SetElementType (
        enum AgEVAElementType ElementType );
    IAgVAElementPtr GetElement ( );
    _variant_t GetEpoch ( );
    void PutEpoch (
        const _variant_t & pEpoch );
    _bstr_t GetCoordSystemName ( );
    double GetDryMass ( );
    void PutDryMass (
        double pDryMass );
    double GetFuelMass ( );
    void PutFuelMass (
        double pFuelMass );
    double GetDragArea ( );
    void PutDragArea (
        double pFuelMass );
    double GetSRPArea ( );
    void PutSRPArea (
        double pSRPArea );
    double GetTankPressure ( );
    void PutTankPressure (
        double pTankPressure );
    double GetTankTemperature ( );
    void PutTankTemperature (
        double pTankTemperature );
    double GetFuelDensity ( );
    void PutFuelDensity (
        double pFuelDensity );
    double GetCr ( );
    void PutCr (
        double pCr );
    double GetCd ( );
    void PutCd (
        double pCd );
    double GetRadiationPressureCoeff ( );
    void PutRadiationPressureCoeff (
        double pRadiationPressureCoeff );
    double GetRadiationPressureArea ( );
    void PutRadiationPressureArea (
        double pRadiationPressureArea );
    double GetK1 ( );
    void PutK1 (
        double pK1 );
    double GetK2 ( );
    void PutK2 (
        double pK2 );
    IAgVAStatePtr GetInFrameName (
        _bstr_t FrameName );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ElementType (
        /*[out,retval]*/ enum AgEVAElementType * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetElementType (
        /*[in]*/ enum AgEVAElementType ElementType ) = 0;
      virtual HRESULT __stdcall get_Element (
        /*[out,retval]*/ struct IAgVAElement * * ppVAElement ) = 0;
      virtual HRESULT __stdcall get_Epoch (
        /*[out,retval]*/ VARIANT * pEpoch ) = 0;
      virtual HRESULT __stdcall put_Epoch (
        /*[in]*/ VARIANT pEpoch ) = 0;
      virtual HRESULT __stdcall get_CoordSystemName (
        /*[out,retval]*/ BSTR * pCoordSysName ) = 0;
      virtual HRESULT __stdcall get_DryMass (
        /*[out,retval]*/ double * pDryMass ) = 0;
      virtual HRESULT __stdcall put_DryMass (
        /*[in]*/ double pDryMass ) = 0;
      virtual HRESULT __stdcall get_FuelMass (
        /*[out,retval]*/ double * pFuelMass ) = 0;
      virtual HRESULT __stdcall put_FuelMass (
        /*[in]*/ double pFuelMass ) = 0;
      virtual HRESULT __stdcall get_DragArea (
        /*[out,retval]*/ double * pFuelMass ) = 0;
      virtual HRESULT __stdcall put_DragArea (
        /*[in]*/ double pFuelMass ) = 0;
      virtual HRESULT __stdcall get_SRPArea (
        /*[out,retval]*/ double * pSRPArea ) = 0;
      virtual HRESULT __stdcall put_SRPArea (
        /*[in]*/ double pSRPArea ) = 0;
      virtual HRESULT __stdcall get_TankPressure (
        /*[out,retval]*/ double * pTankPressure ) = 0;
      virtual HRESULT __stdcall put_TankPressure (
        /*[in]*/ double pTankPressure ) = 0;
      virtual HRESULT __stdcall get_TankTemperature (
        /*[out,retval]*/ double * pTankTemperature ) = 0;
      virtual HRESULT __stdcall put_TankTemperature (
        /*[in]*/ double pTankTemperature ) = 0;
      virtual HRESULT __stdcall get_FuelDensity (
        /*[out,retval]*/ double * pFuelDensity ) = 0;
      virtual HRESULT __stdcall put_FuelDensity (
        /*[in]*/ double pFuelDensity ) = 0;
      virtual HRESULT __stdcall get_Cr (
        /*[out,retval]*/ double * pCr ) = 0;
      virtual HRESULT __stdcall put_Cr (
        /*[in]*/ double pCr ) = 0;
      virtual HRESULT __stdcall get_Cd (
        /*[out,retval]*/ double * pCd ) = 0;
      virtual HRESULT __stdcall put_Cd (
        /*[in]*/ double pCd ) = 0;
      virtual HRESULT __stdcall get_RadiationPressureCoeff (
        /*[out,retval]*/ double * pRadiationPressureCoeff ) = 0;
      virtual HRESULT __stdcall put_RadiationPressureCoeff (
        /*[in]*/ double pRadiationPressureCoeff ) = 0;
      virtual HRESULT __stdcall get_RadiationPressureArea (
        /*[out,retval]*/ double * pRadiationPressureArea ) = 0;
      virtual HRESULT __stdcall put_RadiationPressureArea (
        /*[in]*/ double pRadiationPressureArea ) = 0;
      virtual HRESULT __stdcall get_K1 (
        /*[out,retval]*/ double * pK1 ) = 0;
      virtual HRESULT __stdcall put_K1 (
        /*[in]*/ double pK1 ) = 0;
      virtual HRESULT __stdcall get_K2 (
        /*[out,retval]*/ double * pK2 ) = 0;
      virtual HRESULT __stdcall put_K2 (
        /*[in]*/ double pK2 ) = 0;
      virtual HRESULT __stdcall raw_GetInFrameName (
        /*[in]*/ BSTR FrameName,
        /*[out,retval]*/ struct IAgVAState * * ppOrbitState ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("724b0aa5-ced1-4512-9b57-ec0b1e559634"))
AgVAStoppingConditionCollection;
    // [ default ] interface IUnknown
    // interface IAgVAStoppingConditionCollection
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("cdfc5b78-1c9e-4e25-9ff5-37cbedd206e5"))
AgVAAccessStoppingCondition;
    // [ default ] interface _IAgVAAccessStoppingCondition
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAAccessStoppingCondition
    // interface IAgVAStoppingConditionComponent
    // interface IAgRuntimeTypeInfoProvider

enum AgEVAAccessCriterion
{
    eVAAccessCriterionGain = 0,
    eVAAccessCriterionLose = 1,
    eVAAccessCriterionEither = 2
};

struct __declspec(uuid("30fa10e3-8c39-4fdb-ac1a-5e14ccc2c4ff"))
_IAgVAAccessStoppingCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCriterion,put=PutCriterion))
    enum AgEVAAccessCriterion Criterion;
    __declspec(property(get=GetBeforeConditions))
    IAgVAStoppingConditionCollectionPtr BeforeConditions;
    __declspec(property(get=GetAberrationType,put=PutAberrationType))
    enum STKObjects::AgEAberrationType AberrationType;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetBaseSelectionType))
    enum AgEVABaseSelection BaseSelectionType;
    __declspec(property(get=GetBaseSelection))
    STKObjects::IAgLinkToObjectPtr BaseSelection;
    __declspec(property(get=GetClockHost,put=PutClockHost))
    enum STKObjects::AgEIvClockHost ClockHost;
    __declspec(property(get=GetSignalSense,put=PutSignalSense))
    enum STKObjects::AgEIvTimeSense SignalSense;
    __declspec(property(get=GetTargetObject))
    STKObjects::IAgLinkToObjectPtr TargetObject;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetTimeDelayConvergenceTolerance,put=PutTimeDelayConvergenceTolerance))
    double TimeDelayConvergenceTolerance;
    __declspec(property(get=GetUseLightTimeDelay,put=PutUseLightTimeDelay))
    VARIANT_BOOL UseLightTimeDelay;
    __declspec(property(get=GetStoppingConditionType))
    enum AgEVAStoppingCondition StoppingConditionType;
    __declspec(property(get=GetTimeConvergence,put=PutTimeConvergence))
    double TimeConvergence;
    __declspec(property(get=GetRepeatCount,put=PutRepeatCount))
    double RepeatCount;
    __declspec(property(get=GetInherited,put=PutInherited))
    VARIANT_BOOL Inherited;
    __declspec(property(get=GetMaxTripTimes,put=PutMaxTripTimes))
    double MaxTripTimes;
    __declspec(property(get=GetSequence,put=PutSequence))
    _bstr_t Sequence;
    __declspec(property(get=GetConstraints))
    IAgVAConstraintCollectionPtr Constraints;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVAStoppingCondition GetStoppingConditionType ( );
    double GetTimeConvergence ( );
    void PutTimeConvergence (
        double pVal );
    double GetRepeatCount ( );
    void PutRepeatCount (
        double pVal );
    VARIANT_BOOL GetInherited ( );
    void PutInherited (
        VARIANT_BOOL pVal );
    double GetMaxTripTimes ( );
    void PutMaxTripTimes (
        double pVal );
    _bstr_t GetSequence ( );
    void PutSequence (
        _bstr_t pVal );
    IAgVAConstraintCollectionPtr GetConstraints ( );
    enum AgEVAAccessCriterion GetCriterion ( );
    void PutCriterion (
        enum AgEVAAccessCriterion pVal );
    IAgVAStoppingConditionCollectionPtr GetBeforeConditions ( );
    enum STKObjects::AgEAberrationType GetAberrationType ( );
    void PutAberrationType (
        enum STKObjects::AgEAberrationType pVal );
    HRESULT SetBaseSelection (
        enum AgEVABaseSelection Selection );
    enum AgEVABaseSelection GetBaseSelectionType ( );
    STKObjects::IAgLinkToObjectPtr GetBaseSelection ( );
    enum STKObjects::AgEIvClockHost GetClockHost ( );
    void PutClockHost (
        enum STKObjects::AgEIvClockHost pVal );
    enum STKObjects::AgEIvTimeSense GetSignalSense ( );
    void PutSignalSense (
        enum STKObjects::AgEIvTimeSense pVal );
    STKObjects::IAgLinkToObjectPtr GetTargetObject ( );
    double GetTimeDelayConvergenceTolerance ( );
    void PutTimeDelayConvergenceTolerance (
        double pVal );
    VARIANT_BOOL GetUseLightTimeDelay ( );
    void PutUseLightTimeDelay (
        VARIANT_BOOL pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_StoppingConditionType (
        /*[out,retval]*/ enum AgEVAStoppingCondition * pEVAStoppingCondition ) = 0;
      virtual HRESULT __stdcall get_TimeConvergence (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimeConvergence (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inherited (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Inherited (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxTripTimes (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxTripTimes (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Sequence (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Sequence (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Constraints (
        /*[out,retval]*/ struct IAgVAConstraintCollection * * ppVAConstraintCollection ) = 0;
      virtual HRESULT __stdcall get_Criterion (
        /*[out,retval]*/ enum AgEVAAccessCriterion * pVal ) = 0;
      virtual HRESULT __stdcall put_Criterion (
        /*[in]*/ enum AgEVAAccessCriterion pVal ) = 0;
      virtual HRESULT __stdcall get_BeforeConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_AberrationType (
        /*[out,retval]*/ enum STKObjects::AgEAberrationType * pVal ) = 0;
      virtual HRESULT __stdcall put_AberrationType (
        /*[in]*/ enum STKObjects::AgEAberrationType pVal ) = 0;
      virtual HRESULT __stdcall raw_SetBaseSelection (
        /*[in]*/ enum AgEVABaseSelection Selection ) = 0;
      virtual HRESULT __stdcall get_BaseSelectionType (
        /*[out,retval]*/ enum AgEVABaseSelection * pVal ) = 0;
      virtual HRESULT __stdcall get_BaseSelection (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ClockHost (
        /*[out,retval]*/ enum STKObjects::AgEIvClockHost * pVal ) = 0;
      virtual HRESULT __stdcall put_ClockHost (
        /*[in]*/ enum STKObjects::AgEIvClockHost pVal ) = 0;
      virtual HRESULT __stdcall get_SignalSense (
        /*[out,retval]*/ enum STKObjects::AgEIvTimeSense * pVal ) = 0;
      virtual HRESULT __stdcall put_SignalSense (
        /*[in]*/ enum STKObjects::AgEIvTimeSense pVal ) = 0;
      virtual HRESULT __stdcall get_TargetObject (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_TimeDelayConvergenceTolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimeDelayConvergenceTolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseLightTimeDelay (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseLightTimeDelay (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("1cebf2f2-035b-4cc0-9195-32cf0930c67c"))
IAgVAAccessStoppingCondition : IAgVAStoppingConditionComponent
{
    //
    // Property data
    //

    __declspec(property(get=GetTimeConvergence,put=PutTimeConvergence))
    double TimeConvergence;
    __declspec(property(get=GetRepeatCount,put=PutRepeatCount))
    double RepeatCount;
    __declspec(property(get=GetInherited,put=PutInherited))
    VARIANT_BOOL Inherited;
    __declspec(property(get=GetMaxTripTimes,put=PutMaxTripTimes))
    double MaxTripTimes;
    __declspec(property(get=GetSequence,put=PutSequence))
    _bstr_t Sequence;
    __declspec(property(get=GetConstraints))
    IAgVAConstraintCollectionPtr Constraints;
    __declspec(property(get=GetCriterion,put=PutCriterion))
    enum AgEVAAccessCriterion Criterion;
    __declspec(property(get=GetBeforeConditions))
    IAgVAStoppingConditionCollectionPtr BeforeConditions;
    __declspec(property(get=GetAberrationType,put=PutAberrationType))
    enum STKObjects::AgEAberrationType AberrationType;
    __declspec(property(get=GetBaseSelectionType))
    enum AgEVABaseSelection BaseSelectionType;
    __declspec(property(get=GetBaseSelection))
    STKObjects::IAgLinkToObjectPtr BaseSelection;
    __declspec(property(get=GetClockHost,put=PutClockHost))
    enum STKObjects::AgEIvClockHost ClockHost;
    __declspec(property(get=GetSignalSense,put=PutSignalSense))
    enum STKObjects::AgEIvTimeSense SignalSense;
    __declspec(property(get=GetTargetObject))
    STKObjects::IAgLinkToObjectPtr TargetObject;
    __declspec(property(get=GetTimeDelayConvergenceTolerance,put=PutTimeDelayConvergenceTolerance))
    double TimeDelayConvergenceTolerance;
    __declspec(property(get=GetUseLightTimeDelay,put=PutUseLightTimeDelay))
    VARIANT_BOOL UseLightTimeDelay;

    //
    // Wrapper methods for error-handling
    //

    double GetTimeConvergence ( );
    void PutTimeConvergence (
        double pVal );
    double GetRepeatCount ( );
    void PutRepeatCount (
        double pVal );
    VARIANT_BOOL GetInherited ( );
    void PutInherited (
        VARIANT_BOOL pVal );
    double GetMaxTripTimes ( );
    void PutMaxTripTimes (
        double pVal );
    _bstr_t GetSequence ( );
    void PutSequence (
        _bstr_t pVal );
    IAgVAConstraintCollectionPtr GetConstraints ( );
    enum AgEVAAccessCriterion GetCriterion ( );
    void PutCriterion (
        enum AgEVAAccessCriterion pVal );
    IAgVAStoppingConditionCollectionPtr GetBeforeConditions ( );
    enum STKObjects::AgEAberrationType GetAberrationType ( );
    void PutAberrationType (
        enum STKObjects::AgEAberrationType pVal );
    HRESULT SetBaseSelection (
        enum AgEVABaseSelection Selection );
    enum AgEVABaseSelection GetBaseSelectionType ( );
    STKObjects::IAgLinkToObjectPtr GetBaseSelection ( );
    enum STKObjects::AgEIvClockHost GetClockHost ( );
    void PutClockHost (
        enum STKObjects::AgEIvClockHost pVal );
    enum STKObjects::AgEIvTimeSense GetSignalSense ( );
    void PutSignalSense (
        enum STKObjects::AgEIvTimeSense pVal );
    STKObjects::IAgLinkToObjectPtr GetTargetObject ( );
    double GetTimeDelayConvergenceTolerance ( );
    void PutTimeDelayConvergenceTolerance (
        double pVal );
    VARIANT_BOOL GetUseLightTimeDelay ( );
    void PutUseLightTimeDelay (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TimeConvergence (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimeConvergence (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inherited (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Inherited (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxTripTimes (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxTripTimes (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Sequence (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Sequence (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Constraints (
        /*[out,retval]*/ struct IAgVAConstraintCollection * * ppVAConstraintCollection ) = 0;
      virtual HRESULT __stdcall get_Criterion (
        /*[out,retval]*/ enum AgEVAAccessCriterion * pVal ) = 0;
      virtual HRESULT __stdcall put_Criterion (
        /*[in]*/ enum AgEVAAccessCriterion pVal ) = 0;
      virtual HRESULT __stdcall get_BeforeConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_AberrationType (
        /*[out,retval]*/ enum STKObjects::AgEAberrationType * pVal ) = 0;
      virtual HRESULT __stdcall put_AberrationType (
        /*[in]*/ enum STKObjects::AgEAberrationType pVal ) = 0;
      virtual HRESULT __stdcall raw_SetBaseSelection (
        /*[in]*/ enum AgEVABaseSelection Selection ) = 0;
      virtual HRESULT __stdcall get_BaseSelectionType (
        /*[out,retval]*/ enum AgEVABaseSelection * pVal ) = 0;
      virtual HRESULT __stdcall get_BaseSelection (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ClockHost (
        /*[out,retval]*/ enum STKObjects::AgEIvClockHost * pVal ) = 0;
      virtual HRESULT __stdcall put_ClockHost (
        /*[in]*/ enum STKObjects::AgEIvClockHost pVal ) = 0;
      virtual HRESULT __stdcall get_SignalSense (
        /*[out,retval]*/ enum STKObjects::AgEIvTimeSense * pVal ) = 0;
      virtual HRESULT __stdcall put_SignalSense (
        /*[in]*/ enum STKObjects::AgEIvTimeSense pVal ) = 0;
      virtual HRESULT __stdcall get_TargetObject (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_TimeDelayConvergenceTolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimeDelayConvergenceTolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_UseLightTimeDelay (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseLightTimeDelay (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("6179a6e8-26f2-47a5-92a5-bd63228f952d"))
AgVALightingStoppingCondition;
    // [ default ] interface _IAgVALightingStoppingCondition
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVALightingStoppingCondition
    // interface IAgVAStoppingConditionComponent
    // interface IAgRuntimeTypeInfoProvider

enum AgEVALightingCondition
{
    eVALightingCriterionEnterDirectSun = 0,
    eVALightingCriterionExitDirectSun = 1,
    eVALightingCriterionEnterUmbra = 2,
    eVALightingCriterionExitUmbra = 3
};

enum AgEVAEclipsingBodiesSource
{
    eVAEclipsingBodiesPropagatorCb = 0,
    eVAEclipsingBodiesUserDefined = 1,
    eVAEclipsingBodiesVehicleCb = 2,
    eVAEclipsingBodiesVehicleUserDefined = 3
};

struct __declspec(uuid("dd4380d8-fefe-4073-ab5c-4e2ce4a3894f"))
_IAgVALightingStoppingCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEclipsingBodiesListSource,put=PutEclipsingBodiesListSource))
    enum AgEVAEclipsingBodiesSource EclipsingBodiesListSource;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetEclipsingBodies))
    SAFEARRAY * EclipsingBodies;
    __declspec(property(get=GetAvailableEclipsingBodies))
    SAFEARRAY * AvailableEclipsingBodies;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetStoppingConditionType))
    enum AgEVAStoppingCondition StoppingConditionType;
    __declspec(property(get=GetMaxTripTimes,put=PutMaxTripTimes))
    double MaxTripTimes;
    __declspec(property(get=GetRepeatCount,put=PutRepeatCount))
    double RepeatCount;
    __declspec(property(get=GetConstraints))
    IAgVAConstraintCollectionPtr Constraints;
    __declspec(property(get=GetBeforeConditions))
    IAgVAStoppingConditionCollectionPtr BeforeConditions;
    __declspec(property(get=GetInherited,put=PutInherited))
    VARIANT_BOOL Inherited;
    __declspec(property(get=GetSequence,put=PutSequence))
    _bstr_t Sequence;
    __declspec(property(get=GetCondition,put=PutCondition))
    enum AgEVALightingCondition Condition;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVAStoppingCondition GetStoppingConditionType ( );
    double GetMaxTripTimes ( );
    void PutMaxTripTimes (
        double pVal );
    double GetRepeatCount ( );
    void PutRepeatCount (
        double pVal );
    IAgVAConstraintCollectionPtr GetConstraints ( );
    IAgVAStoppingConditionCollectionPtr GetBeforeConditions ( );
    VARIANT_BOOL GetInherited ( );
    void PutInherited (
        VARIANT_BOOL pVal );
    _bstr_t GetSequence ( );
    void PutSequence (
        _bstr_t pVal );
    enum AgEVALightingCondition GetCondition ( );
    void PutCondition (
        enum AgEVALightingCondition pVal );
    enum AgEVAEclipsingBodiesSource GetEclipsingBodiesListSource ( );
    void PutEclipsingBodiesListSource (
        enum AgEVAEclipsingBodiesSource pVal );
    HRESULT AddEclipsingBody (
        _bstr_t EclipsingBody );
    HRESULT RemoveEclipsingBody (
        _bstr_t EclipsingBody );
    SAFEARRAY * GetEclipsingBodies ( );
    SAFEARRAY * GetAvailableEclipsingBodies ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_StoppingConditionType (
        /*[out,retval]*/ enum AgEVAStoppingCondition * pEVAStoppingCondition ) = 0;
      virtual HRESULT __stdcall get_MaxTripTimes (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxTripTimes (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Constraints (
        /*[out,retval]*/ struct IAgVAConstraintCollection * * ppVAConstraintCollection ) = 0;
      virtual HRESULT __stdcall get_BeforeConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_Inherited (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Inherited (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Sequence (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Sequence (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Condition (
        /*[out,retval]*/ enum AgEVALightingCondition * pVal ) = 0;
      virtual HRESULT __stdcall put_Condition (
        /*[in]*/ enum AgEVALightingCondition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodiesListSource (
        /*[out,retval]*/ enum AgEVAEclipsingBodiesSource * pVal ) = 0;
      virtual HRESULT __stdcall put_EclipsingBodiesListSource (
        /*[in]*/ enum AgEVAEclipsingBodiesSource pVal ) = 0;
      virtual HRESULT __stdcall raw_AddEclipsingBody (
        /*[in]*/ BSTR EclipsingBody ) = 0;
      virtual HRESULT __stdcall raw_RemoveEclipsingBody (
        /*[in]*/ BSTR EclipsingBody ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ SAFEARRAY * * ppNewVal ) = 0;
      virtual HRESULT __stdcall get_AvailableEclipsingBodies (
        /*[out,retval]*/ SAFEARRAY * * ppNewVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("c061e80a-26da-4fc6-b734-26c20099409d"))
IAgVALightingStoppingCondition : IAgVAStoppingConditionComponent
{
    //
    // Property data
    //

    __declspec(property(get=GetMaxTripTimes,put=PutMaxTripTimes))
    double MaxTripTimes;
    __declspec(property(get=GetRepeatCount,put=PutRepeatCount))
    double RepeatCount;
    __declspec(property(get=GetConstraints))
    IAgVAConstraintCollectionPtr Constraints;
    __declspec(property(get=GetBeforeConditions))
    IAgVAStoppingConditionCollectionPtr BeforeConditions;
    __declspec(property(get=GetInherited,put=PutInherited))
    VARIANT_BOOL Inherited;
    __declspec(property(get=GetSequence,put=PutSequence))
    _bstr_t Sequence;
    __declspec(property(get=GetCondition,put=PutCondition))
    enum AgEVALightingCondition Condition;
    __declspec(property(get=GetEclipsingBodiesListSource,put=PutEclipsingBodiesListSource))
    enum AgEVAEclipsingBodiesSource EclipsingBodiesListSource;
    __declspec(property(get=GetEclipsingBodies))
    SAFEARRAY * EclipsingBodies;
    __declspec(property(get=GetAvailableEclipsingBodies))
    SAFEARRAY * AvailableEclipsingBodies;

    //
    // Wrapper methods for error-handling
    //

    double GetMaxTripTimes ( );
    void PutMaxTripTimes (
        double pVal );
    double GetRepeatCount ( );
    void PutRepeatCount (
        double pVal );
    IAgVAConstraintCollectionPtr GetConstraints ( );
    IAgVAStoppingConditionCollectionPtr GetBeforeConditions ( );
    VARIANT_BOOL GetInherited ( );
    void PutInherited (
        VARIANT_BOOL pVal );
    _bstr_t GetSequence ( );
    void PutSequence (
        _bstr_t pVal );
    enum AgEVALightingCondition GetCondition ( );
    void PutCondition (
        enum AgEVALightingCondition pVal );
    enum AgEVAEclipsingBodiesSource GetEclipsingBodiesListSource ( );
    void PutEclipsingBodiesListSource (
        enum AgEVAEclipsingBodiesSource pVal );
    HRESULT AddEclipsingBody (
        _bstr_t EclipsingBody );
    HRESULT RemoveEclipsingBody (
        _bstr_t EclipsingBody );
    SAFEARRAY * GetEclipsingBodies ( );
    SAFEARRAY * GetAvailableEclipsingBodies ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MaxTripTimes (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxTripTimes (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Constraints (
        /*[out,retval]*/ struct IAgVAConstraintCollection * * ppVAConstraintCollection ) = 0;
      virtual HRESULT __stdcall get_BeforeConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_Inherited (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Inherited (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Sequence (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Sequence (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Condition (
        /*[out,retval]*/ enum AgEVALightingCondition * pVal ) = 0;
      virtual HRESULT __stdcall put_Condition (
        /*[in]*/ enum AgEVALightingCondition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodiesListSource (
        /*[out,retval]*/ enum AgEVAEclipsingBodiesSource * pVal ) = 0;
      virtual HRESULT __stdcall put_EclipsingBodiesListSource (
        /*[in]*/ enum AgEVAEclipsingBodiesSource pVal ) = 0;
      virtual HRESULT __stdcall raw_AddEclipsingBody (
        /*[in]*/ BSTR EclipsingBody ) = 0;
      virtual HRESULT __stdcall raw_RemoveEclipsingBody (
        /*[in]*/ BSTR EclipsingBody ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ SAFEARRAY * * ppNewVal ) = 0;
      virtual HRESULT __stdcall get_AvailableEclipsingBodies (
        /*[out,retval]*/ SAFEARRAY * * ppNewVal ) = 0;
};

struct __declspec(uuid("05f8b885-378c-4a38-95d8-a6736ae43c3a"))
AgVAStoppingCondition;
    // [ default ] interface _IAgVAStoppingCondition
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStoppingConditionComponent
    // interface IAgVAStoppingCondition
    // interface IAgRuntimeTypeInfoProvider

enum AgEVACriterion
{
    eVACriterionCrossDecreasing = 0,
    eVACriterionCrossEither = 1,
    eVACriterionCrossIncreasing = 2
};

struct __declspec(uuid("3a51d3ac-9d2c-425a-9d95-27bc49d59d6c"))
_IAgVAStoppingCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSequence,put=PutSequence))
    _bstr_t Sequence;
    __declspec(property(get=GetConstraints))
    IAgVAConstraintCollectionPtr Constraints;
    __declspec(property(get=GetUserCalcObjectName,put=PutUserCalcObjectName))
    _bstr_t UserCalcObjectName;
    __declspec(property(get=GetUserCalcObject,put=PutUserCalcObject))
    STKObjects::IAgComponentInfoPtr UserCalcObject;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetCriterion,put=PutCriterion))
    enum AgEVACriterion Criterion;
    __declspec(property(get=GetBeforeConditions))
    IAgVAStoppingConditionCollectionPtr BeforeConditions;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetReferencePoint,put=PutReferencePoint))
    _bstr_t ReferencePoint;
    __declspec(property(get=GetStoppingConditionType))
    enum AgEVAStoppingCondition StoppingConditionType;
    __declspec(property(get=GetTrip,put=PutTrip))
    _variant_t Trip;
    __declspec(property(get=GetTolerance,put=PutTolerance))
    double Tolerance;
    __declspec(property(get=GetRepeatCount,put=PutRepeatCount))
    double RepeatCount;
    __declspec(property(get=GetInherited,put=PutInherited))
    VARIANT_BOOL Inherited;
    __declspec(property(get=GetMaxTripTimes,put=PutMaxTripTimes))
    double MaxTripTimes;
    __declspec(property(get=GetCoordSystem,put=PutCoordSystem))
    _bstr_t CoordSystem;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    enum AgEVAStoppingCondition GetStoppingConditionType ( );
    _variant_t GetTrip ( );
    void PutTrip (
        const _variant_t & pVal );
    double GetTolerance ( );
    void PutTolerance (
        double pVal );
    double GetRepeatCount ( );
    void PutRepeatCount (
        double pVal );
    VARIANT_BOOL GetInherited ( );
    void PutInherited (
        VARIANT_BOOL pVal );
    double GetMaxTripTimes ( );
    void PutMaxTripTimes (
        double pVal );
    _bstr_t GetCoordSystem ( );
    void PutCoordSystem (
        _bstr_t pVal );
    _bstr_t GetSequence ( );
    void PutSequence (
        _bstr_t pVal );
    IAgVAConstraintCollectionPtr GetConstraints ( );
    _bstr_t GetUserCalcObjectName ( );
    void PutUserCalcObjectName (
        _bstr_t pVal );
    STKObjects::IAgComponentInfoPtr GetUserCalcObject ( );
    void PutUserCalcObject (
        struct STKObjects::IAgComponentInfo * ppComponentInfo );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACriterion GetCriterion ( );
    void PutCriterion (
        enum AgEVACriterion pVal );
    IAgVAStoppingConditionCollectionPtr GetBeforeConditions ( );
    _bstr_t GetDimension ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    _bstr_t GetReferencePoint ( );
    void PutReferencePoint (
        _bstr_t pRetVal );
    HRESULT CopyUserCalcObjectToClipboard ( );
    HRESULT PasteUserCalcObjectFromClipboard ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_StoppingConditionType (
        /*[out,retval]*/ enum AgEVAStoppingCondition * pEVAStoppingCondition ) = 0;
      virtual HRESULT __stdcall get_Trip (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Trip (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Tolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inherited (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Inherited (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxTripTimes (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxTripTimes (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_CoordSystem (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystem (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Sequence (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Sequence (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Constraints (
        /*[out,retval]*/ struct IAgVAConstraintCollection * * ppVAConstraintCollection ) = 0;
      virtual HRESULT __stdcall get_UserCalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserCalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserCalcObject (
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppComponentInfo ) = 0;
      virtual HRESULT __stdcall put_UserCalcObject (
        /*[in]*/ struct STKObjects::IAgComponentInfo * ppComponentInfo ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Criterion (
        /*[out,retval]*/ enum AgEVACriterion * pVal ) = 0;
      virtual HRESULT __stdcall put_Criterion (
        /*[in]*/ enum AgEVACriterion pVal ) = 0;
      virtual HRESULT __stdcall get_BeforeConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ReferencePoint (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_ReferencePoint (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CopyUserCalcObjectToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PasteUserCalcObjectFromClipboard ( ) = 0;
};

struct __declspec(uuid("f29c4125-e4fc-465e-8c16-20d670798ad0"))
IAgVAStoppingCondition : IAgVAStoppingConditionComponent
{
    //
    // Property data
    //

    __declspec(property(get=GetTrip,put=PutTrip))
    _variant_t Trip;
    __declspec(property(get=GetTolerance,put=PutTolerance))
    double Tolerance;
    __declspec(property(get=GetRepeatCount,put=PutRepeatCount))
    double RepeatCount;
    __declspec(property(get=GetInherited,put=PutInherited))
    VARIANT_BOOL Inherited;
    __declspec(property(get=GetMaxTripTimes,put=PutMaxTripTimes))
    double MaxTripTimes;
    __declspec(property(get=GetCoordSystem,put=PutCoordSystem))
    _bstr_t CoordSystem;
    __declspec(property(get=GetSequence,put=PutSequence))
    _bstr_t Sequence;
    __declspec(property(get=GetConstraints))
    IAgVAConstraintCollectionPtr Constraints;
    __declspec(property(get=GetUserCalcObjectName,put=PutUserCalcObjectName))
    _bstr_t UserCalcObjectName;
    __declspec(property(get=GetUserCalcObject,put=PutUserCalcObject))
    STKObjects::IAgComponentInfoPtr UserCalcObject;
    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetCriterion,put=PutCriterion))
    enum AgEVACriterion Criterion;
    __declspec(property(get=GetBeforeConditions))
    IAgVAStoppingConditionCollectionPtr BeforeConditions;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetReferencePoint,put=PutReferencePoint))
    _bstr_t ReferencePoint;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetTrip ( );
    void PutTrip (
        const _variant_t & pVal );
    double GetTolerance ( );
    void PutTolerance (
        double pVal );
    double GetRepeatCount ( );
    void PutRepeatCount (
        double pVal );
    VARIANT_BOOL GetInherited ( );
    void PutInherited (
        VARIANT_BOOL pVal );
    double GetMaxTripTimes ( );
    void PutMaxTripTimes (
        double pVal );
    _bstr_t GetCoordSystem ( );
    void PutCoordSystem (
        _bstr_t pVal );
    _bstr_t GetSequence ( );
    void PutSequence (
        _bstr_t pVal );
    IAgVAConstraintCollectionPtr GetConstraints ( );
    _bstr_t GetUserCalcObjectName ( );
    void PutUserCalcObjectName (
        _bstr_t pVal );
    STKObjects::IAgComponentInfoPtr GetUserCalcObject ( );
    void PutUserCalcObject (
        struct STKObjects::IAgComponentInfo * ppComponentInfo );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    enum AgEVACriterion GetCriterion ( );
    void PutCriterion (
        enum AgEVACriterion pVal );
    IAgVAStoppingConditionCollectionPtr GetBeforeConditions ( );
    _bstr_t GetDimension ( );
    _bstr_t GetReferencePoint ( );
    void PutReferencePoint (
        _bstr_t pRetVal );
    HRESULT CopyUserCalcObjectToClipboard ( );
    HRESULT PasteUserCalcObjectFromClipboard ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Trip (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Trip (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Tolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Inherited (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Inherited (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxTripTimes (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxTripTimes (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_CoordSystem (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CoordSystem (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Sequence (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Sequence (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Constraints (
        /*[out,retval]*/ struct IAgVAConstraintCollection * * ppVAConstraintCollection ) = 0;
      virtual HRESULT __stdcall get_UserCalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserCalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserCalcObject (
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppComponentInfo ) = 0;
      virtual HRESULT __stdcall put_UserCalcObject (
        /*[in]*/ struct STKObjects::IAgComponentInfo * ppComponentInfo ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Criterion (
        /*[out,retval]*/ enum AgEVACriterion * pVal ) = 0;
      virtual HRESULT __stdcall put_Criterion (
        /*[in]*/ enum AgEVACriterion pVal ) = 0;
      virtual HRESULT __stdcall get_BeforeConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ReferencePoint (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_ReferencePoint (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CopyUserCalcObjectToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PasteUserCalcObjectFromClipboard ( ) = 0;
};

struct __declspec(uuid("bb2962b8-7849-4831-8767-886eca4c7950"))
AgVAStoppingConditionElement;
    // [ default ] interface _IAgVAStoppingConditionElement
    // interface IAgVAStoppingConditionElement
    // interface IAgComponentInfo
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("b98c19f5-ff36-47bc-964a-de46856edee6"))
_IAgVAStoppingConditionElement : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetActive,put=PutActive))
    VARIANT_BOOL Active;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetProperties))
    IAgVAStoppingConditionComponentPtr Properties;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetActive ( );
    void PutActive (
        VARIANT_BOOL pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlStoppingCondition Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlStoppingCondition Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlStoppingCondition Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    IAgVAStoppingConditionComponentPtr GetProperties ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Active (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlStoppingCondition Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlStoppingCondition Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlStoppingCondition Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAStoppingConditionComponent * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("1213a369-e742-4291-93dc-a839ec54f52c"))
AgVAMCSSequence;
    // [ default ] interface _IAgVAMCSSequence
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgVAMCSSequence
    // interface IAgComponentInfo
    // interface IAgCloneable

enum AgEVASequenceStateToPass
{
    eVASequenceStateToPassInitial = 0,
    eVASequenceStateToPassFinal = 1
};

struct __declspec(uuid("c4bf86e5-63f8-4c2c-ad4d-967a6f649a55"))
IAgVAScriptingSegment : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;
    __declspec(property(get=GetComponentName,put=PutComponentName))
    _bstr_t ComponentName;
    __declspec(property(get=GetAttribute,put=PutAttribute))
    _bstr_t Attribute;
    __declspec(property(get=GetUnit,put=PutUnit))
    _bstr_t Unit;
    __declspec(property(get=GetAvailableSegmentNames))
    SAFEARRAY * AvailableSegmentNames;
    __declspec(property(get=GetAvailableAttributeValues))
    SAFEARRAY * AvailableAttributeValues;
    __declspec(property(get=GetReadOnlyProperty,put=PutReadOnlyProperty))
    VARIANT_BOOL ReadOnlyProperty;
    __declspec(property(get=GetObjectName,put=PutObjectName))
    _bstr_t ObjectName;
    __declspec(property(get=GetAvailableObjectNames))
    SAFEARRAY * AvailableObjectNames;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    _bstr_t GetComponentName ( );
    void PutComponentName (
        _bstr_t pVal );
    _bstr_t GetAttribute ( );
    void PutAttribute (
        _bstr_t pVal );
    _bstr_t GetUnit ( );
    void PutUnit (
        _bstr_t pVal );
    SAFEARRAY * GetAvailableSegmentNames ( );
    SAFEARRAY * GetAvailableAttributeValues ( );
    VARIANT_BOOL GetReadOnlyProperty ( );
    void PutReadOnlyProperty (
        VARIANT_BOOL pVal );
    _bstr_t GetObjectName ( );
    void PutObjectName (
        _bstr_t pVal );
    SAFEARRAY * GetAvailableObjectNames ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ComponentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ComponentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Attribute (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Attribute (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Unit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Unit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AvailableSegmentNames (
        /*[out,retval]*/ SAFEARRAY * * ppNewVal ) = 0;
      virtual HRESULT __stdcall get_AvailableAttributeValues (
        /*[out,retval]*/ SAFEARRAY * * ppNewVal ) = 0;
      virtual HRESULT __stdcall get_ReadOnlyProperty (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ReadOnlyProperty (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AvailableObjectNames (
        /*[out,retval]*/ SAFEARRAY * * ppNewVal ) = 0;
};

struct __declspec(uuid("b1a95b48-ceaa-415c-bec1-4d59ad1605b7"))
IAgVAScriptingSegmentCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAScriptingSegmentPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAScriptingSegmentPtr GetItem (
        const _variant_t & IndexOrName );
    IAgVAScriptingSegmentPtr Add (
        _bstr_t ComponentName );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    HRESULT RemoveAll ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    HRESULT Cut (
        const _variant_t & IndexOrName );
    IAgVAScriptingSegmentPtr Paste ( );
    IAgVAScriptingSegmentPtr InsertCopy (
        struct IAgVAScriptingSegment * ObjProperty );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAScriptingSegment * * ppVAScriptingSegment ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR ComponentName,
        /*[out,retval]*/ struct IAgVAScriptingSegment * * ppVAScriptingSegment ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[out,retval]*/ struct IAgVAScriptingSegment * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct IAgVAScriptingSegment * ObjProperty,
        /*[out,retval]*/ struct IAgVAScriptingSegment * * ppRetVal ) = 0;
};

struct __declspec(uuid("13f6c04c-7b1a-4e3f-9a78-26a964e60fe4"))
IAgVAScriptingCalcObject : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetComponentName,put=PutComponentName))
    _bstr_t ComponentName;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetCalcObject,put=PutCalcObject))
    STKObjects::IAgComponentInfoPtr CalcObject;
    __declspec(property(get=GetUnit,put=PutUnit))
    _bstr_t Unit;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetComponentName ( );
    void PutComponentName (
        _bstr_t pVal );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    STKObjects::IAgComponentInfoPtr GetCalcObject ( );
    void PutCalcObject (
        struct STKObjects::IAgComponentInfo * ppRetVal );
    _bstr_t GetUnit ( );
    void PutUnit (
        _bstr_t pVal );
    HRESULT CopyCalcObjectToClipboard ( );
    HRESULT PasteCalcObjectFromClipboard ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ComponentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ComponentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CalcObject (
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall put_CalcObject (
        /*[in]*/ struct STKObjects::IAgComponentInfo * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Unit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Unit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_CopyCalcObjectToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PasteCalcObjectFromClipboard ( ) = 0;
};

struct __declspec(uuid("8a6fa57f-75f5-4703-a96f-02ec6ff9fb26"))
IAgVAScriptingCalcObjectCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAScriptingCalcObjectPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAScriptingCalcObjectPtr GetItem (
        const _variant_t & IndexOrName );
    IAgVAScriptingCalcObjectPtr Add (
        _bstr_t ComponentName );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    HRESULT RemoveAll ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    HRESULT Cut (
        const _variant_t & IndexOrName );
    IAgVAScriptingCalcObjectPtr Paste ( );
    IAgVAScriptingCalcObjectPtr InsertCopy (
        struct IAgVAScriptingCalcObject * CalcObj );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAScriptingCalcObject * * ppCalcObjectWrapper ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR ComponentName,
        /*[out,retval]*/ struct IAgVAScriptingCalcObject * * ppVAScriptingParameter ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[out,retval]*/ struct IAgVAScriptingCalcObject * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct IAgVAScriptingCalcObject * CalcObj,
        /*[out,retval]*/ struct IAgVAScriptingCalcObject * * ppRetVal ) = 0;
};

enum AgEVAScriptingParameterType
{
    eVAScriptingParameterTypeDouble = 0,
    eVAScriptingParameterTypeQuantity = 1,
    eVAScriptingParameterTypeDate = 2,
    eVAScriptingParameterTypeString = 3,
    eVAScriptingParameterTypeBoolean = 4,
    eVAScriptingParameterTypeInteger = 5,
    eVAScriptingParameterTypeEnumeration = 6
};

struct __declspec(uuid("eaf8cfd5-3aca-49f2-9b82-ae72e6ae2c69"))
IAgVAScriptingParameterEnumerationChoice : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetValue,put=PutValue))
    long Value;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    long GetValue ( );
    void PutValue (
        long pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("c7a3e80f-a414-414d-89e2-b9defb93ba34"))
IAgVAScriptingParameterEnumerationChoiceCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAScriptingParameterEnumerationChoicePtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAScriptingParameterEnumerationChoicePtr GetItem (
        const _variant_t & IndexOrName );
    IAgVAScriptingParameterEnumerationChoicePtr Add (
        _bstr_t ChoiceName );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    HRESULT Cut (
        const _variant_t & IndexOrName );
    IAgVAScriptingParameterEnumerationChoicePtr Paste ( );
    IAgVAScriptingParameterEnumerationChoicePtr InsertCopy (
        struct IAgVAScriptingParameterEnumerationChoice * Choice );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAScriptingParameterEnumerationChoice * * ppChoice ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR ChoiceName,
        /*[out,retval]*/ struct IAgVAScriptingParameterEnumerationChoice * * ppChoice ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[out,retval]*/ struct IAgVAScriptingParameterEnumerationChoice * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct IAgVAScriptingParameterEnumerationChoice * Choice,
        /*[out,retval]*/ struct IAgVAScriptingParameterEnumerationChoice * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("bb176851-5128-472c-a988-1894f636e857"))
IAgVAScriptingParameter : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetValue,put=PutValue))
    double Value;
    __declspec(property(get=GetParamValue,put=PutParamValue))
    _variant_t ParamValue;
    __declspec(property(get=GetUnit,put=PutUnit))
    _bstr_t Unit;
    __declspec(property(get=GetType,put=PutType))
    enum AgEVAScriptingParameterType Type;
    __declspec(property(get=GetInheritValue,put=PutInheritValue))
    VARIANT_BOOL InheritValue;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDimension,put=PutDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetEnumerationChoices))
    IAgVAScriptingParameterEnumerationChoiceCollectionPtr EnumerationChoices;
    __declspec(property(get=GetUseMinValue,put=PutUseMinValue))
    VARIANT_BOOL UseMinValue;
    __declspec(property(get=GetMinValue,put=PutMinValue))
    _variant_t MinValue;
    __declspec(property(get=GetUseMaxValue,put=PutUseMaxValue))
    VARIANT_BOOL UseMaxValue;
    __declspec(property(get=GetMaxValue,put=PutMaxValue))
    _variant_t MaxValue;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    double GetValue ( );
    void PutValue (
        double pVal );
    _variant_t GetParamValue ( );
    void PutParamValue (
        const _variant_t & pVal );
    _bstr_t GetUnit ( );
    void PutUnit (
        _bstr_t pVal );
    enum AgEVAScriptingParameterType GetType ( );
    void PutType (
        enum AgEVAScriptingParameterType pVal );
    VARIANT_BOOL GetInheritValue ( );
    void PutInheritValue (
        VARIANT_BOOL pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDimension ( );
    void PutDimension (
        _bstr_t pVal );
    IAgVAScriptingParameterEnumerationChoiceCollectionPtr GetEnumerationChoices ( );
    VARIANT_BOOL GetUseMinValue ( );
    void PutUseMinValue (
        VARIANT_BOOL pVal );
    _variant_t GetMinValue ( );
    void PutMinValue (
        const _variant_t & pVal );
    VARIANT_BOOL GetUseMaxValue ( );
    void PutUseMaxValue (
        VARIANT_BOOL pVal );
    _variant_t GetMaxValue ( );
    void PutMaxValue (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ParamValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ParamValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Unit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Unit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAScriptingParameterType * pVal ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum AgEVAScriptingParameterType pVal ) = 0;
      virtual HRESULT __stdcall get_InheritValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_InheritValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Dimension (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_EnumerationChoices (
        /*[out,retval]*/ struct IAgVAScriptingParameterEnumerationChoiceCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_UseMinValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MinValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MinValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxValue (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("7f339dd2-9c84-4bdb-9180-b3b3f661b586"))
IAgVAScriptingParameterCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAScriptingParameterPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAScriptingParameterPtr GetItem (
        const _variant_t & IndexOrName );
    IAgVAScriptingParameterPtr Add (
        _bstr_t ParameterName );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    HRESULT RemoveAll ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    HRESULT Cut (
        const _variant_t & IndexOrName );
    IAgVAScriptingParameterPtr Paste ( );
    IAgVAScriptingParameterPtr InsertCopy (
        struct IAgVAScriptingParameter * Parameter );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAScriptingParameter * * ppVAScriptingParameter ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR ParameterName,
        /*[out,retval]*/ struct IAgVAScriptingParameter * * ppVAScriptingParameter ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[out,retval]*/ struct IAgVAScriptingParameter * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct IAgVAScriptingParameter * Parameter,
        /*[out,retval]*/ struct IAgVAScriptingParameter * * ppRetVal ) = 0;
};

enum AgEVALanguage
{
    eVALanguageVBScript = 0,
    eVALanguageJScript = 1,
    eVALanguageMATLAB = 2
};

struct __declspec(uuid("8e4468ba-fca4-4c95-9e11-af36fdbf7b87"))
IAgVAScriptingTool : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetSegmentProperties))
    IAgVAScriptingSegmentCollectionPtr SegmentProperties;
    __declspec(property(get=GetCalcObjects))
    IAgVAScriptingCalcObjectCollectionPtr CalcObjects;
    __declspec(property(get=GetParameters))
    IAgVAScriptingParameterCollectionPtr Parameters;
    __declspec(property(get=GetLanguageType,put=PutLanguageType))
    enum AgEVALanguage LanguageType;
    __declspec(property(get=GetPreIterate,put=PutPreIterate))
    VARIANT_BOOL PreIterate;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    IAgVAScriptingSegmentCollectionPtr GetSegmentProperties ( );
    IAgVAScriptingCalcObjectCollectionPtr GetCalcObjects ( );
    IAgVAScriptingParameterCollectionPtr GetParameters ( );
    enum AgEVALanguage GetLanguageType ( );
    void PutLanguageType (
        enum AgEVALanguage pVal );
    HRESULT ScriptText (
        _bstr_t Script );
    HRESULT CopyToClipboard ( );
    HRESULT PasteFromClipboard ( );
    VARIANT_BOOL GetPreIterate ( );
    void PutPreIterate (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentProperties (
        /*[out,retval]*/ struct IAgVAScriptingSegmentCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_CalcObjects (
        /*[out,retval]*/ struct IAgVAScriptingCalcObjectCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Parameters (
        /*[out,retval]*/ struct IAgVAScriptingParameterCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_LanguageType (
        /*[out,retval]*/ enum AgEVALanguage * pVal ) = 0;
      virtual HRESULT __stdcall put_LanguageType (
        /*[in]*/ enum AgEVALanguage pVal ) = 0;
      virtual HRESULT __stdcall raw_ScriptText (
        /*[in]*/ BSTR Script ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PasteFromClipboard ( ) = 0;
      virtual HRESULT __stdcall get_PreIterate (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_PreIterate (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("c73eea71-9612-4c03-afcc-fe7a85b6c50f"))
_IAgVAMCSSequence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetRepeatCount,put=PutRepeatCount))
    long RepeatCount;
    __declspec(property(get=GetGenerateEphemeris,put=PutGenerateEphemeris))
    VARIANT_BOOL GenerateEphemeris;
    __declspec(property(get=GetSegments))
    IAgVAMCSSegmentCollectionPtr Segments;
    __declspec(property(get=GetSequenceStateToPass,put=PutSequenceStateToPass))
    enum AgEVASequenceStateToPass SequenceStateToPass;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    long GetRepeatCount ( );
    void PutRepeatCount (
        long pVal );
    VARIANT_BOOL GetGenerateEphemeris ( );
    void PutGenerateEphemeris (
        VARIANT_BOOL pVal );
    IAgVAMCSSegmentCollectionPtr GetSegments ( );
    enum AgEVASequenceStateToPass GetSequenceStateToPass ( );
    void PutSequenceStateToPass (
        enum AgEVASequenceStateToPass pVal );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    HRESULT ApplyScript ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_GenerateEphemeris (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_GenerateEphemeris (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Segments (
        /*[out,retval]*/ struct IAgVAMCSSegmentCollection * * ppVAMCSSegmentCollection ) = 0;
      virtual HRESULT __stdcall get_SequenceStateToPass (
        /*[out,retval]*/ enum AgEVASequenceStateToPass * pVal ) = 0;
      virtual HRESULT __stdcall put_SequenceStateToPass (
        /*[in]*/ enum AgEVASequenceStateToPass pVal ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_ApplyScript ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("55181503-61eb-468f-b36b-e96e87966a6d"))
IAgVAMCSSequence : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetRepeatCount,put=PutRepeatCount))
    long RepeatCount;
    __declspec(property(get=GetGenerateEphemeris,put=PutGenerateEphemeris))
    VARIANT_BOOL GenerateEphemeris;
    __declspec(property(get=GetSegments))
    IAgVAMCSSegmentCollectionPtr Segments;
    __declspec(property(get=GetSequenceStateToPass,put=PutSequenceStateToPass))
    enum AgEVASequenceStateToPass SequenceStateToPass;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;

    //
    // Wrapper methods for error-handling
    //

    long GetRepeatCount ( );
    void PutRepeatCount (
        long pVal );
    VARIANT_BOOL GetGenerateEphemeris ( );
    void PutGenerateEphemeris (
        VARIANT_BOOL pVal );
    IAgVAMCSSegmentCollectionPtr GetSegments ( );
    enum AgEVASequenceStateToPass GetSequenceStateToPass ( );
    void PutSequenceStateToPass (
        enum AgEVASequenceStateToPass pVal );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    HRESULT ApplyScript ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_GenerateEphemeris (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_GenerateEphemeris (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Segments (
        /*[out,retval]*/ struct IAgVAMCSSegmentCollection * * ppVAMCSSegmentCollection ) = 0;
      virtual HRESULT __stdcall get_SequenceStateToPass (
        /*[out,retval]*/ enum AgEVASequenceStateToPass * pVal ) = 0;
      virtual HRESULT __stdcall put_SequenceStateToPass (
        /*[in]*/ enum AgEVASequenceStateToPass pVal ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_ApplyScript ( ) = 0;
};

struct __declspec(uuid("90895550-e9e9-4c4e-932b-32b4ae5b47f3"))
AgVAMCSBackwardSequence;
    // [ default ] interface _IAgVAMCSBackwardSequence
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgVAMCSBackwardSequence
    // interface IAgVAMCSSequence
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("430e92d7-206a-4e61-a7ab-293de9fa3a3c"))
_IAgVAMCSBackwardSequence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetRepeatCount,put=PutRepeatCount))
    long RepeatCount;
    __declspec(property(get=GetGenerateEphemeris,put=PutGenerateEphemeris))
    VARIANT_BOOL GenerateEphemeris;
    __declspec(property(get=GetSegments))
    IAgVAMCSSegmentCollectionPtr Segments;
    __declspec(property(get=GetSequenceStateToPass,put=PutSequenceStateToPass))
    enum AgEVASequenceStateToPass SequenceStateToPass;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    long GetRepeatCount ( );
    void PutRepeatCount (
        long pVal );
    VARIANT_BOOL GetGenerateEphemeris ( );
    void PutGenerateEphemeris (
        VARIANT_BOOL pVal );
    IAgVAMCSSegmentCollectionPtr GetSegments ( );
    enum AgEVASequenceStateToPass GetSequenceStateToPass ( );
    void PutSequenceStateToPass (
        enum AgEVASequenceStateToPass pVal );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    HRESULT ApplyScript ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_GenerateEphemeris (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_GenerateEphemeris (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Segments (
        /*[out,retval]*/ struct IAgVAMCSSegmentCollection * * ppVAMCSSegmentCollection ) = 0;
      virtual HRESULT __stdcall get_SequenceStateToPass (
        /*[out,retval]*/ enum AgEVASequenceStateToPass * pVal ) = 0;
      virtual HRESULT __stdcall put_SequenceStateToPass (
        /*[in]*/ enum AgEVASequenceStateToPass pVal ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_ApplyScript ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("4e464856-ca81-44c0-b889-5f78ec06a6b4"))
IAgVAMCSBackwardSequence : IAgVAMCSSequence
{};

struct __declspec(uuid("4ddf23be-2af5-488e-a3af-1a6170079e6e"))
AgVAMCSLaunch;
    // [ default ] interface _IAgVAMCSLaunch
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgVAMCSLaunch
    // interface IAgComponentInfo
    // interface IAgCloneable

enum AgEVAControlLaunch
{
    eVAControlLaunchEpoch = 500,
    eVAControlLaunchGeodeticLat = 501,
    eVAControlLaunchGeodeticLon = 502,
    eVAControlLaunchGeodeticAlt = 503,
    eVAControlLaunchGeocentricLat = 504,
    eVAControlLaunchGeocentricLon = 505,
    eVAControlLaunchGeocentricRad = 506,
    eVAControlLaunchTimeOfFlight = 507,
    eVAControlLaunchBurnoutGeocentricLat = 508,
    eVAControlLaunchBurnoutGeocentricLon = 509,
    eVAControlLaunchBurnoutGeocentricRad = 510,
    eVAControlLaunchBurnoutGeodeticLat = 511,
    eVAControlLaunchBurnoutGeodeticLon = 512,
    eVAControlLaunchBurnoutGeodeticAlt = 513,
    eVAControlLaunchBurnoutAzAltAz = 514,
    eVAControlLaunchBurnoutAzAltDownrangeDist = 515,
    eVAControlLaunchBurnoutAzAltAlt = 516,
    eVAControlLaunchBurnoutAzRadAz = 517,
    eVAControlLaunchBurnoutAzRadDownrangeDist = 518,
    eVAControlLaunchBurnoutAzRadRad = 519,
    eVAControlLaunchBurnoutFixedVelocity = 520,
    eVAControlLaunchBurnoutInertialVelocity = 521,
    eVAControlLaunchBurnoutInertialVelocityAzimuth = 522,
    eVAControlLaunchBurnoutInertialHorizontalFPA = 523,
    eVAControlLaunchDryMass = 524,
    eVAControlLaunchCd = 525,
    eVAControlLaunchDragArea = 526,
    eVAControlLaunchCr = 527,
    eVAControlLaunchSRPArea = 528,
    eVAControlLaunchCk = 529,
    eVAControlLaunchRadiationPressureArea = 530,
    eVAControlLaunchK1 = 531,
    eVAControlLaunchK2 = 532,
    eVAControlLaunchTankPressure = 533,
    eVAControlLaunchTankVolume = 534,
    eVAControlLaunchTankTemp = 535,
    eVAControlLaunchFuelDensity = 536,
    eVAControlLaunchFuelMass = 537,
    eVAControlLaunchMaxFuelMass = 538
};

enum AgEVALaunchDisplaySystem
{
    eVADisplaySystemGeodetic = 0,
    eVADisplaySystemGeocentric = 1
};

struct __declspec(uuid("5cc5d894-5e2e-4af6-a97c-14823b2b3a12"))
IAgVADisplaySystem : IUnknown
{};

enum AgEVAAscentType
{
    eVAAscentTypeEllipseCubicMotion = 0,
    eVAAscentTypeEllipseQuarticMotion = 1
};

enum AgEVABurnoutType
{
    eVABurnoutTypeGeocentric = 0,
    eVABurnoutTypeGeodetic = 1,
    eVABurnoutTypeLaunchAzRad = 2,
    eVABurnoutTypeLaunchAzAlt = 3
};

struct __declspec(uuid("a9550020-7d89-42ad-b4bd-ef3b5e0ad348"))
IAgVABurnout : IUnknown
{};

enum AgEVABurnoutOptions
{
    eVABurnoutOptionsFixedVelocity = 0,
    eVABurnoutOptionsInertialVelocity = 1
};

struct __declspec(uuid("854ca8f5-f1c1-48c1-94e7-c6b9be4213be"))
IAgVABurnoutVelocity : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetBurnoutOption,put=PutBurnoutOption))
    enum AgEVABurnoutOptions BurnoutOption;
    __declspec(property(get=GetFixedVelocity,put=PutFixedVelocity))
    double FixedVelocity;
    __declspec(property(get=GetInertialVelocity,put=PutInertialVelocity))
    double InertialVelocity;
    __declspec(property(get=GetInertialVelocityAzimuth,put=PutInertialVelocityAzimuth))
    _variant_t InertialVelocityAzimuth;
    __declspec(property(get=GetInertialHorizontalFPA,put=PutInertialHorizontalFPA))
    _variant_t InertialHorizontalFPA;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVABurnoutOptions GetBurnoutOption ( );
    void PutBurnoutOption (
        enum AgEVABurnoutOptions pVal );
    double GetFixedVelocity ( );
    void PutFixedVelocity (
        double pVal );
    double GetInertialVelocity ( );
    void PutInertialVelocity (
        double pVal );
    _variant_t GetInertialVelocityAzimuth ( );
    void PutInertialVelocityAzimuth (
        const _variant_t & pVal );
    _variant_t GetInertialHorizontalFPA ( );
    void PutInertialHorizontalFPA (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BurnoutOption (
        /*[out,retval]*/ enum AgEVABurnoutOptions * pVal ) = 0;
      virtual HRESULT __stdcall put_BurnoutOption (
        /*[in]*/ enum AgEVABurnoutOptions pVal ) = 0;
      virtual HRESULT __stdcall get_FixedVelocity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FixedVelocity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_InertialVelocity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InertialVelocity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_InertialVelocityAzimuth (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_InertialVelocityAzimuth (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_InertialHorizontalFPA (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_InertialHorizontalFPA (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("5f435a53-74aa-446c-9b99-a1abbd011d09"))
_IAgVAMCSLaunch : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetStepSize,put=PutStepSize))
    double StepSize;
    __declspec(property(get=GetPreLaunchTime,put=PutPreLaunchTime))
    double PreLaunchTime;
    __declspec(property(get=GetEpoch,put=PutEpoch))
    _variant_t Epoch;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetInitialAcceleration,put=PutInitialAcceleration))
    double InitialAcceleration;
    __declspec(property(get=GetSpacecraftParameters))
    IAgVASpacecraftParametersPtr SpacecraftParameters;
    __declspec(property(get=GetFuelTank))
    IAgVAFuelTankPtr FuelTank;
    __declspec(property(get=GetDisplaySystemType))
    enum AgEVALaunchDisplaySystem DisplaySystemType;
    __declspec(property(get=GetDisplaySystem))
    IAgVADisplaySystemPtr DisplaySystem;
    __declspec(property(get=GetAscentType,put=PutAscentType))
    enum AgEVAAscentType AscentType;
    __declspec(property(get=GetTimeOfFlight,put=PutTimeOfFlight))
    double TimeOfFlight;
    __declspec(property(get=GetBurnoutType))
    enum AgEVABurnoutType BurnoutType;
    __declspec(property(get=GetBurnout))
    IAgVABurnoutPtr Burnout;
    __declspec(property(get=GetBurnoutVelocity))
    IAgVABurnoutVelocityPtr BurnoutVelocity;
    __declspec(property(get=GetUsePreviousSegmentState,put=PutUsePreviousSegmentState))
    VARIANT_BOOL UsePreviousSegmentState;
    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetSetMetEpoch,put=PutSetMetEpoch))
    VARIANT_BOOL SetMetEpoch;
    __declspec(property(get=GetUserVariables))
    IAgVAUserVariableCollectionPtr UserVariables;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    double GetStepSize ( );
    void PutStepSize (
        double pVal );
    double GetPreLaunchTime ( );
    void PutPreLaunchTime (
        double pVal );
    _variant_t GetEpoch ( );
    void PutEpoch (
        const _variant_t & pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlLaunch Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlLaunch Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlLaunch Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    double GetInitialAcceleration ( );
    void PutInitialAcceleration (
        double pVal );
    IAgVASpacecraftParametersPtr GetSpacecraftParameters ( );
    IAgVAFuelTankPtr GetFuelTank ( );
    enum AgEVALaunchDisplaySystem GetDisplaySystemType ( );
    HRESULT SetDisplaySystemType (
        enum AgEVALaunchDisplaySystem DisplaySystemType );
    IAgVADisplaySystemPtr GetDisplaySystem ( );
    enum AgEVAAscentType GetAscentType ( );
    void PutAscentType (
        enum AgEVAAscentType pVal );
    double GetTimeOfFlight ( );
    void PutTimeOfFlight (
        double pVal );
    enum AgEVABurnoutType GetBurnoutType ( );
    HRESULT SetBurnoutType (
        enum AgEVABurnoutType BurnoutType );
    IAgVABurnoutPtr GetBurnout ( );
    IAgVABurnoutVelocityPtr GetBurnoutVelocity ( );
    VARIANT_BOOL GetUsePreviousSegmentState ( );
    void PutUsePreviousSegmentState (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetSetMetEpoch ( );
    void PutSetMetEpoch (
        VARIANT_BOOL pVal );
    IAgVAUserVariableCollectionPtr GetUserVariables ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_StepSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_StepSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PreLaunchTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PreLaunchTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Epoch (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Epoch (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlLaunch Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlLaunch Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlLaunch Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialAcceleration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialAcceleration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SpacecraftParameters (
        /*[out,retval]*/ struct IAgVASpacecraftParameters * * ppVASpacecraftParameters ) = 0;
      virtual HRESULT __stdcall get_FuelTank (
        /*[out,retval]*/ struct IAgVAFuelTank * * ppVAFuelTank ) = 0;
      virtual HRESULT __stdcall get_DisplaySystemType (
        /*[out,retval]*/ enum AgEVALaunchDisplaySystem * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetDisplaySystemType (
        /*[in]*/ enum AgEVALaunchDisplaySystem DisplaySystemType ) = 0;
      virtual HRESULT __stdcall get_DisplaySystem (
        /*[out,retval]*/ struct IAgVADisplaySystem * * ppVADisplaySystem ) = 0;
      virtual HRESULT __stdcall get_AscentType (
        /*[out,retval]*/ enum AgEVAAscentType * pVal ) = 0;
      virtual HRESULT __stdcall put_AscentType (
        /*[in]*/ enum AgEVAAscentType pVal ) = 0;
      virtual HRESULT __stdcall get_TimeOfFlight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimeOfFlight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BurnoutType (
        /*[out,retval]*/ enum AgEVABurnoutType * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetBurnoutType (
        /*[in]*/ enum AgEVABurnoutType BurnoutType ) = 0;
      virtual HRESULT __stdcall get_Burnout (
        /*[out,retval]*/ struct IAgVABurnout * * ppVABurnout ) = 0;
      virtual HRESULT __stdcall get_BurnoutVelocity (
        /*[out,retval]*/ struct IAgVABurnoutVelocity * * ppVABurnoutVelocity ) = 0;
      virtual HRESULT __stdcall get_UsePreviousSegmentState (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UsePreviousSegmentState (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_SetMetEpoch (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_SetMetEpoch (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UserVariables (
        /*[out,retval]*/ struct IAgVAUserVariableCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("f90b9a7b-69c4-42c8-9e5b-f313ab353b21"))
IAgVAMCSLaunch : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCentralBodyName,put=PutCentralBodyName))
    _bstr_t CentralBodyName;
    __declspec(property(get=GetStepSize,put=PutStepSize))
    double StepSize;
    __declspec(property(get=GetPreLaunchTime,put=PutPreLaunchTime))
    double PreLaunchTime;
    __declspec(property(get=GetEpoch,put=PutEpoch))
    _variant_t Epoch;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetInitialAcceleration,put=PutInitialAcceleration))
    double InitialAcceleration;
    __declspec(property(get=GetSpacecraftParameters))
    IAgVASpacecraftParametersPtr SpacecraftParameters;
    __declspec(property(get=GetFuelTank))
    IAgVAFuelTankPtr FuelTank;
    __declspec(property(get=GetDisplaySystemType))
    enum AgEVALaunchDisplaySystem DisplaySystemType;
    __declspec(property(get=GetDisplaySystem))
    IAgVADisplaySystemPtr DisplaySystem;
    __declspec(property(get=GetAscentType,put=PutAscentType))
    enum AgEVAAscentType AscentType;
    __declspec(property(get=GetTimeOfFlight,put=PutTimeOfFlight))
    double TimeOfFlight;
    __declspec(property(get=GetBurnoutType))
    enum AgEVABurnoutType BurnoutType;
    __declspec(property(get=GetBurnout))
    IAgVABurnoutPtr Burnout;
    __declspec(property(get=GetBurnoutVelocity))
    IAgVABurnoutVelocityPtr BurnoutVelocity;
    __declspec(property(get=GetUsePreviousSegmentState,put=PutUsePreviousSegmentState))
    VARIANT_BOOL UsePreviousSegmentState;
    __declspec(property(get=GetSetMetEpoch,put=PutSetMetEpoch))
    VARIANT_BOOL SetMetEpoch;
    __declspec(property(get=GetUserVariables))
    IAgVAUserVariableCollectionPtr UserVariables;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCentralBodyName ( );
    void PutCentralBodyName (
        _bstr_t pVal );
    double GetStepSize ( );
    void PutStepSize (
        double pVal );
    double GetPreLaunchTime ( );
    void PutPreLaunchTime (
        double pVal );
    _variant_t GetEpoch ( );
    void PutEpoch (
        const _variant_t & pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlLaunch Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlLaunch Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlLaunch Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    double GetInitialAcceleration ( );
    void PutInitialAcceleration (
        double pVal );
    IAgVASpacecraftParametersPtr GetSpacecraftParameters ( );
    IAgVAFuelTankPtr GetFuelTank ( );
    enum AgEVALaunchDisplaySystem GetDisplaySystemType ( );
    HRESULT SetDisplaySystemType (
        enum AgEVALaunchDisplaySystem DisplaySystemType );
    IAgVADisplaySystemPtr GetDisplaySystem ( );
    enum AgEVAAscentType GetAscentType ( );
    void PutAscentType (
        enum AgEVAAscentType pVal );
    double GetTimeOfFlight ( );
    void PutTimeOfFlight (
        double pVal );
    enum AgEVABurnoutType GetBurnoutType ( );
    HRESULT SetBurnoutType (
        enum AgEVABurnoutType BurnoutType );
    IAgVABurnoutPtr GetBurnout ( );
    IAgVABurnoutVelocityPtr GetBurnoutVelocity ( );
    VARIANT_BOOL GetUsePreviousSegmentState ( );
    void PutUsePreviousSegmentState (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetSetMetEpoch ( );
    void PutSetMetEpoch (
        VARIANT_BOOL pVal );
    IAgVAUserVariableCollectionPtr GetUserVariables ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CentralBodyName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_StepSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_StepSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PreLaunchTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PreLaunchTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Epoch (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Epoch (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlLaunch Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlLaunch Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlLaunch Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialAcceleration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InitialAcceleration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SpacecraftParameters (
        /*[out,retval]*/ struct IAgVASpacecraftParameters * * ppVASpacecraftParameters ) = 0;
      virtual HRESULT __stdcall get_FuelTank (
        /*[out,retval]*/ struct IAgVAFuelTank * * ppVAFuelTank ) = 0;
      virtual HRESULT __stdcall get_DisplaySystemType (
        /*[out,retval]*/ enum AgEVALaunchDisplaySystem * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetDisplaySystemType (
        /*[in]*/ enum AgEVALaunchDisplaySystem DisplaySystemType ) = 0;
      virtual HRESULT __stdcall get_DisplaySystem (
        /*[out,retval]*/ struct IAgVADisplaySystem * * ppVADisplaySystem ) = 0;
      virtual HRESULT __stdcall get_AscentType (
        /*[out,retval]*/ enum AgEVAAscentType * pVal ) = 0;
      virtual HRESULT __stdcall put_AscentType (
        /*[in]*/ enum AgEVAAscentType pVal ) = 0;
      virtual HRESULT __stdcall get_TimeOfFlight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TimeOfFlight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BurnoutType (
        /*[out,retval]*/ enum AgEVABurnoutType * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetBurnoutType (
        /*[in]*/ enum AgEVABurnoutType BurnoutType ) = 0;
      virtual HRESULT __stdcall get_Burnout (
        /*[out,retval]*/ struct IAgVABurnout * * ppVABurnout ) = 0;
      virtual HRESULT __stdcall get_BurnoutVelocity (
        /*[out,retval]*/ struct IAgVABurnoutVelocity * * ppVABurnoutVelocity ) = 0;
      virtual HRESULT __stdcall get_UsePreviousSegmentState (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UsePreviousSegmentState (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SetMetEpoch (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_SetMetEpoch (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UserVariables (
        /*[out,retval]*/ struct IAgVAUserVariableCollection * * ppRetVal ) = 0;
};

struct __declspec(uuid("52cac124-0709-4e24-a684-bea59f246ff3"))
AgVADisplaySystemGeodetic;
    // [ default ] interface _IAgVADisplaySystemGeodetic
    // interface IAgVADisplaySystem
    // interface IAgVADisplaySystemGeodetic

struct __declspec(uuid("cf11eda0-a049-42bb-a421-1fa959df61ec"))
_IAgVADisplaySystemGeodetic : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetAltitude,put=PutAltitude))
    double Altitude;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    double GetAltitude ( );
    void PutAltitude (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Altitude (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("77af19b1-33c5-468c-9fdb-b44f9fc892a6"))
IAgVADisplaySystemGeodetic : IAgVADisplaySystem
{
    //
    // Property data
    //

    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetAltitude,put=PutAltitude))
    double Altitude;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    double GetAltitude ( );
    void PutAltitude (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Altitude (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("b69297e0-30b4-48c6-a02c-ce85c855e47c"))
AgVADisplaySystemGeocentric;
    // [ default ] interface _IAgVADisplaySystemGeocentric
    // interface IAgVADisplaySystem
    // interface IAgVADisplaySystemGeocentric

struct __declspec(uuid("dfb04862-f539-4c44-a9cb-504fc2e78f34"))
_IAgVADisplaySystemGeocentric : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    double GetRadius ( );
    void PutRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("ebdaeb77-4459-4ee6-a8c9-6eea2dfd43cb"))
IAgVADisplaySystemGeocentric : IAgVADisplaySystem
{
    //
    // Property data
    //

    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    double GetRadius ( );
    void PutRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("d6e74c3a-415e-4d86-84eb-d9b95bbe2160"))
AgVABurnoutGeodetic;
    // [ default ] interface _IAgVABurnoutGeodetic
    // interface IAgVABurnout
    // interface IAgVABurnoutGeodetic

struct __declspec(uuid("7e3c85f3-b722-435f-a694-4337dbbfbf21"))
_IAgVABurnoutGeodetic : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetAltitude,put=PutAltitude))
    double Altitude;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    double GetAltitude ( );
    void PutAltitude (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Altitude (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("e2e7cb6b-aeb5-4e3a-98e6-4526d14e6739"))
IAgVABurnoutGeodetic : IAgVABurnout
{
    //
    // Property data
    //

    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetAltitude,put=PutAltitude))
    double Altitude;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    double GetAltitude ( );
    void PutAltitude (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Altitude (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("62b6b599-6c10-4418-8e7f-9c3bec627780"))
AgVABurnoutGeocentric;
    // [ default ] interface _IAgVABurnoutGeocentric
    // interface IAgVABurnout
    // interface IAgVABurnoutGeocentric

struct __declspec(uuid("4a29afc1-7c1c-4340-8979-2d7caf11163d"))
_IAgVABurnoutGeocentric : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    double GetRadius ( );
    void PutRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("9c30d083-f86f-43fa-aa03-f52d04ee6880"))
IAgVABurnoutGeocentric : IAgVABurnout
{
    //
    // Property data
    //

    __declspec(property(get=GetLatitude,put=PutLatitude))
    _variant_t Latitude;
    __declspec(property(get=GetLongitude,put=PutLongitude))
    _variant_t Longitude;
    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetLatitude ( );
    void PutLatitude (
        const _variant_t & pVal );
    _variant_t GetLongitude ( );
    void PutLongitude (
        const _variant_t & pVal );
    double GetRadius ( );
    void PutRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("badcf67a-1a98-462d-ac6b-ab8ee54065e4"))
AgVABurnoutLaunchAzAlt;
    // [ default ] interface _IAgVABurnoutLaunchAzAlt
    // interface IAgVABurnout
    // interface IAgVABurnoutLaunchAzAlt

struct __declspec(uuid("cdfec3e9-3410-468e-926b-b4a9d28f4660"))
_IAgVABurnoutLaunchAzAlt : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAzimuth,put=PutAzimuth))
    _variant_t Azimuth;
    __declspec(property(get=GetDownRangeDist,put=PutDownRangeDist))
    double DownRangeDist;
    __declspec(property(get=GetAltitudeRadius,put=PutAltitudeRadius))
    double AltitudeRadius;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetAzimuth ( );
    void PutAzimuth (
        const _variant_t & pVal );
    double GetDownRangeDist ( );
    void PutDownRangeDist (
        double pVal );
    double GetAltitudeRadius ( );
    void PutAltitudeRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Azimuth (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Azimuth (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DownRangeDist (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DownRangeDist (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AltitudeRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AltitudeRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("6f4da0e6-a973-4298-b431-c14c7651e043"))
IAgVABurnoutLaunchAzAlt : IAgVABurnout
{
    //
    // Property data
    //

    __declspec(property(get=GetAzimuth,put=PutAzimuth))
    _variant_t Azimuth;
    __declspec(property(get=GetDownRangeDist,put=PutDownRangeDist))
    double DownRangeDist;
    __declspec(property(get=GetAltitudeRadius,put=PutAltitudeRadius))
    double AltitudeRadius;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetAzimuth ( );
    void PutAzimuth (
        const _variant_t & pVal );
    double GetDownRangeDist ( );
    void PutDownRangeDist (
        double pVal );
    double GetAltitudeRadius ( );
    void PutAltitudeRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Azimuth (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Azimuth (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DownRangeDist (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DownRangeDist (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AltitudeRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AltitudeRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("5c4a7110-d35d-4f20-bd43-6f292125d862"))
AgVABurnoutLaunchAzRadius;
    // [ default ] interface _IAgVABurnoutLaunchAzRadius
    // interface IAgVABurnout
    // interface IAgVABurnoutLaunchAzRadius

struct __declspec(uuid("93211988-10a4-4bf8-a09e-efb734ed3b83"))
_IAgVABurnoutLaunchAzRadius : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAzimuth,put=PutAzimuth))
    _variant_t Azimuth;
    __declspec(property(get=GetDownRangeDist,put=PutDownRangeDist))
    double DownRangeDist;
    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetAzimuth ( );
    void PutAzimuth (
        const _variant_t & pVal );
    double GetDownRangeDist ( );
    void PutDownRangeDist (
        double pVal );
    double GetRadius ( );
    void PutRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Azimuth (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Azimuth (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DownRangeDist (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DownRangeDist (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("a9b9b63b-a990-4e22-9c6c-9c14eecf4c9a"))
IAgVABurnoutLaunchAzRadius : IAgVABurnout
{
    //
    // Property data
    //

    __declspec(property(get=GetAzimuth,put=PutAzimuth))
    _variant_t Azimuth;
    __declspec(property(get=GetDownRangeDist,put=PutDownRangeDist))
    double DownRangeDist;
    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetAzimuth ( );
    void PutAzimuth (
        const _variant_t & pVal );
    double GetDownRangeDist ( );
    void PutDownRangeDist (
        double pVal );
    double GetRadius ( );
    void PutRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Azimuth (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Azimuth (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DownRangeDist (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DownRangeDist (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("be71ed6f-f9c7-40d8-8008-f3eb3a76b14c"))
AgVABurnoutVelocity;
    // [ default ] interface _IAgVABurnoutVelocity
    // interface IAgVABurnoutVelocity

struct __declspec(uuid("966b0c00-7613-4f05-9ae2-d1dbbe436cb2"))
_IAgVABurnoutVelocity : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBurnoutOption,put=PutBurnoutOption))
    enum AgEVABurnoutOptions BurnoutOption;
    __declspec(property(get=GetFixedVelocity,put=PutFixedVelocity))
    double FixedVelocity;
    __declspec(property(get=GetInertialVelocity,put=PutInertialVelocity))
    double InertialVelocity;
    __declspec(property(get=GetInertialVelocityAzimuth,put=PutInertialVelocityAzimuth))
    _variant_t InertialVelocityAzimuth;
    __declspec(property(get=GetInertialHorizontalFPA,put=PutInertialHorizontalFPA))
    _variant_t InertialHorizontalFPA;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVABurnoutOptions GetBurnoutOption ( );
    void PutBurnoutOption (
        enum AgEVABurnoutOptions pVal );
    double GetFixedVelocity ( );
    void PutFixedVelocity (
        double pVal );
    double GetInertialVelocity ( );
    void PutInertialVelocity (
        double pVal );
    _variant_t GetInertialVelocityAzimuth ( );
    void PutInertialVelocityAzimuth (
        const _variant_t & pVal );
    _variant_t GetInertialHorizontalFPA ( );
    void PutInertialHorizontalFPA (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BurnoutOption (
        /*[out,retval]*/ enum AgEVABurnoutOptions * pVal ) = 0;
      virtual HRESULT __stdcall put_BurnoutOption (
        /*[in]*/ enum AgEVABurnoutOptions pVal ) = 0;
      virtual HRESULT __stdcall get_FixedVelocity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FixedVelocity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_InertialVelocity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_InertialVelocity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_InertialVelocityAzimuth (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_InertialVelocityAzimuth (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_InertialHorizontalFPA (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_InertialHorizontalFPA (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("0d6edfed-020c-4c9d-bb20-0587ccc9ccd6"))
AgVAMCSFollow;
    // [ default ] interface _IAgVAMCSFollow
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgVAMCSFollow
    // interface IAgComponentInfo
    // interface IAgCloneable

enum AgEVAFollowJoin
{
    eVAFollowJoinSpecify = 0,
    eVAFollowJoinAtBeginning = 1,
    eVAFollowJoinAtEnd = 2,
    eVAFollowJoinAtFinalEpochOfPreviousSeg = 3
};

enum AgEVAFollowSeparation
{
    eVAFollowSeparationSpecify = 0,
    eVAFollowSeparationAtEndOfLeadersEphem = 1
};

enum AgEVAFollowSpacecraftAndFuelTank
{
    eVAFollowSpacecraftAndFuelTankSpecify = 0,
    eVAFollowSpacecraftAndFuelTankInherit = 1,
    eVAFollowSpacecraftAndFuelTankLeader = 2
};

enum AgEVAControlFollow
{
    eVAControlFollowFuelMass = 200,
    eVAControlFollowCd = 201,
    eVAControlFollowCr = 202,
    eVAControlFollowDragArea = 203,
    eVAControlFollowDryMass = 204,
    eVAControlFollowFuelDensity = 205,
    eVAControlFollowK1 = 206,
    eVAControlFollowK2 = 207,
    eVAControlFollowRadiationPressureArea = 208,
    eVAControlFollowCk = 209,
    eVAControlFollowSRPArea = 210,
    eVAControlFollowTankPressure = 211,
    eVAControlFollowTankTemp = 212,
    eVAControlFollowMaxFuelMass = 213,
    eVAControlFollowTankVolume = 214,
    eVAControlFollowXOffset = 215,
    eVAControlFollowYOffset = 216,
    eVAControlFollowZOffset = 217
};

struct __declspec(uuid("f1567780-08ba-4e8a-8d36-6f9a76817cdc"))
_IAgVAMCSFollow : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLeader))
    STKObjects::IAgLinkToObjectPtr Leader;
    __declspec(property(get=GetXOffset,put=PutXOffset))
    double XOffset;
    __declspec(property(get=GetYOffset,put=PutYOffset))
    double YOffset;
    __declspec(property(get=GetZOffset,put=PutZOffset))
    double ZOffset;
    __declspec(property(get=GetSeparationConditions))
    IAgVAStoppingConditionCollectionPtr SeparationConditions;
    __declspec(property(get=GetSpacecraftParameters))
    IAgVASpacecraftParametersPtr SpacecraftParameters;
    __declspec(property(get=GetFuelTank))
    IAgVAFuelTankPtr FuelTank;
    __declspec(property(get=GetJoiningType,put=PutJoiningType))
    enum AgEVAFollowJoin JoiningType;
    __declspec(property(get=GetSeparationType,put=PutSeparationType))
    enum AgEVAFollowSeparation SeparationType;
    __declspec(property(get=GetSpacecraftAndFuelTankType,put=PutSpacecraftAndFuelTankType))
    enum AgEVAFollowSpacecraftAndFuelTank SpacecraftAndFuelTankType;
    __declspec(property(get=GetJoiningConditions))
    IAgVAStoppingConditionCollectionPtr JoiningConditions;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetUserVariables))
    IAgVAUserVariableCollectionPtr UserVariables;
    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    STKObjects::IAgLinkToObjectPtr GetLeader ( );
    double GetXOffset ( );
    void PutXOffset (
        double pVal );
    double GetYOffset ( );
    void PutYOffset (
        double pVal );
    double GetZOffset ( );
    void PutZOffset (
        double pVal );
    IAgVAStoppingConditionCollectionPtr GetSeparationConditions ( );
    IAgVASpacecraftParametersPtr GetSpacecraftParameters ( );
    IAgVAFuelTankPtr GetFuelTank ( );
    enum AgEVAFollowJoin GetJoiningType ( );
    void PutJoiningType (
        enum AgEVAFollowJoin pVal );
    enum AgEVAFollowSeparation GetSeparationType ( );
    void PutSeparationType (
        enum AgEVAFollowSeparation pVal );
    enum AgEVAFollowSpacecraftAndFuelTank GetSpacecraftAndFuelTankType ( );
    void PutSpacecraftAndFuelTankType (
        enum AgEVAFollowSpacecraftAndFuelTank pVal );
    IAgVAStoppingConditionCollectionPtr GetJoiningConditions ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlFollow Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlFollow Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlFollow Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    IAgVAUserVariableCollectionPtr GetUserVariables ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Leader (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
      virtual HRESULT __stdcall get_XOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_XOffset (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_YOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_YOffset (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ZOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ZOffset (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SeparationConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppVAStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_SpacecraftParameters (
        /*[out,retval]*/ struct IAgVASpacecraftParameters * * ppVASpacecraftParameters ) = 0;
      virtual HRESULT __stdcall get_FuelTank (
        /*[out,retval]*/ struct IAgVAFuelTank * * ppVAFuelTank ) = 0;
      virtual HRESULT __stdcall get_JoiningType (
        /*[out,retval]*/ enum AgEVAFollowJoin * pVal ) = 0;
      virtual HRESULT __stdcall put_JoiningType (
        /*[in]*/ enum AgEVAFollowJoin pVal ) = 0;
      virtual HRESULT __stdcall get_SeparationType (
        /*[out,retval]*/ enum AgEVAFollowSeparation * pVal ) = 0;
      virtual HRESULT __stdcall put_SeparationType (
        /*[in]*/ enum AgEVAFollowSeparation pVal ) = 0;
      virtual HRESULT __stdcall get_SpacecraftAndFuelTankType (
        /*[out,retval]*/ enum AgEVAFollowSpacecraftAndFuelTank * pVal ) = 0;
      virtual HRESULT __stdcall put_SpacecraftAndFuelTankType (
        /*[in]*/ enum AgEVAFollowSpacecraftAndFuelTank pVal ) = 0;
      virtual HRESULT __stdcall get_JoiningConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppVAStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlFollow Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlFollow Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlFollow Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_UserVariables (
        /*[out,retval]*/ struct IAgVAUserVariableCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("f10e7c62-1a73-40c6-af64-d1b280f72b5c"))
IAgVAMCSFollow : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetLeader))
    STKObjects::IAgLinkToObjectPtr Leader;
    __declspec(property(get=GetXOffset,put=PutXOffset))
    double XOffset;
    __declspec(property(get=GetYOffset,put=PutYOffset))
    double YOffset;
    __declspec(property(get=GetZOffset,put=PutZOffset))
    double ZOffset;
    __declspec(property(get=GetSeparationConditions))
    IAgVAStoppingConditionCollectionPtr SeparationConditions;
    __declspec(property(get=GetSpacecraftParameters))
    IAgVASpacecraftParametersPtr SpacecraftParameters;
    __declspec(property(get=GetFuelTank))
    IAgVAFuelTankPtr FuelTank;
    __declspec(property(get=GetJoiningType,put=PutJoiningType))
    enum AgEVAFollowJoin JoiningType;
    __declspec(property(get=GetSeparationType,put=PutSeparationType))
    enum AgEVAFollowSeparation SeparationType;
    __declspec(property(get=GetSpacecraftAndFuelTankType,put=PutSpacecraftAndFuelTankType))
    enum AgEVAFollowSpacecraftAndFuelTank SpacecraftAndFuelTankType;
    __declspec(property(get=GetJoiningConditions))
    IAgVAStoppingConditionCollectionPtr JoiningConditions;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetUserVariables))
    IAgVAUserVariableCollectionPtr UserVariables;

    //
    // Wrapper methods for error-handling
    //

    STKObjects::IAgLinkToObjectPtr GetLeader ( );
    double GetXOffset ( );
    void PutXOffset (
        double pVal );
    double GetYOffset ( );
    void PutYOffset (
        double pVal );
    double GetZOffset ( );
    void PutZOffset (
        double pVal );
    IAgVAStoppingConditionCollectionPtr GetSeparationConditions ( );
    IAgVASpacecraftParametersPtr GetSpacecraftParameters ( );
    IAgVAFuelTankPtr GetFuelTank ( );
    enum AgEVAFollowJoin GetJoiningType ( );
    void PutJoiningType (
        enum AgEVAFollowJoin pVal );
    enum AgEVAFollowSeparation GetSeparationType ( );
    void PutSeparationType (
        enum AgEVAFollowSeparation pVal );
    enum AgEVAFollowSpacecraftAndFuelTank GetSpacecraftAndFuelTankType ( );
    void PutSpacecraftAndFuelTankType (
        enum AgEVAFollowSpacecraftAndFuelTank pVal );
    IAgVAStoppingConditionCollectionPtr GetJoiningConditions ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlFollow Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlFollow Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlFollow Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    IAgVAUserVariableCollectionPtr GetUserVariables ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Leader (
        /*[out,retval]*/ struct STKObjects::IAgLinkToObject * * ppLinkToObject ) = 0;
      virtual HRESULT __stdcall get_XOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_XOffset (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_YOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_YOffset (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ZOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ZOffset (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SeparationConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppVAStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_SpacecraftParameters (
        /*[out,retval]*/ struct IAgVASpacecraftParameters * * ppVASpacecraftParameters ) = 0;
      virtual HRESULT __stdcall get_FuelTank (
        /*[out,retval]*/ struct IAgVAFuelTank * * ppVAFuelTank ) = 0;
      virtual HRESULT __stdcall get_JoiningType (
        /*[out,retval]*/ enum AgEVAFollowJoin * pVal ) = 0;
      virtual HRESULT __stdcall put_JoiningType (
        /*[in]*/ enum AgEVAFollowJoin pVal ) = 0;
      virtual HRESULT __stdcall get_SeparationType (
        /*[out,retval]*/ enum AgEVAFollowSeparation * pVal ) = 0;
      virtual HRESULT __stdcall put_SeparationType (
        /*[in]*/ enum AgEVAFollowSeparation pVal ) = 0;
      virtual HRESULT __stdcall get_SpacecraftAndFuelTankType (
        /*[out,retval]*/ enum AgEVAFollowSpacecraftAndFuelTank * pVal ) = 0;
      virtual HRESULT __stdcall put_SpacecraftAndFuelTankType (
        /*[in]*/ enum AgEVAFollowSpacecraftAndFuelTank pVal ) = 0;
      virtual HRESULT __stdcall get_JoiningConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppVAStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlFollow Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlFollow Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlFollow Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_UserVariables (
        /*[out,retval]*/ struct IAgVAUserVariableCollection * * ppRetVal ) = 0;
};

struct __declspec(uuid("5a1a14aa-b6c4-45a8-9a4e-e96e88e14435"))
AgVAMCSManeuver;
    // [ default ] interface _IAgVAMCSManeuver
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgVAMCSManeuver
    // interface IAgComponentInfo
    // interface IAgCloneable

enum AgEVAManeuverType
{
    eVAManeuverTypeImpulsive = 0,
    eVAManeuverTypeFinite = 1
};

enum AgEVAAttitudeControl
{
    eVAAttitudeControlVelocityVector = 0,
    eVAAttitudeControlAntiVelocityVector = 1,
    eVAAttitudeControlAttitude = 2,
    eVAAttitudeControlFile = 3,
    eVAAttitudeControlThrustVector = 4,
    eVAAttitudeControlPlugin = 5,
    eVAAttitudeControlTimeVarying = 6
};

enum AgEVABodyAxis
{
    eVABodyAxisPlusX = 0,
    eVABodyAxisPlusY = 1,
    eVABodyAxisPlusZ = 2,
    eVABodyAxisMinusX = 3,
    eVABodyAxisMinusY = 4,
    eVABodyAxisMinusZ = 5
};

enum AgEVAConstraintSign
{
    eVAConstraintSignPlus = 0,
    eVAConstraintSignMinus = 1
};

enum AgEVACustomFunction
{
    eVAEnablePageDefintion = 0,
    eVAEnableManeuverAttitude = 1
};

struct __declspec(uuid("69309e0a-23ba-4bd9-987f-98b9fe65701a"))
IAgVAAttitudeControl : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
};

enum AgEVAPropulsionMethod
{
    eVAPropulsionMethodEngineModel = 0,
    eVAPropulsionMethodThrusterSet = 1
};

struct __declspec(uuid("36c51743-2127-484a-bdec-e30ef6765101"))
IAgVAManeuver : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAttitudeControlType))
    enum AgEVAAttitudeControl AttitudeControlType;
    __declspec(property(get=GetAttitudeControl))
    IAgVAAttitudeControlPtr AttitudeControl;
    __declspec(property(get=GetUpdateMass,put=PutUpdateMass))
    VARIANT_BOOL UpdateMass;
    __declspec(property(get=GetPropulsionMethod))
    enum AgEVAPropulsionMethod PropulsionMethod;
    __declspec(property(get=GetPropulsionMethodValue))
    _bstr_t PropulsionMethodValue;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAAttitudeControl GetAttitudeControlType ( );
    HRESULT SetAttitudeControlType (
        enum AgEVAAttitudeControl AttitudeControlType );
    IAgVAAttitudeControlPtr GetAttitudeControl ( );
    VARIANT_BOOL GetUpdateMass ( );
    void PutUpdateMass (
        VARIANT_BOOL pVal );
    enum AgEVAPropulsionMethod GetPropulsionMethod ( );
    HRESULT SetPropulsionMethod (
        enum AgEVAPropulsionMethod PropulsionMethod,
        _bstr_t Value );
    _bstr_t GetPropulsionMethodValue ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AttitudeControlType (
        /*[out,retval]*/ enum AgEVAAttitudeControl * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetAttitudeControlType (
        /*[in]*/ enum AgEVAAttitudeControl AttitudeControlType ) = 0;
      virtual HRESULT __stdcall get_AttitudeControl (
        /*[out,retval]*/ struct IAgVAAttitudeControl * * ppVAAttitudeControl ) = 0;
      virtual HRESULT __stdcall get_UpdateMass (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdateMass (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_PropulsionMethod (
        /*[out,retval]*/ enum AgEVAPropulsionMethod * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetPropulsionMethod (
        /*[in]*/ enum AgEVAPropulsionMethod PropulsionMethod,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_PropulsionMethodValue (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

enum AgEVAControlManeuver
{
    eVAControlManeuverFiniteCartesianX = 400,
    eVAControlManeuverFiniteCartesianY = 401,
    eVAControlManeuverFiniteCartesianZ = 402,
    eVAControlManeuverFiniteEulerAngles1 = 403,
    eVAControlManeuverFiniteEulerAngles2 = 404,
    eVAControlManeuverFiniteEulerAngles3 = 405,
    eVAControlManeuverFiniteSphericalAz = 406,
    eVAControlManeuverFiniteSphericalElev = 407,
    eVAControlManeuverImpulsiveCartesianX = 408,
    eVAControlManeuverImpulsiveCartesianY = 409,
    eVAControlManeuverImpulsiveCartesianZ = 410,
    eVAControlManeuverImpulsiveEulerAngles1 = 411,
    eVAControlManeuverImpulsiveEulerAngles2 = 412,
    eVAControlManeuverImpulsiveEulerAngles3 = 413,
    eVAControlManeuverImpulsiveSphericalAz = 414,
    eVAControlManeuverImpulsiveSphericalElev = 415,
    eVAControlManeuverImpulsiveSphericalMag = 416,
    eVAControlManeuverFiniteBurnCenterBias = 417,
    eVAControlManeuverFiniteThrustEfficiency = 418,
    eVAControlManeuverFiniteAz0 = 419,
    eVAControlManeuverFiniteAz1 = 420,
    eVAControlManeuverFiniteAz2 = 421,
    eVAControlManeuverFiniteAz3 = 422,
    eVAControlManeuverFiniteAz4 = 423,
    eVAControlManeuverFiniteAzA = 424,
    eVAControlManeuverFiniteAzF = 425,
    eVAControlManeuverFiniteAzP = 426,
    eVAControlManeuverFiniteEl0 = 427,
    eVAControlManeuverFiniteEl1 = 428,
    eVAControlManeuverFiniteEl2 = 429,
    eVAControlManeuverFiniteEl3 = 430,
    eVAControlManeuverFiniteEl4 = 431,
    eVAControlManeuverFiniteElA = 432,
    eVAControlManeuverFiniteElF = 433,
    eVAControlManeuverFiniteElP = 434
};

struct __declspec(uuid("e2569a8f-2820-427c-91ff-c4ff98687d13"))
_IAgVAMCSManeuver : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetManeuverType))
    enum AgEVAManeuverType ManeuverType;
    __declspec(property(get=GetManeuver))
    IAgVAManeuverPtr Maneuver;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    enum AgEVAManeuverType GetManeuverType ( );
    HRESULT SetManeuverType (
        enum AgEVAManeuverType ManeuverType );
    IAgVAManeuverPtr GetManeuver ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlManeuver Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlManeuver Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlManeuver Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ManeuverType (
        /*[out,retval]*/ enum AgEVAManeuverType * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetManeuverType (
        /*[in]*/ enum AgEVAManeuverType ManeuverType ) = 0;
      virtual HRESULT __stdcall get_Maneuver (
        /*[out,retval]*/ struct IAgVAManeuver * * ppVAManeuver ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlManeuver Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlManeuver Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlManeuver Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("c5f48f21-a7d5-4b89-8dba-a724dd6e0160"))
IAgVAMCSManeuver : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetManeuverType))
    enum AgEVAManeuverType ManeuverType;
    __declspec(property(get=GetManeuver))
    IAgVAManeuverPtr Maneuver;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAManeuverType GetManeuverType ( );
    HRESULT SetManeuverType (
        enum AgEVAManeuverType ManeuverType );
    IAgVAManeuverPtr GetManeuver ( );
    HRESULT EnableControlParameter (
        enum AgEVAControlManeuver Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlManeuver Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlManeuver Param );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ManeuverType (
        /*[out,retval]*/ enum AgEVAManeuverType * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetManeuverType (
        /*[in]*/ enum AgEVAManeuverType ManeuverType ) = 0;
      virtual HRESULT __stdcall get_Maneuver (
        /*[out,retval]*/ struct IAgVAManeuver * * ppVAManeuver ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlManeuver Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlManeuver Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlManeuver Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("c1e7ccb7-feee-4cd0-8c5d-4c4d848ba92f"))
AgVAManeuverFinite;
    // [ default ] interface _IAgVAManeuverFinite
    // interface IAgVAManeuver
    // interface IAgVAManeuverFinite
    // interface IAgRuntimeTypeInfoProvider

enum AgEVAPressureMode
{
    eVAPressureModeBlowDown = 0,
    eVAPressureModePressureRegulated = 1
};

enum AgEVAThrustType
{
    eVAThrustTypeAffectsAccelAndMassFlow = 0,
    eVAThrustTypeAffectsAccelOnly = 1
};

struct __declspec(uuid("68b1bf77-52a1-4e31-b11a-4dc3c87abd5c"))
IAgVAManeuverFinitePropagator : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetPropagatorName,put=PutPropagatorName))
    _bstr_t PropagatorName;
    __declspec(property(get=GetEnableCenterBurn,put=PutEnableCenterBurn))
    VARIANT_BOOL EnableCenterBurn;
    __declspec(property(get=GetStoppingConditions))
    IAgVAStoppingConditionCollectionPtr StoppingConditions;
    __declspec(property(get=GetMinPropagationTime,put=PutMinPropagationTime))
    double MinPropagationTime;
    __declspec(property(get=GetBias,put=PutBias))
    double Bias;
    __declspec(property(get=GetMaxPropagationTime,put=PutMaxPropagationTime))
    double MaxPropagationTime;
    __declspec(property(get=GetEnableMaxPropagationTime,put=PutEnableMaxPropagationTime))
    VARIANT_BOOL EnableMaxPropagationTime;
    __declspec(property(get=GetEnableWarningMessage,put=PutEnableWarningMessage))
    VARIANT_BOOL EnableWarningMessage;
    __declspec(property(get=GetOverrideMaxPropagationTime,put=PutOverrideMaxPropagationTime))
    VARIANT_BOOL OverrideMaxPropagationTime;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPropagatorName ( );
    void PutPropagatorName (
        _bstr_t pVal );
    IAgVAStoppingConditionCollectionPtr GetStoppingConditions ( );
    double GetMinPropagationTime ( );
    void PutMinPropagationTime (
        double pVal );
    double GetMaxPropagationTime ( );
    void PutMaxPropagationTime (
        double pVal );
    VARIANT_BOOL GetEnableMaxPropagationTime ( );
    void PutEnableMaxPropagationTime (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableWarningMessage ( );
    void PutEnableWarningMessage (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableCenterBurn ( );
    void PutEnableCenterBurn (
        VARIANT_BOOL pVal );
    double GetBias ( );
    void PutBias (
        double pVal );
    VARIANT_BOOL GetOverrideMaxPropagationTime ( );
    void PutOverrideMaxPropagationTime (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PropagatorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PropagatorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_StoppingConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppVAStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_MinPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EnableMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableWarningMessage (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableWarningMessage (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableCenterBurn (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableCenterBurn (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Bias (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Bias (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_OverrideMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_OverrideMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("82c69871-c46b-472e-96ea-cd073b074776"))
_IAgVAManeuverFinite : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAttitudeControlType))
    enum AgEVAAttitudeControl AttitudeControlType;
    __declspec(property(get=GetAttitudeControl))
    IAgVAAttitudeControlPtr AttitudeControl;
    __declspec(property(get=GetUpdateMass,put=PutUpdateMass))
    VARIANT_BOOL UpdateMass;
    __declspec(property(get=GetPropulsionMethod))
    enum AgEVAPropulsionMethod PropulsionMethod;
    __declspec(property(get=GetPropulsionMethodValue))
    _bstr_t PropulsionMethodValue;
    __declspec(property(get=GetPressureMode,put=PutPressureMode))
    enum AgEVAPressureMode PressureMode;
    __declspec(property(get=GetThrustEfficiency,put=PutThrustEfficiency))
    double ThrustEfficiency;
    __declspec(property(get=GetThrustEfficiencyMode,put=PutThrustEfficiencyMode))
    enum AgEVAThrustType ThrustEfficiencyMode;
    __declspec(property(get=GetPropagator))
    IAgVAManeuverFinitePropagatorPtr Propagator;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAAttitudeControl GetAttitudeControlType ( );
    HRESULT SetAttitudeControlType (
        enum AgEVAAttitudeControl AttitudeControlType );
    IAgVAAttitudeControlPtr GetAttitudeControl ( );
    VARIANT_BOOL GetUpdateMass ( );
    void PutUpdateMass (
        VARIANT_BOOL pVal );
    enum AgEVAPropulsionMethod GetPropulsionMethod ( );
    HRESULT SetPropulsionMethod (
        enum AgEVAPropulsionMethod PropulsionMethod,
        _bstr_t Value );
    _bstr_t GetPropulsionMethodValue ( );
    enum AgEVAPressureMode GetPressureMode ( );
    void PutPressureMode (
        enum AgEVAPressureMode pVal );
    double GetThrustEfficiency ( );
    void PutThrustEfficiency (
        double pVal );
    enum AgEVAThrustType GetThrustEfficiencyMode ( );
    void PutThrustEfficiencyMode (
        enum AgEVAThrustType pVal );
    IAgVAManeuverFinitePropagatorPtr GetPropagator ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AttitudeControlType (
        /*[out,retval]*/ enum AgEVAAttitudeControl * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetAttitudeControlType (
        /*[in]*/ enum AgEVAAttitudeControl AttitudeControlType ) = 0;
      virtual HRESULT __stdcall get_AttitudeControl (
        /*[out,retval]*/ struct IAgVAAttitudeControl * * ppVAAttitudeControl ) = 0;
      virtual HRESULT __stdcall get_UpdateMass (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdateMass (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_PropulsionMethod (
        /*[out,retval]*/ enum AgEVAPropulsionMethod * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetPropulsionMethod (
        /*[in]*/ enum AgEVAPropulsionMethod PropulsionMethod,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_PropulsionMethodValue (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PressureMode (
        /*[out,retval]*/ enum AgEVAPressureMode * pVal ) = 0;
      virtual HRESULT __stdcall put_PressureMode (
        /*[in]*/ enum AgEVAPressureMode pVal ) = 0;
      virtual HRESULT __stdcall get_ThrustEfficiency (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrustEfficiency (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ThrustEfficiencyMode (
        /*[out,retval]*/ enum AgEVAThrustType * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrustEfficiencyMode (
        /*[in]*/ enum AgEVAThrustType pVal ) = 0;
      virtual HRESULT __stdcall get_Propagator (
        /*[out,retval]*/ struct IAgVAManeuverFinitePropagator * * pVAManeuverFinitePropagator ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("5820dc57-ba88-4f17-93a8-80952a38ac9d"))
IAgVAManeuverFinite : IAgVAManeuver
{
    //
    // Property data
    //

    __declspec(property(get=GetPressureMode,put=PutPressureMode))
    enum AgEVAPressureMode PressureMode;
    __declspec(property(get=GetPropagator))
    IAgVAManeuverFinitePropagatorPtr Propagator;
    __declspec(property(get=GetThrustEfficiency,put=PutThrustEfficiency))
    double ThrustEfficiency;
    __declspec(property(get=GetThrustEfficiencyMode,put=PutThrustEfficiencyMode))
    enum AgEVAThrustType ThrustEfficiencyMode;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAPressureMode GetPressureMode ( );
    void PutPressureMode (
        enum AgEVAPressureMode pVal );
    double GetThrustEfficiency ( );
    void PutThrustEfficiency (
        double pVal );
    enum AgEVAThrustType GetThrustEfficiencyMode ( );
    void PutThrustEfficiencyMode (
        enum AgEVAThrustType pVal );
    IAgVAManeuverFinitePropagatorPtr GetPropagator ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PressureMode (
        /*[out,retval]*/ enum AgEVAPressureMode * pVal ) = 0;
      virtual HRESULT __stdcall put_PressureMode (
        /*[in]*/ enum AgEVAPressureMode pVal ) = 0;
      virtual HRESULT __stdcall get_ThrustEfficiency (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrustEfficiency (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ThrustEfficiencyMode (
        /*[out,retval]*/ enum AgEVAThrustType * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrustEfficiencyMode (
        /*[in]*/ enum AgEVAThrustType pVal ) = 0;
      virtual HRESULT __stdcall get_Propagator (
        /*[out,retval]*/ struct IAgVAManeuverFinitePropagator * * ppVAManeuverFinitePropagator ) = 0;
};

struct __declspec(uuid("988cd436-10c1-4412-8502-ff4ba079cf68"))
AgVAManeuverImpulsive;
    // [ default ] interface _IAgVAManeuverImpulsive
    // interface IAgVAManeuver
    // interface IAgVAManeuverImpulsive
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("b22b93ad-f381-4b53-8500-3d15d3c12e53"))
_IAgVAManeuverImpulsive : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAttitudeControlType))
    enum AgEVAAttitudeControl AttitudeControlType;
    __declspec(property(get=GetAttitudeControl))
    IAgVAAttitudeControlPtr AttitudeControl;
    __declspec(property(get=GetUpdateMass,put=PutUpdateMass))
    VARIANT_BOOL UpdateMass;
    __declspec(property(get=GetPropulsionMethod))
    enum AgEVAPropulsionMethod PropulsionMethod;
    __declspec(property(get=GetPropulsionMethodValue))
    _bstr_t PropulsionMethodValue;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAAttitudeControl GetAttitudeControlType ( );
    HRESULT SetAttitudeControlType (
        enum AgEVAAttitudeControl AttitudeControlType );
    IAgVAAttitudeControlPtr GetAttitudeControl ( );
    VARIANT_BOOL GetUpdateMass ( );
    void PutUpdateMass (
        VARIANT_BOOL pVal );
    enum AgEVAPropulsionMethod GetPropulsionMethod ( );
    HRESULT SetPropulsionMethod (
        enum AgEVAPropulsionMethod PropulsionMethod,
        _bstr_t Value );
    _bstr_t GetPropulsionMethodValue ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AttitudeControlType (
        /*[out,retval]*/ enum AgEVAAttitudeControl * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetAttitudeControlType (
        /*[in]*/ enum AgEVAAttitudeControl AttitudeControlType ) = 0;
      virtual HRESULT __stdcall get_AttitudeControl (
        /*[out,retval]*/ struct IAgVAAttitudeControl * * ppVAAttitudeControl ) = 0;
      virtual HRESULT __stdcall get_UpdateMass (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdateMass (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_PropulsionMethod (
        /*[out,retval]*/ enum AgEVAPropulsionMethod * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetPropulsionMethod (
        /*[in]*/ enum AgEVAPropulsionMethod PropulsionMethod,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_PropulsionMethodValue (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("d32ff39a-342b-4595-9b71-933e43f3c4a7"))
IAgVAManeuverImpulsive : IAgVAManeuver
{};

struct __declspec(uuid("2856b841-ccee-42e9-aebe-73621f9e6fb5"))
AgVAAttitudeControlImpulsiveVelocityVector;
    // [ default ] interface _IAgVAAttitudeControlImpulsiveVelocityVector
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlImpulsive
    // interface IAgVAAttitudeControlImpulsiveVelocityVector
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("f0a9fff7-dd78-4b31-bfb1-9c1ceb10d514"))
_IAgVAAttitudeControlImpulsiveVelocityVector : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetDeltaVMagnitude,put=PutDeltaVMagnitude))
    double DeltaVMagnitude;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    double GetDeltaVMagnitude ( );
    void PutDeltaVMagnitude (
        double pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall get_DeltaVMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DeltaVMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
};

struct __declspec(uuid("f5aa0750-1cfb-4170-a3fa-cdbda8f68eb4"))
IAgVAAttitudeControlImpulsive : IAgVAAttitudeControl
{};

struct __declspec(uuid("2ca3bec1-08f2-41a6-92aa-d3b0c36fb49d"))
IAgVAAttitudeControlImpulsiveVelocityVector : IAgVAAttitudeControlImpulsive
{
    //
    // Property data
    //

    __declspec(property(get=GetDeltaVMagnitude,put=PutDeltaVMagnitude))
    double DeltaVMagnitude;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;

    //
    // Wrapper methods for error-handling
    //

    double GetDeltaVMagnitude ( );
    void PutDeltaVMagnitude (
        double pVal );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DeltaVMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DeltaVMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
};

struct __declspec(uuid("be16ebd3-6c84-4ab0-8c9a-d8c6836a9fb9"))
AgVAAttitudeControlImpulsiveAntiVelocityVector;
    // [ default ] interface _IAgVAAttitudeControlImpulsiveAntiVelocityVector
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlImpulsive
    // interface IAgVAAttitudeControlImpulsiveAntiVelocityVector
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("6daf1259-c851-4aa8-a183-1f947d14bdb5"))
_IAgVAAttitudeControlImpulsiveAntiVelocityVector : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetDeltaVMagnitude,put=PutDeltaVMagnitude))
    double DeltaVMagnitude;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    double GetDeltaVMagnitude ( );
    void PutDeltaVMagnitude (
        double pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall get_DeltaVMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DeltaVMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
};

struct __declspec(uuid("75fc3e3e-8d31-4b76-9470-7e822f33e8e4"))
IAgVAAttitudeControlImpulsiveAntiVelocityVector : IAgVAAttitudeControlImpulsive
{
    //
    // Property data
    //

    __declspec(property(get=GetDeltaVMagnitude,put=PutDeltaVMagnitude))
    double DeltaVMagnitude;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;

    //
    // Wrapper methods for error-handling
    //

    double GetDeltaVMagnitude ( );
    void PutDeltaVMagnitude (
        double pVal );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DeltaVMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DeltaVMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
};

struct __declspec(uuid("28bc24c6-48f5-4370-8359-ad86e6b7caf4"))
AgVAAttitudeControlImpulsiveAttitude;
    // [ default ] interface _IAgVAAttitudeControlImpulsiveAttitude
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlImpulsive
    // interface IAgVAAttitudeControlImpulsiveAttitude
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("7b6f5625-9511-4ab1-ba89-34acaeea3dfd"))
_IAgVAAttitudeControlImpulsiveAttitude : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetDeltaVMagnitude,put=PutDeltaVMagnitude))
    double DeltaVMagnitude;
    __declspec(property(get=GetRefAxesName,put=PutRefAxesName))
    _bstr_t RefAxesName;
    __declspec(property(get=GetOrientation))
    STKUtil::IAgOrientationPtr Orientation;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    double GetDeltaVMagnitude ( );
    void PutDeltaVMagnitude (
        double pVal );
    _bstr_t GetRefAxesName ( );
    void PutRefAxesName (
        _bstr_t pVal );
    STKUtil::IAgOrientationPtr GetOrientation ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall get_DeltaVMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DeltaVMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RefAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RefAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ struct STKUtil::IAgOrientation * * ppOrientation ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("6de0ebf2-e350-41c7-810a-d000b8c5bc63"))
IAgVAAttitudeControlImpulsiveAttitude : IAgVAAttitudeControlImpulsive
{
    //
    // Property data
    //

    __declspec(property(get=GetDeltaVMagnitude,put=PutDeltaVMagnitude))
    double DeltaVMagnitude;
    __declspec(property(get=GetRefAxesName,put=PutRefAxesName))
    _bstr_t RefAxesName;
    __declspec(property(get=GetOrientation))
    STKUtil::IAgOrientationPtr Orientation;

    //
    // Wrapper methods for error-handling
    //

    double GetDeltaVMagnitude ( );
    void PutDeltaVMagnitude (
        double pVal );
    _bstr_t GetRefAxesName ( );
    void PutRefAxesName (
        _bstr_t pVal );
    STKUtil::IAgOrientationPtr GetOrientation ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DeltaVMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DeltaVMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_RefAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RefAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ struct STKUtil::IAgOrientation * * ppOrientation ) = 0;
};

struct __declspec(uuid("ca9cc82c-de5f-4c73-973e-a89029146cf9"))
AgVAAttitudeControlImpulsiveFile;
    // [ default ] interface _IAgVAAttitudeControlImpulsiveFile
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlImpulsive
    // interface IAgVAAttitudeControlImpulsiveFile
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("58407b07-b6ff-4554-84ac-bae1ba9b88c3"))
_IAgVAAttitudeControlImpulsiveFile : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetFullFilename))
    _bstr_t FullFilename;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetDeltaVMagnitude,put=PutDeltaVMagnitude))
    double DeltaVMagnitude;
    __declspec(property(get=GetFilename,put=PutFilename))
    _bstr_t Filename;
    __declspec(property(get=GetFileTimeOffset,put=PutFileTimeOffset))
    double FileTimeOffset;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    double GetDeltaVMagnitude ( );
    void PutDeltaVMagnitude (
        double pVal );
    _bstr_t GetFilename ( );
    void PutFilename (
        _bstr_t pVal );
    double GetFileTimeOffset ( );
    void PutFileTimeOffset (
        double pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    _bstr_t GetFullFilename ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall get_DeltaVMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DeltaVMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Filename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Filename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_FileTimeOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FileTimeOffset (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FullFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("db644e30-08ed-4ebd-9b80-b8a903f62098"))
IAgVAAttitudeControlImpulsiveFile : IAgVAAttitudeControlImpulsive
{
    //
    // Property data
    //

    __declspec(property(get=GetDeltaVMagnitude,put=PutDeltaVMagnitude))
    double DeltaVMagnitude;
    __declspec(property(get=GetFilename,put=PutFilename))
    _bstr_t Filename;
    __declspec(property(get=GetFileTimeOffset,put=PutFileTimeOffset))
    double FileTimeOffset;
    __declspec(property(get=GetFullFilename))
    _bstr_t FullFilename;

    //
    // Wrapper methods for error-handling
    //

    double GetDeltaVMagnitude ( );
    void PutDeltaVMagnitude (
        double pVal );
    _bstr_t GetFilename ( );
    void PutFilename (
        _bstr_t pVal );
    double GetFileTimeOffset ( );
    void PutFileTimeOffset (
        double pVal );
    _bstr_t GetFullFilename ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DeltaVMagnitude (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_DeltaVMagnitude (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Filename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Filename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_FileTimeOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FileTimeOffset (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_FullFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("cba31ee0-41db-4514-82de-5571443fc499"))
AgVAAttitudeControlImpulsiveThrustVector;
    // [ default ] interface _IAgVAAttitudeControlImpulsiveThrustVector
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlImpulsive
    // interface IAgVAAttitudeControlImpulsiveThrustVector
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("641da036-465c-4a41-8b7e-b07701dcf9be"))
_IAgVAAttitudeControlImpulsiveThrustVector : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetThrustAxesName,put=PutThrustAxesName))
    _bstr_t ThrustAxesName;
    __declspec(property(get=GetPosition))
    STKUtil::IAgPositionPtr Position;
    __declspec(property(get=GetDeltaVVector))
    STKUtil::IAgPositionPtr DeltaVVector;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;
    __declspec(property(get=GetAllowNegativeSphericalMagnitude,put=PutAllowNegativeSphericalMagnitude))
    VARIANT_BOOL AllowNegativeSphericalMagnitude;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    _bstr_t GetThrustAxesName ( );
    void PutThrustAxesName (
        _bstr_t pVal );
    STKUtil::IAgPositionPtr GetPosition ( );
    STKUtil::IAgPositionPtr GetDeltaVVector ( );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    VARIANT_BOOL GetAllowNegativeSphericalMagnitude ( );
    void PutAllowNegativeSphericalMagnitude (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall get_ThrustAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrustAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ struct STKUtil::IAgPosition * * ppPosition ) = 0;
      virtual HRESULT __stdcall get_DeltaVVector (
        /*[out,retval]*/ struct STKUtil::IAgPosition * * ppPosition ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_AllowNegativeSphericalMagnitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_AllowNegativeSphericalMagnitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("72c4b693-c4ec-4146-be7a-0a43b782e9b2"))
IAgVAAttitudeControlImpulsiveThrustVector : IAgVAAttitudeControlImpulsive
{
    //
    // Property data
    //

    __declspec(property(get=GetThrustAxesName,put=PutThrustAxesName))
    _bstr_t ThrustAxesName;
    __declspec(property(get=GetPosition))
    STKUtil::IAgPositionPtr Position;
    __declspec(property(get=GetDeltaVVector))
    STKUtil::IAgPositionPtr DeltaVVector;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;
    __declspec(property(get=GetAllowNegativeSphericalMagnitude,put=PutAllowNegativeSphericalMagnitude))
    VARIANT_BOOL AllowNegativeSphericalMagnitude;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetThrustAxesName ( );
    void PutThrustAxesName (
        _bstr_t pVal );
    STKUtil::IAgPositionPtr GetPosition ( );
    STKUtil::IAgPositionPtr GetDeltaVVector ( );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );
    VARIANT_BOOL GetAllowNegativeSphericalMagnitude ( );
    void PutAllowNegativeSphericalMagnitude (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ThrustAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrustAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ struct STKUtil::IAgPosition * * ppDirection ) = 0;
      virtual HRESULT __stdcall get_DeltaVVector (
        /*[out,retval]*/ struct STKUtil::IAgPosition * * ppDirection ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
      virtual HRESULT __stdcall get_AllowNegativeSphericalMagnitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_AllowNegativeSphericalMagnitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("28680ac2-cfa0-4f86-9116-6d0f920d28eb"))
AgVAAttitudeControlFiniteAntiVelocityVector;
    // [ default ] interface _IAgVAAttitudeControlFiniteAntiVelocityVector
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlFinite
    // interface IAgVAAttitudeControlFiniteAntiVelocityVector
    // interface IAgRuntimeTypeInfoProvider

enum AgEVAAttitudeUpdate
{
    eVAAttitudeUpdateDuringBurn = 0,
    eVAAttitudeUpdateInertialAtIgnition = 1,
    eVAAttitudeUpdateInertialAtStart = 2
};

struct __declspec(uuid("53bbcb8d-cfe9-422c-b308-e9c5d3988126"))
_IAgVAAttitudeControlFiniteAntiVelocityVector : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetAttitudeUpdate,put=PutAttitudeUpdate))
    enum AgEVAAttitudeUpdate AttitudeUpdate;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    enum AgEVAAttitudeUpdate GetAttitudeUpdate ( );
    void PutAttitudeUpdate (
        enum AgEVAAttitudeUpdate pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall get_AttitudeUpdate (
        /*[out,retval]*/ enum AgEVAAttitudeUpdate * pVal ) = 0;
      virtual HRESULT __stdcall put_AttitudeUpdate (
        /*[in]*/ enum AgEVAAttitudeUpdate pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
};

struct __declspec(uuid("729db25f-6aed-4a79-aa32-baded5a23070"))
IAgVAAttitudeControlFinite : IAgVAAttitudeControl
{};

struct __declspec(uuid("2f3f4a3c-5383-4ecd-a9e1-001035191726"))
IAgVAAttitudeControlFiniteAntiVelocityVector : IAgVAAttitudeControlFinite
{
    //
    // Property data
    //

    __declspec(property(get=GetAttitudeUpdate,put=PutAttitudeUpdate))
    enum AgEVAAttitudeUpdate AttitudeUpdate;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAAttitudeUpdate GetAttitudeUpdate ( );
    void PutAttitudeUpdate (
        enum AgEVAAttitudeUpdate pVal );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AttitudeUpdate (
        /*[out,retval]*/ enum AgEVAAttitudeUpdate * pVal ) = 0;
      virtual HRESULT __stdcall put_AttitudeUpdate (
        /*[in]*/ enum AgEVAAttitudeUpdate pVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
};

struct __declspec(uuid("1a13fdd3-c969-4be3-aff5-7874d5327c85"))
AgVAAttitudeControlFiniteAttitude;
    // [ default ] interface _IAgVAAttitudeControlFiniteAttitude
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlFinite
    // interface IAgVAAttitudeControlFiniteAttitude
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("a945e12f-3e86-4faf-bfb2-c1a42d2bf0ea"))
_IAgVAAttitudeControlFiniteAttitude : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetAttitudeUpdate,put=PutAttitudeUpdate))
    enum AgEVAAttitudeUpdate AttitudeUpdate;
    __declspec(property(get=GetRefAxesName,put=PutRefAxesName))
    _bstr_t RefAxesName;
    __declspec(property(get=GetOrientation))
    STKUtil::IAgOrientationPtr Orientation;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    enum AgEVAAttitudeUpdate GetAttitudeUpdate ( );
    void PutAttitudeUpdate (
        enum AgEVAAttitudeUpdate pVal );
    _bstr_t GetRefAxesName ( );
    void PutRefAxesName (
        _bstr_t pVal );
    STKUtil::IAgOrientationPtr GetOrientation ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall get_AttitudeUpdate (
        /*[out,retval]*/ enum AgEVAAttitudeUpdate * pVal ) = 0;
      virtual HRESULT __stdcall put_AttitudeUpdate (
        /*[in]*/ enum AgEVAAttitudeUpdate pVal ) = 0;
      virtual HRESULT __stdcall get_RefAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RefAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ struct STKUtil::IAgOrientation * * ppOrientation ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("34271aa0-c9e0-4e9f-be2e-845c9d8d4a3d"))
IAgVAAttitudeControlFiniteAttitude : IAgVAAttitudeControlFinite
{
    //
    // Property data
    //

    __declspec(property(get=GetAttitudeUpdate,put=PutAttitudeUpdate))
    enum AgEVAAttitudeUpdate AttitudeUpdate;
    __declspec(property(get=GetRefAxesName,put=PutRefAxesName))
    _bstr_t RefAxesName;
    __declspec(property(get=GetOrientation))
    STKUtil::IAgOrientationPtr Orientation;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAAttitudeUpdate GetAttitudeUpdate ( );
    void PutAttitudeUpdate (
        enum AgEVAAttitudeUpdate pVal );
    _bstr_t GetRefAxesName ( );
    void PutRefAxesName (
        _bstr_t pVal );
    STKUtil::IAgOrientationPtr GetOrientation ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AttitudeUpdate (
        /*[out,retval]*/ enum AgEVAAttitudeUpdate * pVal ) = 0;
      virtual HRESULT __stdcall put_AttitudeUpdate (
        /*[in]*/ enum AgEVAAttitudeUpdate pVal ) = 0;
      virtual HRESULT __stdcall get_RefAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RefAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ struct STKUtil::IAgOrientation * * ppOrientation ) = 0;
};

struct __declspec(uuid("e3c1e346-e2a3-4527-8d5b-4adc0912e04a"))
AgVAAttitudeControlFiniteFile;
    // [ default ] interface _IAgVAAttitudeControlFiniteFile
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlFinite
    // interface IAgVAAttitudeControlFiniteFile
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("ebe2f99d-7c03-42c0-81bd-d41da60c4dad"))
_IAgVAAttitudeControlFiniteFile : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetFullFilename))
    _bstr_t FullFilename;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetFilename,put=PutFilename))
    _bstr_t Filename;
    __declspec(property(get=GetFileTimeOffset,put=PutFileTimeOffset))
    double FileTimeOffset;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    _bstr_t GetFilename ( );
    void PutFilename (
        _bstr_t pVal );
    double GetFileTimeOffset ( );
    void PutFileTimeOffset (
        double pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    _bstr_t GetFullFilename ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall get_Filename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Filename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_FileTimeOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FileTimeOffset (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FullFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("aac26857-1668-46d8-9fc9-2e60c22cb6ee"))
IAgVAAttitudeControlFiniteFile : IAgVAAttitudeControlFinite
{
    //
    // Property data
    //

    __declspec(property(get=GetFilename,put=PutFilename))
    _bstr_t Filename;
    __declspec(property(get=GetFileTimeOffset,put=PutFileTimeOffset))
    double FileTimeOffset;
    __declspec(property(get=GetFullFilename))
    _bstr_t FullFilename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFilename ( );
    void PutFilename (
        _bstr_t pVal );
    double GetFileTimeOffset ( );
    void PutFileTimeOffset (
        double pVal );
    _bstr_t GetFullFilename ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Filename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Filename (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_FileTimeOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_FileTimeOffset (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_FullFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("1f032e17-2e62-4ca3-b69a-4b8a33e9efc9"))
AgVAAttitudeControlFiniteThrustVector;
    // [ default ] interface _IAgVAAttitudeControlFiniteThrustVector
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlFinite
    // interface IAgVAAttitudeControlFiniteThrustVector
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("1a2b2c5e-6c54-406b-b471-f1181ab9ee36"))
_IAgVAAttitudeControlFiniteThrustVector : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetAttitudeUpdate,put=PutAttitudeUpdate))
    enum AgEVAAttitudeUpdate AttitudeUpdate;
    __declspec(property(get=GetThrustAxesName,put=PutThrustAxesName))
    _bstr_t ThrustAxesName;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;
    __declspec(property(get=GetThrustVector))
    STKUtil::IAgDirectionPtr ThrustVector;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    enum AgEVAAttitudeUpdate GetAttitudeUpdate ( );
    void PutAttitudeUpdate (
        enum AgEVAAttitudeUpdate pVal );
    _bstr_t GetThrustAxesName ( );
    void PutThrustAxesName (
        _bstr_t pVal );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );
    STKUtil::IAgDirectionPtr GetThrustVector ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall get_AttitudeUpdate (
        /*[out,retval]*/ enum AgEVAAttitudeUpdate * pVal ) = 0;
      virtual HRESULT __stdcall put_AttitudeUpdate (
        /*[in]*/ enum AgEVAAttitudeUpdate pVal ) = 0;
      virtual HRESULT __stdcall get_ThrustAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrustAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
      virtual HRESULT __stdcall get_ThrustVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("2104574d-4622-46ee-b220-6a55273a71ba"))
IAgVAAttitudeControlFiniteThrustVector : IAgVAAttitudeControlFinite
{
    //
    // Property data
    //

    __declspec(property(get=GetAttitudeUpdate,put=PutAttitudeUpdate))
    enum AgEVAAttitudeUpdate AttitudeUpdate;
    __declspec(property(get=GetThrustAxesName,put=PutThrustAxesName))
    _bstr_t ThrustAxesName;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;
    __declspec(property(get=GetThrustVector))
    STKUtil::IAgDirectionPtr ThrustVector;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAAttitudeUpdate GetAttitudeUpdate ( );
    void PutAttitudeUpdate (
        enum AgEVAAttitudeUpdate pVal );
    _bstr_t GetThrustAxesName ( );
    void PutThrustAxesName (
        _bstr_t pVal );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );
    STKUtil::IAgDirectionPtr GetThrustVector ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AttitudeUpdate (
        /*[out,retval]*/ enum AgEVAAttitudeUpdate * pVal ) = 0;
      virtual HRESULT __stdcall put_AttitudeUpdate (
        /*[in]*/ enum AgEVAAttitudeUpdate pVal ) = 0;
      virtual HRESULT __stdcall get_ThrustAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrustAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
      virtual HRESULT __stdcall get_ThrustVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
};

struct __declspec(uuid("13478e0f-32de-4406-8fb5-c2922ad9c06e"))
AgVAAttitudeControlFiniteTimeVarying;
    // [ default ] interface _IAgVAAttitudeControlFiniteTimeVarying
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlFinite
    // interface IAgVAAttitudeControlFiniteTimeVarying
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("b2284379-db55-41a4-a416-418b4bd05d93"))
_IAgVAAttitudeControlFiniteTimeVarying : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAz4,put=PutAz4))
    double Az4;
    __declspec(property(get=GetAzA,put=PutAzA))
    double AzA;
    __declspec(property(get=GetElF,put=PutElF))
    double ElF;
    __declspec(property(get=GetElP,put=PutElP))
    double ElP;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetThrustAxesName,put=PutThrustAxesName))
    _bstr_t ThrustAxesName;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;
    __declspec(property(get=GetAz0,put=PutAz0))
    double Az0;
    __declspec(property(get=GetAz1,put=PutAz1))
    double Az1;
    __declspec(property(get=GetAz2,put=PutAz2))
    double Az2;
    __declspec(property(get=GetAz3,put=PutAz3))
    double Az3;
    __declspec(property(get=GetAzF,put=PutAzF))
    double AzF;
    __declspec(property(get=GetAzP,put=PutAzP))
    double AzP;
    __declspec(property(get=GetEl0,put=PutEl0))
    double El0;
    __declspec(property(get=GetEl1,put=PutEl1))
    double El1;
    __declspec(property(get=GetEl2,put=PutEl2))
    double El2;
    __declspec(property(get=GetEl3,put=PutEl3))
    double El3;
    __declspec(property(get=GetEl4,put=PutEl4))
    double El4;
    __declspec(property(get=GetElA,put=PutElA))
    double ElA;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    _bstr_t GetThrustAxesName ( );
    void PutThrustAxesName (
        _bstr_t pVal );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );
    double GetAz0 ( );
    void PutAz0 (
        double pVal );
    double GetAz1 ( );
    void PutAz1 (
        double pVal );
    double GetAz2 ( );
    void PutAz2 (
        double pVal );
    double GetAz3 ( );
    void PutAz3 (
        double pVal );
    double GetAz4 ( );
    void PutAz4 (
        double pVal );
    double GetAzA ( );
    void PutAzA (
        double pVal );
    double GetAzF ( );
    void PutAzF (
        double pVal );
    double GetAzP ( );
    void PutAzP (
        double pVal );
    double GetEl0 ( );
    void PutEl0 (
        double pVal );
    double GetEl1 ( );
    void PutEl1 (
        double pVal );
    double GetEl2 ( );
    void PutEl2 (
        double pVal );
    double GetEl3 ( );
    void PutEl3 (
        double pVal );
    double GetEl4 ( );
    void PutEl4 (
        double pVal );
    double GetElA ( );
    void PutElA (
        double pVal );
    double GetElF ( );
    void PutElF (
        double pVal );
    double GetElP ( );
    void PutElP (
        double pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall get_ThrustAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrustAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
      virtual HRESULT __stdcall get_Az0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Az0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Az1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Az1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Az2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Az2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Az3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Az3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Az4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Az4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AzA (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AzA (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AzF (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AzF (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AzP (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AzP (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_El0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_El0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_El1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_El1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_El2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_El2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_El3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_El3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_El4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_El4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ElA (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ElA (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ElF (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ElF (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ElP (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ElP (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("e5f36d56-c5df-4814-b957-e5df86ffb72c"))
IAgVAAttitudeControlFiniteTimeVarying : IAgVAAttitudeControlFinite
{
    //
    // Property data
    //

    __declspec(property(get=GetThrustAxesName,put=PutThrustAxesName))
    _bstr_t ThrustAxesName;
    __declspec(property(get=GetElP,put=PutElP))
    double ElP;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;
    __declspec(property(get=GetAz0,put=PutAz0))
    double Az0;
    __declspec(property(get=GetAz1,put=PutAz1))
    double Az1;
    __declspec(property(get=GetAz2,put=PutAz2))
    double Az2;
    __declspec(property(get=GetAz3,put=PutAz3))
    double Az3;
    __declspec(property(get=GetAz4,put=PutAz4))
    double Az4;
    __declspec(property(get=GetAzA,put=PutAzA))
    double AzA;
    __declspec(property(get=GetAzF,put=PutAzF))
    double AzF;
    __declspec(property(get=GetAzP,put=PutAzP))
    double AzP;
    __declspec(property(get=GetEl0,put=PutEl0))
    double El0;
    __declspec(property(get=GetEl1,put=PutEl1))
    double El1;
    __declspec(property(get=GetEl2,put=PutEl2))
    double El2;
    __declspec(property(get=GetEl3,put=PutEl3))
    double El3;
    __declspec(property(get=GetEl4,put=PutEl4))
    double El4;
    __declspec(property(get=GetElA,put=PutElA))
    double ElA;
    __declspec(property(get=GetElF,put=PutElF))
    double ElF;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetThrustAxesName ( );
    void PutThrustAxesName (
        _bstr_t pVal );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );
    double GetAz0 ( );
    void PutAz0 (
        double pVal );
    double GetAz1 ( );
    void PutAz1 (
        double pVal );
    double GetAz2 ( );
    void PutAz2 (
        double pVal );
    double GetAz3 ( );
    void PutAz3 (
        double pVal );
    double GetAz4 ( );
    void PutAz4 (
        double pVal );
    double GetAzA ( );
    void PutAzA (
        double pVal );
    double GetAzF ( );
    void PutAzF (
        double pVal );
    double GetAzP ( );
    void PutAzP (
        double pVal );
    double GetEl0 ( );
    void PutEl0 (
        double pVal );
    double GetEl1 ( );
    void PutEl1 (
        double pVal );
    double GetEl2 ( );
    void PutEl2 (
        double pVal );
    double GetEl3 ( );
    void PutEl3 (
        double pVal );
    double GetEl4 ( );
    void PutEl4 (
        double pVal );
    double GetElA ( );
    void PutElA (
        double pVal );
    double GetElF ( );
    void PutElF (
        double pVal );
    double GetElP ( );
    void PutElP (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ThrustAxesName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ThrustAxesName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
      virtual HRESULT __stdcall get_Az0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Az0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Az1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Az1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Az2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Az2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Az3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Az3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Az4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Az4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AzA (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AzA (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AzF (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AzF (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_AzP (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AzP (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_El0 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_El0 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_El1 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_El1 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_El2 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_El2 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_El3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_El3 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_El4 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_El4 (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ElA (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ElA (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ElF (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ElF (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ElP (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ElP (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("fc1f00f4-2928-4826-a20d-e5c15d825f0d"))
AgVAAttitudeControlFiniteVelocityVector;
    // [ default ] interface _IAgVAAttitudeControlFiniteVelocityVector
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlFinite
    // interface IAgVAAttitudeControlFiniteVelocityVector
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("22e4d9e1-1f1d-49fc-823f-ebb6588dc044"))
_IAgVAAttitudeControlFiniteVelocityVector : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetAttitudeUpdate,put=PutAttitudeUpdate))
    enum AgEVAAttitudeUpdate AttitudeUpdate;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    enum AgEVAAttitudeUpdate GetAttitudeUpdate ( );
    void PutAttitudeUpdate (
        enum AgEVAAttitudeUpdate pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall get_AttitudeUpdate (
        /*[out,retval]*/ enum AgEVAAttitudeUpdate * pVal ) = 0;
      virtual HRESULT __stdcall put_AttitudeUpdate (
        /*[in]*/ enum AgEVAAttitudeUpdate pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
};

struct __declspec(uuid("ecb98914-be07-498d-b4f6-cebaba34d2da"))
IAgVAAttitudeControlFiniteVelocityVector : IAgVAAttitudeControlFinite
{
    //
    // Property data
    //

    __declspec(property(get=GetAttitudeUpdate,put=PutAttitudeUpdate))
    enum AgEVAAttitudeUpdate AttitudeUpdate;
    __declspec(property(get=GetBodyConstraintVector))
    STKUtil::IAgDirectionPtr BodyConstraintVector;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAAttitudeUpdate GetAttitudeUpdate ( );
    void PutAttitudeUpdate (
        enum AgEVAAttitudeUpdate pVal );
    STKUtil::IAgDirectionPtr GetBodyConstraintVector ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AttitudeUpdate (
        /*[out,retval]*/ enum AgEVAAttitudeUpdate * pVal ) = 0;
      virtual HRESULT __stdcall put_AttitudeUpdate (
        /*[in]*/ enum AgEVAAttitudeUpdate pVal ) = 0;
      virtual HRESULT __stdcall get_BodyConstraintVector (
        /*[out,retval]*/ struct STKUtil::IAgDirection * * ppDirection ) = 0;
};

struct __declspec(uuid("14095920-008b-48a9-b449-9515b788bdce"))
AgVAAttitudeControlFinitePlugin;
    // [ default ] interface _IAgVAAttitudeControlFinitePlugin
    // interface IAgVAAttitudeControl
    // interface IAgVAAttitudeControlFinite
    // interface IAgVAAttitudeControlFinitePlugin
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("93333e0b-1e41-4e42-b1d5-81758f91f7cd"))
_IAgVAAttitudeControlFinitePlugin : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetLeadDuration,put=PutLeadDuration))
    double LeadDuration;
    __declspec(property(get=GetTrailDuration,put=PutTrailDuration))
    double TrailDuration;
    __declspec(property(get=GetBodyAxis,put=PutBodyAxis))
    enum AgEVABodyAxis BodyAxis;
    __declspec(property(get=GetConstraintSign,put=PutConstraintSign))
    enum AgEVAConstraintSign ConstraintSign;
    __declspec(property(get=GetConstraintVectorName,put=PutConstraintVectorName))
    _bstr_t ConstraintVectorName;
    __declspec(property(get=GetCustomFunction,put=PutCustomFunction))
    enum AgEVACustomFunction CustomFunction;
    __declspec(property(get=GetPluginName))
    _bstr_t PluginName;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;

    //
    // Wrapper methods for error-handling
    //

    double GetLeadDuration ( );
    void PutLeadDuration (
        double pVal );
    double GetTrailDuration ( );
    void PutTrailDuration (
        double pVal );
    enum AgEVABodyAxis GetBodyAxis ( );
    void PutBodyAxis (
        enum AgEVABodyAxis pVal );
    enum AgEVAConstraintSign GetConstraintSign ( );
    void PutConstraintSign (
        enum AgEVAConstraintSign pVal );
    _bstr_t GetConstraintVectorName ( );
    void PutConstraintVectorName (
        _bstr_t pVal );
    enum AgEVACustomFunction GetCustomFunction ( );
    void PutCustomFunction (
        enum AgEVACustomFunction pVal );
    HRESULT SelectPluginByName (
        _bstr_t Name );
    _bstr_t GetPluginName ( );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeadDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LeadDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TrailDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TrailDuration (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BodyAxis (
        /*[out,retval]*/ enum AgEVABodyAxis * pVal ) = 0;
      virtual HRESULT __stdcall put_BodyAxis (
        /*[in]*/ enum AgEVABodyAxis pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintSign (
        /*[out,retval]*/ enum AgEVAConstraintSign * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintSign (
        /*[in]*/ enum AgEVAConstraintSign pVal ) = 0;
      virtual HRESULT __stdcall get_ConstraintVectorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ConstraintVectorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CustomFunction (
        /*[out,retval]*/ enum AgEVACustomFunction * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomFunction (
        /*[in]*/ enum AgEVACustomFunction pVal ) = 0;
      virtual HRESULT __stdcall raw_SelectPluginByName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_PluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("50cc2465-5cae-46a9-9f31-9c26313f5b72"))
IAgVAAttitudeControlFinitePlugin : IAgVAAttitudeControlFinite
{
    //
    // Property data
    //

    __declspec(property(get=GetPluginName))
    _bstr_t PluginName;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;

    //
    // Wrapper methods for error-handling
    //

    HRESULT SelectPluginByName (
        _bstr_t Name );
    _bstr_t GetPluginName ( );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_SelectPluginByName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_PluginName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
};

struct __declspec(uuid("2c96f499-4965-49a7-ad54-9c1233bb53a2"))
AgVAManeuverFinitePropagator;
    // [ default ] interface _IAgVAManeuverFinitePropagator
    // interface IAgVAManeuverFinitePropagator
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("1e113dd9-d5b3-4e73-8c0c-8ba3f1332549"))
_IAgVAManeuverFinitePropagator : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPropagatorName,put=PutPropagatorName))
    _bstr_t PropagatorName;
    __declspec(property(get=GetStoppingConditions))
    IAgVAStoppingConditionCollectionPtr StoppingConditions;
    __declspec(property(get=GetMinPropagationTime,put=PutMinPropagationTime))
    double MinPropagationTime;
    __declspec(property(get=GetMaxPropagationTime,put=PutMaxPropagationTime))
    double MaxPropagationTime;
    __declspec(property(get=GetEnableMaxPropagationTime,put=PutEnableMaxPropagationTime))
    VARIANT_BOOL EnableMaxPropagationTime;
    __declspec(property(get=GetEnableWarningMessage,put=PutEnableWarningMessage))
    VARIANT_BOOL EnableWarningMessage;
    __declspec(property(get=GetEnableCenterBurn,put=PutEnableCenterBurn))
    VARIANT_BOOL EnableCenterBurn;
    __declspec(property(get=GetBias,put=PutBias))
    double Bias;
    __declspec(property(get=GetOverrideMaxPropagationTime,put=PutOverrideMaxPropagationTime))
    VARIANT_BOOL OverrideMaxPropagationTime;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPropagatorName ( );
    void PutPropagatorName (
        _bstr_t pVal );
    IAgVAStoppingConditionCollectionPtr GetStoppingConditions ( );
    double GetMinPropagationTime ( );
    void PutMinPropagationTime (
        double pVal );
    double GetMaxPropagationTime ( );
    void PutMaxPropagationTime (
        double pVal );
    VARIANT_BOOL GetEnableMaxPropagationTime ( );
    void PutEnableMaxPropagationTime (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableWarningMessage ( );
    void PutEnableWarningMessage (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableCenterBurn ( );
    void PutEnableCenterBurn (
        VARIANT_BOOL pVal );
    double GetBias ( );
    void PutBias (
        double pVal );
    VARIANT_BOOL GetOverrideMaxPropagationTime ( );
    void PutOverrideMaxPropagationTime (
        VARIANT_BOOL pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PropagatorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PropagatorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_StoppingConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppVAStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_MinPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EnableMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableWarningMessage (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableWarningMessage (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableCenterBurn (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableCenterBurn (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Bias (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Bias (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_OverrideMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_OverrideMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("75604ca9-148d-4bec-b165-01f5c0667963"))
AgVAMCSHold;
    // [ default ] interface _IAgVAMCSHold
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgVAMCSHold
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("d345ef7b-202a-4f54-828f-638402f13443"))
_IAgVAMCSHold : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetStepSize,put=PutStepSize))
    double StepSize;
    __declspec(property(get=GetHoldFrameName,put=PutHoldFrameName))
    _bstr_t HoldFrameName;
    __declspec(property(get=GetEnableHoldAttitude,put=PutEnableHoldAttitude))
    VARIANT_BOOL EnableHoldAttitude;
    __declspec(property(get=GetStoppingConditions))
    IAgVAStoppingConditionCollectionPtr StoppingConditions;
    __declspec(property(get=GetMinPropagationTime,put=PutMinPropagationTime))
    double MinPropagationTime;
    __declspec(property(get=GetMaxPropagationTime,put=PutMaxPropagationTime))
    double MaxPropagationTime;
    __declspec(property(get=GetEnableMaxPropagationTime,put=PutEnableMaxPropagationTime))
    VARIANT_BOOL EnableMaxPropagationTime;
    __declspec(property(get=GetEnableWarningMessage,put=PutEnableWarningMessage))
    VARIANT_BOOL EnableWarningMessage;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetOverrideMaxPropagationTime,put=PutOverrideMaxPropagationTime))
    VARIANT_BOOL OverrideMaxPropagationTime;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    double GetStepSize ( );
    void PutStepSize (
        double pVal );
    _bstr_t GetHoldFrameName ( );
    void PutHoldFrameName (
        _bstr_t pVal );
    VARIANT_BOOL GetEnableHoldAttitude ( );
    void PutEnableHoldAttitude (
        VARIANT_BOOL pVal );
    IAgVAStoppingConditionCollectionPtr GetStoppingConditions ( );
    double GetMinPropagationTime ( );
    void PutMinPropagationTime (
        double pVal );
    double GetMaxPropagationTime ( );
    void PutMaxPropagationTime (
        double pVal );
    VARIANT_BOOL GetEnableMaxPropagationTime ( );
    void PutEnableMaxPropagationTime (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableWarningMessage ( );
    void PutEnableWarningMessage (
        VARIANT_BOOL pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlAdvanced Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlAdvanced Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlAdvanced Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetOverrideMaxPropagationTime ( );
    void PutOverrideMaxPropagationTime (
        VARIANT_BOOL pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_StepSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_StepSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HoldFrameName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_HoldFrameName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_EnableHoldAttitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableHoldAttitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_StoppingConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppVAStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_MinPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EnableMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableWarningMessage (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableWarningMessage (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlAdvanced Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlAdvanced Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlAdvanced Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_OverrideMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_OverrideMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("c3e56aa1-7a6f-4a1d-9d78-d3c7f42a29f7"))
IAgVAMCSHold : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetStepSize,put=PutStepSize))
    double StepSize;
    __declspec(property(get=GetHoldFrameName,put=PutHoldFrameName))
    _bstr_t HoldFrameName;
    __declspec(property(get=GetEnableHoldAttitude,put=PutEnableHoldAttitude))
    VARIANT_BOOL EnableHoldAttitude;
    __declspec(property(get=GetStoppingConditions))
    IAgVAStoppingConditionCollectionPtr StoppingConditions;
    __declspec(property(get=GetMinPropagationTime,put=PutMinPropagationTime))
    double MinPropagationTime;
    __declspec(property(get=GetMaxPropagationTime,put=PutMaxPropagationTime))
    double MaxPropagationTime;
    __declspec(property(get=GetEnableMaxPropagationTime,put=PutEnableMaxPropagationTime))
    VARIANT_BOOL EnableMaxPropagationTime;
    __declspec(property(get=GetEnableWarningMessage,put=PutEnableWarningMessage))
    VARIANT_BOOL EnableWarningMessage;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetOverrideMaxPropagationTime,put=PutOverrideMaxPropagationTime))
    VARIANT_BOOL OverrideMaxPropagationTime;

    //
    // Wrapper methods for error-handling
    //

    double GetStepSize ( );
    void PutStepSize (
        double pVal );
    _bstr_t GetHoldFrameName ( );
    void PutHoldFrameName (
        _bstr_t pVal );
    VARIANT_BOOL GetEnableHoldAttitude ( );
    void PutEnableHoldAttitude (
        VARIANT_BOOL pVal );
    IAgVAStoppingConditionCollectionPtr GetStoppingConditions ( );
    double GetMinPropagationTime ( );
    void PutMinPropagationTime (
        double pVal );
    double GetMaxPropagationTime ( );
    void PutMaxPropagationTime (
        double pVal );
    VARIANT_BOOL GetEnableMaxPropagationTime ( );
    void PutEnableMaxPropagationTime (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableWarningMessage ( );
    void PutEnableWarningMessage (
        VARIANT_BOOL pVal );
    HRESULT EnableControlParameter (
        enum AgEVAControlAdvanced Param );
    HRESULT DisableControlParameter (
        enum AgEVAControlAdvanced Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlAdvanced Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    VARIANT_BOOL GetOverrideMaxPropagationTime ( );
    void PutOverrideMaxPropagationTime (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_StepSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_StepSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HoldFrameName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_HoldFrameName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_EnableHoldAttitude (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableHoldAttitude (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_StoppingConditions (
        /*[out,retval]*/ struct IAgVAStoppingConditionCollection * * ppVAStoppingConditionCollection ) = 0;
      virtual HRESULT __stdcall get_MinPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxPropagationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxPropagationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EnableMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableWarningMessage (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableWarningMessage (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlAdvanced Param ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlAdvanced Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlAdvanced Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_OverrideMaxPropagationTime (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_OverrideMaxPropagationTime (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("f58df5e2-a611-4a78-a798-bb57f548a2ad"))
AgVAMCSUpdate;
    // [ default ] interface _IAgVAMCSUpdate
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgVAMCSUpdate
    // interface IAgComponentInfo
    // interface IAgCloneable

enum AgEVAUpdateParam
{
    eVAUpdateParamDragArea = 0,
    eVAUpdateParamSRPArea = 1,
    eVAUpdateParamDryMass = 2,
    eVAUpdateParamFuelMass = 3,
    eVAUpdateParamFuelDensity = 4,
    eVAUpdateParamTankPressure = 5,
    eVAUpdateParamTankTemp = 6,
    eVAUpdateParamCr = 7,
    eVAUpdateParamCd = 8,
    eVAUpdateParamCk = 9,
    eVAUpdateParamRadiationPressureArea = 10
};

enum AgEVAUpdateAction
{
    eVAUpdateActionNoChange = 0,
    eVAUpdateActionAddValue = 1,
    eVAUpdateActionSubtractValue = 2,
    eVAUpdateActionSetToNewValue = 3
};

enum AgEVAControlUpdate
{
    eVAControlUpdateCdVal = 100,
    eVAControlUpdateCrVal = 101,
    eVAControlUpdateDragAreaVal = 102,
    eVAControlUpdateDryMassVal = 103,
    eVAControlUpdateFuelDensityVal = 104,
    eVAControlUpdateFuelMassVal = 105,
    eVAControlUpdateRadiationPressureAreaVal = 106,
    eVAControlUpdateRadiationPressureCoefficientVal = 107,
    eVAControlUpdateSRPAreaVal = 108,
    eVAControlUpdateTankPressureVal = 109,
    eVAControlUpdateTankTempVal = 110
};

struct __declspec(uuid("2133d87e-a42f-4a93-a201-cc31caa9fa37"))
IAgVAUserVariableUpdate : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetVariableName))
    _bstr_t VariableName;
    __declspec(property(get=GetVariableValue,put=PutVariableValue))
    _variant_t VariableValue;
    __declspec(property(get=GetVariableAction,put=PutVariableAction))
    enum AgEVAUpdateAction VariableAction;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetUnitDimension ( );
    _bstr_t GetVariableName ( );
    _variant_t GetVariableValue ( );
    void PutVariableValue (
        const _variant_t & pVal );
    enum AgEVAUpdateAction GetVariableAction ( );
    void PutVariableAction (
        enum AgEVAUpdateAction pVal );
    HRESULT EnableControlParameter ( );
    HRESULT DisableControlParameter ( );
    VARIANT_BOOL IsControlParameterEnabled ( );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_VariableName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_VariableValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VariableValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VariableAction (
        /*[out,retval]*/ enum AgEVAUpdateAction * pVal ) = 0;
      virtual HRESULT __stdcall put_VariableAction (
        /*[in]*/ enum AgEVAUpdateAction pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter ( ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter ( ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("54441b58-2902-4142-9fa7-267bcbb771d0"))
IAgVAUserVariableUpdateCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAUserVariableUpdatePtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAUserVariableUpdatePtr GetItem (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAUserVariableUpdate * * ppVAUserVariableUpdate ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("a11f7a52-ab1a-44ed-b1b1-203ebb1c41bc"))
_IAgVAMCSUpdate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetUserVariables))
    IAgVAUserVariableUpdateCollectionPtr UserVariables;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    HRESULT SetActionAndValue (
        enum AgEVAUpdateParam ParameterType,
        enum AgEVAUpdateAction ActionType,
        double Value );
    enum AgEVAUpdateAction GetAction (
        enum AgEVAUpdateParam ParameterType );
    double GetValue (
        enum AgEVAUpdateParam ParameterType );
    HRESULT SetAction (
        enum AgEVAUpdateParam ParameterName,
        enum AgEVAUpdateAction ActionType );
    HRESULT SetValue (
        enum AgEVAUpdateParam ParameterName,
        double Value );
    HRESULT DisableControlParameter (
        enum AgEVAControlUpdate Param );
    HRESULT EnableControlParameter (
        enum AgEVAControlUpdate Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlUpdate Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    IAgVAUserVariableUpdateCollectionPtr GetUserVariables ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_SetActionAndValue (
        /*[in]*/ enum AgEVAUpdateParam ParameterType,
        /*[in]*/ enum AgEVAUpdateAction ActionType,
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall raw_GetAction (
        /*[in]*/ enum AgEVAUpdateParam ParameterType,
        /*[out,retval]*/ enum AgEVAUpdateAction * pActionType ) = 0;
      virtual HRESULT __stdcall raw_GetValue (
        /*[in]*/ enum AgEVAUpdateParam ParameterType,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetAction (
        /*[in]*/ enum AgEVAUpdateParam ParameterName,
        /*[in]*/ enum AgEVAUpdateAction ActionType ) = 0;
      virtual HRESULT __stdcall raw_SetValue (
        /*[in]*/ enum AgEVAUpdateParam ParameterName,
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlUpdate Param ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlUpdate Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlUpdate Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_UserVariables (
        /*[out,retval]*/ struct IAgVAUserVariableUpdateCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("2c839e6f-7ffc-456d-8029-6fe01e1388f2"))
IAgVAMCSUpdate : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;
    __declspec(property(get=GetUserVariables))
    IAgVAUserVariableUpdateCollectionPtr UserVariables;

    //
    // Wrapper methods for error-handling
    //

    HRESULT SetActionAndValue (
        enum AgEVAUpdateParam ParameterType,
        enum AgEVAUpdateAction ActionType,
        double Value );
    enum AgEVAUpdateAction GetAction (
        enum AgEVAUpdateParam ParameterType );
    double GetValue (
        enum AgEVAUpdateParam ParameterType );
    HRESULT SetAction (
        enum AgEVAUpdateParam ParameterName,
        enum AgEVAUpdateAction ActionType );
    HRESULT SetValue (
        enum AgEVAUpdateParam ParameterName,
        double Value );
    HRESULT DisableControlParameter (
        enum AgEVAControlUpdate Param );
    HRESULT EnableControlParameter (
        enum AgEVAControlUpdate Param );
    VARIANT_BOOL IsControlParameterEnabled (
        enum AgEVAControlUpdate Param );
    VARIANT_BOOL GetControlParametersAvailable ( );
    IAgVAUserVariableUpdateCollectionPtr GetUserVariables ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_SetActionAndValue (
        /*[in]*/ enum AgEVAUpdateParam ParameterType,
        /*[in]*/ enum AgEVAUpdateAction ActionType,
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall raw_GetAction (
        /*[in]*/ enum AgEVAUpdateParam ParameterType,
        /*[out,retval]*/ enum AgEVAUpdateAction * pActionType ) = 0;
      virtual HRESULT __stdcall raw_GetValue (
        /*[in]*/ enum AgEVAUpdateParam ParameterType,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetAction (
        /*[in]*/ enum AgEVAUpdateParam ParameterName,
        /*[in]*/ enum AgEVAUpdateAction ActionType ) = 0;
      virtual HRESULT __stdcall raw_SetValue (
        /*[in]*/ enum AgEVAUpdateParam ParameterName,
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter (
        /*[in]*/ enum AgEVAControlUpdate Param ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter (
        /*[in]*/ enum AgEVAControlUpdate Param ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[in]*/ enum AgEVAControlUpdate Param,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_UserVariables (
        /*[out,retval]*/ struct IAgVAUserVariableUpdateCollection * * ppRetVal ) = 0;
};

struct __declspec(uuid("5c674523-7ebb-4495-a7ed-6fddf3944626"))
AgVAMCSReturn;
    // [ default ] interface _IAgVAMCSReturn
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgVAMCSReturn
    // interface IAgComponentInfo
    // interface IAgCloneable

enum AgEVAReturnControl
{
    eVAReturnControlEnable = 0,
    eVAReturnControlDisable = 1,
    eVAReturnControlEnableExceptProfilesBypass = 2
};

struct __declspec(uuid("231de183-e0c2-402f-a7e6-ff2b1d6fc2af"))
_IAgVAMCSReturn : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetReturnControlToParentSequence,put=PutReturnControlToParentSequence))
    enum AgEVAReturnControl ReturnControlToParentSequence;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    enum AgEVAReturnControl GetReturnControlToParentSequence ( );
    void PutReturnControlToParentSequence (
        enum AgEVAReturnControl pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ReturnControlToParentSequence (
        /*[out,retval]*/ enum AgEVAReturnControl * pVal ) = 0;
      virtual HRESULT __stdcall put_ReturnControlToParentSequence (
        /*[in]*/ enum AgEVAReturnControl pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("edefea25-1ed3-4fe1-90ce-f8c9181cff58"))
IAgVAMCSReturn : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetReturnControlToParentSequence,put=PutReturnControlToParentSequence))
    enum AgEVAReturnControl ReturnControlToParentSequence;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVAReturnControl GetReturnControlToParentSequence ( );
    void PutReturnControlToParentSequence (
        enum AgEVAReturnControl pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ReturnControlToParentSequence (
        /*[out,retval]*/ enum AgEVAReturnControl * pVal ) = 0;
      virtual HRESULT __stdcall put_ReturnControlToParentSequence (
        /*[in]*/ enum AgEVAReturnControl pVal ) = 0;
};

struct __declspec(uuid("9c683aa5-b91c-42c0-a9f0-84979cf9d4ff"))
AgVAMCSStop;
    // [ default ] interface _IAgVAMCSStop
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgVAMCSStop
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("eeb5c250-d256-480e-92cd-dbbb4013ef81"))
_IAgVAMCSStop : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("828a454a-c8d2-49db-8aab-4f44e0ff009c"))
IAgVAMCSStop : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("480319b2-a7ff-4946-b387-c8e6d77b1705"))
AgVAMCSTargetSequence;
    // [ default ] interface _IAgVAMCSTargetSequence
    // interface IAgVAMCSSegment
    // interface IAgRuntimeTypeInfoProvider
    // interface IAgVAMCSTargetSequence
    // interface IAgComponentInfo
    // interface IAgCloneable

enum AgEVATargetSeqAction
{
    eVATargetSeqActionRunNominalSeq = 0,
    eVATargetSeqActionRunActiveProfiles = 1,
    eVATargetSeqActionRunActiveProfilesOnce = 2
};

enum AgEVAProfilesFinish
{
    eVAProfilesFinishRunToReturnAndContinue = 0,
    eVAProfilesFinishRunToReturnAndStop = 1,
    eVAProfilesFinishStop = 2
};

enum AgEVAProfileMode
{
    eVAProfileModeIterate = 0,
    eVAProfileModeNotActive = 1,
    eVAProfileModeRunOnce = 2,
    eVAProfileModeActive = 3
};

enum AgEVAProfile
{
    eVAProfileSearchPlugin = 0,
    eVAProfileDEOptimizer = 1,
    eVAProfileDifferentialCorrector = 2,
    eVAProfileChangeManeuverType = 3,
    eVAProfileScriptingTool = 4,
    eVAProfileChangeReturnSegment = 5,
    eVAProfileChangePropagator = 6,
    eVAProfileChangeStopSegment = 7,
    eVAProfileChangeStoppingConditionState = 8,
    eVAProfileSeedFiniteManeuver = 9,
    eVAProfileRunOnce = 10,
    eVAProfileSNOPTOptimizer = 11,
    eVAProfileIPOPTOptimizer = 12
};

struct __declspec(uuid("698d3200-90a3-47ce-8692-499cd02ee634"))
IAgVAProfile : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

enum AgEVAProfileInsertDirection
{
    eVAProfileInsertBefore = 0,
    eVAProfileInsertAfter = 1
};

struct __declspec(uuid("b574fc5f-1fbe-44bd-886e-415e22334005"))
IAgVAProfileCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAProfilePtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAvailableProfiles))
    SAFEARRAY * AvailableProfiles;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Add (
        _bstr_t ProfileName );
    IAgVAProfilePtr GetItem (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    SAFEARRAY * GetAvailableProfiles ( );
    HRESULT Remove (
        const _variant_t & IndexOrProfileName );
    HRESULT RemoveAll ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    HRESULT Cut (
        const _variant_t & IndexOrName );
    IAgVAProfilePtr Paste (
        const _variant_t & IndexOrName,
        enum AgEVAProfileInsertDirection Direction );
    IAgVAProfilePtr InsertCopy (
        struct IAgVAProfile * Profile,
        const _variant_t & IndexOrName,
        enum AgEVAProfileInsertDirection Direction );
    IAgVAProfilePtr Add2 (
        _bstr_t ProfileName,
        const _variant_t & IndexOrName,
        enum AgEVAProfileInsertDirection Direction );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR ProfileName,
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_AvailableProfiles (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrProfileName ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[in]*/ VARIANT IndexOrName,
        /*[in]*/ enum AgEVAProfileInsertDirection Direction,
        /*[out,retval]*/ struct IAgVAProfile * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct IAgVAProfile * Profile,
        /*[in]*/ VARIANT IndexOrName,
        /*[in]*/ enum AgEVAProfileInsertDirection Direction,
        /*[out,retval]*/ struct IAgVAProfile * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_Add2 (
        /*[in]*/ BSTR ProfileName,
        /*[in]*/ VARIANT IndexOrName,
        /*[in]*/ enum AgEVAProfileInsertDirection Direction,
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
};

struct __declspec(uuid("4e33a410-0f75-4c26-a0b0-81d05290c4bf"))
_IAgVAMCSTargetSequence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum AgEVASegmentType Type;
    __declspec(property(get=GetProperties))
    IAgVAMCSSegmentPropertiesPtr Properties;
    __declspec(property(get=GetInitialState))
    IAgVAStatePtr InitialState;
    __declspec(property(get=GetFinalState))
    IAgVAStatePtr FinalState;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetResults))
    IAgVACalcObjectCollectionPtr Results;
    __declspec(property(get=GetExecSummary))
    STKObjects::IAgDrResultPtr ExecSummary;
    __declspec(property(get=GetAction,put=PutAction))
    enum AgEVATargetSeqAction Action;
    __declspec(property(get=GetWhenProfilesFinish,put=PutWhenProfilesFinish))
    enum AgEVAProfilesFinish WhenProfilesFinish;
    __declspec(property(get=GetContinueOnFailure,put=PutContinueOnFailure))
    VARIANT_BOOL ContinueOnFailure;
    __declspec(property(get=GetSegments))
    IAgVAMCSSegmentCollectionPtr Segments;
    __declspec(property(get=GetProfiles))
    IAgVAProfileCollectionPtr Profiles;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetResetInnerTargeters,put=PutResetInnerTargeters))
    VARIANT_BOOL ResetInnerTargeters;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVASegmentType GetType ( );
    IAgVAMCSSegmentPropertiesPtr GetProperties ( );
    IAgVAStatePtr GetInitialState ( );
    IAgVAStatePtr GetFinalState ( );
    _variant_t GetResultValue (
        _bstr_t ResultName );
    IAgVAStatePtr Run ( );
    IAgVACalcObjectCollectionPtr GetResults ( );
    STKObjects::IAgDrResultPtr GetExecSummary ( );
    enum AgEVATargetSeqAction GetAction ( );
    void PutAction (
        enum AgEVATargetSeqAction pVal );
    enum AgEVAProfilesFinish GetWhenProfilesFinish ( );
    void PutWhenProfilesFinish (
        enum AgEVAProfilesFinish pVal );
    VARIANT_BOOL GetContinueOnFailure ( );
    void PutContinueOnFailure (
        VARIANT_BOOL pVal );
    IAgVAMCSSegmentCollectionPtr GetSegments ( );
    IAgVAProfileCollectionPtr GetProfiles ( );
    HRESULT ApplyProfiles ( );
    HRESULT ResetProfiles ( );
    HRESULT ApplyProfile (
        struct IAgVAProfile * Profile );
    HRESULT ResetProfile (
        struct IAgVAProfile * Profile );
    HRESULT ApplyProfileByName (
        _bstr_t Profile );
    HRESULT ResetProfileByName (
        _bstr_t Profile );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetResetInnerTargeters ( );
    void PutResetInnerTargeters (
        VARIANT_BOOL pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVASegmentType * pSegmentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IAgVAMCSSegmentProperties * * ppVAMCSSegmentProperties ) = 0;
      virtual HRESULT __stdcall get_InitialState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_FinalState (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultValue (
        /*[in]*/ BSTR ResultName,
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[out,retval]*/ struct IAgVAState * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVACalcObjectCollection * * ppVACalcObjectCollection ) = 0;
      virtual HRESULT __stdcall get_ExecSummary (
        /*[out,retval]*/ struct STKObjects::IAgDrResult * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Action (
        /*[out,retval]*/ enum AgEVATargetSeqAction * pVal ) = 0;
      virtual HRESULT __stdcall put_Action (
        /*[in]*/ enum AgEVATargetSeqAction pVal ) = 0;
      virtual HRESULT __stdcall get_WhenProfilesFinish (
        /*[out,retval]*/ enum AgEVAProfilesFinish * pVal ) = 0;
      virtual HRESULT __stdcall put_WhenProfilesFinish (
        /*[in]*/ enum AgEVAProfilesFinish pVal ) = 0;
      virtual HRESULT __stdcall get_ContinueOnFailure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ContinueOnFailure (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Segments (
        /*[out,retval]*/ struct IAgVAMCSSegmentCollection * * ppVAMCSSegmentCollection ) = 0;
      virtual HRESULT __stdcall get_Profiles (
        /*[out,retval]*/ struct IAgVAProfileCollection * * ppVAProfileCollection ) = 0;
      virtual HRESULT __stdcall raw_ApplyProfiles ( ) = 0;
      virtual HRESULT __stdcall raw_ResetProfiles ( ) = 0;
      virtual HRESULT __stdcall raw_ApplyProfile (
        /*[in]*/ struct IAgVAProfile * Profile ) = 0;
      virtual HRESULT __stdcall raw_ResetProfile (
        /*[in]*/ struct IAgVAProfile * Profile ) = 0;
      virtual HRESULT __stdcall raw_ApplyProfileByName (
        /*[in]*/ BSTR Profile ) = 0;
      virtual HRESULT __stdcall raw_ResetProfileByName (
        /*[in]*/ BSTR Profile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_ResetInnerTargeters (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetInnerTargeters (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("5ddbcac6-0421-4fa6-9df5-8cc6bb9bccd4"))
IAgVAMCSTargetSequence : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAction,put=PutAction))
    enum AgEVATargetSeqAction Action;
    __declspec(property(get=GetWhenProfilesFinish,put=PutWhenProfilesFinish))
    enum AgEVAProfilesFinish WhenProfilesFinish;
    __declspec(property(get=GetContinueOnFailure,put=PutContinueOnFailure))
    VARIANT_BOOL ContinueOnFailure;
    __declspec(property(get=GetSegments))
    IAgVAMCSSegmentCollectionPtr Segments;
    __declspec(property(get=GetProfiles))
    IAgVAProfileCollectionPtr Profiles;
    __declspec(property(get=GetResetInnerTargeters,put=PutResetInnerTargeters))
    VARIANT_BOOL ResetInnerTargeters;

    //
    // Wrapper methods for error-handling
    //

    enum AgEVATargetSeqAction GetAction ( );
    void PutAction (
        enum AgEVATargetSeqAction pVal );
    enum AgEVAProfilesFinish GetWhenProfilesFinish ( );
    void PutWhenProfilesFinish (
        enum AgEVAProfilesFinish pVal );
    VARIANT_BOOL GetContinueOnFailure ( );
    void PutContinueOnFailure (
        VARIANT_BOOL pVal );
    IAgVAMCSSegmentCollectionPtr GetSegments ( );
    IAgVAProfileCollectionPtr GetProfiles ( );
    HRESULT ApplyProfiles ( );
    HRESULT ResetProfiles ( );
    HRESULT ApplyProfile (
        struct IAgVAProfile * Profile );
    HRESULT ResetProfile (
        struct IAgVAProfile * Profile );
    HRESULT ApplyProfileByName (
        _bstr_t Profile );
    HRESULT ResetProfileByName (
        _bstr_t Profile );
    VARIANT_BOOL GetResetInnerTargeters ( );
    void PutResetInnerTargeters (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Action (
        /*[out,retval]*/ enum AgEVATargetSeqAction * pVal ) = 0;
      virtual HRESULT __stdcall put_Action (
        /*[in]*/ enum AgEVATargetSeqAction pVal ) = 0;
      virtual HRESULT __stdcall get_WhenProfilesFinish (
        /*[out,retval]*/ enum AgEVAProfilesFinish * pVal ) = 0;
      virtual HRESULT __stdcall put_WhenProfilesFinish (
        /*[in]*/ enum AgEVAProfilesFinish pVal ) = 0;
      virtual HRESULT __stdcall get_ContinueOnFailure (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ContinueOnFailure (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Segments (
        /*[out,retval]*/ struct IAgVAMCSSegmentCollection * * ppVAMCSSegmentCollection ) = 0;
      virtual HRESULT __stdcall get_Profiles (
        /*[out,retval]*/ struct IAgVAProfileCollection * * ppVAProfileCollection ) = 0;
      virtual HRESULT __stdcall raw_ApplyProfiles ( ) = 0;
      virtual HRESULT __stdcall raw_ResetProfiles ( ) = 0;
      virtual HRESULT __stdcall raw_ApplyProfile (
        /*[in]*/ struct IAgVAProfile * Profile ) = 0;
      virtual HRESULT __stdcall raw_ResetProfile (
        /*[in]*/ struct IAgVAProfile * Profile ) = 0;
      virtual HRESULT __stdcall raw_ApplyProfileByName (
        /*[in]*/ BSTR Profile ) = 0;
      virtual HRESULT __stdcall raw_ResetProfileByName (
        /*[in]*/ BSTR Profile ) = 0;
      virtual HRESULT __stdcall get_ResetInnerTargeters (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetInnerTargeters (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("dedd4e35-a83f-41b2-ae5a-551eceafe25b"))
AgVAProfileCollection;
    // [ default ] interface IUnknown
    // interface IAgVAProfileCollection
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("7e6c2b79-48ae-4e0c-a46d-5aec93404ba5"))
AgVAMCSOptions;
    // [ default ] interface _IAgVAMCSOptions
    // interface IAgVAMCSOptions

struct __declspec(uuid("45b76f04-89db-4dec-a29c-3b74be1fad90"))
_IAgVAMCSOptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDrawTrajectoryIn2D,put=PutDrawTrajectoryIn2D))
    VARIANT_BOOL DrawTrajectoryIn2D;
    __declspec(property(get=GetDrawTrajectoryIn3D,put=PutDrawTrajectoryIn3D))
    VARIANT_BOOL DrawTrajectoryIn3D;
    __declspec(property(get=GetUpdateAnimationTimeForAllObjects,put=PutUpdateAnimationTimeForAllObjects))
    VARIANT_BOOL UpdateAnimationTimeForAllObjects;
    __declspec(property(get=GetClearDWCGraphicsBeforeEachRun,put=PutClearDWCGraphicsBeforeEachRun))
    VARIANT_BOOL ClearDWCGraphicsBeforeEachRun;
    __declspec(property(get=GetClearAdditionalBPlanePoints,put=PutClearAdditionalBPlanePoints))
    VARIANT_BOOL ClearAdditionalBPlanePoints;
    __declspec(property(get=GetPropagateOnApply,put=PutPropagateOnApply))
    VARIANT_BOOL PropagateOnApply;
    __declspec(property(get=GetEnableTrajectorySegmentColors,put=PutEnableTrajectorySegmentColors))
    VARIANT_BOOL EnableTrajectorySegmentColors;
    __declspec(property(get=GetSaveNumbersInRawFormat,put=PutSaveNumbersInRawFormat))
    VARIANT_BOOL SaveNumbersInRawFormat;
    __declspec(property(get=GetStoppingConditionTimeTolerance,put=PutStoppingConditionTimeTolerance))
    double StoppingConditionTimeTolerance;
    __declspec(property(get=GetEnableSegmentControls,put=PutEnableSegmentControls))
    VARIANT_BOOL EnableSegmentControls;
    __declspec(property(get=GetEnableSegmentResults,put=PutEnableSegmentResults))
    VARIANT_BOOL EnableSegmentResults;
    __declspec(property(get=GetEnableLogging,put=PutEnableLogging))
    VARIANT_BOOL EnableLogging;
    __declspec(property(get=GetGraphicsUpdateRate,put=PutGraphicsUpdateRate))
    double GraphicsUpdateRate;
    __declspec(property(get=GetPromoteControls,put=PutPromoteControls))
    VARIANT_BOOL PromoteControls;
    __declspec(property(get=GetUseNominalSettings,put=PutUseNominalSettings))
    VARIANT_BOOL UseNominalSettings;
    __declspec(property(get=GetMinEphemStep,put=PutMinEphemStep))
    double MinEphemStep;
    __declspec(property(get=GetGenerateEphemeris,put=PutGenerateEphemeris))
    VARIANT_BOOL GenerateEphemeris;
    __declspec(property(get=GetUserVariables))
    IAgVAUserVariableDefinitionCollectionPtr UserVariables;
    __declspec(property(get=GetSmartRunMode,put=PutSmartRunMode))
    enum AgEVASmartRunMode SmartRunMode;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetDrawTrajectoryIn2D ( );
    void PutDrawTrajectoryIn2D (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetDrawTrajectoryIn3D ( );
    void PutDrawTrajectoryIn3D (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUpdateAnimationTimeForAllObjects ( );
    void PutUpdateAnimationTimeForAllObjects (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetClearDWCGraphicsBeforeEachRun ( );
    void PutClearDWCGraphicsBeforeEachRun (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetClearAdditionalBPlanePoints ( );
    void PutClearAdditionalBPlanePoints (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetPropagateOnApply ( );
    void PutPropagateOnApply (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableTrajectorySegmentColors ( );
    void PutEnableTrajectorySegmentColors (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetSaveNumbersInRawFormat ( );
    void PutSaveNumbersInRawFormat (
        VARIANT_BOOL pVal );
    double GetStoppingConditionTimeTolerance ( );
    void PutStoppingConditionTimeTolerance (
        double pVal );
    VARIANT_BOOL GetEnableSegmentControls ( );
    void PutEnableSegmentControls (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableSegmentResults ( );
    void PutEnableSegmentResults (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableLogging ( );
    void PutEnableLogging (
        VARIANT_BOOL pVal );
    double GetGraphicsUpdateRate ( );
    void PutGraphicsUpdateRate (
        double pVal );
    VARIANT_BOOL GetPromoteControls ( );
    void PutPromoteControls (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseNominalSettings ( );
    void PutUseNominalSettings (
        VARIANT_BOOL pVal );
    double GetMinEphemStep ( );
    void PutMinEphemStep (
        double pVal );
    VARIANT_BOOL GetGenerateEphemeris ( );
    void PutGenerateEphemeris (
        VARIANT_BOOL pVal );
    IAgVAUserVariableDefinitionCollectionPtr GetUserVariables ( );
    enum AgEVASmartRunMode GetSmartRunMode ( );
    void PutSmartRunMode (
        enum AgEVASmartRunMode pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DrawTrajectoryIn2D (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_DrawTrajectoryIn2D (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DrawTrajectoryIn3D (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_DrawTrajectoryIn3D (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UpdateAnimationTimeForAllObjects (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdateAnimationTimeForAllObjects (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ClearDWCGraphicsBeforeEachRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ClearDWCGraphicsBeforeEachRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ClearAdditionalBPlanePoints (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ClearAdditionalBPlanePoints (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_PropagateOnApply (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_PropagateOnApply (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableTrajectorySegmentColors (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableTrajectorySegmentColors (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SaveNumbersInRawFormat (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_SaveNumbersInRawFormat (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_StoppingConditionTimeTolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_StoppingConditionTimeTolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EnableSegmentControls (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableSegmentControls (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableSegmentResults (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableSegmentResults (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableLogging (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableLogging (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_GraphicsUpdateRate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_GraphicsUpdateRate (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_PromoteControls (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_PromoteControls (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseNominalSettings (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseNominalSettings (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MinEphemStep (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MinEphemStep (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_GenerateEphemeris (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_GenerateEphemeris (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UserVariables (
        /*[out,retval]*/ struct IAgVAUserVariableDefinitionCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_SmartRunMode (
        /*[out,retval]*/ enum AgEVASmartRunMode * pVal ) = 0;
      virtual HRESULT __stdcall put_SmartRunMode (
        /*[in]*/ enum AgEVASmartRunMode pVal ) = 0;
};

struct __declspec(uuid("581cb0fb-e3d1-4fd8-bdee-c2341774e9d7"))
AgVACalcObjectCollection;
    // [ default ] interface IUnknown
    // interface IAgVACalcObjectCollection

struct __declspec(uuid("49263115-e983-4fd5-8982-eef1c509e698"))
AgVAConstraintCollection;
    // [ default ] interface IUnknown
    // interface IAgVAConstraintCollection

struct __declspec(uuid("aecdd8ed-ad71-4c0c-9bf0-fe04abc05071"))
AgVAPluginProperties;
    // [ default ] interface _IAgVAPluginProperties
    // interface IAgVAPluginProperties

struct __declspec(uuid("8847ccee-042a-43de-869d-3f989e001d2b"))
_IAgVAPluginProperties : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAvailableProperties))
    SAFEARRAY * AvailableProperties;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetProperty (
        _bstr_t Path );
    HRESULT SetProperty (
        _bstr_t Path,
        const _variant_t & PropertyValue );
    SAFEARRAY * GetAvailableProperties ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_GetProperty (
        /*[in]*/ BSTR Path,
        /*[out,retval]*/ VARIANT * pPropertyValue ) = 0;
      virtual HRESULT __stdcall raw_SetProperty (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT PropertyValue ) = 0;
      virtual HRESULT __stdcall get_AvailableProperties (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

struct __declspec(uuid("fe9f515a-a732-44ea-8a2b-f1498f2c826b"))
AgVAProfileSearchPlugin;
    // [ default ] interface _IAgVAProfileSearchPlugin
    // interface IAgVAProfile
    // interface IAgVAProfileSearchPlugin
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("fb97ce89-e402-4e26-890a-0af44dd73e91"))
IAgVASearchPluginControl : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetControlName))
    _bstr_t ControlName;
    __declspec(property(get=GetCurrentValue,put=PutCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentSegmentName))
    _bstr_t ParentSegmentName;
    __declspec(property(get=GetInitialValue))
    _variant_t InitialValue;
    __declspec(property(get=GetPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetControlName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentSegmentName ( );
    _variant_t GetInitialValue ( );
    _bstr_t GetPluginIdentifier ( );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    _bstr_t GetDimension ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );
    void PutCurrentValue (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ControlName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
      virtual HRESULT __stdcall put_CurrentValue (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("89c633fa-88b5-49cc-9bb5-0464848d75b3"))
IAgVASearchPluginControlCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVASearchPluginControlPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVASearchPluginControlPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVASearchPluginControlPtr GetControlByPaths (
        _bstr_t ObjectPath,
        _bstr_t ControlPath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVASearchPluginControl * * SearchPluginControl ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_GetControlByPaths (
        /*[in]*/ BSTR ObjectPath,
        /*[in]*/ BSTR ControlPath,
        /*[out,retval]*/ struct IAgVASearchPluginControl * * SearchPluginControl ) = 0;
};

struct __declspec(uuid("6ca55b29-84e0-41a2-9d80-48badf59527e"))
IAgVASearchPluginResult : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetResultName))
    _bstr_t ResultName;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentSegmentName))
    _bstr_t ParentSegmentName;
    __declspec(property(get=GetPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetResultName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentSegmentName ( );
    _bstr_t GetPluginIdentifier ( );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    _bstr_t GetDimension ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ResultName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

struct __declspec(uuid("13bdda69-c51c-4698-ac8a-890ed451bb77"))
IAgVASearchPluginResultCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVASearchPluginResultPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVASearchPluginResultPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVASearchPluginResultPtr GetResultByPaths (
        _bstr_t ObjectPath,
        _bstr_t ResultPath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVASearchPluginResult * * SearchConstraintResult ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultByPaths (
        /*[in]*/ BSTR ObjectPath,
        /*[in]*/ BSTR ResultPath,
        /*[out,retval]*/ struct IAgVASearchPluginResult * * SearchConstraintResult ) = 0;
};

struct __declspec(uuid("512fd513-a76f-4f38-9deb-1884867e64cb"))
IAgVATargeterGraphActiveControl : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetShowGraphValue,put=PutShowGraphValue))
    VARIANT_BOOL ShowGraphValue;
    __declspec(property(get=GetLineColor,put=PutLineColor))
    OLE_COLOR LineColor;
    __declspec(property(get=GetPointStyle,put=PutPointStyle))
    _bstr_t PointStyle;
    __declspec(property(get=GetYAxis,put=PutYAxis))
    _bstr_t YAxis;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    _bstr_t GetParentName ( );
    VARIANT_BOOL GetShowGraphValue ( );
    void PutShowGraphValue (
        VARIANT_BOOL pVal );
    OLE_COLOR GetLineColor ( );
    void PutLineColor (
        OLE_COLOR pValue );
    _bstr_t GetPointStyle ( );
    void PutPointStyle (
        _bstr_t pRetVal );
    _bstr_t GetYAxis ( );
    void PutYAxis (
        _bstr_t pRetVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ShowGraphValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowGraphValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_LineColor (
        /*[out,retval]*/ OLE_COLOR * pValue ) = 0;
      virtual HRESULT __stdcall put_LineColor (
        /*[in]*/ OLE_COLOR pValue ) = 0;
      virtual HRESULT __stdcall get_PointStyle (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_PointStyle (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_YAxis (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_YAxis (
        /*[in]*/ BSTR pRetVal ) = 0;
};

struct __declspec(uuid("f916a6c5-b0c8-44df-bddd-c0a6c550f388"))
IAgVATargeterGraphActiveControlCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVATargeterGraphActiveControlPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVATargeterGraphActiveControlPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVATargeterGraphActiveControl * * DCControl ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

enum AgEVAGraphOption
{
    eVAGraphOptionNoGraph = 0,
    eVAGraphOptionGraphDifference = 1,
    eVAGraphOptionGraphValue = 2
};

struct __declspec(uuid("06a729b7-eb9d-41b7-8cf9-fe2f8231ea32"))
IAgVATargeterGraphResult : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetShowDesiredValue,put=PutShowDesiredValue))
    VARIANT_BOOL ShowDesiredValue;
    __declspec(property(get=GetLineColor,put=PutLineColor))
    OLE_COLOR LineColor;
    __declspec(property(get=GetPointStyle,put=PutPointStyle))
    _bstr_t PointStyle;
    __declspec(property(get=GetYAxis,put=PutYAxis))
    _bstr_t YAxis;
    __declspec(property(get=GetGraphOption,put=PutGraphOption))
    enum AgEVAGraphOption GraphOption;
    __declspec(property(get=GetShowToleranceBand,put=PutShowToleranceBand))
    VARIANT_BOOL ShowToleranceBand;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    _bstr_t GetParentName ( );
    VARIANT_BOOL GetShowDesiredValue ( );
    void PutShowDesiredValue (
        VARIANT_BOOL pVal );
    OLE_COLOR GetLineColor ( );
    void PutLineColor (
        OLE_COLOR pValue );
    _bstr_t GetPointStyle ( );
    void PutPointStyle (
        _bstr_t pRetVal );
    _bstr_t GetYAxis ( );
    void PutYAxis (
        _bstr_t pRetVal );
    enum AgEVAGraphOption GetGraphOption ( );
    void PutGraphOption (
        enum AgEVAGraphOption pRetVal );
    VARIANT_BOOL GetShowToleranceBand ( );
    void PutShowToleranceBand (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ShowDesiredValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowDesiredValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_LineColor (
        /*[out,retval]*/ OLE_COLOR * pValue ) = 0;
      virtual HRESULT __stdcall put_LineColor (
        /*[in]*/ OLE_COLOR pValue ) = 0;
      virtual HRESULT __stdcall get_PointStyle (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_PointStyle (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_YAxis (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_YAxis (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_GraphOption (
        /*[out,retval]*/ enum AgEVAGraphOption * pRetVal ) = 0;
      virtual HRESULT __stdcall put_GraphOption (
        /*[in]*/ enum AgEVAGraphOption pRetVal ) = 0;
      virtual HRESULT __stdcall get_ShowToleranceBand (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowToleranceBand (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("ef9caa6e-47dd-42c9-92cc-4e2e53c42fb5"))
IAgVATargeterGraphResultCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVATargeterGraphResultPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVATargeterGraphResultPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVATargeterGraphResult * * DCControl ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("e8b394c7-7726-4643-8069-3be5c4de4820"))
IAgVATargeterGraph : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetGenerateOnRun,put=PutGenerateOnRun))
    VARIANT_BOOL GenerateOnRun;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetShowLabelIterations,put=PutShowLabelIterations))
    VARIANT_BOOL ShowLabelIterations;
    __declspec(property(get=GetShowDesiredValue,put=PutShowDesiredValue))
    VARIANT_BOOL ShowDesiredValue;
    __declspec(property(get=GetShowToleranceBand,put=PutShowToleranceBand))
    VARIANT_BOOL ShowToleranceBand;
    __declspec(property(get=GetIndependentVariable,put=PutIndependentVariable))
    _bstr_t IndependentVariable;
    __declspec(property(get=GetActiveControls))
    IAgVATargeterGraphActiveControlCollectionPtr ActiveControls;
    __declspec(property(get=GetResults))
    IAgVATargeterGraphResultCollectionPtr Results;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pRetVal );
    VARIANT_BOOL GetGenerateOnRun ( );
    void PutGenerateOnRun (
        VARIANT_BOOL pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    VARIANT_BOOL GetShowLabelIterations ( );
    void PutShowLabelIterations (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetShowDesiredValue ( );
    void PutShowDesiredValue (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetShowToleranceBand ( );
    void PutShowToleranceBand (
        VARIANT_BOOL pVal );
    _bstr_t GetIndependentVariable ( );
    void PutIndependentVariable (
        _bstr_t pRetVal );
    IAgVATargeterGraphActiveControlCollectionPtr GetActiveControls ( );
    IAgVATargeterGraphResultCollectionPtr GetResults ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_GenerateOnRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_GenerateOnRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ShowLabelIterations (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowLabelIterations (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ShowDesiredValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowDesiredValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ShowToleranceBand (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowToleranceBand (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IndependentVariable (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_IndependentVariable (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_ActiveControls (
        /*[out,retval]*/ struct IAgVATargeterGraphActiveControlCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVATargeterGraphResultCollection * * ppRetVal ) = 0;
};

struct __declspec(uuid("efb1922e-c26f-4766-ae88-cf8912b98941"))
IAgVATargeterGraphCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVATargeterGraphPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVATargeterGraphPtr GetItem (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVATargeterGraphPtr AddGraph ( );
    HRESULT RemoveGraph (
        const _variant_t & IndexOrName );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    HRESULT Cut (
        const _variant_t & IndexOrName );
    IAgVATargeterGraphPtr Paste ( );
    IAgVATargeterGraphPtr InsertCopy (
        struct IAgVATargeterGraph * Graph );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IAgVATargeterGraph * * TargeterGraph ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_AddGraph (
        /*[out,retval]*/ struct IAgVATargeterGraph * * TargeterGraph ) = 0;
      virtual HRESULT __stdcall raw_RemoveGraph (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[out,retval]*/ struct IAgVATargeterGraph * * ppGraph ) = 0;
      virtual HRESULT __stdcall raw_InsertCopy (
        /*[in]*/ struct IAgVATargeterGraph * Graph,
        /*[out,retval]*/ struct IAgVATargeterGraph * * ppRetVal ) = 0;
};

struct __declspec(uuid("82b02365-546e-47a8-844b-6f3cf8582826"))
_IAgVAProfileSearchPlugin : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;
    __declspec(property(get=GetControls))
    IAgVASearchPluginControlCollectionPtr Controls;
    __declspec(property(get=GetResults))
    IAgVASearchPluginResultCollectionPtr Results;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;
    __declspec(property(get=GetResetControlsBeforeRun,put=PutResetControlsBeforeRun))
    VARIANT_BOOL ResetControlsBeforeRun;
    __declspec(property(get=GetTargeterGraphs))
    IAgVATargeterGraphCollectionPtr TargeterGraphs;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    IAgVASearchPluginControlCollectionPtr GetControls ( );
    IAgVASearchPluginResultCollectionPtr GetResults ( );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    _bstr_t GetPluginIdentifier ( );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    VARIANT_BOOL GetResetControlsBeforeRun ( );
    void PutResetControlsBeforeRun (
        VARIANT_BOOL pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    IAgVATargeterGraphCollectionPtr GetTargeterGraphs ( );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_Controls (
        /*[out,retval]*/ struct IAgVASearchPluginControlCollection * * ppVASearchPluginControlCollection ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVASearchPluginResultCollection * * ppSearchPluginResultCollection ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ResetControlsBeforeRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetControlsBeforeRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_TargeterGraphs (
        /*[out,retval]*/ struct IAgVATargeterGraphCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

struct __declspec(uuid("ff7233d2-85de-40df-9638-99164b439f0b"))
IAgVAProfileSearchPlugin : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetControls))
    IAgVASearchPluginControlCollectionPtr Controls;
    __declspec(property(get=GetResults))
    IAgVASearchPluginResultCollectionPtr Results;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;
    __declspec(property(get=GetResetControlsBeforeRun,put=PutResetControlsBeforeRun))
    VARIANT_BOOL ResetControlsBeforeRun;
    __declspec(property(get=GetTargeterGraphs))
    IAgVATargeterGraphCollectionPtr TargeterGraphs;

    //
    // Wrapper methods for error-handling
    //

    IAgVASearchPluginControlCollectionPtr GetControls ( );
    IAgVASearchPluginResultCollectionPtr GetResults ( );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    _bstr_t GetPluginIdentifier ( );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    VARIANT_BOOL GetResetControlsBeforeRun ( );
    void PutResetControlsBeforeRun (
        VARIANT_BOOL pVal );
    IAgVATargeterGraphCollectionPtr GetTargeterGraphs ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Controls (
        /*[out,retval]*/ struct IAgVASearchPluginControlCollection * * ppSearchPluginControlCollection ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVASearchPluginResultCollection * * ppSearchPluginResultCollection ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ResetControlsBeforeRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetControlsBeforeRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_TargeterGraphs (
        /*[out,retval]*/ struct IAgVATargeterGraphCollection * * ppRetVal ) = 0;
};

struct __declspec(uuid("4e12c4ce-05cb-4db2-9ae0-27183ef680d6"))
AgVAProfileDEOptimizer;
    // [ default ] interface _IAgVAProfileDEOptimizer
    // interface IAgVAProfile
    // interface IAgVAProfileDEOptimizer
    // interface IAgRuntimeTypeInfoProvider

enum AgEVADEScalingMethod
{
    eVADEScalingMethodAuto = 0,
    eVADEScalingMethodCustom = 1,
    eVADEScalingMethodInitialValue = 2,
    eVADEScalingMethodNone = 3
};

struct __declspec(uuid("7d276492-c5a6-4967-ad63-ad322038766c"))
IAgVADEControl : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetInitialValue))
    _variant_t InitialValue;
    __declspec(property(get=GetPerturbation,put=PutPerturbation))
    _variant_t Perturbation;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingMethod,put=PutScalingMethod))
    enum AgEVADEScalingMethod ScalingMethod;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentName ( );
    _variant_t GetInitialValue ( );
    _variant_t GetPerturbation ( );
    void PutPerturbation (
        const _variant_t & pVal );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    enum AgEVADEScalingMethod GetScalingMethod ( );
    void PutScalingMethod (
        enum AgEVADEScalingMethod pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    _bstr_t GetDimension ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_Perturbation (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Perturbation (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingMethod (
        /*[out,retval]*/ enum AgEVADEScalingMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingMethod (
        /*[in]*/ enum AgEVADEScalingMethod pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

struct __declspec(uuid("f1dbf2cc-ee4c-4868-9964-3cbae130e4ec"))
IAgVADEControlCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVADEControlPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVADEControlPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVADEControlPtr GetControlByPaths (
        _bstr_t ObjectPath,
        _bstr_t ControlPath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVADEControl * * DEControl ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_GetControlByPaths (
        /*[in]*/ BSTR ObjectPath,
        /*[in]*/ BSTR ControlPath,
        /*[out,retval]*/ struct IAgVADEControl * * DEControl ) = 0;
};

enum AgEVADEGoal
{
    eVADEGoalConstraint = 0,
    eVADEGoalMaximize = 1,
    eVADEGoalMinimize = 2,
    eVADEGoalMaximizePlusConstraint = 3,
    eVADEGoalMinimizePlusConstraint = 4
};

struct __declspec(uuid("d9da016b-90e0-41da-bd41-d010465822e0"))
IAgVADEResult : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingMethod,put=PutScalingMethod))
    enum AgEVADEScalingMethod ScalingMethod;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetWeight,put=PutWeight))
    double Weight;
    __declspec(property(get=GetGoal,put=PutGoal))
    enum AgEVADEGoal Goal;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentName ( );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    enum AgEVADEScalingMethod GetScalingMethod ( );
    void PutScalingMethod (
        enum AgEVADEScalingMethod pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    double GetWeight ( );
    void PutWeight (
        double pVal );
    enum AgEVADEGoal GetGoal ( );
    void PutGoal (
        enum AgEVADEGoal pVal );
    _bstr_t GetDimension ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingMethod (
        /*[out,retval]*/ enum AgEVADEScalingMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingMethod (
        /*[in]*/ enum AgEVADEScalingMethod pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Goal (
        /*[out,retval]*/ enum AgEVADEGoal * pVal ) = 0;
      virtual HRESULT __stdcall put_Goal (
        /*[in]*/ enum AgEVADEGoal pVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

struct __declspec(uuid("44e02d02-dacb-4b14-9e31-c80fa54b6f40"))
IAgVADEResultCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVADEResultPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVADEResultPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVADEResultPtr GetResultByPaths (
        _bstr_t ObjectPath,
        _bstr_t ResultPath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVADEResult * * DEResult ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultByPaths (
        /*[in]*/ BSTR ObjectPath,
        /*[in]*/ BSTR ResultPath,
        /*[out,retval]*/ struct IAgVADEResult * * DEResult ) = 0;
};

struct __declspec(uuid("5ae51995-e397-4ae8-a9c3-f94ae6617959"))
_IAgVAProfileDEOptimizer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetControlParameters))
    IAgVADEControlCollectionPtr ControlParameters;
    __declspec(property(get=GetResults))
    IAgVADEResultCollectionPtr Results;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;
    __declspec(property(get=GetEnableDisplayStatus,put=PutEnableDisplayStatus))
    VARIANT_BOOL EnableDisplayStatus;
    __declspec(property(get=GetResetControlsBeforeRun,put=PutResetControlsBeforeRun))
    VARIANT_BOOL ResetControlsBeforeRun;
    __declspec(property(get=GetGenerateResultsFile,put=PutGenerateResultsFile))
    VARIANT_BOOL GenerateResultsFile;
    __declspec(property(get=GetUseDefaults,put=PutUseDefaults))
    VARIANT_BOOL UseDefaults;
    __declspec(property(get=GetUseAdvancedDefaults,put=PutUseAdvancedDefaults))
    VARIANT_BOOL UseAdvancedDefaults;
    __declspec(property(get=GetUseGlobalPerturbationSize,put=PutUseGlobalPerturbationSize))
    VARIANT_BOOL UseGlobalPerturbationSize;
    __declspec(property(get=GetToleranceOnObjectiveFunction,put=PutToleranceOnObjectiveFunction))
    double ToleranceOnObjectiveFunction;
    __declspec(property(get=GetToleranceOnConstraintFeasibility,put=PutToleranceOnConstraintFeasibility))
    double ToleranceOnConstraintFeasibility;
    __declspec(property(get=GetToleranceOnProjectedGradient,put=PutToleranceOnProjectedGradient))
    double ToleranceOnProjectedGradient;
    __declspec(property(get=GetSummaryLog))
    _bstr_t SummaryLog;
    __declspec(property(get=GetDetailLog))
    _bstr_t DetailLog;
    __declspec(property(get=GetEngineLog))
    _bstr_t EngineLog;
    __declspec(property(get=GetPerturbationSize,put=PutPerturbationSize))
    double PerturbationSize;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;
    __declspec(property(get=GetEnforceDesignVariableBounds,put=PutEnforceDesignVariableBounds))
    VARIANT_BOOL EnforceDesignVariableBounds;
    __declspec(property(get=GetTargeterGraphs))
    IAgVATargeterGraphCollectionPtr TargeterGraphs;
    __declspec(property(get=GetMaxEvaluations,put=PutMaxEvaluations))
    long MaxEvaluations;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    IAgVADEControlCollectionPtr GetControlParameters ( );
    IAgVADEResultCollectionPtr GetResults ( );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );
    VARIANT_BOOL GetEnableDisplayStatus ( );
    void PutEnableDisplayStatus (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetResetControlsBeforeRun ( );
    void PutResetControlsBeforeRun (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetGenerateResultsFile ( );
    void PutGenerateResultsFile (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseDefaults ( );
    void PutUseDefaults (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseAdvancedDefaults ( );
    void PutUseAdvancedDefaults (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseGlobalPerturbationSize ( );
    void PutUseGlobalPerturbationSize (
        VARIANT_BOOL pVal );
    double GetToleranceOnObjectiveFunction ( );
    void PutToleranceOnObjectiveFunction (
        double pVal );
    double GetToleranceOnConstraintFeasibility ( );
    void PutToleranceOnConstraintFeasibility (
        double pVal );
    double GetToleranceOnProjectedGradient ( );
    void PutToleranceOnProjectedGradient (
        double pVal );
    _bstr_t GetSummaryLog ( );
    _bstr_t GetDetailLog ( );
    _bstr_t GetEngineLog ( );
    double GetPerturbationSize ( );
    void PutPerturbationSize (
        double pVal );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    VARIANT_BOOL GetEnforceDesignVariableBounds ( );
    void PutEnforceDesignVariableBounds (
        VARIANT_BOOL pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    IAgVATargeterGraphCollectionPtr GetTargeterGraphs ( );
    long GetMaxEvaluations ( );
    void PutMaxEvaluations (
        long pVal );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParameters (
        /*[out,retval]*/ struct IAgVADEControlCollection * * ppVADEControlCollection ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVADEResultCollection * * ppVADEResultCollection ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_EnableDisplayStatus (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableDisplayStatus (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ResetControlsBeforeRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetControlsBeforeRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_GenerateResultsFile (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_GenerateResultsFile (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseDefaults (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseDefaults (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseAdvancedDefaults (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseAdvancedDefaults (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseGlobalPerturbationSize (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseGlobalPerturbationSize (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnObjectiveFunction (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnObjectiveFunction (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnConstraintFeasibility (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnConstraintFeasibility (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnProjectedGradient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnProjectedGradient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SummaryLog (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_DetailLog (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_EngineLog (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PerturbationSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PerturbationSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_EnforceDesignVariableBounds (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnforceDesignVariableBounds (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_TargeterGraphs (
        /*[out,retval]*/ struct IAgVATargeterGraphCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_MaxEvaluations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxEvaluations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

struct __declspec(uuid("553aafa8-fa51-45b2-affc-cfac90e5e938"))
IAgVAProfileDEOptimizer : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetControlParameters))
    IAgVADEControlCollectionPtr ControlParameters;
    __declspec(property(get=GetResults))
    IAgVADEResultCollectionPtr Results;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;
    __declspec(property(get=GetEnableDisplayStatus,put=PutEnableDisplayStatus))
    VARIANT_BOOL EnableDisplayStatus;
    __declspec(property(get=GetResetControlsBeforeRun,put=PutResetControlsBeforeRun))
    VARIANT_BOOL ResetControlsBeforeRun;
    __declspec(property(get=GetGenerateResultsFile,put=PutGenerateResultsFile))
    VARIANT_BOOL GenerateResultsFile;
    __declspec(property(get=GetUseDefaults,put=PutUseDefaults))
    VARIANT_BOOL UseDefaults;
    __declspec(property(get=GetUseAdvancedDefaults,put=PutUseAdvancedDefaults))
    VARIANT_BOOL UseAdvancedDefaults;
    __declspec(property(get=GetUseGlobalPerturbationSize,put=PutUseGlobalPerturbationSize))
    VARIANT_BOOL UseGlobalPerturbationSize;
    __declspec(property(get=GetToleranceOnObjectiveFunction,put=PutToleranceOnObjectiveFunction))
    double ToleranceOnObjectiveFunction;
    __declspec(property(get=GetToleranceOnConstraintFeasibility,put=PutToleranceOnConstraintFeasibility))
    double ToleranceOnConstraintFeasibility;
    __declspec(property(get=GetToleranceOnProjectedGradient,put=PutToleranceOnProjectedGradient))
    double ToleranceOnProjectedGradient;
    __declspec(property(get=GetSummaryLog))
    _bstr_t SummaryLog;
    __declspec(property(get=GetDetailLog))
    _bstr_t DetailLog;
    __declspec(property(get=GetEngineLog))
    _bstr_t EngineLog;
    __declspec(property(get=GetPerturbationSize,put=PutPerturbationSize))
    double PerturbationSize;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;
    __declspec(property(get=GetEnforceDesignVariableBounds,put=PutEnforceDesignVariableBounds))
    VARIANT_BOOL EnforceDesignVariableBounds;
    __declspec(property(get=GetTargeterGraphs))
    IAgVATargeterGraphCollectionPtr TargeterGraphs;
    __declspec(property(get=GetMaxEvaluations,put=PutMaxEvaluations))
    long MaxEvaluations;

    //
    // Wrapper methods for error-handling
    //

    IAgVADEControlCollectionPtr GetControlParameters ( );
    IAgVADEResultCollectionPtr GetResults ( );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );
    VARIANT_BOOL GetEnableDisplayStatus ( );
    void PutEnableDisplayStatus (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetResetControlsBeforeRun ( );
    void PutResetControlsBeforeRun (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetGenerateResultsFile ( );
    void PutGenerateResultsFile (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseDefaults ( );
    void PutUseDefaults (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseAdvancedDefaults ( );
    void PutUseAdvancedDefaults (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseGlobalPerturbationSize ( );
    void PutUseGlobalPerturbationSize (
        VARIANT_BOOL pVal );
    double GetToleranceOnObjectiveFunction ( );
    void PutToleranceOnObjectiveFunction (
        double pVal );
    double GetToleranceOnConstraintFeasibility ( );
    void PutToleranceOnConstraintFeasibility (
        double pVal );
    double GetToleranceOnProjectedGradient ( );
    void PutToleranceOnProjectedGradient (
        double pVal );
    _bstr_t GetSummaryLog ( );
    _bstr_t GetDetailLog ( );
    _bstr_t GetEngineLog ( );
    double GetPerturbationSize ( );
    void PutPerturbationSize (
        double pVal );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    VARIANT_BOOL GetEnforceDesignVariableBounds ( );
    void PutEnforceDesignVariableBounds (
        VARIANT_BOOL pVal );
    IAgVATargeterGraphCollectionPtr GetTargeterGraphs ( );
    long GetMaxEvaluations ( );
    void PutMaxEvaluations (
        long pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ControlParameters (
        /*[out,retval]*/ struct IAgVADEControlCollection * * ppVADEControlCollection ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVADEResultCollection * * ppVADEResultCollection ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_EnableDisplayStatus (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableDisplayStatus (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ResetControlsBeforeRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetControlsBeforeRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_GenerateResultsFile (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_GenerateResultsFile (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseDefaults (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseDefaults (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseAdvancedDefaults (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseAdvancedDefaults (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseGlobalPerturbationSize (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseGlobalPerturbationSize (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnObjectiveFunction (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnObjectiveFunction (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnConstraintFeasibility (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnConstraintFeasibility (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnProjectedGradient (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnProjectedGradient (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SummaryLog (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_DetailLog (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_EngineLog (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PerturbationSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_PerturbationSize (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_EnforceDesignVariableBounds (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnforceDesignVariableBounds (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_TargeterGraphs (
        /*[out,retval]*/ struct IAgVATargeterGraphCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_MaxEvaluations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxEvaluations (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("1460370e-2786-4f57-b22a-432a559c7a8f"))
AgVATargeterGraph;
    // [ default ] interface _IAgVATargeterGraph
    // interface IAgVATargeterGraph
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("8654f4b7-d53d-44bc-96e3-6223eb18c013"))
_IAgVATargeterGraph : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetGenerateOnRun,put=PutGenerateOnRun))
    VARIANT_BOOL GenerateOnRun;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetShowLabelIterations,put=PutShowLabelIterations))
    VARIANT_BOOL ShowLabelIterations;
    __declspec(property(get=GetShowDesiredValue,put=PutShowDesiredValue))
    VARIANT_BOOL ShowDesiredValue;
    __declspec(property(get=GetShowToleranceBand,put=PutShowToleranceBand))
    VARIANT_BOOL ShowToleranceBand;
    __declspec(property(get=GetIndependentVariable,put=PutIndependentVariable))
    _bstr_t IndependentVariable;
    __declspec(property(get=GetActiveControls))
    IAgVATargeterGraphActiveControlCollectionPtr ActiveControls;
    __declspec(property(get=GetResults))
    IAgVATargeterGraphResultCollectionPtr Results;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pRetVal );
    VARIANT_BOOL GetGenerateOnRun ( );
    void PutGenerateOnRun (
        VARIANT_BOOL pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    VARIANT_BOOL GetShowLabelIterations ( );
    void PutShowLabelIterations (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetShowDesiredValue ( );
    void PutShowDesiredValue (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetShowToleranceBand ( );
    void PutShowToleranceBand (
        VARIANT_BOOL pVal );
    _bstr_t GetIndependentVariable ( );
    void PutIndependentVariable (
        _bstr_t pRetVal );
    IAgVATargeterGraphActiveControlCollectionPtr GetActiveControls ( );
    IAgVATargeterGraphResultCollectionPtr GetResults ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_GenerateOnRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_GenerateOnRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ShowLabelIterations (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowLabelIterations (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ShowDesiredValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowDesiredValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ShowToleranceBand (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowToleranceBand (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IndependentVariable (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_IndependentVariable (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_ActiveControls (
        /*[out,retval]*/ struct IAgVATargeterGraphActiveControlCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVATargeterGraphResultCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("a100e0cc-731f-4080-a2d1-9eab1623507c"))
AgVATargeterGraphCollection;
    // [ default ] interface IUnknown
    // interface IAgVATargeterGraphCollection
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("560f5890-4ff0-4375-89fe-1366480647fc"))
AgVATargeterGraphResultCollection;
    // [ default ] interface IUnknown
    // interface IAgVATargeterGraphResultCollection
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("1d7f4d5f-e6cb-418d-a86e-4960bc29248f"))
AgVATargeterGraphActiveControlCollection;
    // [ default ] interface IUnknown
    // interface IAgVATargeterGraphActiveControlCollection
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("d2adfc52-149e-42f9-a426-1f30518caf99"))
AgVATargeterGraphActiveControl;
    // [ default ] interface _IAgVATargeterGraphActiveControl
    // interface IAgVATargeterGraphActiveControl
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("eb597747-7374-40ff-a91b-60ad927242b7"))
_IAgVATargeterGraphActiveControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetShowGraphValue,put=PutShowGraphValue))
    VARIANT_BOOL ShowGraphValue;
    __declspec(property(get=GetLineColor,put=PutLineColor))
    OLE_COLOR LineColor;
    __declspec(property(get=GetPointStyle,put=PutPointStyle))
    _bstr_t PointStyle;
    __declspec(property(get=GetYAxis,put=PutYAxis))
    _bstr_t YAxis;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    _bstr_t GetParentName ( );
    VARIANT_BOOL GetShowGraphValue ( );
    void PutShowGraphValue (
        VARIANT_BOOL pVal );
    OLE_COLOR GetLineColor ( );
    void PutLineColor (
        OLE_COLOR pValue );
    _bstr_t GetPointStyle ( );
    void PutPointStyle (
        _bstr_t pRetVal );
    _bstr_t GetYAxis ( );
    void PutYAxis (
        _bstr_t pRetVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ShowGraphValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowGraphValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_LineColor (
        /*[out,retval]*/ OLE_COLOR * pValue ) = 0;
      virtual HRESULT __stdcall put_LineColor (
        /*[in]*/ OLE_COLOR pValue ) = 0;
      virtual HRESULT __stdcall get_PointStyle (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_PointStyle (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_YAxis (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_YAxis (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("a736d160-e2a4-4655-818e-dd7212940dbb"))
AgVATargeterGraphResult;
    // [ default ] interface _IAgVATargeterGraphResult
    // interface IAgVATargeterGraphResult
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("e0764be4-9b75-481c-a330-b666f175e862"))
_IAgVATargeterGraphResult : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetShowDesiredValue,put=PutShowDesiredValue))
    VARIANT_BOOL ShowDesiredValue;
    __declspec(property(get=GetLineColor,put=PutLineColor))
    OLE_COLOR LineColor;
    __declspec(property(get=GetPointStyle,put=PutPointStyle))
    _bstr_t PointStyle;
    __declspec(property(get=GetYAxis,put=PutYAxis))
    _bstr_t YAxis;
    __declspec(property(get=GetGraphOption,put=PutGraphOption))
    enum AgEVAGraphOption GraphOption;
    __declspec(property(get=GetShowToleranceBand,put=PutShowToleranceBand))
    VARIANT_BOOL ShowToleranceBand;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    _bstr_t GetParentName ( );
    VARIANT_BOOL GetShowDesiredValue ( );
    void PutShowDesiredValue (
        VARIANT_BOOL pVal );
    OLE_COLOR GetLineColor ( );
    void PutLineColor (
        OLE_COLOR pValue );
    _bstr_t GetPointStyle ( );
    void PutPointStyle (
        _bstr_t pRetVal );
    _bstr_t GetYAxis ( );
    void PutYAxis (
        _bstr_t pRetVal );
    enum AgEVAGraphOption GetGraphOption ( );
    void PutGraphOption (
        enum AgEVAGraphOption pRetVal );
    VARIANT_BOOL GetShowToleranceBand ( );
    void PutShowToleranceBand (
        VARIANT_BOOL pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ShowDesiredValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowDesiredValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_LineColor (
        /*[out,retval]*/ OLE_COLOR * pValue ) = 0;
      virtual HRESULT __stdcall put_LineColor (
        /*[in]*/ OLE_COLOR pValue ) = 0;
      virtual HRESULT __stdcall get_PointStyle (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_PointStyle (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_YAxis (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_YAxis (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_GraphOption (
        /*[out,retval]*/ enum AgEVAGraphOption * pRetVal ) = 0;
      virtual HRESULT __stdcall put_GraphOption (
        /*[in]*/ enum AgEVAGraphOption pRetVal ) = 0;
      virtual HRESULT __stdcall get_ShowToleranceBand (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowToleranceBand (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("e2a12665-a37c-4d6f-adbd-2376ccb5e3a9"))
AgVAProfileDifferentialCorrector;
    // [ default ] interface _IAgVAProfileDifferentialCorrector
    // interface IAgVAProfile
    // interface IAgVAProfileDifferentialCorrector
    // interface IAgRuntimeTypeInfoProvider

enum AgEVADCScalingMethod
{
    eVADCScalingMethodInitialValue = 0,
    eVADCScalingMethodOneNoScaling = 1,
    eVADCScalingMethodSpecifiedValue = 2,
    eVADCScalingMethodTolerance = 3
};

struct __declspec(uuid("a1712437-83b3-4ac4-b16f-a0edb20d8a05"))
IAgVADCControl : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetFinalValue))
    _variant_t FinalValue;
    __declspec(property(get=GetLastUpdate))
    _variant_t LastUpdate;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetInitialValue))
    _variant_t InitialValue;
    __declspec(property(get=GetPerturbation,put=PutPerturbation))
    _variant_t Perturbation;
    __declspec(property(get=GetCorrection,put=PutCorrection))
    _variant_t Correction;
    __declspec(property(get=GetTolerance,put=PutTolerance))
    _variant_t Tolerance;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    _variant_t MaxStep;
    __declspec(property(get=GetScalingMethod,put=PutScalingMethod))
    enum AgEVADCScalingMethod ScalingMethod;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetFinalValue ( );
    _variant_t GetLastUpdate ( );
    _bstr_t GetParentName ( );
    _variant_t GetInitialValue ( );
    _variant_t GetPerturbation ( );
    void PutPerturbation (
        const _variant_t & pVal );
    _variant_t GetCorrection ( );
    void PutCorrection (
        const _variant_t & pVal );
    _variant_t GetTolerance ( );
    void PutTolerance (
        const _variant_t & pVal );
    _variant_t GetMaxStep ( );
    void PutMaxStep (
        const _variant_t & pVal );
    enum AgEVADCScalingMethod GetScalingMethod ( );
    void PutScalingMethod (
        enum AgEVADCScalingMethod pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    _bstr_t GetDimension ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_FinalValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_LastUpdate (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_Perturbation (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Perturbation (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Correction (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Correction (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tolerance (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingMethod (
        /*[out,retval]*/ enum AgEVADCScalingMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingMethod (
        /*[in]*/ enum AgEVADCScalingMethod pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

struct __declspec(uuid("c9364860-373b-4229-a202-2e1789e703ec"))
IAgVADCControlCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVADCControlPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVADCControlPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVADCControlPtr GetControlByPaths (
        _bstr_t ObjectPath,
        _bstr_t ControlPath );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVADCControl * * DCControl ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_GetControlByPaths (
        /*[in]*/ BSTR ObjectPath,
        /*[in]*/ BSTR ControlPath,
        /*[out,retval]*/ struct IAgVADCControl * * DCControl ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("48c848ab-2268-4021-8f7f-6cf362008e0d"))
IAgVADCResult : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetDesiredValue,put=PutDesiredValue))
    _variant_t DesiredValue;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetDifference))
    _variant_t Difference;
    __declspec(property(get=GetTolerance,put=PutTolerance))
    _variant_t Tolerance;
    __declspec(property(get=GetScalingMethod,put=PutScalingMethod))
    enum AgEVADCScalingMethod ScalingMethod;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetWeight,put=PutWeight))
    double Weight;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetDesiredValue ( );
    void PutDesiredValue (
        const _variant_t & pVal );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentName ( );
    _variant_t GetDifference ( );
    _variant_t GetTolerance ( );
    void PutTolerance (
        const _variant_t & pVal );
    enum AgEVADCScalingMethod GetScalingMethod ( );
    void PutScalingMethod (
        enum AgEVADCScalingMethod pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    double GetWeight ( );
    void PutWeight (
        double pVal );
    _bstr_t GetDimension ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_DesiredValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_DesiredValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Difference (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tolerance (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingMethod (
        /*[out,retval]*/ enum AgEVADCScalingMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingMethod (
        /*[in]*/ enum AgEVADCScalingMethod pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

struct __declspec(uuid("539bffa0-81b9-4475-81aa-c69537e4108c"))
IAgVADCResultCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVADCResultPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVADCResultPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVADCResultPtr GetResultByPaths (
        _bstr_t ObjectPath,
        _bstr_t ResultPath );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVADCResult * * DCResult ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultByPaths (
        /*[in]*/ BSTR ObjectPath,
        /*[in]*/ BSTR ResultPath,
        /*[out,retval]*/ struct IAgVADCResult * * DCResult ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

enum AgEVAConvergenceCriteria
{
    eVAConvergenceCriteriaEqualityConstraintWithinTolerance = 0,
    eVAConvervenceCriteriaEitherEqualityConstraintsOrControlParams = 1
};

enum AgEVADeriveCalcMethod
{
    eVADeriveCalcMethodForward = 0,
    eVADeriveCalcMethodCentral = 1,
    eVADeriveCalcMethodSigned = 2
};

enum AgEVADrawPerturbation
{
    eVADrawPerturbationSegmentColor = 0,
    eVADrawPerturbationDontDraw = 1,
    eVADrawPerturbationTargeterColor = 2
};

enum AgEVARootFindingAlgorithm
{
    eVASecantMethod = 0,
    eVANewtonRaphsonMethod = 1
};

struct __declspec(uuid("d09d24df-89c5-4b6c-9189-0e424e80c43c"))
_IAgVAProfileDifferentialCorrector : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetControlParameters))
    IAgVADCControlCollectionPtr ControlParameters;
    __declspec(property(get=GetResults))
    IAgVADCResultCollectionPtr Results;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;
    __declspec(property(get=GetEnableDisplayStatus,put=PutEnableDisplayStatus))
    VARIANT_BOOL EnableDisplayStatus;
    __declspec(property(get=GetConvergenceCriteria,put=PutConvergenceCriteria))
    enum AgEVAConvergenceCriteria ConvergenceCriteria;
    __declspec(property(get=GetEnableLineSearch,put=PutEnableLineSearch))
    VARIANT_BOOL EnableLineSearch;
    __declspec(property(get=GetMaxLineSearchIterations,put=PutMaxLineSearchIterations))
    long MaxLineSearchIterations;
    __declspec(property(get=GetLineSearchLowerBound,put=PutLineSearchLowerBound))
    double LineSearchLowerBound;
    __declspec(property(get=GetLineSearchUpperBound,put=PutLineSearchUpperBound))
    double LineSearchUpperBound;
    __declspec(property(get=GetLineSearchTolerance,put=PutLineSearchTolerance))
    double LineSearchTolerance;
    __declspec(property(get=GetEnableHomotopy,put=PutEnableHomotopy))
    VARIANT_BOOL EnableHomotopy;
    __declspec(property(get=GetHomotopySteps,put=PutHomotopySteps))
    long HomotopySteps;
    __declspec(property(get=GetDerivativeCalcMethod,put=PutDerivativeCalcMethod))
    enum AgEVADeriveCalcMethod DerivativeCalcMethod;
    __declspec(property(get=GetClearCorrectionsBeforeRun,put=PutClearCorrectionsBeforeRun))
    VARIANT_BOOL ClearCorrectionsBeforeRun;
    __declspec(property(get=GetEnableBPlaneNominal,put=PutEnableBPlaneNominal))
    VARIANT_BOOL EnableBPlaneNominal;
    __declspec(property(get=GetEnableBPlanePerturbations,put=PutEnableBPlanePerturbations))
    VARIANT_BOOL EnableBPlanePerturbations;
    __declspec(property(get=GetDrawPerturbation,put=PutDrawPerturbation))
    enum AgEVADrawPerturbation DrawPerturbation;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;
    __declspec(property(get=GetRootFindingAlgorithm,put=PutRootFindingAlgorithm))
    enum AgEVARootFindingAlgorithm RootFindingAlgorithm;
    __declspec(property(get=GetNumIterations))
    long NumIterations;
    __declspec(property(get=GetTargeterGraphs))
    IAgVATargeterGraphCollectionPtr TargeterGraphs;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetStopOnLimitCycleDetection,put=PutStopOnLimitCycleDetection))
    VARIANT_BOOL StopOnLimitCycleDetection;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    IAgVADCControlCollectionPtr GetControlParameters ( );
    IAgVADCResultCollectionPtr GetResults ( );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );
    VARIANT_BOOL GetEnableDisplayStatus ( );
    void PutEnableDisplayStatus (
        VARIANT_BOOL pVal );
    enum AgEVAConvergenceCriteria GetConvergenceCriteria ( );
    void PutConvergenceCriteria (
        enum AgEVAConvergenceCriteria pVal );
    VARIANT_BOOL GetEnableLineSearch ( );
    void PutEnableLineSearch (
        VARIANT_BOOL pVal );
    long GetMaxLineSearchIterations ( );
    void PutMaxLineSearchIterations (
        long pVal );
    double GetLineSearchLowerBound ( );
    void PutLineSearchLowerBound (
        double pVal );
    double GetLineSearchUpperBound ( );
    void PutLineSearchUpperBound (
        double pVal );
    double GetLineSearchTolerance ( );
    void PutLineSearchTolerance (
        double pVal );
    VARIANT_BOOL GetEnableHomotopy ( );
    void PutEnableHomotopy (
        VARIANT_BOOL pVal );
    long GetHomotopySteps ( );
    void PutHomotopySteps (
        long pVal );
    enum AgEVADeriveCalcMethod GetDerivativeCalcMethod ( );
    void PutDerivativeCalcMethod (
        enum AgEVADeriveCalcMethod pVal );
    VARIANT_BOOL GetClearCorrectionsBeforeRun ( );
    void PutClearCorrectionsBeforeRun (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableBPlaneNominal ( );
    void PutEnableBPlaneNominal (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableBPlanePerturbations ( );
    void PutEnableBPlanePerturbations (
        VARIANT_BOOL pVal );
    enum AgEVADrawPerturbation GetDrawPerturbation ( );
    void PutDrawPerturbation (
        enum AgEVADrawPerturbation pVal );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    enum AgEVARootFindingAlgorithm GetRootFindingAlgorithm ( );
    void PutRootFindingAlgorithm (
        enum AgEVARootFindingAlgorithm pVal );
    long GetNumIterations ( );
    IAgVATargeterGraphCollectionPtr GetTargeterGraphs ( );
    VARIANT_BOOL GetStopOnLimitCycleDetection ( );
    void PutStopOnLimitCycleDetection (
        VARIANT_BOOL pVal );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParameters (
        /*[out,retval]*/ struct IAgVADCControlCollection * * ppVADCControlCollection ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVADCResultCollection * * ppVADCResultCollection ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_EnableDisplayStatus (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableDisplayStatus (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ConvergenceCriteria (
        /*[out,retval]*/ enum AgEVAConvergenceCriteria * pVal ) = 0;
      virtual HRESULT __stdcall put_ConvergenceCriteria (
        /*[in]*/ enum AgEVAConvergenceCriteria pVal ) = 0;
      virtual HRESULT __stdcall get_EnableLineSearch (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableLineSearch (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxLineSearchIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxLineSearchIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_LineSearchLowerBound (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LineSearchLowerBound (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LineSearchUpperBound (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LineSearchUpperBound (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LineSearchTolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LineSearchTolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EnableHomotopy (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableHomotopy (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_HomotopySteps (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_HomotopySteps (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DerivativeCalcMethod (
        /*[out,retval]*/ enum AgEVADeriveCalcMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_DerivativeCalcMethod (
        /*[in]*/ enum AgEVADeriveCalcMethod pVal ) = 0;
      virtual HRESULT __stdcall get_ClearCorrectionsBeforeRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ClearCorrectionsBeforeRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableBPlaneNominal (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableBPlaneNominal (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableBPlanePerturbations (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableBPlanePerturbations (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DrawPerturbation (
        /*[out,retval]*/ enum AgEVADrawPerturbation * pVal ) = 0;
      virtual HRESULT __stdcall put_DrawPerturbation (
        /*[in]*/ enum AgEVADrawPerturbation pVal ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_RootFindingAlgorithm (
        /*[out,retval]*/ enum AgEVARootFindingAlgorithm * pVal ) = 0;
      virtual HRESULT __stdcall put_RootFindingAlgorithm (
        /*[in]*/ enum AgEVARootFindingAlgorithm pVal ) = 0;
      virtual HRESULT __stdcall get_NumIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_TargeterGraphs (
        /*[out,retval]*/ struct IAgVATargeterGraphCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_StopOnLimitCycleDetection (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_StopOnLimitCycleDetection (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

struct __declspec(uuid("35303379-f39f-4106-abf1-bd8d83b4068e"))
IAgVAProfileDifferentialCorrector : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetControlParameters))
    IAgVADCControlCollectionPtr ControlParameters;
    __declspec(property(get=GetResults))
    IAgVADCResultCollectionPtr Results;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    long MaxIterations;
    __declspec(property(get=GetEnableDisplayStatus,put=PutEnableDisplayStatus))
    VARIANT_BOOL EnableDisplayStatus;
    __declspec(property(get=GetConvergenceCriteria,put=PutConvergenceCriteria))
    enum AgEVAConvergenceCriteria ConvergenceCriteria;
    __declspec(property(get=GetEnableLineSearch,put=PutEnableLineSearch))
    VARIANT_BOOL EnableLineSearch;
    __declspec(property(get=GetMaxLineSearchIterations,put=PutMaxLineSearchIterations))
    long MaxLineSearchIterations;
    __declspec(property(get=GetLineSearchLowerBound,put=PutLineSearchLowerBound))
    double LineSearchLowerBound;
    __declspec(property(get=GetLineSearchUpperBound,put=PutLineSearchUpperBound))
    double LineSearchUpperBound;
    __declspec(property(get=GetLineSearchTolerance,put=PutLineSearchTolerance))
    double LineSearchTolerance;
    __declspec(property(get=GetEnableHomotopy,put=PutEnableHomotopy))
    VARIANT_BOOL EnableHomotopy;
    __declspec(property(get=GetHomotopySteps,put=PutHomotopySteps))
    long HomotopySteps;
    __declspec(property(get=GetDerivativeCalcMethod,put=PutDerivativeCalcMethod))
    enum AgEVADeriveCalcMethod DerivativeCalcMethod;
    __declspec(property(get=GetClearCorrectionsBeforeRun,put=PutClearCorrectionsBeforeRun))
    VARIANT_BOOL ClearCorrectionsBeforeRun;
    __declspec(property(get=GetEnableBPlaneNominal,put=PutEnableBPlaneNominal))
    VARIANT_BOOL EnableBPlaneNominal;
    __declspec(property(get=GetEnableBPlanePerturbations,put=PutEnableBPlanePerturbations))
    VARIANT_BOOL EnableBPlanePerturbations;
    __declspec(property(get=GetDrawPerturbation,put=PutDrawPerturbation))
    enum AgEVADrawPerturbation DrawPerturbation;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;
    __declspec(property(get=GetRootFindingAlgorithm,put=PutRootFindingAlgorithm))
    enum AgEVARootFindingAlgorithm RootFindingAlgorithm;
    __declspec(property(get=GetNumIterations))
    long NumIterations;
    __declspec(property(get=GetTargeterGraphs))
    IAgVATargeterGraphCollectionPtr TargeterGraphs;
    __declspec(property(get=GetStopOnLimitCycleDetection,put=PutStopOnLimitCycleDetection))
    VARIANT_BOOL StopOnLimitCycleDetection;

    //
    // Wrapper methods for error-handling
    //

    IAgVADCControlCollectionPtr GetControlParameters ( );
    IAgVADCResultCollectionPtr GetResults ( );
    long GetMaxIterations ( );
    void PutMaxIterations (
        long pVal );
    VARIANT_BOOL GetEnableDisplayStatus ( );
    void PutEnableDisplayStatus (
        VARIANT_BOOL pVal );
    enum AgEVAConvergenceCriteria GetConvergenceCriteria ( );
    void PutConvergenceCriteria (
        enum AgEVAConvergenceCriteria pVal );
    VARIANT_BOOL GetEnableLineSearch ( );
    void PutEnableLineSearch (
        VARIANT_BOOL pVal );
    long GetMaxLineSearchIterations ( );
    void PutMaxLineSearchIterations (
        long pVal );
    double GetLineSearchLowerBound ( );
    void PutLineSearchLowerBound (
        double pVal );
    double GetLineSearchUpperBound ( );
    void PutLineSearchUpperBound (
        double pVal );
    double GetLineSearchTolerance ( );
    void PutLineSearchTolerance (
        double pVal );
    VARIANT_BOOL GetEnableHomotopy ( );
    void PutEnableHomotopy (
        VARIANT_BOOL pVal );
    long GetHomotopySteps ( );
    void PutHomotopySteps (
        long pVal );
    enum AgEVADeriveCalcMethod GetDerivativeCalcMethod ( );
    void PutDerivativeCalcMethod (
        enum AgEVADeriveCalcMethod pVal );
    VARIANT_BOOL GetClearCorrectionsBeforeRun ( );
    void PutClearCorrectionsBeforeRun (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableBPlaneNominal ( );
    void PutEnableBPlaneNominal (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableBPlanePerturbations ( );
    void PutEnableBPlanePerturbations (
        VARIANT_BOOL pVal );
    enum AgEVADrawPerturbation GetDrawPerturbation ( );
    void PutDrawPerturbation (
        enum AgEVADrawPerturbation pVal );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    enum AgEVARootFindingAlgorithm GetRootFindingAlgorithm ( );
    void PutRootFindingAlgorithm (
        enum AgEVARootFindingAlgorithm pVal );
    long GetNumIterations ( );
    IAgVATargeterGraphCollectionPtr GetTargeterGraphs ( );
    VARIANT_BOOL GetStopOnLimitCycleDetection ( );
    void PutStopOnLimitCycleDetection (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ControlParameters (
        /*[out,retval]*/ struct IAgVADCControlCollection * * ppVADCControlCollection ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVADCResultCollection * * ppVADCResultCollection ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_EnableDisplayStatus (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableDisplayStatus (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ConvergenceCriteria (
        /*[out,retval]*/ enum AgEVAConvergenceCriteria * pVal ) = 0;
      virtual HRESULT __stdcall put_ConvergenceCriteria (
        /*[in]*/ enum AgEVAConvergenceCriteria pVal ) = 0;
      virtual HRESULT __stdcall get_EnableLineSearch (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableLineSearch (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxLineSearchIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxLineSearchIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_LineSearchLowerBound (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LineSearchLowerBound (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LineSearchUpperBound (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LineSearchUpperBound (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_LineSearchTolerance (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LineSearchTolerance (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_EnableHomotopy (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableHomotopy (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_HomotopySteps (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_HomotopySteps (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DerivativeCalcMethod (
        /*[out,retval]*/ enum AgEVADeriveCalcMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_DerivativeCalcMethod (
        /*[in]*/ enum AgEVADeriveCalcMethod pVal ) = 0;
      virtual HRESULT __stdcall get_ClearCorrectionsBeforeRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ClearCorrectionsBeforeRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableBPlaneNominal (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableBPlaneNominal (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableBPlanePerturbations (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableBPlanePerturbations (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DrawPerturbation (
        /*[out,retval]*/ enum AgEVADrawPerturbation * pVal ) = 0;
      virtual HRESULT __stdcall put_DrawPerturbation (
        /*[in]*/ enum AgEVADrawPerturbation pVal ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_RootFindingAlgorithm (
        /*[out,retval]*/ enum AgEVARootFindingAlgorithm * pVal ) = 0;
      virtual HRESULT __stdcall put_RootFindingAlgorithm (
        /*[in]*/ enum AgEVARootFindingAlgorithm pVal ) = 0;
      virtual HRESULT __stdcall get_NumIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_TargeterGraphs (
        /*[out,retval]*/ struct IAgVATargeterGraphCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_StopOnLimitCycleDetection (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_StopOnLimitCycleDetection (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("97f00042-cee7-4e14-8382-6bd72952e509"))
AgVAProfileScriptingTool;
    // [ default ] interface _IAgVAProfileScriptingTool
    // interface IAgVAProfileScriptingTool
    // interface IAgVAProfile
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("8844eb26-748d-4065-9ea4-7595aadaa6af"))
_IAgVAProfileScriptingTool : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetSegmentProperties))
    IAgVAScriptingSegmentCollectionPtr SegmentProperties;
    __declspec(property(get=GetCalcObjects))
    IAgVAScriptingCalcObjectCollectionPtr CalcObjects;
    __declspec(property(get=GetParameters))
    IAgVAScriptingParameterCollectionPtr Parameters;
    __declspec(property(get=GetLanguageType,put=PutLanguageType))
    enum AgEVALanguage LanguageType;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pbstrVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    IAgVAScriptingSegmentCollectionPtr GetSegmentProperties ( );
    IAgVAScriptingCalcObjectCollectionPtr GetCalcObjects ( );
    IAgVAScriptingParameterCollectionPtr GetParameters ( );
    enum AgEVALanguage GetLanguageType ( );
    void PutLanguageType (
        enum AgEVALanguage pVal );
    HRESULT ScriptText (
        _bstr_t Script );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    HRESULT CopyToClipboard ( );
    HRESULT PasteFromClipboard ( );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pbstrVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pbstrVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentProperties (
        /*[out,retval]*/ struct IAgVAScriptingSegmentCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_CalcObjects (
        /*[out,retval]*/ struct IAgVAScriptingCalcObjectCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Parameters (
        /*[out,retval]*/ struct IAgVAScriptingParameterCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_LanguageType (
        /*[out,retval]*/ enum AgEVALanguage * pVal ) = 0;
      virtual HRESULT __stdcall put_LanguageType (
        /*[in]*/ enum AgEVALanguage pVal ) = 0;
      virtual HRESULT __stdcall raw_ScriptText (
        /*[in]*/ BSTR Script ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PasteFromClipboard ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

struct __declspec(uuid("c1d585d7-8e1b-4185-8a03-b3aec8886c01"))
IAgVAProfileScriptingTool : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetSegmentProperties))
    IAgVAScriptingSegmentCollectionPtr SegmentProperties;
    __declspec(property(get=GetCalcObjects))
    IAgVAScriptingCalcObjectCollectionPtr CalcObjects;
    __declspec(property(get=GetParameters))
    IAgVAScriptingParameterCollectionPtr Parameters;
    __declspec(property(get=GetLanguageType,put=PutLanguageType))
    enum AgEVALanguage LanguageType;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    IAgVAScriptingSegmentCollectionPtr GetSegmentProperties ( );
    IAgVAScriptingCalcObjectCollectionPtr GetCalcObjects ( );
    IAgVAScriptingParameterCollectionPtr GetParameters ( );
    enum AgEVALanguage GetLanguageType ( );
    void PutLanguageType (
        enum AgEVALanguage pVal );
    HRESULT ScriptText (
        _bstr_t Script );
    HRESULT CopyToClipboard ( );
    HRESULT PasteFromClipboard ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentProperties (
        /*[out,retval]*/ struct IAgVAScriptingSegmentCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_CalcObjects (
        /*[out,retval]*/ struct IAgVAScriptingCalcObjectCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Parameters (
        /*[out,retval]*/ struct IAgVAScriptingParameterCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_LanguageType (
        /*[out,retval]*/ enum AgEVALanguage * pVal ) = 0;
      virtual HRESULT __stdcall put_LanguageType (
        /*[in]*/ enum AgEVALanguage pVal ) = 0;
      virtual HRESULT __stdcall raw_ScriptText (
        /*[in]*/ BSTR Script ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PasteFromClipboard ( ) = 0;
};

struct __declspec(uuid("950e185e-b2f0-4046-ab80-a919ef3f07da"))
AgVADCControl;
    // [ default ] interface _IAgVADCControl
    // interface IAgVADCControl
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("e1ec091f-f480-4ffb-bb9a-80c2d43abc13"))
_IAgVADCControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetFinalValue))
    _variant_t FinalValue;
    __declspec(property(get=GetLastUpdate))
    _variant_t LastUpdate;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetInitialValue))
    _variant_t InitialValue;
    __declspec(property(get=GetPerturbation,put=PutPerturbation))
    _variant_t Perturbation;
    __declspec(property(get=GetCorrection,put=PutCorrection))
    _variant_t Correction;
    __declspec(property(get=GetTolerance,put=PutTolerance))
    _variant_t Tolerance;
    __declspec(property(get=GetMaxStep,put=PutMaxStep))
    _variant_t MaxStep;
    __declspec(property(get=GetScalingMethod,put=PutScalingMethod))
    enum AgEVADCScalingMethod ScalingMethod;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetFinalValue ( );
    _variant_t GetLastUpdate ( );
    _bstr_t GetParentName ( );
    _variant_t GetInitialValue ( );
    _variant_t GetPerturbation ( );
    void PutPerturbation (
        const _variant_t & pVal );
    _variant_t GetCorrection ( );
    void PutCorrection (
        const _variant_t & pVal );
    _variant_t GetTolerance ( );
    void PutTolerance (
        const _variant_t & pVal );
    _variant_t GetMaxStep ( );
    void PutMaxStep (
        const _variant_t & pVal );
    enum AgEVADCScalingMethod GetScalingMethod ( );
    void PutScalingMethod (
        enum AgEVADCScalingMethod pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    _bstr_t GetDimension ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_FinalValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_LastUpdate (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_Perturbation (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Perturbation (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Correction (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Correction (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tolerance (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_MaxStep (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxStep (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingMethod (
        /*[out,retval]*/ enum AgEVADCScalingMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingMethod (
        /*[in]*/ enum AgEVADCScalingMethod pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

struct __declspec(uuid("35067f11-916d-48b5-a740-8dcb48e1a2c0"))
AgVADCResult;
    // [ default ] interface _IAgVADCResult
    // interface IAgVADCResult
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("0d3d0d88-ab82-416d-a7ce-58216d8f2a81"))
_IAgVADCResult : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetDesiredValue,put=PutDesiredValue))
    _variant_t DesiredValue;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetDifference))
    _variant_t Difference;
    __declspec(property(get=GetTolerance,put=PutTolerance))
    _variant_t Tolerance;
    __declspec(property(get=GetScalingMethod,put=PutScalingMethod))
    enum AgEVADCScalingMethod ScalingMethod;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetWeight,put=PutWeight))
    double Weight;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetDesiredValue ( );
    void PutDesiredValue (
        const _variant_t & pVal );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentName ( );
    _variant_t GetDifference ( );
    _variant_t GetTolerance ( );
    void PutTolerance (
        const _variant_t & pVal );
    enum AgEVADCScalingMethod GetScalingMethod ( );
    void PutScalingMethod (
        enum AgEVADCScalingMethod pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    double GetWeight ( );
    void PutWeight (
        double pVal );
    _bstr_t GetDimension ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_DesiredValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_DesiredValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Difference (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tolerance (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingMethod (
        /*[out,retval]*/ enum AgEVADCScalingMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingMethod (
        /*[in]*/ enum AgEVADCScalingMethod pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

struct __declspec(uuid("a3f01c40-dc1b-4535-ac54-6e4f0fe4de41"))
AgVADCControlCollection;
    // [ default ] interface IUnknown
    // interface IAgVADCControlCollection
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("64371235-3e24-481e-a05a-e4f8d1a3e037"))
AgVADCResultCollection;
    // [ default ] interface IUnknown
    // interface IAgVADCResultCollection
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("58b03428-01db-48dc-97b3-7259bafd77be"))
AgVADEControl;
    // [ default ] interface _IAgVADEControl
    // interface IAgVADEControl

struct __declspec(uuid("cd7875ac-85c2-493b-a25d-7cc69e525959"))
_IAgVADEControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetInitialValue))
    _variant_t InitialValue;
    __declspec(property(get=GetPerturbation,put=PutPerturbation))
    _variant_t Perturbation;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingMethod,put=PutScalingMethod))
    enum AgEVADEScalingMethod ScalingMethod;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentName ( );
    _variant_t GetInitialValue ( );
    _variant_t GetPerturbation ( );
    void PutPerturbation (
        const _variant_t & pVal );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    enum AgEVADEScalingMethod GetScalingMethod ( );
    void PutScalingMethod (
        enum AgEVADEScalingMethod pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    _bstr_t GetDimension ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_Perturbation (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Perturbation (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingMethod (
        /*[out,retval]*/ enum AgEVADEScalingMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingMethod (
        /*[in]*/ enum AgEVADEScalingMethod pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

struct __declspec(uuid("5e6bf8ac-279c-41c0-a93e-2e7f2a7969df"))
AgVADEResult;
    // [ default ] interface _IAgVADEResult
    // interface IAgVADEResult

struct __declspec(uuid("2b2ec173-4bea-4d0f-8860-08f56e87472b"))
_IAgVADEResult : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingMethod,put=PutScalingMethod))
    enum AgEVADEScalingMethod ScalingMethod;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetWeight,put=PutWeight))
    double Weight;
    __declspec(property(get=GetGoal,put=PutGoal))
    enum AgEVADEGoal Goal;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentName ( );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    enum AgEVADEScalingMethod GetScalingMethod ( );
    void PutScalingMethod (
        enum AgEVADEScalingMethod pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    double GetWeight ( );
    void PutWeight (
        double pVal );
    enum AgEVADEGoal GetGoal ( );
    void PutGoal (
        enum AgEVADEGoal pVal );
    _bstr_t GetDimension ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingMethod (
        /*[out,retval]*/ enum AgEVADEScalingMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingMethod (
        /*[in]*/ enum AgEVADEScalingMethod pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Goal (
        /*[out,retval]*/ enum AgEVADEGoal * pVal ) = 0;
      virtual HRESULT __stdcall put_Goal (
        /*[in]*/ enum AgEVADEGoal pVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

struct __declspec(uuid("8712150b-5f28-4b83-b60b-36b39b08e0e7"))
AgVADEControlCollection;
    // [ default ] interface IUnknown
    // interface IAgVADEControlCollection

struct __declspec(uuid("247af3de-6df8-4c31-99c7-293580c32ef5"))
AgVADEResultCollection;
    // [ default ] interface IUnknown
    // interface IAgVADEResultCollection

struct __declspec(uuid("47d80b2d-99e8-4e8b-b8d2-083aa1d345d2"))
AgVASearchPluginControl;
    // [ default ] interface _IAgVASearchPluginControl
    // interface IAgVASearchPluginControl

struct __declspec(uuid("b9d77abe-71f5-4687-a8d8-cf78145753dd"))
_IAgVASearchPluginControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetControlName))
    _bstr_t ControlName;
    __declspec(property(get=GetCurrentValue,put=PutCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentSegmentName))
    _bstr_t ParentSegmentName;
    __declspec(property(get=GetInitialValue))
    _variant_t InitialValue;
    __declspec(property(get=GetPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetControlName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentSegmentName ( );
    _variant_t GetInitialValue ( );
    _bstr_t GetPluginIdentifier ( );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    _bstr_t GetDimension ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );
    void PutCurrentValue (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ControlName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
      virtual HRESULT __stdcall put_CurrentValue (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("9f62823a-9ca5-451a-ba08-e62eb360baab"))
AgVASearchPluginControlCollection;
    // [ default ] interface IUnknown
    // interface IAgVASearchPluginControlCollection

struct __declspec(uuid("fa2cad2f-5f46-4374-b1b5-cd01cc64797b"))
AgVASearchPluginResult;
    // [ default ] interface _IAgVASearchPluginResult
    // interface IAgVASearchPluginResult

struct __declspec(uuid("143ee79c-0558-40b0-bc23-bd3cf51a6c09"))
_IAgVASearchPluginResult : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetResultName))
    _bstr_t ResultName;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentSegmentName))
    _bstr_t ParentSegmentName;
    __declspec(property(get=GetPluginIdentifier))
    _bstr_t PluginIdentifier;
    __declspec(property(get=GetPluginConfig))
    IAgVAPluginPropertiesPtr PluginConfig;
    __declspec(property(get=GetDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;
    __declspec(property(get=GetValues))
    SAFEARRAY * Values;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetResultName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentSegmentName ( );
    _bstr_t GetPluginIdentifier ( );
    IAgVAPluginPropertiesPtr GetPluginConfig ( );
    _bstr_t GetDimension ( );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );
    SAFEARRAY * GetValues ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ResultName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentSegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PluginIdentifier (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PluginConfig (
        /*[out,retval]*/ struct IAgVAPluginProperties * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ SAFEARRAY * * ppRetVal ) = 0;
};

struct __declspec(uuid("4fa31771-9fcd-4807-ae8f-b85823d5c8b5"))
AgVASearchPluginResultCollection;
    // [ default ] interface IUnknown
    // interface IAgVASearchPluginResultCollection

struct __declspec(uuid("cdd1c8f4-3428-45ad-b1c7-c93021b5d476"))
AgVAProfileChangeManeuverType;
    // [ default ] interface _IAgVAProfileChangeManeuverType
    // interface IAgVAProfile
    // interface IAgVAProfileChangeManeuverType
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("76dd707a-d2f3-48ec-b5b6-404b8b62a662"))
_IAgVAProfileChangeManeuverType : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;
    __declspec(property(get=GetSegment,put=PutSegment))
    IAgVAMCSManeuverPtr Segment;
    __declspec(property(get=GetManeuverType,put=PutManeuverType))
    enum AgEVAManeuverType ManeuverType;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    IAgVAMCSManeuverPtr GetSegment ( );
    void PutSegment (
        struct IAgVAMCSManeuver * ppVAMCSManeuver );
    enum AgEVAManeuverType GetManeuverType ( );
    void PutManeuverType (
        enum AgEVAManeuverType pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_Segment (
        /*[out,retval]*/ struct IAgVAMCSManeuver * * ppVAMCSManeuver ) = 0;
      virtual HRESULT __stdcall put_Segment (
        /*[in]*/ struct IAgVAMCSManeuver * ppVAMCSManeuver ) = 0;
      virtual HRESULT __stdcall get_ManeuverType (
        /*[out,retval]*/ enum AgEVAManeuverType * pVal ) = 0;
      virtual HRESULT __stdcall put_ManeuverType (
        /*[in]*/ enum AgEVAManeuverType pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

struct __declspec(uuid("8b0414a7-ac00-42e5-8c99-49d60b2440b1"))
IAgVAProfileChangeManeuverType : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetSegment,put=PutSegment))
    IAgVAMCSManeuverPtr Segment;
    __declspec(property(get=GetManeuverType,put=PutManeuverType))
    enum AgEVAManeuverType ManeuverType;

    //
    // Wrapper methods for error-handling
    //

    IAgVAMCSManeuverPtr GetSegment ( );
    void PutSegment (
        struct IAgVAMCSManeuver * ppVAMCSManeuver );
    enum AgEVAManeuverType GetManeuverType ( );
    void PutManeuverType (
        enum AgEVAManeuverType pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Segment (
        /*[out,retval]*/ struct IAgVAMCSManeuver * * ppVAMCSManeuver ) = 0;
      virtual HRESULT __stdcall put_Segment (
        /*[in]*/ struct IAgVAMCSManeuver * ppVAMCSManeuver ) = 0;
      virtual HRESULT __stdcall get_ManeuverType (
        /*[out,retval]*/ enum AgEVAManeuverType * pVal ) = 0;
      virtual HRESULT __stdcall put_ManeuverType (
        /*[in]*/ enum AgEVAManeuverType pVal ) = 0;
};

struct __declspec(uuid("0783ce30-3200-4356-9a6b-b53a6e683c7c"))
AgVAProfileChangeReturnSegment;
    // [ default ] interface _IAgVAProfileChangeReturnSegment
    // interface IAgVAProfile
    // interface IAgVAProfileChangeReturnSegment
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("809bac80-e31d-4938-8e25-79b03eb2def6"))
_IAgVAProfileChangeReturnSegment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;
    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;
    __declspec(property(get=GetState,put=PutState))
    enum AgEVAReturnControl State;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    HRESULT SetSegment (
        struct IAgVAMCSReturn * ppVAMCSReturn );
    enum AgEVAReturnControl GetState ( );
    void PutState (
        enum AgEVAReturnControl pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSegment (
        /*[in]*/ struct IAgVAMCSReturn * ppVAMCSReturn ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum AgEVAReturnControl * pVal ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ enum AgEVAReturnControl pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

struct __declspec(uuid("99d4468b-a24d-4b77-9450-078293d06358"))
IAgVAProfileChangeReturnSegment : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;
    __declspec(property(get=GetState,put=PutState))
    enum AgEVAReturnControl State;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    HRESULT SetSegment (
        struct IAgVAMCSReturn * pVAMCSReturn );
    enum AgEVAReturnControl GetState ( );
    void PutState (
        enum AgEVAReturnControl pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSegment (
        /*[in]*/ struct IAgVAMCSReturn * pVAMCSReturn ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum AgEVAReturnControl * pVal ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ enum AgEVAReturnControl pVal ) = 0;
};

struct __declspec(uuid("f67b563c-3233-465b-9e10-ca0fc1a31fd6"))
AgVAProfileChangePropagator;
    // [ default ] interface _IAgVAProfileChangePropagator
    // interface IAgVAProfile
    // interface IAgVAProfileChangePropagator
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("67bac38d-bd7a-4d33-bfd8-14d6246e692f"))
_IAgVAProfileChangePropagator : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;
    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;
    __declspec(property(get=GetPropagatorName,put=PutPropagatorName))
    _bstr_t PropagatorName;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    HRESULT SetSegment (
        struct IAgVAMCSSegment * pVAMCSSegment );
    _bstr_t GetPropagatorName ( );
    void PutPropagatorName (
        _bstr_t pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSegment (
        /*[in]*/ struct IAgVAMCSSegment * pVAMCSSegment ) = 0;
      virtual HRESULT __stdcall get_PropagatorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PropagatorName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

struct __declspec(uuid("3ea24a54-6ace-4d03-8aab-5bbc1c82b17b"))
IAgVAProfileChangePropagator : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;
    __declspec(property(get=GetPropagatorName,put=PutPropagatorName))
    _bstr_t PropagatorName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    HRESULT SetSegment (
        struct IAgVAMCSSegment * pVAMCSSegment );
    _bstr_t GetPropagatorName ( );
    void PutPropagatorName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSegment (
        /*[in]*/ struct IAgVAMCSSegment * pVAMCSSegment ) = 0;
      virtual HRESULT __stdcall get_PropagatorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_PropagatorName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("97b30678-cce7-45dc-aa98-ba3fb13ecfd4"))
AgVAProfileChangeStopSegment;
    // [ default ] interface _IAgVAProfileChangeStopSegment
    // interface IAgVAProfile
    // interface IAgVAProfileChangeStopSegment
    // interface IAgRuntimeTypeInfoProvider

enum AgEVAState
{
    eVAStateEnabled = 0,
    eVAStateDisabled = 1
};

struct __declspec(uuid("cdafc1f7-9b0f-4570-9bb1-b37f6c9a2b69"))
_IAgVAProfileChangeStopSegment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;
    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;
    __declspec(property(get=GetState,put=PutState))
    enum AgEVAState State;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    HRESULT SetSegment (
        struct IAgVAMCSStop * pVAMCSStop );
    enum AgEVAState GetState ( );
    void PutState (
        enum AgEVAState pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSegment (
        /*[in]*/ struct IAgVAMCSStop * pVAMCSStop ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum AgEVAState * pVal ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ enum AgEVAState pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

struct __declspec(uuid("1f1f55b3-6a80-4c6b-8c91-3252e0be5790"))
IAgVAProfileChangeStopSegment : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;
    __declspec(property(get=GetState,put=PutState))
    enum AgEVAState State;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    HRESULT SetSegment (
        struct IAgVAMCSStop * pVAMCSStop );
    enum AgEVAState GetState ( );
    void PutState (
        enum AgEVAState pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSegment (
        /*[in]*/ struct IAgVAMCSStop * pVAMCSStop ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum AgEVAState * pVal ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ enum AgEVAState pVal ) = 0;
};

struct __declspec(uuid("eb003487-9b8c-4ac5-bb69-c257f09234a5"))
AgVAProfileChangeStoppingConditionState;
    // [ default ] interface _IAgVAProfileChangeStoppingConditionState
    // interface IAgVAProfile
    // interface IAgVAProfileChangeStoppingConditionState
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("2909bdb0-ba42-4de4-89aa-e41a177879e1"))
_IAgVAProfileChangeStoppingConditionState : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;
    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;
    __declspec(property(get=GetState,put=PutState))
    enum AgEVAState State;
    __declspec(property(get=GetTriggerName,put=PutTriggerName))
    _bstr_t TriggerName;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    HRESULT SetSegment (
        struct IAgVAMCSSegment * MCSSegment );
    enum AgEVAState GetState ( );
    void PutState (
        enum AgEVAState pVal );
    HRESULT SetTrigger (
        struct IAgVAStoppingCondition * StoppingCondition );
    _bstr_t GetTriggerName ( );
    void PutTriggerName (
        _bstr_t pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSegment (
        /*[in]*/ struct IAgVAMCSSegment * MCSSegment ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum AgEVAState * pVal ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ enum AgEVAState pVal ) = 0;
      virtual HRESULT __stdcall raw_SetTrigger (
        /*[in]*/ struct IAgVAStoppingCondition * StoppingCondition ) = 0;
      virtual HRESULT __stdcall get_TriggerName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_TriggerName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

struct __declspec(uuid("da461207-1d96-4103-8566-67752160b130"))
IAgVAProfileChangeStoppingConditionState : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;
    __declspec(property(get=GetState,put=PutState))
    enum AgEVAState State;
    __declspec(property(get=GetTriggerName,put=PutTriggerName))
    _bstr_t TriggerName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    HRESULT SetSegment (
        struct IAgVAMCSSegment * MCSSegment );
    enum AgEVAState GetState ( );
    void PutState (
        enum AgEVAState pVal );
    HRESULT SetTrigger (
        struct IAgVAStoppingCondition * StoppingCondition );
    _bstr_t GetTriggerName ( );
    void PutTriggerName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSegment (
        /*[in]*/ struct IAgVAMCSSegment * MCSSegment ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum AgEVAState * pVal ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ enum AgEVAState pVal ) = 0;
      virtual HRESULT __stdcall raw_SetTrigger (
        /*[in]*/ struct IAgVAStoppingCondition * StoppingCondition ) = 0;
      virtual HRESULT __stdcall get_TriggerName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_TriggerName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("d684eccb-d7c0-483b-a919-9c82b8fefa48"))
AgVAProfileSeedFiniteManeuver;
    // [ default ] interface _IAgVAProfileSeedFiniteManeuver
    // interface IAgVAProfile
    // interface IAgVAProfileSeedFiniteManeuver
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("a985d81d-52d2-44b0-9887-d369ae21d7d5"))
_IAgVAProfileSeedFiniteManeuver : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;
    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    HRESULT SetSegment (
        struct IAgVAMCSManeuver * pVAMCSManeuver );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSegment (
        /*[in]*/ struct IAgVAMCSManeuver * pVAMCSManeuver ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

struct __declspec(uuid("085cb315-b204-4907-af39-ccd56642abcb"))
IAgVAProfileSeedFiniteManeuver : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    HRESULT SetSegment (
        struct IAgVAMCSManeuver * pVAMCSManeuver );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_SetSegment (
        /*[in]*/ struct IAgVAMCSManeuver * pVAMCSManeuver ) = 0;
};

struct __declspec(uuid("f7eb3074-a563-47d1-81c9-b6c5dd1f8b1e"))
AgVAProfileRunOnce;
    // [ default ] interface _IAgVAProfileRunOnce
    // interface IAgVAProfile
    // interface IAgVAProfileRunOnce
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("b98579c2-570f-4faf-9a83-e53dedc81181"))
_IAgVAProfileRunOnce : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    enum AgEVAProfile GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
};

struct __declspec(uuid("e486b3ea-6537-4edf-8fbd-ae141ff07d17"))
IAgVAProfileRunOnce : IAgVAProfile
{};

struct __declspec(uuid("e8759ea9-98e9-47b9-8cf2-b7ce0c80b19e"))
AgVABPlaneCollection;
    // [ default ] interface IUnknown
    // interface IAgVABPlaneCollection

struct __declspec(uuid("82c949aa-37d4-44db-9720-20ce7c1425bb"))
AgVAStateCalcDamageFlux;
    // [ default ] interface _IAgVAStateCalcDamageFlux
    // interface IAgVAStateCalcDamageFlux
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("c6633ea7-3fd5-47bc-88a6-ca20a9bb7335"))
AgVAStateCalcDamageMassFlux;
    // [ default ] interface _IAgVAStateCalcDamageMassFlux
    // interface IAgVAStateCalcDamageMassFlux
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("19fc3767-c233-4ddd-9acb-12ca3bd98e72"))
AgVAStateCalcMagFieldDipoleL;
    // [ default ] interface _IAgVAStateCalcMagFieldDipoleL
    // interface IAgVAStateCalcMagFieldDipoleL
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("33891a97-255e-45fe-9d32-44f815fddd77"))
AgVAStateCalcSEETMagFieldFieldLineSepAngle;
    // [ default ] interface _IAgVAStateCalcSEETMagFieldFieldLineSepAngle
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcSEETMagFieldFieldLineSepAngle

struct __declspec(uuid("df16fab8-d23d-490e-a288-3d3bd51df49a"))
AgVAStateCalcImpactFlux;
    // [ default ] interface _IAgVAStateCalcImpactFlux
    // interface IAgVAStateCalcImpactFlux
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("9f94d6df-7756-4716-be15-9517a392953c"))
AgVAStateCalcImpactMassFlux;
    // [ default ] interface _IAgVAStateCalcImpactMassFlux
    // interface IAgVAStateCalcImpactMassFlux
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("ff5e3f7e-5881-489d-b00d-1295ccd5226e"))
AgVAStateCalcSEETSAAFlux;
    // [ default ] interface _IAgVAStateCalcSEETSAAFlux
    // interface IAgVAStateCalcSEETSAAFlux
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("901591b6-62d4-41e7-b40d-ab1f8b7bfda8"))
AgVAStateCalcSEETVehTemp;
    // [ default ] interface _IAgVAStateCalcSEETVehTemp
    // interface IAgVAStateCalcSEETVehTemp
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("f127a3b3-6a51-4a80-b698-12b1884a2c52"))
AgVAStateCalcEpoch;
    // [ default ] interface _IAgVAStateCalcEpoch
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcEpoch

struct __declspec(uuid("f6fa84f5-25b3-4fa7-9cf7-5fc7ba226e2a"))
AgVAStateCalcCartesianElem;
    // [ default ] interface _IAgVAStateCalcCartesianElem
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCartesianElem

struct __declspec(uuid("cd266fd2-6b17-4359-8d56-d954fa6999c3"))
AgVAStateCalcCartSTMElem;
    // [ default ] interface _IAgVAStateCalcCartSTMElem
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCartSTMElem

struct __declspec(uuid("2cb008e4-7cae-44cc-a856-491b0314bb14"))
AgVAStateCalcEnvironment;
    // [ default ] interface _IAgVAStateCalcEnvironment
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcEnvironment

struct __declspec(uuid("4ecf0565-1d50-4cbe-9d32-4f8427df6532"))
AgVAStateCalcOrbitDelaunayG;
    // [ default ] interface _IAgVAStateCalcOrbitDelaunayG
    // interface IAgVAStateCalcOrbitDelaunayG
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("804860f6-a667-45bc-8a3f-6db02fba6962"))
AgVAStateCalcOrbitDelaunayH;
    // [ default ] interface _IAgVAStateCalcOrbitDelaunayH
    // interface IAgVAStateCalcOrbitDelaunayH
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("27283594-dc2a-4570-846c-4365069a27a9"))
AgVAStateCalcOrbitDelaunayL;
    // [ default ] interface _IAgVAStateCalcOrbitDelaunayL
    // interface IAgVAStateCalcOrbitDelaunayL
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("fcf6cf01-6a3e-4c2b-bcd5-7df9978acd2e"))
AgVAStateCalcOrbitSemiLatusRectum;
    // [ default ] interface _IAgVAStateCalcOrbitSemiLatusRectum
    // interface IAgVAStateCalcOrbitSemiLatusRectum
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("f31119ca-f7d0-49f7-a73d-c4ca6f42f0e5"))
AgVAStateCalcEquinoctialElem;
    // [ default ] interface _IAgVAStateCalcEquinoctialElem
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcEquinoctialElem

struct __declspec(uuid("28f46651-336b-4c53-944c-36812cb7a8e2"))
AgVAStateCalcCloseApproachBearing;
    // [ default ] interface _IAgVAStateCalcCloseApproachBearing
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCloseApproachBearing

struct __declspec(uuid("b0f22c94-75b5-48d5-a3ef-50094f26db77"))
AgVAStateCalcCloseApproachMag;
    // [ default ] interface _IAgVAStateCalcCloseApproachMag
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCloseApproachMag

struct __declspec(uuid("ccee130c-1b3d-4cf2-8a9c-355f52e526bc"))
AgVAStateCalcCloseApproachTheta;
    // [ default ] interface _IAgVAStateCalcCloseApproachTheta
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCloseApproachTheta

struct __declspec(uuid("09e17330-289e-4856-8378-7d634bd92720"))
AgVAStateCalcCloseApproachX;
    // [ default ] interface _IAgVAStateCalcCloseApproachX
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCloseApproachX

struct __declspec(uuid("ff7d0397-a9a9-4218-befe-6096cf826be2"))
AgVAStateCalcCloseApproachY;
    // [ default ] interface _IAgVAStateCalcCloseApproachY
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCloseApproachY

struct __declspec(uuid("cc7a6c2c-57d3-4112-a896-8a0226812b30"))
AgVAStateCalcCloseApproachCosBearing;
    // [ default ] interface _IAgVAStateCalcCloseApproachCosBearing
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCloseApproachCosBearing

struct __declspec(uuid("63ebefa8-6087-41de-98cf-d972b0c6c538"))
AgVAStateCalcRelGroundTrackError;
    // [ default ] interface _IAgVAStateCalcRelGroundTrackError
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRelGroundTrackError

struct __declspec(uuid("42a7fba5-a0b7-4008-b6ac-57585b912e7d"))
AgVAStateCalcRelAtAOLMaster;
    // [ default ] interface _IAgVAStateCalcRelAtAOLMaster
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRelAtAOLMaster

struct __declspec(uuid("6135e42f-59ff-4f2d-b3cc-9691baebf71f"))
AgVAStateCalcDeltaFromMaster;
    // [ default ] interface _IAgVAStateCalcDeltaFromMaster
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDeltaFromMaster

struct __declspec(uuid("5b8ca703-e448-49d6-b2ec-b649b53d9dad"))
AgVAStateCalcLonDriftRate;
    // [ default ] interface _IAgVAStateCalcLonDriftRate
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcLonDriftRate

struct __declspec(uuid("2de83592-1b05-4fae-bc7d-e3fc56f5a1fd"))
AgVAStateCalcMeanEarthLon;
    // [ default ] interface _IAgVAStateCalcMeanEarthLon
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcMeanEarthLon

struct __declspec(uuid("9a9ba9fe-e3ad-4ec3-86e9-ec66b7969194"))
AgVAStateCalcRectifiedLon;
    // [ default ] interface _IAgVAStateCalcRectifiedLon
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRectifiedLon

struct __declspec(uuid("d708a5e5-3ffd-45fd-b7af-dd7d0446abb7"))
AgVAStateCalcHeightAboveTerrain;
    // [ default ] interface _IAgVAStateCalcHeightAboveTerrain
    // interface IAgVAStateCalcHeightAboveTerrain
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("c38d6a78-bb9c-4837-911a-4d49ddfb3d31"))
AgVAStateCalcGeodeticElem;
    // [ default ] interface _IAgVAStateCalcGeodeticElem
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcGeodeticElem

struct __declspec(uuid("c69c0713-689e-4bf0-808f-0a7292d252fe"))
AgVAStateCalcRepeatingGroundTrackErr;
    // [ default ] interface _IAgVAStateCalcRepeatingGroundTrackErr
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRepeatingGroundTrackErr

struct __declspec(uuid("c4bbdff4-f020-419d-9b60-12396cb2b6d9"))
AgVAStateCalcAltOfApoapsis;
    // [ default ] interface _IAgVAStateCalcAltOfApoapsis
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcAltOfApoapsis

struct __declspec(uuid("034a88b1-8873-4370-9d50-f539123eefdf"))
AgVAStateCalcAltOfPeriapsis;
    // [ default ] interface _IAgVAStateCalcAltOfPeriapsis
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcAltOfPeriapsis

struct __declspec(uuid("ff8a14dd-77ab-4133-b0e2-753fc1d54868"))
AgVAStateCalcArgOfLat;
    // [ default ] interface _IAgVAStateCalcArgOfLat
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcArgOfLat

struct __declspec(uuid("ffc0c4fb-d3eb-4873-81c6-c987d07255b0"))
AgVAStateCalcArgOfPeriapsis;
    // [ default ] interface _IAgVAStateCalcArgOfPeriapsis
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcArgOfPeriapsis

struct __declspec(uuid("46cc96d4-522c-4695-9e2c-9a53c90c1c85"))
AgVAStateCalcEccAnomaly;
    // [ default ] interface _IAgVAStateCalcEccAnomaly
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcEccAnomaly

struct __declspec(uuid("69aea30f-1c2f-47e8-aba3-a1123bb5dc4d"))
AgVAStateCalcLonOfAscNode;
    // [ default ] interface _IAgVAStateCalcLonOfAscNode
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcLonOfAscNode

struct __declspec(uuid("9d856a52-07f3-47bd-b21b-d05bfe37338f"))
AgVAStateCalcMeanMotion;
    // [ default ] interface _IAgVAStateCalcMeanMotion
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcMeanMotion

struct __declspec(uuid("3d11acb8-1f7b-441a-b6e0-0c18a380af3c"))
AgVAStateCalcOrbitPeriod;
    // [ default ] interface _IAgVAStateCalcOrbitPeriod
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcOrbitPeriod

struct __declspec(uuid("7fb42364-0190-4348-b45e-026ba7844b3a"))
AgVAStateCalcRadOfApoapsis;
    // [ default ] interface _IAgVAStateCalcRadOfApoapsis
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRadOfApoapsis

struct __declspec(uuid("2f197873-c40d-4d74-aed0-b9f8c0c51687"))
AgVAStateCalcRadOfPeriapsis;
    // [ default ] interface _IAgVAStateCalcRadOfPeriapsis
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRadOfPeriapsis

struct __declspec(uuid("08739013-b3b5-41d4-a229-e5198cb55e8c"))
AgVAStateCalcSemiMajorAxis;
    // [ default ] interface _IAgVAStateCalcSemiMajorAxis
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcSemiMajorAxis

struct __declspec(uuid("6874442c-8962-40a9-b74f-8b88eed672db"))
AgVAStateCalcTimePastAscNode;
    // [ default ] interface _IAgVAStateCalcTimePastAscNode
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcTimePastAscNode

struct __declspec(uuid("3f32b987-81a2-4ad2-98a8-6409df856341"))
AgVAStateCalcTimePastPeriapsis;
    // [ default ] interface _IAgVAStateCalcTimePastPeriapsis
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcTimePastPeriapsis

struct __declspec(uuid("39299166-ce76-4ddc-b678-2351e668147f"))
AgVAStateCalcTrueAnomaly;
    // [ default ] interface _IAgVAStateCalcTrueAnomaly
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcTrueAnomaly

struct __declspec(uuid("003ee48b-7f64-45d7-bc83-5ede5fb15a43"))
AgVAStateCalcDeltaV;
    // [ default ] interface _IAgVAStateCalcDeltaV
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDeltaV

struct __declspec(uuid("c75c2cef-80a7-4ae8-8ac2-6eedb4909d28"))
AgVAStateCalcDeltaVSquared;
    // [ default ] interface _IAgVAStateCalcDeltaVSquared
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDeltaVSquared

struct __declspec(uuid("893d1277-3708-4bb3-916b-ae70dfc9c98b"))
AgVAStateCalcMCSDeltaV;
    // [ default ] interface _IAgVAStateCalcMCSDeltaV
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcMCSDeltaV

struct __declspec(uuid("7fa6f9e5-65e1-481a-a312-0a89da5cb325"))
AgVAStateCalcMCSDeltaVSquared;
    // [ default ] interface _IAgVAStateCalcMCSDeltaVSquared
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcMCSDeltaVSquared

struct __declspec(uuid("391c62f2-61b5-4d0e-a6b0-70c9e1d933b1"))
AgVAStateCalcSequenceDeltaV;
    // [ default ] interface _IAgVAStateCalcSequenceDeltaV
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcSequenceDeltaV

struct __declspec(uuid("d97de119-0184-4742-a08f-83dccb1deb72"))
AgVAStateCalcSequenceDeltaVSquared;
    // [ default ] interface _IAgVAStateCalcSequenceDeltaVSquared
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcSequenceDeltaVSquared

struct __declspec(uuid("cf9a08da-67fb-4dc4-ad4a-9505c2e80558"))
AgVAStateCalcFuelMass;
    // [ default ] interface _IAgVAStateCalcFuelMass
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcFuelMass

struct __declspec(uuid("a957df6e-df4b-4e4c-9036-1ac3a8d942b3"))
AgVAStateCalcDensity;
    // [ default ] interface _IAgVAStateCalcDensity
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDensity

struct __declspec(uuid("fa44c57a-bdca-4ffc-bdee-c93d3ace78d9"))
AgVAStateCalcInertialDeltaVMag;
    // [ default ] interface _IAgVAStateCalcInertialDeltaVMag
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcInertialDeltaVMag

struct __declspec(uuid("2518d125-199f-4b43-b81a-d9c0823487dd"))
AgVAStateCalcInertialDeltaVx;
    // [ default ] interface _IAgVAStateCalcInertialDeltaVx
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcInertialDeltaVx

struct __declspec(uuid("54e43cf4-b4b4-4b7b-9b0f-7b3bb49b77be"))
AgVAStateCalcInertialDeltaVy;
    // [ default ] interface _IAgVAStateCalcInertialDeltaVy
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcInertialDeltaVy

struct __declspec(uuid("a3c10679-e697-4b02-b281-5184a107af89"))
AgVAStateCalcInertialDeltaVz;
    // [ default ] interface _IAgVAStateCalcInertialDeltaVz
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcInertialDeltaVz

struct __declspec(uuid("818ae624-e0d3-4c6e-892b-785b61f7220e"))
AgVAStateCalcManeuverSpecificImpulse;
    // [ default ] interface _IAgVAStateCalcManeuverSpecificImpulse
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcManeuverSpecificImpulse

struct __declspec(uuid("5d15fc57-43c2-446f-92ac-8df6133ac45f"))
AgVAStateCalcPressure;
    // [ default ] interface _IAgVAStateCalcPressure
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcPressure

struct __declspec(uuid("9f006088-04d5-43e2-8d8d-a58cd6d289f3"))
AgVAStateCalcTemperature;
    // [ default ] interface _IAgVAStateCalcTemperature
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcTemperature

struct __declspec(uuid("7306e76c-41da-4055-91b8-bf21929dc0f3"))
AgVAStateCalcVectorY;
    // [ default ] interface _IAgVAStateCalcVectorY
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcVectorY

struct __declspec(uuid("acb1f8b2-e13c-4520-89e3-7bcc86146c4b"))
AgVAStateCalcVectorZ;
    // [ default ] interface _IAgVAStateCalcVectorZ
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcVectorZ

struct __declspec(uuid("fc0eefdf-ceaf-4a9f-8d3e-240e7b61f46e"))
AgVAStateCalcMass;
    // [ default ] interface _IAgVAStateCalcMass
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcMass

struct __declspec(uuid("cdc6dfa1-198c-4c75-bb2a-7a12b6d4b641"))
AgVAStateCalcManeuverTotalMassFlowRate;
    // [ default ] interface _IAgVAStateCalcManeuverTotalMassFlowRate
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcManeuverTotalMassFlowRate

struct __declspec(uuid("2a3e4063-d185-46f6-8e59-97c4927b8853"))
AgVAStateCalcAbsoluteValue;
    // [ default ] interface _IAgVAStateCalcAbsoluteValue
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcAbsoluteValue

struct __declspec(uuid("ae2e8073-81f8-45b7-9dfc-40ea0c253be3"))
AgVAStateCalcDifference;
    // [ default ] interface _IAgVAStateCalcDifference
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDifference

struct __declspec(uuid("cc41506b-7e18-4fa7-a352-77d79d4dd7ef"))
AgVAStateCalcDifferenceOtherSegment;
    // [ default ] interface _IAgVAStateCalcDifferenceOtherSegment
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDifferenceOtherSegment

struct __declspec(uuid("debc1cfd-8bd7-4d7f-a5df-eecc2338d435"))
AgVAStateCalcPosDifferenceOtherSegment;
    // [ default ] interface _IAgVAStateCalcPosDifferenceOtherSegment
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcPosDifferenceOtherSegment

struct __declspec(uuid("6a55fc1d-29eb-4216-abb0-55e786c48261"))
AgVAStateCalcVelDifferenceOtherSegment;
    // [ default ] interface _IAgVAStateCalcVelDifferenceOtherSegment
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcVelDifferenceOtherSegment

struct __declspec(uuid("e3869bd9-e819-4ba4-abe6-e363aca9a941"))
AgVAStateCalcPosVelDifferenceOtherSegment;
    // [ default ] interface _IAgVAStateCalcPosVelDifferenceOtherSegment
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcPosVelDifferenceOtherSegment

struct __declspec(uuid("6181fd29-6c1c-49c9-b3ee-a114bca18864"))
AgVAStateCalcValueAtSegment;
    // [ default ] interface _IAgVAStateCalcValueAtSegment
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcValueAtSegment

struct __declspec(uuid("821fb66c-fe06-4b2f-9e1e-7958149a960a"))
AgVAStateCalcMaxValue;
    // [ default ] interface _IAgVAStateCalcMaxValue
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcMaxValue

struct __declspec(uuid("4f55c037-9201-4dad-95f5-340ed51a5d85"))
AgVAStateCalcMinValue;
    // [ default ] interface _IAgVAStateCalcMinValue
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcMinValue

struct __declspec(uuid("f94acd40-65dd-40f0-9fc1-5689ddaec730"))
AgVAStateCalcNegative;
    // [ default ] interface _IAgVAStateCalcNegative
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcNegative

struct __declspec(uuid("5e4ddb26-3085-4956-93e5-2b06ca9704bf"))
AgVAStateCalcEccentricity;
    // [ default ] interface _IAgVAStateCalcEccentricity
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcEccentricity

struct __declspec(uuid("099d2fc1-421d-4b03-8003-808bae5cd138"))
AgVAStateCalcMeanAnomaly;
    // [ default ] interface _IAgVAStateCalcMeanAnomaly
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcMeanAnomaly

struct __declspec(uuid("58d8d81f-b039-4386-8e19-8f5494cf1c91"))
AgVAStateCalcRAAN;
    // [ default ] interface _IAgVAStateCalcRAAN
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRAAN

struct __declspec(uuid("b2aebb50-6ce8-4353-8f1e-0566a881e921"))
AgVABDotRCalc;
    // [ default ] interface _IAgVABDotRCalc
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVABDotRCalc

struct __declspec(uuid("bb0b4199-eed5-4052-b6ad-82c8efb0b28d"))
AgVABDotTCalc;
    // [ default ] interface _IAgVABDotTCalc
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVABDotTCalc

struct __declspec(uuid("e29cee8d-09b1-4c57-a972-c874c4f3e389"))
AgVABMagCalc;
    // [ default ] interface _IAgVABMagCalc
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVABMagCalc

struct __declspec(uuid("a2af278d-3502-419c-b84d-7aeac25245a6"))
AgVABThetaCalc;
    // [ default ] interface _IAgVABThetaCalc
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVABThetaCalc

struct __declspec(uuid("474c15c2-88a7-4671-a086-9d67a7798771"))
AgVAStateCalcDeltaDec;
    // [ default ] interface _IAgVAStateCalcDeltaDec
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDeltaDec

struct __declspec(uuid("0d553484-bb10-48b9-808a-c89dde2ab7bc"))
AgVAStateCalcDeltaRA;
    // [ default ] interface _IAgVAStateCalcDeltaRA
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDeltaRA

struct __declspec(uuid("3bd6d80b-a69e-4bb4-a2c2-294c72e72704"))
AgVAStateCalcApparentSolarLon;
    // [ default ] interface _IAgVAStateCalcApparentSolarLon
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcApparentSolarLon

struct __declspec(uuid("f31e2cb7-828a-440a-8454-eb77e7173502"))
AgVAStateCalcBetaAngle;
    // [ default ] interface _IAgVAStateCalcBetaAngle
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcBetaAngle

struct __declspec(uuid("ff9cf11e-1952-4135-9476-f34c23b7bf65"))
AgVAStateCalcEarthMeanSolarLon;
    // [ default ] interface _IAgVAStateCalcEarthMeanSolarLon
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcEarthMeanSolarLon

struct __declspec(uuid("99f31aad-f30a-4f4f-ba97-556dad404bb1"))
AgVAStateCalcLocalApparentSolarLon;
    // [ default ] interface _IAgVAStateCalcLocalApparentSolarLon
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcLocalApparentSolarLon

struct __declspec(uuid("16fa0116-ab45-4b1c-9043-2bf221be3aad"))
AgVAStateCalcLonOfPeriapsis;
    // [ default ] interface _IAgVAStateCalcLonOfPeriapsis
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcLonOfPeriapsis

struct __declspec(uuid("d823ad1f-64a1-4fbf-98ad-06a953c275c6"))
AgVAStateCalcOrbitStateValue;
    // [ default ] interface _IAgVAStateCalcOrbitStateValue
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcOrbitStateValue

struct __declspec(uuid("f1b4ba13-0442-4280-a91d-fa82bd7f1a0c"))
AgVAStateCalcSignedEccentricity;
    // [ default ] interface _IAgVAStateCalcSignedEccentricity
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcSignedEccentricity

struct __declspec(uuid("91250055-a26a-4e62-9e97-4340c4933b78"))
AgVAStateCalcInclination;
    // [ default ] interface _IAgVAStateCalcInclination
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcInclination

struct __declspec(uuid("ace01105-21bb-45b4-97ed-e21952d037ea"))
AgVAStateCalcTrueLon;
    // [ default ] interface _IAgVAStateCalcTrueLon
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcTrueLon

struct __declspec(uuid("074d26a5-2262-4b73-8b30-840adf669c50"))
AgVAStateCalcPower;
    // [ default ] interface _IAgVAStateCalcPower
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcPower

struct __declspec(uuid("598c4ddd-bbbf-48bc-9fae-21c8502c4e93"))
AgVAStateCalcRelMotion;
    // [ default ] interface _IAgVAStateCalcRelMotion
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRelMotion

struct __declspec(uuid("a693def4-697e-4db4-a632-0ff5f4890da8"))
AgVAStateCalcCustomFunction;
    // [ default ] interface _IAgVAStateCalcCustomFunction
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCustomFunction

struct __declspec(uuid("78b23ccf-7610-4975-b93c-a35adba5debd"))
AgVAStateCalcScript;
    // [ default ] interface _IAgVAStateCalcScript
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcScript

struct __declspec(uuid("6c029e0c-9444-449a-9b47-3e50d12ce049"))
AgVAStateCalcCd;
    // [ default ] interface _IAgVAStateCalcCd
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCd

struct __declspec(uuid("8d052104-c461-4156-9eb7-878b0398463e"))
AgVAStateCalcCr;
    // [ default ] interface _IAgVAStateCalcCr
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCr

struct __declspec(uuid("74b5e423-2dce-421c-99e9-efefce2a8ef8"))
AgVAStateCalcDragArea;
    // [ default ] interface _IAgVAStateCalcDragArea
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDragArea

struct __declspec(uuid("60b9925b-9ecd-477f-a7c0-34a8b92719ff"))
AgVAStateCalcRadiationPressureArea;
    // [ default ] interface _IAgVAStateCalcRadiationPressureArea
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRadiationPressureArea

struct __declspec(uuid("991bc490-66b3-4284-8f97-27fea203c88d"))
AgVAStateCalcRadiationPressureCoefficient;
    // [ default ] interface _IAgVAStateCalcRadiationPressureCoefficient
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRadiationPressureCoefficient

struct __declspec(uuid("451856e5-a4d8-4ced-a227-85bc779bdf0e"))
AgVAStateCalcSRPArea;
    // [ default ] interface _IAgVAStateCalcSRPArea
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcSRPArea

struct __declspec(uuid("d02ec1cb-99da-4ab2-b9d9-e71d1c4b0f1a"))
AgVAStateCalcCosOfVerticalFPA;
    // [ default ] interface _IAgVAStateCalcCosOfVerticalFPA
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCosOfVerticalFPA

struct __declspec(uuid("16e2778b-6708-4755-868f-fad0f7e181e2"))
AgVAStateCalcDec;
    // [ default ] interface _IAgVAStateCalcDec
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDec

struct __declspec(uuid("659cae57-b313-4141-8729-486fbe46ecb3"))
AgVAStateCalcFPA;
    // [ default ] interface _IAgVAStateCalcFPA
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcFPA

struct __declspec(uuid("6fd51b19-31df-4c2c-a137-78620fddff52"))
AgVAStateCalcRMag;
    // [ default ] interface _IAgVAStateCalcRMag
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRMag

struct __declspec(uuid("15a891e6-ad03-462b-b18e-84f063b57e8e"))
AgVAStateCalcRA;
    // [ default ] interface _IAgVAStateCalcRA
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcRA

struct __declspec(uuid("1fa2f210-1c85-44d0-b5d2-df5f9a4554c5"))
AgVAStateCalcVMag;
    // [ default ] interface _IAgVAStateCalcVMag
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcVMag

struct __declspec(uuid("73f33439-ea80-44f9-8e7a-0f1a49c64427"))
AgVAStateCalcVelAz;
    // [ default ] interface _IAgVAStateCalcVelAz
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcVelAz

struct __declspec(uuid("5b299f45-062e-4c65-919b-7d8382a18335"))
AgVAStateCalcC3Energy;
    // [ default ] interface _IAgVAStateCalcC3Energy
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcC3Energy

struct __declspec(uuid("88f267a7-fa4b-4c53-9f73-0a021de5490a"))
AgVAStateCalcInAsympDec;
    // [ default ] interface _IAgVAStateCalcInAsympDec
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcInAsympDec

struct __declspec(uuid("4fb4de99-2fee-4cba-acd6-f10a936089a7"))
AgVAStateCalcInAsympRA;
    // [ default ] interface _IAgVAStateCalcInAsympRA
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcInAsympRA

struct __declspec(uuid("ca9a07e5-6c7b-45f4-a772-4acd6c19dd4a"))
AgVAStateCalcInVelAzAtPeriapsis;
    // [ default ] interface _IAgVAStateCalcInVelAzAtPeriapsis
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcInVelAzAtPeriapsis

struct __declspec(uuid("5115b470-2675-44c2-b396-a703b24437a1"))
AgVAStateCalcOutAsympDec;
    // [ default ] interface _IAgVAStateCalcOutAsympDec
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcOutAsympDec

struct __declspec(uuid("a5c06253-9bf5-4599-98fd-295e83f36f88"))
AgVAStateCalcOutAsympRA;
    // [ default ] interface _IAgVAStateCalcOutAsympRA
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcOutAsympRA

struct __declspec(uuid("d3989c45-57ce-41d1-b594-38e66f876e46"))
AgVAStateCalcOutVelAzAtPeriapsis;
    // [ default ] interface _IAgVAStateCalcOutVelAzAtPeriapsis
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcOutVelAzAtPeriapsis

struct __declspec(uuid("e985a549-a98c-4e90-896b-08a7fc020c3b"))
AgVAStateCalcDuration;
    // [ default ] interface _IAgVAStateCalcDuration
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDuration

struct __declspec(uuid("dc34b51f-1842-48f4-8a33-1c2416507795"))
AgVAStateCalcUserValue;
    // [ default ] interface _IAgVAStateCalcUserValue
    // interface IAgVAStateCalcUserValue
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("3f308a1f-7244-45b2-a7a7-cd358668abfc"))
AgVAStateCalcCrdnAngle;
    // [ default ] interface _IAgVAStateCalcCrdnAngle
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcCrdnAngle

struct __declspec(uuid("b5da5f95-a3c8-4a5d-938b-1f603505bec0"))
AgVAStateCalcAngle;
    // [ default ] interface _IAgVAStateCalcAngle
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcAngle

struct __declspec(uuid("8003223e-889d-4a10-b28f-c674358ac178"))
AgVAStateCalcDotProduct;
    // [ default ] interface _IAgVAStateCalcDotProduct
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDotProduct

struct __declspec(uuid("48d92c62-a88b-4fc5-84b1-3dcdeb9f34fa"))
AgVAStateCalcVectorDec;
    // [ default ] interface _IAgVAStateCalcVectorDec
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcVectorDec

struct __declspec(uuid("050cc5d8-d489-445b-bc49-ba22cb0d1ccd"))
AgVAStateCalcVectorMag;
    // [ default ] interface _IAgVAStateCalcVectorMag
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcVectorMag

struct __declspec(uuid("225e41ca-5932-4fa9-8916-a64322a0df70"))
AgVAStateCalcVectorRA;
    // [ default ] interface _IAgVAStateCalcVectorRA
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcVectorRA

struct __declspec(uuid("5eceed36-e537-4ce8-826c-147faf897f93"))
AgVAStateCalcVectorX;
    // [ default ] interface _IAgVAStateCalcVectorX
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcVectorX

struct __declspec(uuid("fbf55233-bea4-4521-86a9-cd41b1f886e0"))
AgVAStateCalcOnePtAccess;
    // [ default ] interface _IAgVAStateCalcOnePtAccess
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcOnePtAccess

struct __declspec(uuid("d76f5a4a-13ef-418d-a4a2-0bc280db4c53"))
AgVAStateCalcDifferenceAcrossSegmentsOtherSat;
    // [ default ] interface _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcDifferenceAcrossSegmentsOtherSat

struct __declspec(uuid("8df38ac1-adbf-47d7-ac48-990ae2783e5d"))
AgVAStateCalcValueAtSegmentOtherSat;
    // [ default ] interface _IAgVAStateCalcValueAtSegmentOtherSat
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcValueAtSegmentOtherSat

struct __declspec(uuid("f8332cb3-d927-45e2-a435-17eb1c6938e9"))
AgVAStateCalcRARate;
    // [ default ] interface _IAgVAStateCalcRARate
    // interface IAgVAStateCalcRARate
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("18fa8bc9-e324-4b3f-9adb-6b58f1ef69b5"))
AgVAStateCalcDecRate;
    // [ default ] interface _IAgVAStateCalcDecRate
    // interface IAgVAStateCalcDecRate
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("6083766b-00b5-4529-a736-56437b5f85db"))
AgVAStateCalcGravitationalParameter;
    // [ default ] interface _IAgVAStateCalcGravitationalParameter
    // interface IAgVAStateCalcGravitationalParameter
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("9a227981-b694-4710-9ca7-d3fd0c91a053"))
AgVAStateCalcReferenceRadius;
    // [ default ] interface _IAgVAStateCalcReferenceRadius
    // interface IAgVAStateCalcReferenceRadius
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("5f36f070-6a1c-42e8-80e0-c716509a9c1d"))
AgVAStateCalcGravCoeff;
    // [ default ] interface _IAgVAStateCalcGravCoeff
    // interface IAgVAStateCalcGravCoeff
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("cf0162c7-7c23-403b-abac-5c46a93c66b1"))
AgVAStateCalcSpeedOfLight;
    // [ default ] interface _IAgVAStateCalcSpeedOfLight
    // interface IAgVAStateCalcSpeedOfLight
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("20a6643f-adfc-4a42-9823-b7a9e1bb3f04"))
AgVAStateCalcScalar;
    // [ default ] interface _IAgVAStateCalcScalar
    // interface IAgVAStateCalcScalar
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("2ec1102b-2643-4002-8759-de0cfb6183f4"))
AgVAStateCalcApparentSolarTime;
    // [ default ] interface _IAgVAStateCalcApparentSolarTime
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcApparentSolarTime

struct __declspec(uuid("ad6e8659-2b4d-453d-9e50-436c987b8c4a"))
AgVAStateCalcEarthMeanSolarTime;
    // [ default ] interface _IAgVAStateCalcEarthMeanSolarTime
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcEarthMeanSolarTime

struct __declspec(uuid("10997ac8-15cc-40d8-a72f-4b3e3d8a23c1"))
AgVAStateCalcEarthMeanLocTimeAN;
    // [ default ] interface _IAgVAStateCalcEarthMeanLocTimeAN
    // interface IAgComponentInfo
    // interface IAgCloneable
    // interface IAgVAStateCalcEarthMeanLocTimeAN

struct __declspec(uuid("f64bce3e-28c4-4cb8-8d0a-b4d963e38987"))
AgVAAutomaticSequenceCollection;
    // [ default ] interface IUnknown
    // interface IAgVAAutomaticSequenceCollection

struct __declspec(uuid("fa8cb7da-7427-4c50-85b2-1b3678c43750"))
AgVAAutomaticSequence;
    // [ default ] interface _IAgVAAutomaticSequence
    // interface IAgVAAutomaticSequence

struct __declspec(uuid("aaad6835-2c41-4592-9085-08a8707e7fc0"))
_IAgVAAutomaticSequence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetSequence))
    IAgVAMCSSegmentCollectionPtr Sequence;

    //
    // Wrapper methods for error-handling
    //

    IAgVAAutomaticSequencePtr MakeCopy (
        _bstr_t OriginalName );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    IAgVAMCSSegmentCollectionPtr GetSequence ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_MakeCopy (
        /*[in]*/ BSTR OriginalName,
        /*[out,retval]*/ struct IAgVAAutomaticSequence * * ppAutomaticSequence ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Sequence (
        /*[out,retval]*/ struct IAgVAMCSSegmentCollection * * ppVAMCSSegmentCollection ) = 0;
};

struct __declspec(uuid("64708203-59c3-4fa9-89bb-5be9bb5b4384"))
AgVACentralBodyCollection;
    // [ default ] interface IUnknown
    // interface IAgVACentralBodyCollection

struct __declspec(uuid("1c3e536b-3506-46f8-a348-fb9ae7e82500"))
AgVACentralBody;
    // [ default ] interface _IAgVACentralBody
    // interface IAgVACentralBody
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("457468bd-8422-4d64-95a4-09150311fe15"))
AgVACbGravityModel;
    // [ default ] interface _IAgVACbGravityModel
    // interface IAgVACbGravityModel

struct __declspec(uuid("f1f2d471-4805-45d9-ab28-9733f38d4114"))
AgVACbShapeSphere;
    // [ default ] interface _IAgVACbShapeSphere
    // interface IAgVACbShapeSphere
    // interface IAgVACbShape

struct __declspec(uuid("92c9b928-c9c0-41d4-af43-095604836f2f"))
AgVACbShapeOblateSpheroid;
    // [ default ] interface _IAgVACbShapeOblateSpheroid
    // interface IAgVACbShapeOblateSpheroid
    // interface IAgVACbShape

struct __declspec(uuid("07f26ce3-df7d-4616-a092-6e3e709c0bc2"))
AgVACbShapeTriaxialEllipsoid;
    // [ default ] interface _IAgVACbShapeTriaxialEllipsoid
    // interface IAgVACbShapeTriaxialEllipsoid
    // interface IAgVACbShape

struct __declspec(uuid("76f5d500-6831-42af-bf6b-c7cc0c54b96a"))
AgVACbAttitudeRotationCoefficientsFile;
    // [ default ] interface _IAgVACbAttitudeRotationCoefficientsFile
    // interface IAgVACbAttitudeRotationCoefficientsFile
    // interface IAgVACbAttitude

struct __declspec(uuid("23f62d55-f265-4c9b-9204-38a13eecd846"))
AgVACbAttitudeIAU1994;
    // [ default ] interface _IAgVACbAttitudeIAU1994
    // interface IAgVACbAttitudeIAU1994
    // interface IAgVACbAttitude

struct __declspec(uuid("bac6850b-2042-4f06-b217-aac311f05821"))
AgVACbEphemerisAnalyticOrbit;
    // [ default ] interface _IAgVACbEphemerisAnalyticOrbit
    // interface IAgVACbEphemerisAnalyticOrbit
    // interface IAgVACbEphemeris

struct __declspec(uuid("c5de2617-f28f-40f4-adb4-589d459087bf"))
AgVACbEphemerisJPLSpice;
    // [ default ] interface _IAgVACbEphemerisJPLSpice
    // interface IAgVACbEphemerisJPLSpice
    // interface IAgVACbEphemeris

struct __declspec(uuid("b5b84899-8ee1-4fb8-ab37-e73e17519289"))
AgVACbEphemerisFile;
    // [ default ] interface _IAgVACbEphemerisFile
    // interface IAgVACbEphemerisFile
    // interface IAgVACbEphemeris

struct __declspec(uuid("0105d360-c750-4f50-b64c-7be225b662a6"))
AgVACbEphemerisJPLDE;
    // [ default ] interface _IAgVACbEphemerisJPLDE
    // interface IAgVACbEphemerisJPLDE
    // interface IAgVACbEphemeris

struct __declspec(uuid("4c2411ed-9420-4daf-8105-3d1a8e8a6f15"))
AgVACbEphemerisPlanetary;
    // [ default ] interface _IAgVACbEphemerisPlanetary
    // interface IAgVACbEphemerisPlanetary
    // interface IAgVACbEphemeris

struct __declspec(uuid("171f1353-a720-4cb8-9297-4b3157bf601b"))
AgVAMCSSegmentProperties;
    // [ default ] interface _IAgVAMCSSegmentProperties
    // interface IAgVAMCSSegmentProperties
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("78155298-7bc3-4ca6-9da3-e7ab4051e7c4"))
_IAgVAMCSSegmentProperties : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDisplayCoordinateSystem,put=PutDisplayCoordinateSystem))
    _bstr_t DisplayCoordinateSystem;
    __declspec(property(get=GetColor,put=PutColor))
    OLE_COLOR Color;
    __declspec(property(get=GetUpdateAnimationTimeAfterRun,put=PutUpdateAnimationTimeAfterRun))
    VARIANT_BOOL UpdateAnimationTimeAfterRun;
    __declspec(property(get=GetBPlanes))
    IAgVABPlaneCollectionPtr BPlanes;
    __declspec(property(get=GetLastRunCode))
    enum AgEVARunCode LastRunCode;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDisplayCoordinateSystem ( );
    void PutDisplayCoordinateSystem (
        _bstr_t pVal );
    OLE_COLOR GetColor ( );
    void PutColor (
        OLE_COLOR pVal );
    VARIANT_BOOL GetUpdateAnimationTimeAfterRun ( );
    void PutUpdateAnimationTimeAfterRun (
        VARIANT_BOOL pVal );
    HRESULT ApplyFinalStateToBPlanes ( );
    IAgVABPlaneCollectionPtr GetBPlanes ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    enum AgEVARunCode GetLastRunCode ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DisplayCoordinateSystem (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DisplayCoordinateSystem (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ OLE_COLOR * pVal ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ OLE_COLOR pVal ) = 0;
      virtual HRESULT __stdcall get_UpdateAnimationTimeAfterRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdateAnimationTimeAfterRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall raw_ApplyFinalStateToBPlanes ( ) = 0;
      virtual HRESULT __stdcall get_BPlanes (
        /*[out,retval]*/ struct IAgVABPlaneCollection * * ppVABPlaneCollection ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_LastRunCode (
        /*[out,retval]*/ enum AgEVARunCode * pVal ) = 0;
};

struct __declspec(uuid("10a60e79-cb97-4034-8448-29cf811ff4bf"))
AgVAPowerInternal;
    // [ default ] interface _IAgVAPowerInternal
    // interface IAgVAPowerInternal
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("904ba572-0df9-4ec7-9bc5-33d889e20fc9"))
AgVAPowerProcessed;
    // [ default ] interface _IAgVAPowerProcessed
    // interface IAgVAPowerProcessed
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("4ac08893-6a60-4df1-9384-5cd58c410172"))
AgVAPowerSolarArray;
    // [ default ] interface _IAgVAPowerSolarArray
    // interface IAgVAPowerSolarArray
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("2078ae1a-a9ce-4e1f-befe-0b2f9ea5d266"))
AgVAGeneralRelativityFunction;
    // [ default ] interface _IAgVAGeneralRelativityFunction
    // interface IAgVAGeneralRelativityFunction
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("1fd9e6e9-c720-46b4-92a8-f6c71270f951"))
AgVAStateTransFunction;
    // [ default ] interface _IAgVAStateTransFunction
    // interface IAgVAStateTransFunction
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("b218f597-2491-4993-8dd9-e82faab6364c"))
AgVARadiationPressureFunction;
    // [ default ] interface _IAgVARadiationPressureFunction
    // interface IAgVARadiationPressureFunction
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("00c2f0f0-278d-419b-beab-182477b47e9c"))
AgVAYarkovskyFunc;
    // [ default ] interface _IAgVAYarkovskyFunc
    // interface IAgVAYarkovskyFunc
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("f1a9a913-ced5-428c-bbe5-7c1445bb2cb0"))
AgVABlendedDensity;
    // [ default ] interface _IAgVABlendedDensity
    // interface IAgVABlendedDensity
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("7a0d147e-60ef-4f28-a228-6732124a611f"))
AgVACira72Function;
    // [ default ] interface _IAgVACira72Function
    // interface IAgVACira72Function
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("efc917ac-6f76-4aec-bddb-74a6cfccf00c"))
AgVAExponential;
    // [ default ] interface _IAgVAExponential
    // interface IAgVAExponential
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("3d5afaa1-1554-43eb-a29f-d34dfc25ba59"))
AgVAHarrisPriester;
    // [ default ] interface _IAgVAHarrisPriester
    // interface IAgVAHarrisPriester
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("09a55d2b-49b4-441b-9282-506ceb9b871e"))
AgVADensityModelPlugin;
    // [ default ] interface _IAgVADensityModelPlugin
    // interface IAgVADensityModelPlugin
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("292d3f07-3f8b-4ad6-88a5-b4aa4af2ef7a"))
AgVAJacchiaRoberts;
    // [ default ] interface _IAgVAJacchiaRoberts
    // interface IAgVAJacchiaRoberts
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("0546d559-d337-4572-8ae0-c2ade6f69afa"))
AgVAJacchiaBowman2008;
    // [ default ] interface _IAgVAJacchiaBowman2008
    // interface IAgVAJacchiaBowman2008
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("11bc8e0b-c48c-404a-ae66-3487951b8c06"))
AgVAJacchia_1960;
    // [ default ] interface _IAgVAJacchia_1960
    // interface IAgVAJacchia_1960
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("6bd3011e-e403-4c25-b724-8272dadc0407"))
AgVAJacchia_1970;
    // [ default ] interface _IAgVAJacchia_1970
    // interface IAgVAJacchia_1970
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("0db7c264-62e3-434d-82a6-a48430a53880"))
AgVAJacchia_1971;
    // [ default ] interface _IAgVAJacchia_1971
    // interface IAgVAJacchia_1971
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("59bc05b7-1458-40bf-94df-0d3eb0dceccc"))
AgVAMSISE_1990;
    // [ default ] interface _IAgVAMSISE_1990
    // interface IAgVAMSISE_1990
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("75627e57-3da7-4853-8fc7-ba514816bab2"))
AgVAMSIS_1986;
    // [ default ] interface _IAgVAMSIS_1986
    // interface IAgVAMSIS_1986
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("986c37b3-6d03-4794-9ea7-95d5dd385776"))
AgVANRLMSISE_2000;
    // [ default ] interface _IAgVANRLMSISE_2000
    // interface IAgVANRLMSISE_2000
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("9f40ddc4-35a9-4373-8528-174fcbf598ac"))
AgVAUS_Standard_Atmosphere;
    // [ default ] interface _IAgVAUS_Standard_Atmosphere
    // interface IAgVAUS_Standard_Atmosphere
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("6331af3e-e71f-49a9-a968-f158e8e4f8cb"))
AgVAMarsGRAM37;
    // [ default ] interface _IAgVAMarsGRAM37
    // interface IAgVAMarsGRAM37
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("f32260b9-7917-4830-bfe7-15f3b9376b70"))
AgVAMarsGRAM2000;
    // [ default ] interface _IAgVAMarsGRAM2000
    // interface IAgVAMarsGRAM2000
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("51b6e1b8-5330-4e1e-b3f7-8e33bf1d26f0"))
AgVAMarsGRAM2001;
    // [ default ] interface _IAgVAMarsGRAM2001
    // interface IAgVAMarsGRAM2001
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("7d502eb8-d229-4976-99ba-a26984b5a2c2"))
AgVAMarsGRAM2005;
    // [ default ] interface _IAgVAMarsGRAM2005
    // interface IAgVAMarsGRAM2005
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("03f37634-a3c8-44e4-a7eb-0af22c3eacb8"))
AgVAMarsGRAM2010;
    // [ default ] interface _IAgVAMarsGRAM2010
    // interface IAgVAMarsGRAM2010
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("b655e1d3-6216-4894-b091-52226645ab23"))
AgVADTM2012;
    // [ default ] interface _IAgVADTM2012
    // interface IAgVADTM2012
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("dbe845f3-63cc-4dfa-898e-66d647b1492c"))
AgVAGravityFieldFunction;
    // [ default ] interface _IAgVAGravityFieldFunction
    // interface IAgVAGravityFieldFunction
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("1d1dc186-291c-450b-9372-d165a8bc412b"))
AgVAPointMassFunction;
    // [ default ] interface _IAgVAPointMassFunction
    // interface IAgVAPointMassFunction
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("d0fb4923-739e-49bb-a477-dd86a3d6f26e"))
AgVATwoBodyFunction;
    // [ default ] interface _IAgVATwoBodyFunction
    // interface IAgVATwoBodyFunction
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("c6f84a33-0eda-431a-b1f3-79923a1dbff8"))
AgVAHPOPPluginFunction;
    // [ default ] interface _IAgVAHPOPPluginFunction
    // interface IAgVAHPOPPluginFunction
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("17eb6221-bc1b-4a89-ae53-f7507d71b52b"))
AgVAEOMFuncPluginFunction;
    // [ default ] interface _IAgVAEOMFuncPluginFunction
    // interface IAgVAEOMFuncPluginFunction
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("d7140fbf-8ed5-44f0-8d85-7382cd727d01"))
AgVASRPAeroT20;
    // [ default ] interface _IAgVASRPAeroT20
    // interface IAgVASRPAeroT20
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("0e5a46c5-080a-4cc8-a55b-b8712b2bb29c"))
AgVASRPAeroT30;
    // [ default ] interface _IAgVASRPAeroT30
    // interface IAgVASRPAeroT30
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("f229fbc1-f82c-43c9-885f-54c9edeca036"))
AgVASRPGSPM04aIIA;
    // [ default ] interface _IAgVASRPGSPM04aIIA
    // interface IAgVASRPGSPM04aIIA
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("15bf2d65-a092-42ad-b600-4cc618e7161d"))
AgVASRPGSPM04aIIR;
    // [ default ] interface _IAgVASRPGSPM04aIIR
    // interface IAgVASRPGSPM04aIIR
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("7ae4f782-ca56-44d7-ba7f-5cc8a1a8f362"))
AgVASRPGSPM04aeIIA;
    // [ default ] interface _IAgVASRPGSPM04aeIIA
    // interface IAgVASRPGSPM04aeIIA
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("d84418f2-0f73-47e0-a224-ce3fa4206c4d"))
AgVASRPGSPM04aeIIR;
    // [ default ] interface _IAgVASRPGSPM04aeIIR
    // interface IAgVASRPGSPM04aeIIR
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("2b315130-2e49-48b5-839a-4d2f06604de1"))
AgVASRPSpherical;
    // [ default ] interface _IAgVASRPSpherical
    // interface IAgVASRPSpherical
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("7c8b17f5-bf84-4d6a-b62a-e3e22d59a823"))
AgVAThirdBodyFunction;
    // [ default ] interface _IAgVAThirdBodyFunction
    // interface IAgVAThirdBodyFunction
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("f1da48f1-b44c-48ad-b04d-384ce4d66308"))
AgVADragModelPlugin;
    // [ default ] interface _IAgVADragModelPlugin
    // interface IAgVADragModelPlugin
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("0892dc30-207c-4ba3-a4dd-af561a574e62"))
AgVAEngineConstAcc;
    // [ default ] interface _IAgVAEngineConstAcc
    // interface IAgVAEngineConstAcc
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("833f61ee-23fb-4213-b017-a11a683b5e21"))
AgVAEngineConstant;
    // [ default ] interface _IAgVAEngineConstant
    // interface IAgVAEngineConstant
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("0e4a69c3-5862-4f12-ab69-63d8549e5692"))
AgVAEngineIon;
    // [ default ] interface _IAgVAEngineIon
    // interface IAgVAEngineIon
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("942e6d85-1be4-41b8-9e7a-501aed8822a8"))
AgVAEngineCustom;
    // [ default ] interface _IAgVAEngineCustom
    // interface IAgVAEngineCustom
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("891504f3-7c8a-48c2-a7a8-86b1f22bff6b"))
AgVAEnginePlugin;
    // [ default ] interface _IAgVAEnginePlugin
    // interface IAgVAEnginePlugin
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("631b4d1f-b9be-40c8-a30d-26c4e1fcb799"))
AgVAEngineModelPoly;
    // [ default ] interface _IAgVAEngineModelPoly
    // interface IAgVAEngineModelPoly
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("e1ae78c3-210d-46fa-8e34-46d480452e41"))
AgVAEngineModelThrustCoefficients;
    // [ default ] interface _IAgVAEngineModelThrustCoefficients
    // interface IAgVAEngineModelThrustCoefficients

struct __declspec(uuid("84cd9c65-093d-497f-8143-243756b05551"))
AgVAEngineModelIspCoefficients;
    // [ default ] interface _IAgVAEngineModelIspCoefficients
    // interface IAgVAEngineModelIspCoefficients

struct __declspec(uuid("ef62a2bd-7e35-406b-a8b8-31b15ad33551"))
AgVAEngineDefinition;
    // [ default ] interface _IAgVAEngineDefinition
    // interface IAgVAEngineDefinition

struct __declspec(uuid("f54cd026-afd0-4693-b8b0-7435ba48ea3a"))
AgVAThruster;
    // [ default ] interface _IAgVAThruster
    // interface IAgVAThruster

struct __declspec(uuid("0a2a9ec9-5e4a-4105-a914-5fb41c15235c"))
AgVAThrusterSetCollection;
    // [ default ] interface IUnknown
    // interface IAgVAThrusterSetCollection

struct __declspec(uuid("cb6bf7f0-4c37-45b5-b660-439ea84c73ff"))
AgVAThrusterSet;
    // [ default ] interface _IAgVAThrusterSet
    // interface IAgVAThrusterSet
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("046ae850-ec56-45f7-8c2a-587519eb1522"))
AgVAAsTriggerCondition;
    // [ default ] interface _IAgVAAsTriggerCondition
    // interface IAgVAAsTriggerCondition
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("cdce2223-9ab0-40aa-94aa-92b67c2e4900"))
AgVACustomFunctionScriptEngine;
    // [ default ] interface _IAgVACustomFunctionScriptEngine
    // interface IAgVACustomFunctionScriptEngine
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("f23a1693-f203-4d6a-81ce-920939cdd480"))
AgVANumericalPropagatorWrapper;
    // [ default ] interface _IAgVANumericalPropagatorWrapper
    // interface IAgVANumericalPropagatorWrapper
    // interface IAgComponentInfo
    // interface IAgCloneable

struct __declspec(uuid("a9cdf3b1-a6c2-41df-b326-59070ba0c37a"))
AgVAPropagatorFunctionCollection;
    // [ default ] interface IUnknown
    // interface IAgVAPropagatorFunctionCollection

struct __declspec(uuid("d5a0ac14-4126-41bd-a248-5a4663934449"))
AgVABulirschStoerIntegrator;
    // [ default ] interface _IAgVABulirschStoerIntegrator
    // interface IAgVABulirschStoerIntegrator
    // interface IAgVANumericalIntegrator

struct __declspec(uuid("bd0f8e47-3fbb-4e86-bbdd-1aa7439278a2"))
AgVAGaussJacksonIntegrator;
    // [ default ] interface _IAgVAGaussJacksonIntegrator
    // interface IAgVAGaussJacksonIntegrator
    // interface IAgVANumericalIntegrator

struct __declspec(uuid("a811fb7b-38ae-402d-8b4c-66a6a94fa7aa"))
AgVARK2nd3rd;
    // [ default ] interface _IAgVARK2nd3rd
    // interface IAgVARK2nd3rd
    // interface IAgVANumericalIntegrator

struct __declspec(uuid("580adaa8-8fb0-42c0-a974-4f51d5da3671"))
AgVARK4th;
    // [ default ] interface _IAgVARK4th
    // interface IAgVARK4th
    // interface IAgVANumericalIntegrator

struct __declspec(uuid("f1f098a2-ae17-4f78-8192-15a8ddfd59a1"))
AgVARK4th5th;
    // [ default ] interface _IAgVARK4th5th
    // interface IAgVARK4th5th
    // interface IAgVANumericalIntegrator

struct __declspec(uuid("cf5eada9-fa41-46b1-aa00-f8d9c32665bb"))
AgVARK4thAdapt;
    // [ default ] interface _IAgVARK4thAdapt
    // interface IAgVARK4thAdapt
    // interface IAgVANumericalIntegrator

struct __declspec(uuid("7a051839-6103-4720-b39a-e92164a0a95c"))
AgVARKF7th8th;
    // [ default ] interface _IAgVARKF7th8th
    // interface IAgVARKF7th8th
    // interface IAgVANumericalIntegrator

struct __declspec(uuid("c9dbdfe7-9310-4975-b969-1f18208226c6"))
AgVARKV8th9th;
    // [ default ] interface _IAgVARKV8th9th
    // interface IAgVARKV8th9th
    // interface IAgVANumericalIntegrator

struct __declspec(uuid("50629260-3dc4-40de-bc5e-2fa7b1403a76"))
AgVAScriptingTool;
    // [ default ] interface _IAgVAScriptingTool
    // interface IAgVAScriptingTool
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("d930deef-a509-49a4-9be6-63cbd13ebf28"))
_IAgVAScriptingTool : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetSegmentProperties))
    IAgVAScriptingSegmentCollectionPtr SegmentProperties;
    __declspec(property(get=GetCalcObjects))
    IAgVAScriptingCalcObjectCollectionPtr CalcObjects;
    __declspec(property(get=GetParameters))
    IAgVAScriptingParameterCollectionPtr Parameters;
    __declspec(property(get=GetLanguageType,put=PutLanguageType))
    enum AgEVALanguage LanguageType;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetPreIterate,put=PutPreIterate))
    VARIANT_BOOL PreIterate;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    IAgVAScriptingSegmentCollectionPtr GetSegmentProperties ( );
    IAgVAScriptingCalcObjectCollectionPtr GetCalcObjects ( );
    IAgVAScriptingParameterCollectionPtr GetParameters ( );
    enum AgEVALanguage GetLanguageType ( );
    void PutLanguageType (
        enum AgEVALanguage pVal );
    HRESULT ScriptText (
        _bstr_t Script );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    HRESULT CopyToClipboard ( );
    HRESULT PasteFromClipboard ( );
    VARIANT_BOOL GetPreIterate ( );
    void PutPreIterate (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SegmentProperties (
        /*[out,retval]*/ struct IAgVAScriptingSegmentCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_CalcObjects (
        /*[out,retval]*/ struct IAgVAScriptingCalcObjectCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Parameters (
        /*[out,retval]*/ struct IAgVAScriptingParameterCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_LanguageType (
        /*[out,retval]*/ enum AgEVALanguage * pVal ) = 0;
      virtual HRESULT __stdcall put_LanguageType (
        /*[in]*/ enum AgEVALanguage pVal ) = 0;
      virtual HRESULT __stdcall raw_ScriptText (
        /*[in]*/ BSTR Script ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PasteFromClipboard ( ) = 0;
      virtual HRESULT __stdcall get_PreIterate (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_PreIterate (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("822b445c-047a-4e53-b2fe-6e1fd290c593"))
AgVAScriptingSegmentCollection;
    // [ default ] interface IUnknown
    // interface IAgVAScriptingSegmentCollection
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("5fa481ba-9cd8-4151-836a-cd5a8988fd70"))
AgVAScriptingSegment;
    // [ default ] interface _IAgVAScriptingSegment
    // interface IAgVAScriptingSegment
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("62b6537c-f701-4547-af46-921972e9ebd2"))
_IAgVAScriptingSegment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSegmentName,put=PutSegmentName))
    _bstr_t SegmentName;
    __declspec(property(get=GetComponentName,put=PutComponentName))
    _bstr_t ComponentName;
    __declspec(property(get=GetAttribute,put=PutAttribute))
    _bstr_t Attribute;
    __declspec(property(get=GetUnit,put=PutUnit))
    _bstr_t Unit;
    __declspec(property(get=GetAvailableSegmentNames))
    SAFEARRAY * AvailableSegmentNames;
    __declspec(property(get=GetAvailableAttributeValues))
    SAFEARRAY * AvailableAttributeValues;
    __declspec(property(get=GetReadOnlyProperty,put=PutReadOnlyProperty))
    VARIANT_BOOL ReadOnlyProperty;
    __declspec(property(get=GetObjectName,put=PutObjectName))
    _bstr_t ObjectName;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetAvailableObjectNames))
    SAFEARRAY * AvailableObjectNames;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSegmentName ( );
    void PutSegmentName (
        _bstr_t pVal );
    _bstr_t GetComponentName ( );
    void PutComponentName (
        _bstr_t pVal );
    _bstr_t GetAttribute ( );
    void PutAttribute (
        _bstr_t pVal );
    _bstr_t GetUnit ( );
    void PutUnit (
        _bstr_t pVal );
    SAFEARRAY * GetAvailableSegmentNames ( );
    SAFEARRAY * GetAvailableAttributeValues ( );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    VARIANT_BOOL GetReadOnlyProperty ( );
    void PutReadOnlyProperty (
        VARIANT_BOOL pVal );
    _bstr_t GetObjectName ( );
    void PutObjectName (
        _bstr_t pVal );
    SAFEARRAY * GetAvailableObjectNames ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SegmentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_SegmentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ComponentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ComponentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Attribute (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Attribute (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Unit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Unit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AvailableSegmentNames (
        /*[out,retval]*/ SAFEARRAY * * ppNewVal ) = 0;
      virtual HRESULT __stdcall get_AvailableAttributeValues (
        /*[out,retval]*/ SAFEARRAY * * ppNewVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ReadOnlyProperty (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ReadOnlyProperty (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_AvailableObjectNames (
        /*[out,retval]*/ SAFEARRAY * * ppNewVal ) = 0;
};

struct __declspec(uuid("f5dae76e-1db4-4318-af65-e32cee9f4b4a"))
AgVAScriptingParameterCollection;
    // [ default ] interface IUnknown
    // interface IAgVAScriptingParameterCollection
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("e6f9c1d5-2851-4f82-8749-476a789b01b1"))
AgVAScriptingParameter;
    // [ default ] interface _IAgVAScriptingParameter
    // interface IAgVAScriptingParameter
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("a92a0398-f183-4cb8-9f9a-7112b41e6908"))
_IAgVAScriptingParameter : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetValue,put=PutValue))
    double Value;
    __declspec(property(get=GetParamValue,put=PutParamValue))
    _variant_t ParamValue;
    __declspec(property(get=GetUnit,put=PutUnit))
    _bstr_t Unit;
    __declspec(property(get=GetType,put=PutType))
    enum AgEVAScriptingParameterType Type;
    __declspec(property(get=GetInheritValue,put=PutInheritValue))
    VARIANT_BOOL InheritValue;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDimension,put=PutDimension))
    _bstr_t Dimension;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;
    __declspec(property(get=GetEnumerationChoices))
    IAgVAScriptingParameterEnumerationChoiceCollectionPtr EnumerationChoices;
    __declspec(property(get=GetUseMinValue,put=PutUseMinValue))
    VARIANT_BOOL UseMinValue;
    __declspec(property(get=GetMinValue,put=PutMinValue))
    _variant_t MinValue;
    __declspec(property(get=GetUseMaxValue,put=PutUseMaxValue))
    VARIANT_BOOL UseMaxValue;
    __declspec(property(get=GetMaxValue,put=PutMaxValue))
    _variant_t MaxValue;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    double GetValue ( );
    void PutValue (
        double pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );
    _variant_t GetParamValue ( );
    void PutParamValue (
        const _variant_t & pVal );
    _bstr_t GetUnit ( );
    void PutUnit (
        _bstr_t pVal );
    enum AgEVAScriptingParameterType GetType ( );
    void PutType (
        enum AgEVAScriptingParameterType pVal );
    VARIANT_BOOL GetInheritValue ( );
    void PutInheritValue (
        VARIANT_BOOL pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDimension ( );
    void PutDimension (
        _bstr_t pVal );
    IAgVAScriptingParameterEnumerationChoiceCollectionPtr GetEnumerationChoices ( );
    VARIANT_BOOL GetUseMinValue ( );
    void PutUseMinValue (
        VARIANT_BOOL pVal );
    _variant_t GetMinValue ( );
    void PutMinValue (
        const _variant_t & pVal );
    VARIANT_BOOL GetUseMaxValue ( );
    void PutUseMaxValue (
        VARIANT_BOOL pVal );
    _variant_t GetMaxValue ( );
    void PutMaxValue (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ParamValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ParamValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Unit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Unit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAScriptingParameterType * pVal ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum AgEVAScriptingParameterType pVal ) = 0;
      virtual HRESULT __stdcall get_InheritValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_InheritValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Dimension (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_EnumerationChoices (
        /*[out,retval]*/ struct IAgVAScriptingParameterEnumerationChoiceCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_UseMinValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMinValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MinValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MinValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UseMaxValue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseMaxValue (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxValue (
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("08b6ccf1-2e4a-4197-b9e8-88ed7abbd08b"))
AgVAScriptingCalcObject;
    // [ default ] interface _IAgVAScriptingCalcObject
    // interface IAgVAScriptingCalcObject

struct __declspec(uuid("aa10bb45-fcc2-45e8-890c-ea320ba83a82"))
_IAgVAScriptingCalcObject : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetComponentName,put=PutComponentName))
    _bstr_t ComponentName;
    __declspec(property(get=GetCalcObjectName,put=PutCalcObjectName))
    _bstr_t CalcObjectName;
    __declspec(property(get=GetCalcObject,put=PutCalcObject))
    STKObjects::IAgComponentInfoPtr CalcObject;
    __declspec(property(get=GetUnit,put=PutUnit))
    _bstr_t Unit;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetComponentName ( );
    void PutComponentName (
        _bstr_t pVal );
    _bstr_t GetCalcObjectName ( );
    void PutCalcObjectName (
        _bstr_t pVal );
    STKObjects::IAgComponentInfoPtr GetCalcObject ( );
    void PutCalcObject (
        struct STKObjects::IAgComponentInfo * ppRetVal );
    _bstr_t GetUnit ( );
    void PutUnit (
        _bstr_t pVal );
    HRESULT CopyCalcObjectToClipboard ( );
    HRESULT PasteCalcObjectFromClipboard ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ComponentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ComponentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CalcObjectName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CalcObjectName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CalcObject (
        /*[out,retval]*/ struct STKObjects::IAgComponentInfo * * ppRetVal ) = 0;
      virtual HRESULT __stdcall put_CalcObject (
        /*[in]*/ struct STKObjects::IAgComponentInfo * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Unit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Unit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_CopyCalcObjectToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PasteCalcObjectFromClipboard ( ) = 0;
};

struct __declspec(uuid("576176f0-7315-4939-984a-23e07abeb17b"))
AgVAScriptingCalcObjectCollection;
    // [ default ] interface IUnknown
    // interface IAgVAScriptingCalcObjectCollection

struct __declspec(uuid("5c72bb0b-4a01-4c7e-ae4f-439bc4105307"))
AgVAUserVariableDefinition;
    // [ default ] interface _IAgVAUserVariableDefinition
    // interface IAgVAUserVariableDefinition

struct __declspec(uuid("87b650d1-1137-4dae-b992-956fd9305960"))
_IAgVAUserVariableDefinition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUnitDimension,put=PutUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetVariableName,put=PutVariableName))
    _bstr_t VariableName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetUnitDimension ( );
    void PutUnitDimension (
        _bstr_t pVal );
    _bstr_t GetVariableName ( );
    void PutVariableName (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UnitDimension (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_VariableName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_VariableName (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("9d5e3f0b-9665-4f3f-aa12-6729a64b2217"))
AgVAUserVariable;
    // [ default ] interface _IAgVAUserVariable
    // interface IAgVAUserVariable

struct __declspec(uuid("823a9711-22c7-4a8d-8dea-56a62990be0e"))
_IAgVAUserVariable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetVariableName))
    _bstr_t VariableName;
    __declspec(property(get=GetVariableValue,put=PutVariableValue))
    _variant_t VariableValue;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetUnitDimension ( );
    _bstr_t GetVariableName ( );
    _variant_t GetVariableValue ( );
    void PutVariableValue (
        const _variant_t & pVal );
    HRESULT EnableControlParameter ( );
    HRESULT DisableControlParameter ( );
    VARIANT_BOOL IsControlParameterEnabled ( );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_VariableName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_VariableValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VariableValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter ( ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter ( ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("38e68df5-58d4-4996-bf4f-7d57d07aea32"))
AgVAUserVariableUpdate;
    // [ default ] interface _IAgVAUserVariableUpdate
    // interface IAgVAUserVariableUpdate

struct __declspec(uuid("25dd7d99-44ef-4f1a-8154-af2490d945d0"))
_IAgVAUserVariableUpdate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUnitDimension))
    _bstr_t UnitDimension;
    __declspec(property(get=GetVariableName))
    _bstr_t VariableName;
    __declspec(property(get=GetVariableValue,put=PutVariableValue))
    _variant_t VariableValue;
    __declspec(property(get=GetVariableAction,put=PutVariableAction))
    enum AgEVAUpdateAction VariableAction;
    __declspec(property(get=GetControlParametersAvailable))
    VARIANT_BOOL ControlParametersAvailable;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetUnitDimension ( );
    _bstr_t GetVariableName ( );
    _variant_t GetVariableValue ( );
    void PutVariableValue (
        const _variant_t & pVal );
    enum AgEVAUpdateAction GetVariableAction ( );
    void PutVariableAction (
        enum AgEVAUpdateAction pVal );
    HRESULT EnableControlParameter ( );
    HRESULT DisableControlParameter ( );
    VARIANT_BOOL IsControlParameterEnabled ( );
    VARIANT_BOOL GetControlParametersAvailable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UnitDimension (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_VariableName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_VariableValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VariableValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VariableAction (
        /*[out,retval]*/ enum AgEVAUpdateAction * pVal ) = 0;
      virtual HRESULT __stdcall put_VariableAction (
        /*[in]*/ enum AgEVAUpdateAction pVal ) = 0;
      virtual HRESULT __stdcall raw_EnableControlParameter ( ) = 0;
      virtual HRESULT __stdcall raw_DisableControlParameter ( ) = 0;
      virtual HRESULT __stdcall raw_IsControlParameterEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParametersAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("079211b4-72d9-4036-a93d-9c2bd2a58f46"))
AgVAUserVariableDefinitionCollection;
    // [ default ] interface IUnknown
    // interface IAgVAUserVariableDefinitionCollection

struct __declspec(uuid("fb90358c-56ee-4855-b5d0-1d27a6bb0530"))
AgVAUserVariableCollection;
    // [ default ] interface IUnknown
    // interface IAgVAUserVariableCollection

struct __declspec(uuid("ad3ea284-4360-47f0-b031-6929f40f28bb"))
AgVAUserVariableUpdateCollection;
    // [ default ] interface IUnknown
    // interface IAgVAUserVariableUpdateCollection

struct __declspec(uuid("0927ca4a-f6c6-45fa-a2b9-4f03833e0534"))
AgVACalculationGraphCollection;
    // [ default ] interface IUnknown
    // interface IAgVACalculationGraphCollection

struct __declspec(uuid("56630932-5039-4039-939f-096463f3f0a4"))
AgVAScriptingParameterEnumerationChoice;
    // [ default ] interface _IAgVAScriptingParameterEnumerationChoice
    // interface IAgVAScriptingParameterEnumerationChoice
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("2e2faf11-ee05-4628-8952-ed38f63cb71e"))
_IAgVAScriptingParameterEnumerationChoice : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetValue,put=PutValue))
    long Value;
    __declspec(property(get=GetProvideRuntimeTypeInfo))
    STKUtil::IAgRuntimeTypeInfoPtr ProvideRuntimeTypeInfo;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    long GetValue ( );
    void PutValue (
        long pVal );
    STKUtil::IAgRuntimeTypeInfoPtr GetProvideRuntimeTypeInfo ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ProvideRuntimeTypeInfo (
        /*[out,retval]*/ struct STKUtil::IAgRuntimeTypeInfo * * ppRetVal ) = 0;
};

struct __declspec(uuid("4e87eee3-072b-4703-98ce-3b94339b72f7"))
AgVAScriptingParameterEnumerationChoiceCollection;
    // [ default ] interface IUnknown
    // interface IAgVAScriptingParameterEnumerationChoiceCollection
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("666b9574-8b08-4ad9-a4fd-4b97dbb9cc92"))
AgVAProfileSNOPTOptimizer;
    // [ default ] interface _IAgVAProfileSNOPTOptimizer
    // interface IAgVAProfile
    // interface IAgVAProfileSNOPTOptimizer
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("48b6ff29-9d5a-45e6-b578-d0337dcac629"))
IAgVASNOPTControl : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetInitialValue))
    _variant_t InitialValue;
    __declspec(property(get=GetCurrentValue,put=PutCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _bstr_t GetParentName ( );
    _variant_t GetInitialValue ( );
    _variant_t GetCurrentValue ( );
    void PutCurrentValue (
        const _variant_t & pVal );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_CurrentValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f3a385d7-fbb4-405e-a7e0-b94e691866cb"))
IAgVASNOPTControlCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVASNOPTControlPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVASNOPTControlPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVASNOPTControlPtr GetControlByPaths (
        _bstr_t ObjectPath,
        _bstr_t ControlPath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVASNOPTControl * * SNOPTControl ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_GetControlByPaths (
        /*[in]*/ BSTR ObjectPath,
        /*[in]*/ BSTR ControlPath,
        /*[out,retval]*/ struct IAgVASNOPTControl * * SNOPTControl ) = 0;
};

enum AgEVASNOPTGoal
{
    eVASNOPTGoalMinimize = 0,
    eVASNOPTGoalBound = 1
};

struct __declspec(uuid("f370255f-45e1-4f3c-80ea-8a8e613b15b9"))
IAgVASNOPTResult : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetWeight,put=PutWeight))
    double Weight;
    __declspec(property(get=GetGoal,put=PutGoal))
    enum AgEVASNOPTGoal Goal;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentName ( );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    double GetWeight ( );
    void PutWeight (
        double pVal );
    enum AgEVASNOPTGoal GetGoal ( );
    void PutGoal (
        enum AgEVASNOPTGoal pVal );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Goal (
        /*[out,retval]*/ enum AgEVASNOPTGoal * pVal ) = 0;
      virtual HRESULT __stdcall put_Goal (
        /*[in]*/ enum AgEVASNOPTGoal pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("17562ce6-8616-4ea2-9e02-d4b0541d6051"))
IAgVASNOPTResultCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVASNOPTResultPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVASNOPTResultPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVASNOPTResultPtr GetResultByPaths (
        _bstr_t ObjectPath,
        _bstr_t ResultPath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVASNOPTResult * * SNOPTResult ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultByPaths (
        /*[in]*/ BSTR ObjectPath,
        /*[in]*/ BSTR ResultPath,
        /*[out,retval]*/ struct IAgVASNOPTResult * * SNOPTResult ) = 0;
};

struct __declspec(uuid("00292cbe-212c-45bf-9415-f0ebe3c4bbea"))
_IAgVAProfileSNOPTOptimizer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;
    __declspec(property(get=GetControlParameters))
    IAgVASNOPTControlCollectionPtr ControlParameters;
    __declspec(property(get=GetResults))
    IAgVASNOPTResultCollectionPtr Results;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;
    __declspec(property(get=GetTargeterGraphs))
    IAgVATargeterGraphCollectionPtr TargeterGraphs;
    __declspec(property(get=GetResetControlsBeforeRun,put=PutResetControlsBeforeRun))
    VARIANT_BOOL ResetControlsBeforeRun;
    __declspec(property(get=GetMaxMajorIterations,put=PutMaxMajorIterations))
    long MaxMajorIterations;
    __declspec(property(get=GetToleranceOnMajorFeasibility,put=PutToleranceOnMajorFeasibility))
    double ToleranceOnMajorFeasibility;
    __declspec(property(get=GetToleranceOnMajorOptimality,put=PutToleranceOnMajorOptimality))
    double ToleranceOnMajorOptimality;
    __declspec(property(get=GetMaxMinorIterations,put=PutMaxMinorIterations))
    long MaxMinorIterations;
    __declspec(property(get=GetToleranceOnMinorFeasibility,put=PutToleranceOnMinorFeasibility))
    double ToleranceOnMinorFeasibility;
    __declspec(property(get=GetToleranceOnMinorOptimality,put=PutToleranceOnMinorOptimality))
    double ToleranceOnMinorOptimality;
    __declspec(property(get=GetOptionsFilename,put=PutOptionsFilename))
    _bstr_t OptionsFilename;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    enum AgEVAProfile GetType ( );
    IAgVASNOPTControlCollectionPtr GetControlParameters ( );
    IAgVASNOPTResultCollectionPtr GetResults ( );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    IAgVATargeterGraphCollectionPtr GetTargeterGraphs ( );
    VARIANT_BOOL GetResetControlsBeforeRun ( );
    void PutResetControlsBeforeRun (
        VARIANT_BOOL pVal );
    long GetMaxMajorIterations ( );
    void PutMaxMajorIterations (
        long pVal );
    double GetToleranceOnMajorFeasibility ( );
    void PutToleranceOnMajorFeasibility (
        double pVal );
    double GetToleranceOnMajorOptimality ( );
    void PutToleranceOnMajorOptimality (
        double pVal );
    long GetMaxMinorIterations ( );
    void PutMaxMinorIterations (
        long pVal );
    double GetToleranceOnMinorFeasibility ( );
    void PutToleranceOnMinorFeasibility (
        double pVal );
    double GetToleranceOnMinorOptimality ( );
    void PutToleranceOnMinorOptimality (
        double pVal );
    _bstr_t GetOptionsFilename ( );
    void PutOptionsFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParameters (
        /*[out,retval]*/ struct IAgVASNOPTControlCollection * * ppVASNOPTControlCollection ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVASNOPTResultCollection * * ppVASNOPTResultCollection ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_TargeterGraphs (
        /*[out,retval]*/ struct IAgVATargeterGraphCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ResetControlsBeforeRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetControlsBeforeRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxMajorIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxMajorIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnMajorFeasibility (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnMajorFeasibility (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnMajorOptimality (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnMajorOptimality (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxMinorIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxMinorIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnMinorFeasibility (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnMinorFeasibility (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnMinorOptimality (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnMinorOptimality (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_OptionsFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OptionsFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("05e381f1-beb5-4fb2-bdb4-d51c4c7b7f2c"))
IAgVAProfileSNOPTOptimizer : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetControlParameters))
    IAgVASNOPTControlCollectionPtr ControlParameters;
    __declspec(property(get=GetResults))
    IAgVASNOPTResultCollectionPtr Results;
    __declspec(property(get=GetTargeterGraphs))
    IAgVATargeterGraphCollectionPtr TargeterGraphs;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;
    __declspec(property(get=GetResetControlsBeforeRun,put=PutResetControlsBeforeRun))
    VARIANT_BOOL ResetControlsBeforeRun;
    __declspec(property(get=GetMaxMajorIterations,put=PutMaxMajorIterations))
    long MaxMajorIterations;
    __declspec(property(get=GetToleranceOnMajorFeasibility,put=PutToleranceOnMajorFeasibility))
    double ToleranceOnMajorFeasibility;
    __declspec(property(get=GetToleranceOnMajorOptimality,put=PutToleranceOnMajorOptimality))
    double ToleranceOnMajorOptimality;
    __declspec(property(get=GetMaxMinorIterations,put=PutMaxMinorIterations))
    long MaxMinorIterations;
    __declspec(property(get=GetToleranceOnMinorFeasibility,put=PutToleranceOnMinorFeasibility))
    double ToleranceOnMinorFeasibility;
    __declspec(property(get=GetToleranceOnMinorOptimality,put=PutToleranceOnMinorOptimality))
    double ToleranceOnMinorOptimality;
    __declspec(property(get=GetOptionsFilename,put=PutOptionsFilename))
    _bstr_t OptionsFilename;

    //
    // Wrapper methods for error-handling
    //

    IAgVASNOPTControlCollectionPtr GetControlParameters ( );
    IAgVASNOPTResultCollectionPtr GetResults ( );
    IAgVATargeterGraphCollectionPtr GetTargeterGraphs ( );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    VARIANT_BOOL GetResetControlsBeforeRun ( );
    void PutResetControlsBeforeRun (
        VARIANT_BOOL pVal );
    long GetMaxMajorIterations ( );
    void PutMaxMajorIterations (
        long pVal );
    double GetToleranceOnMajorFeasibility ( );
    void PutToleranceOnMajorFeasibility (
        double pVal );
    double GetToleranceOnMajorOptimality ( );
    void PutToleranceOnMajorOptimality (
        double pVal );
    long GetMaxMinorIterations ( );
    void PutMaxMinorIterations (
        long pVal );
    double GetToleranceOnMinorFeasibility ( );
    void PutToleranceOnMinorFeasibility (
        double pVal );
    double GetToleranceOnMinorOptimality ( );
    void PutToleranceOnMinorOptimality (
        double pVal );
    _bstr_t GetOptionsFilename ( );
    void PutOptionsFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ControlParameters (
        /*[out,retval]*/ struct IAgVASNOPTControlCollection * * ppVASNOPTControlCollection ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVASNOPTResultCollection * * ppVASNOPTResultCollection ) = 0;
      virtual HRESULT __stdcall get_TargeterGraphs (
        /*[out,retval]*/ struct IAgVATargeterGraphCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ResetControlsBeforeRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetControlsBeforeRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MaxMajorIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxMajorIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnMajorFeasibility (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnMajorFeasibility (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnMajorOptimality (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnMajorOptimality (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaxMinorIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxMinorIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnMinorFeasibility (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnMinorFeasibility (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnMinorOptimality (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnMinorOptimality (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_OptionsFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OptionsFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("e44743b1-84b2-4306-ba82-595f012bc693"))
AgVASNOPTControl;
    // [ default ] interface _IAgVASNOPTControl
    // interface IAgVASNOPTControl

struct __declspec(uuid("fe833051-86b9-41bc-b23f-1f67b0e86ce0"))
_IAgVASNOPTControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetInitialValue))
    _variant_t InitialValue;
    __declspec(property(get=GetCurrentValue,put=PutCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _bstr_t GetParentName ( );
    _variant_t GetInitialValue ( );
    _variant_t GetCurrentValue ( );
    void PutCurrentValue (
        const _variant_t & pVal );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_CurrentValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("1fdeaafc-ebb6-4e75-a57f-e45426ab511e"))
AgVASNOPTResult;
    // [ default ] interface _IAgVASNOPTResult
    // interface IAgVASNOPTResult

struct __declspec(uuid("9195d957-b01a-4c8b-87f3-cbe9ba8f055b"))
_IAgVASNOPTResult : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetWeight,put=PutWeight))
    double Weight;
    __declspec(property(get=GetGoal,put=PutGoal))
    enum AgEVASNOPTGoal Goal;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentName ( );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    double GetWeight ( );
    void PutWeight (
        double pVal );
    enum AgEVASNOPTGoal GetGoal ( );
    void PutGoal (
        enum AgEVASNOPTGoal pVal );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Goal (
        /*[out,retval]*/ enum AgEVASNOPTGoal * pVal ) = 0;
      virtual HRESULT __stdcall put_Goal (
        /*[in]*/ enum AgEVASNOPTGoal pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("cb7efed0-43fe-4e3f-ac15-4f61ea3b023d"))
AgVASNOPTControlCollection;
    // [ default ] interface IUnknown
    // interface IAgVASNOPTControlCollection

struct __declspec(uuid("9a6b7070-fe97-4d85-b88f-20488bebabed"))
AgVASNOPTResultCollection;
    // [ default ] interface IUnknown
    // interface IAgVASNOPTResultCollection

struct __declspec(uuid("5aadd8a5-9f00-4a2b-a0a5-d972b9d6af2f"))
AgVAProfileIPOPTOptimizer;
    // [ default ] interface _IAgVAProfileIPOPTOptimizer
    // interface IAgVAProfile
    // interface IAgVAProfileIPOPTOptimizer
    // interface IAgRuntimeTypeInfoProvider

struct __declspec(uuid("86ce9166-7d77-4981-9db0-627344e05a87"))
IAgVAIPOPTControl : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetInitialValue))
    _variant_t InitialValue;
    __declspec(property(get=GetCurrentValue,put=PutCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _bstr_t GetParentName ( );
    _variant_t GetInitialValue ( );
    _variant_t GetCurrentValue ( );
    void PutCurrentValue (
        const _variant_t & pVal );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_CurrentValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("1ed7289d-bf1c-4014-b456-9fb87803d11e"))
IAgVAIPOPTControlCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAIPOPTControlPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAIPOPTControlPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVAIPOPTControlPtr GetControlByPaths (
        _bstr_t ObjectPath,
        _bstr_t ControlPath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVAIPOPTControl * * IPOPTControl ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_GetControlByPaths (
        /*[in]*/ BSTR ObjectPath,
        /*[in]*/ BSTR ControlPath,
        /*[out,retval]*/ struct IAgVAIPOPTControl * * IPOPTControl ) = 0;
};

enum AgEVAIPOPTGoal
{
    eVAIPOPTGoalMinimize = 0,
    eVAIPOPTGoalBound = 1
};

struct __declspec(uuid("4e502442-5729-428b-9dab-ff999290f6ec"))
IAgVAIPOPTResult : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetWeight,put=PutWeight))
    double Weight;
    __declspec(property(get=GetGoal,put=PutGoal))
    enum AgEVAIPOPTGoal Goal;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentName ( );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    double GetWeight ( );
    void PutWeight (
        double pVal );
    enum AgEVAIPOPTGoal GetGoal ( );
    void PutGoal (
        enum AgEVAIPOPTGoal pVal );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Goal (
        /*[out,retval]*/ enum AgEVAIPOPTGoal * pVal ) = 0;
      virtual HRESULT __stdcall put_Goal (
        /*[in]*/ enum AgEVAIPOPTGoal pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("32aa2b93-707a-4624-a9ba-b37c13c0883b"))
IAgVAIPOPTResultCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVAIPOPTResultPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVAIPOPTResultPtr GetItem (
        long Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IAgVAIPOPTResultPtr GetResultByPaths (
        _bstr_t ObjectPath,
        _bstr_t ResultPath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAgVAIPOPTResult * * IPOPTResult ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall raw_GetResultByPaths (
        /*[in]*/ BSTR ObjectPath,
        /*[in]*/ BSTR ResultPath,
        /*[out,retval]*/ struct IAgVAIPOPTResult * * IPOPTResult ) = 0;
};

struct __declspec(uuid("8b5f1a94-8539-4470-ac09-eb4109ac883f"))
_IAgVAProfileIPOPTOptimizer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    _bstr_t Status;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetMode,put=PutMode))
    enum AgEVAProfileMode Mode;
    __declspec(property(get=GetType))
    enum AgEVAProfile Type;
    __declspec(property(get=GetControlParameters))
    IAgVAIPOPTControlCollectionPtr ControlParameters;
    __declspec(property(get=GetResults))
    IAgVAIPOPTResultCollectionPtr Results;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;
    __declspec(property(get=GetTargeterGraphs))
    IAgVATargeterGraphCollectionPtr TargeterGraphs;
    __declspec(property(get=GetResetControlsBeforeRun,put=PutResetControlsBeforeRun))
    VARIANT_BOOL ResetControlsBeforeRun;
    __declspec(property(get=GetToleranceOnConvergence,put=PutToleranceOnConvergence))
    double ToleranceOnConvergence;
    __declspec(property(get=GetMaximumIterations,put=PutMaximumIterations))
    long MaximumIterations;
    __declspec(property(get=GetToleranceOnConstraintViolation,put=PutToleranceOnConstraintViolation))
    double ToleranceOnConstraintViolation;
    __declspec(property(get=GetToleranceOnDualInfeasibility,put=PutToleranceOnDualInfeasibility))
    double ToleranceOnDualInfeasibility;
    __declspec(property(get=GetToleranceOnComplementaryInfeasibility,put=PutToleranceOnComplementaryInfeasibility))
    double ToleranceOnComplementaryInfeasibility;
    __declspec(property(get=GetOptionsFilename,put=PutOptionsFilename))
    _bstr_t OptionsFilename;

    //
    // Wrapper methods for error-handling
    //

    IAgVAProfilePtr Copy ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetStatus ( );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    enum AgEVAProfileMode GetMode ( );
    void PutMode (
        enum AgEVAProfileMode pVal );
    enum AgEVAProfile GetType ( );
    IAgVAIPOPTControlCollectionPtr GetControlParameters ( );
    IAgVAIPOPTResultCollectionPtr GetResults ( );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    IAgVATargeterGraphCollectionPtr GetTargeterGraphs ( );
    VARIANT_BOOL GetResetControlsBeforeRun ( );
    void PutResetControlsBeforeRun (
        VARIANT_BOOL pVal );
    double GetToleranceOnConvergence ( );
    void PutToleranceOnConvergence (
        double pVal );
    long GetMaximumIterations ( );
    void PutMaximumIterations (
        long pVal );
    double GetToleranceOnConstraintViolation ( );
    void PutToleranceOnConstraintViolation (
        double pVal );
    double GetToleranceOnDualInfeasibility ( );
    void PutToleranceOnDualInfeasibility (
        double pVal );
    double GetToleranceOnComplementaryInfeasibility ( );
    void PutToleranceOnComplementaryInfeasibility (
        double pVal );
    _bstr_t GetOptionsFilename ( );
    void PutOptionsFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ struct IAgVAProfile * * ppVAProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum AgEVAProfileMode * pVal ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum AgEVAProfileMode pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgEVAProfile * pVal ) = 0;
      virtual HRESULT __stdcall get_ControlParameters (
        /*[out,retval]*/ struct IAgVAIPOPTControlCollection * * ppVAIPOPTControlCollection ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVAIPOPTResultCollection * * ppVAIPOPTResultCollection ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_TargeterGraphs (
        /*[out,retval]*/ struct IAgVATargeterGraphCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ResetControlsBeforeRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetControlsBeforeRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnConvergence (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnConvergence (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaximumIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaximumIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnConstraintViolation (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnConstraintViolation (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnDualInfeasibility (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnDualInfeasibility (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnComplementaryInfeasibility (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnComplementaryInfeasibility (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_OptionsFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OptionsFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("17e0cb3d-a489-43e8-ad61-b2153464accf"))
IAgVAProfileIPOPTOptimizer : IAgVAProfile
{
    //
    // Property data
    //

    __declspec(property(get=GetControlParameters))
    IAgVAIPOPTControlCollectionPtr ControlParameters;
    __declspec(property(get=GetResults))
    IAgVAIPOPTResultCollectionPtr Results;
    __declspec(property(get=GetTargeterGraphs))
    IAgVATargeterGraphCollectionPtr TargeterGraphs;
    __declspec(property(get=GetScriptingTool))
    IAgVAScriptingToolPtr ScriptingTool;
    __declspec(property(get=GetResetControlsBeforeRun,put=PutResetControlsBeforeRun))
    VARIANT_BOOL ResetControlsBeforeRun;
    __declspec(property(get=GetToleranceOnConvergence,put=PutToleranceOnConvergence))
    double ToleranceOnConvergence;
    __declspec(property(get=GetMaximumIterations,put=PutMaximumIterations))
    long MaximumIterations;
    __declspec(property(get=GetToleranceOnConstraintViolation,put=PutToleranceOnConstraintViolation))
    double ToleranceOnConstraintViolation;
    __declspec(property(get=GetToleranceOnDualInfeasibility,put=PutToleranceOnDualInfeasibility))
    double ToleranceOnDualInfeasibility;
    __declspec(property(get=GetToleranceOnComplementaryInfeasibility,put=PutToleranceOnComplementaryInfeasibility))
    double ToleranceOnComplementaryInfeasibility;
    __declspec(property(get=GetOptionsFilename,put=PutOptionsFilename))
    _bstr_t OptionsFilename;

    //
    // Wrapper methods for error-handling
    //

    IAgVAIPOPTControlCollectionPtr GetControlParameters ( );
    IAgVAIPOPTResultCollectionPtr GetResults ( );
    IAgVATargeterGraphCollectionPtr GetTargeterGraphs ( );
    IAgVAScriptingToolPtr GetScriptingTool ( );
    VARIANT_BOOL GetResetControlsBeforeRun ( );
    void PutResetControlsBeforeRun (
        VARIANT_BOOL pVal );
    double GetToleranceOnConvergence ( );
    void PutToleranceOnConvergence (
        double pVal );
    long GetMaximumIterations ( );
    void PutMaximumIterations (
        long pVal );
    double GetToleranceOnConstraintViolation ( );
    void PutToleranceOnConstraintViolation (
        double pVal );
    double GetToleranceOnDualInfeasibility ( );
    void PutToleranceOnDualInfeasibility (
        double pVal );
    double GetToleranceOnComplementaryInfeasibility ( );
    void PutToleranceOnComplementaryInfeasibility (
        double pVal );
    _bstr_t GetOptionsFilename ( );
    void PutOptionsFilename (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ControlParameters (
        /*[out,retval]*/ struct IAgVAIPOPTControlCollection * * ppVAIPOPTControlCollection ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct IAgVAIPOPTResultCollection * * ppVAIPOPTResultCollection ) = 0;
      virtual HRESULT __stdcall get_TargeterGraphs (
        /*[out,retval]*/ struct IAgVATargeterGraphCollection * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ScriptingTool (
        /*[out,retval]*/ struct IAgVAScriptingTool * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_ResetControlsBeforeRun (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ResetControlsBeforeRun (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnConvergence (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnConvergence (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_MaximumIterations (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaximumIterations (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnConstraintViolation (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnConstraintViolation (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnDualInfeasibility (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnDualInfeasibility (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceOnComplementaryInfeasibility (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceOnComplementaryInfeasibility (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_OptionsFilename (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_OptionsFilename (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("ae645124-27a1-40b0-ad7f-b2b1b3fa1a50"))
AgVAIPOPTControl;
    // [ default ] interface _IAgVAIPOPTControl
    // interface IAgVAIPOPTControl

struct __declspec(uuid("f300ef97-bc12-40bf-9f5a-5718bb7fe729"))
_IAgVAIPOPTControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetInitialValue))
    _variant_t InitialValue;
    __declspec(property(get=GetCurrentValue,put=PutCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _bstr_t GetParentName ( );
    _variant_t GetInitialValue ( );
    _variant_t GetCurrentValue ( );
    void PutCurrentValue (
        const _variant_t & pVal );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_CurrentValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("07e44256-cc36-49e8-b87d-67cfe30c32ea"))
AgVAIPOPTResult;
    // [ default ] interface _IAgVAIPOPTResult
    // interface IAgVAIPOPTResult

struct __declspec(uuid("66561a61-5f9c-4dd7-9e17-40c703f96a55"))
_IAgVAIPOPTResult : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnable,put=PutEnable))
    VARIANT_BOOL Enable;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCurrentValue))
    _variant_t CurrentValue;
    __declspec(property(get=GetParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetLowerBound,put=PutLowerBound))
    _variant_t LowerBound;
    __declspec(property(get=GetUpperBound,put=PutUpperBound))
    _variant_t UpperBound;
    __declspec(property(get=GetScalingValue,put=PutScalingValue))
    _variant_t ScalingValue;
    __declspec(property(get=GetWeight,put=PutWeight))
    double Weight;
    __declspec(property(get=GetGoal,put=PutGoal))
    enum AgEVAIPOPTGoal Goal;
    __declspec(property(get=GetUseCustomDisplayUnit,put=PutUseCustomDisplayUnit))
    VARIANT_BOOL UseCustomDisplayUnit;
    __declspec(property(get=GetCustomDisplayUnit,put=PutCustomDisplayUnit))
    _bstr_t CustomDisplayUnit;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnable ( );
    void PutEnable (
        VARIANT_BOOL pVal );
    _bstr_t GetName ( );
    _variant_t GetCurrentValue ( );
    _bstr_t GetParentName ( );
    _variant_t GetLowerBound ( );
    void PutLowerBound (
        const _variant_t & pVal );
    _variant_t GetUpperBound ( );
    void PutUpperBound (
        const _variant_t & pVal );
    _variant_t GetScalingValue ( );
    void PutScalingValue (
        const _variant_t & pVal );
    double GetWeight ( );
    void PutWeight (
        double pVal );
    enum AgEVAIPOPTGoal GetGoal ( );
    void PutGoal (
        enum AgEVAIPOPTGoal pVal );
    VARIANT_BOOL GetUseCustomDisplayUnit ( );
    void PutUseCustomDisplayUnit (
        VARIANT_BOOL pVal );
    _bstr_t GetCustomDisplayUnit ( );
    void PutCustomDisplayUnit (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrentValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LowerBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_LowerBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UpperBound (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_UpperBound (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ScalingValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ScalingValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Goal (
        /*[out,retval]*/ enum AgEVAIPOPTGoal * pVal ) = 0;
      virtual HRESULT __stdcall put_Goal (
        /*[in]*/ enum AgEVAIPOPTGoal pVal ) = 0;
      virtual HRESULT __stdcall get_UseCustomDisplayUnit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseCustomDisplayUnit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CustomDisplayUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CustomDisplayUnit (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f57c18f0-c089-473f-a153-ed81426af287"))
AgVAIPOPTControlCollection;
    // [ default ] interface IUnknown
    // interface IAgVAIPOPTControlCollection

struct __declspec(uuid("3e4e10fc-185b-4935-bfe0-4583be2ee7bf"))
AgVAIPOPTResultCollection;
    // [ default ] interface IUnknown
    // interface IAgVAIPOPTResultCollection

struct __declspec(uuid("204e3c30-d109-427c-911f-909f6f42a72a"))
IAgVACentralBodyCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IAgVACentralBodyPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IAgVACentralBodyPtr GetItem (
        const _variant_t & IndexOrCbName );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    HRESULT Add (
        _bstr_t CbName );
    HRESULT Remove (
        const _variant_t & IndexOrName );
    HRESULT RemoveAll ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrCbName,
        /*[out,retval]*/ struct IAgVACentralBody * * ppCentralBody ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR CbName ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT IndexOrName ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
};

struct __declspec(uuid("6f11b46c-5086-473d-afee-c35ab2755994"))
IAgVACentralBody : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetGravitationalParam,put=PutGravitationalParam))
    double GravitationalParam;
    __declspec(property(get=GetParentName,put=PutParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetChildren))
    IAgVACentralBodyCollectionPtr Children;
    __declspec(property(get=GetDefaultGravityModelName))
    _bstr_t DefaultGravityModelName;
    __declspec(property(get=GetDefaultGravityModelData))
    IAgVACbGravityModelPtr DefaultGravityModelData;
    __declspec(property(get=GetDefaultShapeName))
    _bstr_t DefaultShapeName;
    __declspec(property(get=GetDefaultShapeData))
    IAgVACbShapePtr DefaultShapeData;
    __declspec(property(get=GetDefaultAttitudeName))
    _bstr_t DefaultAttitudeName;
    __declspec(property(get=GetDefaultAttitudeData))
    IAgVACbAttitudePtr DefaultAttitudeData;
    __declspec(property(get=GetDefaultEphemerisName))
    _bstr_t DefaultEphemerisName;
    __declspec(property(get=GetDefaultEphemerisData))
    IAgVACbEphemerisPtr DefaultEphemerisData;

    //
    // Wrapper methods for error-handling
    //

    double GetGravitationalParam ( );
    void PutGravitationalParam (
        double pVal );
    _bstr_t GetParentName ( );
    void PutParentName (
        _bstr_t pVal );
    IAgVACentralBodyCollectionPtr GetChildren ( );
    _bstr_t GetDefaultGravityModelName ( );
    HRESULT SetDefaultGravityModelByName (
        _bstr_t GravityModelName );
    IAgVACbGravityModelPtr GetDefaultGravityModelData ( );
    IAgVACbGravityModelPtr AddGravityModel (
        enum AgEVACbGravityModel EGravityModel,
        _bstr_t UniqueName );
    HRESULT RemoveGravityModelByName (
        _bstr_t GravityModelName );
    _bstr_t GetDefaultShapeName ( );
    IAgVACbShapePtr GetDefaultShapeData ( );
    HRESULT SetDefaultShapeByName (
        _bstr_t ShapeName );
    IAgVACbShapePtr AddShape (
        enum AgEVACbShape EShape,
        _bstr_t UniqueName );
    HRESULT RemoveShapeByName (
        _bstr_t ShapeName );
    _bstr_t GetDefaultAttitudeName ( );
    IAgVACbAttitudePtr GetDefaultAttitudeData ( );
    HRESULT SetDefaultAttitudeByName (
        _bstr_t AttitudeName );
    IAgVACbAttitudePtr AddAttitude (
        enum AgEVACbAttitude EAttitude,
        _bstr_t UniqueName );
    HRESULT RemoveAttitudeByName (
        _bstr_t AttitudeName );
    _bstr_t GetDefaultEphemerisName ( );
    HRESULT SetDefaultEphemerisByName (
        _bstr_t EphemerisName );
    IAgVACbEphemerisPtr GetDefaultEphemerisData ( );
    IAgVACbEphemerisPtr AddEphemeris (
        enum AgEVACbEphemeris EEphemeris,
        _bstr_t UniqueName );
    HRESULT RemoveEphemerisByName (
        _bstr_t EphemerisName );
    HRESULT CutGravityModelByName (
        _bstr_t GravityModelName );
    HRESULT CopyGravityModelByName (
        _bstr_t GravityModelName );
    IAgVACbGravityModelPtr PasteGravityModel ( );
    IAgVACbGravityModelPtr AddCopyOfGravityModel (
        struct IAgVACbGravityModel * GravityModel );
    HRESULT CutShapeByName (
        _bstr_t ShapeName );
    HRESULT CopyShapeByName (
        _bstr_t ShapeName );
    IAgVACbShapePtr PasteShape ( );
    IAgVACbShapePtr AddCopyOfShape (
        struct IAgVACbShape * Shape );
    HRESULT CutAttitudeByName (
        _bstr_t AttitudeName );
    HRESULT CopyAttitudeByName (
        _bstr_t AttitudeName );
    IAgVACbAttitudePtr PasteAttitude ( );
    IAgVACbAttitudePtr AddCopyOfAttitude (
        struct IAgVACbAttitude * Attitude );
    HRESULT CutEphemerisByName (
        _bstr_t EphemerisName );
    HRESULT CopyEphemerisByName (
        _bstr_t EphemerisName );
    IAgVACbEphemerisPtr PasteEphemeris ( );
    IAgVACbEphemerisPtr AddCopyOfEphemeris (
        struct IAgVACbEphemeris * Ephemeris );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GravitationalParam (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_GravitationalParam (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ParentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Children (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_DefaultGravityModelName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultGravityModelByName (
        /*[in]*/ BSTR GravityModelName ) = 0;
      virtual HRESULT __stdcall get_DefaultGravityModelData (
        /*[out,retval]*/ struct IAgVACbGravityModel * * ppCbGravityModel ) = 0;
      virtual HRESULT __stdcall raw_AddGravityModel (
        /*[in]*/ enum AgEVACbGravityModel EGravityModel,
        /*[in]*/ BSTR UniqueName,
        /*[out,retval]*/ struct IAgVACbGravityModel * * ppCbGravityModel ) = 0;
      virtual HRESULT __stdcall raw_RemoveGravityModelByName (
        /*[in]*/ BSTR GravityModelName ) = 0;
      virtual HRESULT __stdcall get_DefaultShapeName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_DefaultShapeData (
        /*[out,retval]*/ struct IAgVACbShape * * ppCbShape ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultShapeByName (
        /*[in]*/ BSTR ShapeName ) = 0;
      virtual HRESULT __stdcall raw_AddShape (
        /*[in]*/ enum AgEVACbShape EShape,
        /*[in]*/ BSTR UniqueName,
        /*[out,retval]*/ struct IAgVACbShape * * ppCbShape ) = 0;
      virtual HRESULT __stdcall raw_RemoveShapeByName (
        /*[in]*/ BSTR ShapeName ) = 0;
      virtual HRESULT __stdcall get_DefaultAttitudeName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_DefaultAttitudeData (
        /*[out,retval]*/ struct IAgVACbAttitude * * ppCbAttitude ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultAttitudeByName (
        /*[in]*/ BSTR AttitudeName ) = 0;
      virtual HRESULT __stdcall raw_AddAttitude (
        /*[in]*/ enum AgEVACbAttitude EAttitude,
        /*[in]*/ BSTR UniqueName,
        /*[out,retval]*/ struct IAgVACbAttitude * * ppCbAttitude ) = 0;
      virtual HRESULT __stdcall raw_RemoveAttitudeByName (
        /*[in]*/ BSTR AttitudeName ) = 0;
      virtual HRESULT __stdcall get_DefaultEphemerisName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultEphemerisByName (
        /*[in]*/ BSTR EphemerisName ) = 0;
      virtual HRESULT __stdcall get_DefaultEphemerisData (
        /*[out,retval]*/ struct IAgVACbEphemeris * * ppCbEphemeris ) = 0;
      virtual HRESULT __stdcall raw_AddEphemeris (
        /*[in]*/ enum AgEVACbEphemeris EEphemeris,
        /*[in]*/ BSTR UniqueName,
        /*[out,retval]*/ struct IAgVACbEphemeris * * ppCbEphemeris ) = 0;
      virtual HRESULT __stdcall raw_RemoveEphemerisByName (
        /*[in]*/ BSTR EphemerisName ) = 0;
      virtual HRESULT __stdcall raw_CutGravityModelByName (
        /*[in]*/ BSTR GravityModelName ) = 0;
      virtual HRESULT __stdcall raw_CopyGravityModelByName (
        /*[in]*/ BSTR GravityModelName ) = 0;
      virtual HRESULT __stdcall raw_PasteGravityModel (
        /*[out,retval]*/ struct IAgVACbGravityModel * * ppCbGravityModel ) = 0;
      virtual HRESULT __stdcall raw_AddCopyOfGravityModel (
        /*[in]*/ struct IAgVACbGravityModel * GravityModel,
        /*[out,retval]*/ struct IAgVACbGravityModel * * ppCbGravityModel ) = 0;
      virtual HRESULT __stdcall raw_CutShapeByName (
        /*[in]*/ BSTR ShapeName ) = 0;
      virtual HRESULT __stdcall raw_CopyShapeByName (
        /*[in]*/ BSTR ShapeName ) = 0;
      virtual HRESULT __stdcall raw_PasteShape (
        /*[out,retval]*/ struct IAgVACbShape * * ppCbShape ) = 0;
      virtual HRESULT __stdcall raw_AddCopyOfShape (
        /*[in]*/ struct IAgVACbShape * Shape,
        /*[out,retval]*/ struct IAgVACbShape * * ppCbShape ) = 0;
      virtual HRESULT __stdcall raw_CutAttitudeByName (
        /*[in]*/ BSTR AttitudeName ) = 0;
      virtual HRESULT __stdcall raw_CopyAttitudeByName (
        /*[in]*/ BSTR AttitudeName ) = 0;
      virtual HRESULT __stdcall raw_PasteAttitude (
        /*[out,retval]*/ struct IAgVACbAttitude * * ppCbAttitude ) = 0;
      virtual HRESULT __stdcall raw_AddCopyOfAttitude (
        /*[in]*/ struct IAgVACbAttitude * Attitude,
        /*[out,retval]*/ struct IAgVACbAttitude * * ppCbAttitude ) = 0;
      virtual HRESULT __stdcall raw_CutEphemerisByName (
        /*[in]*/ BSTR EphemerisName ) = 0;
      virtual HRESULT __stdcall raw_CopyEphemerisByName (
        /*[in]*/ BSTR EphemerisName ) = 0;
      virtual HRESULT __stdcall raw_PasteEphemeris (
        /*[out,retval]*/ struct IAgVACbEphemeris * * ppCbEphemeris ) = 0;
      virtual HRESULT __stdcall raw_AddCopyOfEphemeris (
        /*[in]*/ struct IAgVACbEphemeris * Ephemeris,
        /*[out,retval]*/ struct IAgVACbEphemeris * * ppCbEphemeris ) = 0;
};

struct __declspec(uuid("dcda194c-46b1-44c3-89d6-c15cc731eab9"))
_IAgVACentralBody : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGravitationalParam,put=PutGravitationalParam))
    double GravitationalParam;
    __declspec(property(get=GetParentName,put=PutParentName))
    _bstr_t ParentName;
    __declspec(property(get=GetChildren))
    IAgVACentralBodyCollectionPtr Children;
    __declspec(property(get=GetDefaultGravityModelName))
    _bstr_t DefaultGravityModelName;
    __declspec(property(get=GetDefaultGravityModelData))
    IAgVACbGravityModelPtr DefaultGravityModelData;
    __declspec(property(get=GetDefaultShapeName))
    _bstr_t DefaultShapeName;
    __declspec(property(get=GetDefaultShapeData))
    IAgVACbShapePtr DefaultShapeData;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetDefaultAttitudeName))
    _bstr_t DefaultAttitudeName;
    __declspec(property(get=GetDefaultAttitudeData))
    IAgVACbAttitudePtr DefaultAttitudeData;
    __declspec(property(get=GetDefaultEphemerisName))
    _bstr_t DefaultEphemerisName;
    __declspec(property(get=GetDefaultEphemerisData))
    IAgVACbEphemerisPtr DefaultEphemerisData;

    //
    // Wrapper methods for error-handling
    //

    double GetGravitationalParam ( );
    void PutGravitationalParam (
        double pVal );
    _bstr_t GetParentName ( );
    void PutParentName (
        _bstr_t pVal );
    IAgVACentralBodyCollectionPtr GetChildren ( );
    _bstr_t GetDefaultGravityModelName ( );
    HRESULT SetDefaultGravityModelByName (
        _bstr_t GravityModelName );
    IAgVACbGravityModelPtr GetDefaultGravityModelData ( );
    IAgVACbGravityModelPtr AddGravityModel (
        enum AgEVACbGravityModel EGravityModel,
        _bstr_t UniqueName );
    HRESULT RemoveGravityModelByName (
        _bstr_t GravityModelName );
    _bstr_t GetDefaultShapeName ( );
    IAgVACbShapePtr GetDefaultShapeData ( );
    HRESULT SetDefaultShapeByName (
        _bstr_t ShapeName );
    IAgVACbShapePtr AddShape (
        enum AgEVACbShape ECbShape,
        _bstr_t UniqueName );
    HRESULT RemoveShapeByName (
        _bstr_t ShapeName );
    _bstr_t GetDefaultAttitudeName ( );
    IAgVACbAttitudePtr GetDefaultAttitudeData ( );
    HRESULT SetDefaultAttitudeByName (
        _bstr_t AttitudeName );
    IAgVACbAttitudePtr AddAttitude (
        enum AgEVACbAttitude EAttitude,
        _bstr_t UniqueName );
    HRESULT RemoveAttitudeByName (
        _bstr_t AttitudeName );
    _bstr_t GetDefaultEphemerisName ( );
    HRESULT SetDefaultEphemerisByName (
        _bstr_t EphemerisName );
    IAgVACbEphemerisPtr GetDefaultEphemerisData ( );
    IAgVACbEphemerisPtr AddEphemeris (
        enum AgEVACbEphemeris EEphemeris,
        _bstr_t UniqueName );
    HRESULT RemoveEphemerisByName (
        _bstr_t EphemerisName );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    HRESULT CutGravityModelByName (
        _bstr_t GravityModelName );
    HRESULT CopyGravityModelByName (
        _bstr_t GravityModelName );
    IAgVACbGravityModelPtr PasteGravityModel ( );
    IAgVACbGravityModelPtr AddCopyOfGravityModel (
        struct IAgVACbGravityModel * GravityModel );
    HRESULT CutShapeByName (
        _bstr_t ShapeName );
    HRESULT CopyShapeByName (
        _bstr_t ShapeName );
    IAgVACbShapePtr PasteShape ( );
    IAgVACbShapePtr AddCopyOfShape (
        struct IAgVACbShape * Shape );
    HRESULT CutAttitudeByName (
        _bstr_t AttitudeName );
    HRESULT CopyAttitudeByName (
        _bstr_t AttitudeName );
    IAgVACbAttitudePtr PasteAttitude ( );
    IAgVACbAttitudePtr AddCopyOfAttitude (
        struct IAgVACbAttitude * Attitude );
    HRESULT CutEphemerisByName (
        _bstr_t EphemerisName );
    HRESULT CopyEphemerisByName (
        _bstr_t EphemerisName );
    IAgVACbEphemerisPtr PasteEphemeris ( );
    IAgVACbEphemerisPtr AddCopyOfEphemeris (
        struct IAgVACbEphemeris * Ephemeris );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GravitationalParam (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_GravitationalParam (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ParentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ParentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Children (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_DefaultGravityModelName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultGravityModelByName (
        /*[in]*/ BSTR GravityModelName ) = 0;
      virtual HRESULT __stdcall get_DefaultGravityModelData (
        /*[out,retval]*/ struct IAgVACbGravityModel * * ppCbGravityModel ) = 0;
      virtual HRESULT __stdcall raw_AddGravityModel (
        /*[in]*/ enum AgEVACbGravityModel EGravityModel,
        /*[in]*/ BSTR UniqueName,
        /*[out,retval]*/ struct IAgVACbGravityModel * * ppCbGravityModel ) = 0;
      virtual HRESULT __stdcall raw_RemoveGravityModelByName (
        /*[in]*/ BSTR GravityModelName ) = 0;
      virtual HRESULT __stdcall get_DefaultShapeName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_DefaultShapeData (
        /*[out,retval]*/ struct IAgVACbShape * * ppCbShape ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultShapeByName (
        /*[in]*/ BSTR ShapeName ) = 0;
      virtual HRESULT __stdcall raw_AddShape (
        /*[in]*/ enum AgEVACbShape ECbShape,
        /*[in]*/ BSTR UniqueName,
        /*[out,retval]*/ struct IAgVACbShape * * ppCbShape ) = 0;
      virtual HRESULT __stdcall raw_RemoveShapeByName (
        /*[in]*/ BSTR ShapeName ) = 0;
      virtual HRESULT __stdcall get_DefaultAttitudeName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_DefaultAttitudeData (
        /*[out,retval]*/ struct IAgVACbAttitude * * ppCbAttitude ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultAttitudeByName (
        /*[in]*/ BSTR AttitudeName ) = 0;
      virtual HRESULT __stdcall raw_AddAttitude (
        /*[in]*/ enum AgEVACbAttitude EAttitude,
        /*[in]*/ BSTR UniqueName,
        /*[out,retval]*/ struct IAgVACbAttitude * * ppCbAttitude ) = 0;
      virtual HRESULT __stdcall raw_RemoveAttitudeByName (
        /*[in]*/ BSTR AttitudeName ) = 0;
      virtual HRESULT __stdcall get_DefaultEphemerisName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultEphemerisByName (
        /*[in]*/ BSTR EphemerisName ) = 0;
      virtual HRESULT __stdcall get_DefaultEphemerisData (
        /*[out,retval]*/ struct IAgVACbEphemeris * * ppCbEphemeris ) = 0;
      virtual HRESULT __stdcall raw_AddEphemeris (
        /*[in]*/ enum AgEVACbEphemeris EEphemeris,
        /*[in]*/ BSTR UniqueName,
        /*[out,retval]*/ struct IAgVACbEphemeris * * ppCbEphemeris ) = 0;
      virtual HRESULT __stdcall raw_RemoveEphemerisByName (
        /*[in]*/ BSTR EphemerisName ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall raw_CutGravityModelByName (
        /*[in]*/ BSTR GravityModelName ) = 0;
      virtual HRESULT __stdcall raw_CopyGravityModelByName (
        /*[in]*/ BSTR GravityModelName ) = 0;
      virtual HRESULT __stdcall raw_PasteGravityModel (
        /*[out,retval]*/ struct IAgVACbGravityModel * * ppCbGravityModel ) = 0;
      virtual HRESULT __stdcall raw_AddCopyOfGravityModel (
        /*[in]*/ struct IAgVACbGravityModel * GravityModel,
        /*[out,retval]*/ struct IAgVACbGravityModel * * ppCbGravityModel ) = 0;
      virtual HRESULT __stdcall raw_CutShapeByName (
        /*[in]*/ BSTR ShapeName ) = 0;
      virtual HRESULT __stdcall raw_CopyShapeByName (
        /*[in]*/ BSTR ShapeName ) = 0;
      virtual HRESULT __stdcall raw_PasteShape (
        /*[out,retval]*/ struct IAgVACbShape * * ppCbShape ) = 0;
      virtual HRESULT __stdcall raw_AddCopyOfShape (
        /*[in]*/ struct IAgVACbShape * Shape,
        /*[out,retval]*/ struct IAgVACbShape * * ppCbShape ) = 0;
      virtual HRESULT __stdcall raw_CutAttitudeByName (
        /*[in]*/ BSTR AttitudeName ) = 0;
      virtual HRESULT __stdcall raw_CopyAttitudeByName (
        /*[in]*/ BSTR AttitudeName ) = 0;
      virtual HRESULT __stdcall raw_PasteAttitude (
        /*[out,retval]*/ struct IAgVACbAttitude * * ppCbAttitude ) = 0;
      virtual HRESULT __stdcall raw_AddCopyOfAttitude (
        /*[in]*/ struct IAgVACbAttitude * Attitude,
        /*[out,retval]*/ struct IAgVACbAttitude * * ppCbAttitude ) = 0;
      virtual HRESULT __stdcall raw_CutEphemerisByName (
        /*[in]*/ BSTR EphemerisName ) = 0;
      virtual HRESULT __stdcall raw_CopyEphemerisByName (
        /*[in]*/ BSTR EphemerisName ) = 0;
      virtual HRESULT __stdcall raw_PasteEphemeris (
        /*[out,retval]*/ struct IAgVACbEphemeris * * ppCbEphemeris ) = 0;
      virtual HRESULT __stdcall raw_AddCopyOfEphemeris (
        /*[in]*/ struct IAgVACbEphemeris * Ephemeris,
        /*[out,retval]*/ struct IAgVACbEphemeris * * ppCbEphemeris ) = 0;
};

struct __declspec(uuid("bbbd0c2f-2756-460a-983b-fb79a79850b0"))
IAgVASRPAeroT20 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("504a606b-d55d-4cd2-a636-c67287e9c068"))
_IAgVASRPAeroT20 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("2f282a0d-8a07-4e0d-b4b2-a8ba6e21faea"))
IAgVASRPAeroT30 : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("a57163aa-49e1-42fa-9ed2-1ff555b258ad"))
_IAgVASRPAeroT30 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("0b6bdeef-3182-4c63-8755-cfe2d36c11ec"))
IAgVASRPGSPM04aIIA : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("28b3a687-4d0f-4e80-b1e0-1084cd286507"))
_IAgVASRPGSPM04aIIA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("6240bc23-d778-4fdb-8e9a-c7d3f0a56d70"))
IAgVASRPGSPM04aIIR : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("1a1e5a02-71ed-46a6-8dc5-e9912164b2cb"))
_IAgVASRPGSPM04aIIR : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("1bb63287-3fc2-4a36-8bea-c818dc94d025"))
IAgVASRPGSPM04aeIIA : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("1f11705a-b378-43c8-9bb9-a774da647407"))
_IAgVASRPGSPM04aeIIA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("fd64362a-3918-4ee1-99e7-cdb5af27aca4"))
IAgVASRPGSPM04aeIIR : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("cfee967c-bb56-4374-9056-16d309b3a041"))
_IAgVASRPGSPM04aeIIR : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("74dfd84e-e62b-44a2-ab6b-1448bf6e97f9"))
IAgVASRPSpherical : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetMeanFlux,put=PutMeanFlux))
    double MeanFlux;
    __declspec(property(get=GetLuminosity,put=PutLuminosity))
    double Luminosity;
    __declspec(property(get=GetSolarForceMethod,put=PutSolarForceMethod))
    enum AgEVASolarForceMethod SolarForceMethod;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    double GetMeanFlux ( );
    void PutMeanFlux (
        double pVal );
    double GetLuminosity ( );
    void PutLuminosity (
        double pVal );
    enum AgEVASolarForceMethod GetSolarForceMethod ( );
    void PutSolarForceMethod (
        enum AgEVASolarForceMethod pVal );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_MeanFlux (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanFlux (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Luminosity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Luminosity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SolarForceMethod (
        /*[out,retval]*/ enum AgEVASolarForceMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarForceMethod (
        /*[in]*/ enum AgEVASolarForceMethod pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("b5350266-4955-48e8-94f5-34b4a2ac5a64"))
_IAgVASRPSpherical : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAtmosAlt,put=PutAtmosAlt))
    double AtmosAlt;
    __declspec(property(get=GetShadowModel,put=PutShadowModel))
    enum AgEVAShadowModel ShadowModel;
    __declspec(property(get=GetSunPosition,put=PutSunPosition))
    enum AgEVASunPosition SunPosition;
    __declspec(property(get=GetEclipsingBodies))
    IAgVACentralBodyCollectionPtr EclipsingBodies;
    __declspec(property(get=GetMeanFlux,put=PutMeanFlux))
    double MeanFlux;
    __declspec(property(get=GetLuminosity,put=PutLuminosity))
    double Luminosity;
    __declspec(property(get=GetSolarForceMethod,put=PutSolarForceMethod))
    enum AgEVASolarForceMethod SolarForceMethod;
    __declspec(property(get=GetIncludeBoundaryMitigation,put=PutIncludeBoundaryMitigation))
    VARIANT_BOOL IncludeBoundaryMitigation;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetUserComment,put=PutUserComment))
    _bstr_t UserComment;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetUseSunCbFileValues,put=PutUseSunCbFileValues))
    VARIANT_BOOL UseSunCbFileValues;
    __declspec(property(get=GetSolarRadius,put=PutSolarRadius))
    double SolarRadius;

    //
    // Wrapper methods for error-handling
    //

    double GetAtmosAlt ( );
    void PutAtmosAlt (
        double pVal );
    enum AgEVAShadowModel GetShadowModel ( );
    void PutShadowModel (
        enum AgEVAShadowModel pVal );
    enum AgEVASunPosition GetSunPosition ( );
    void PutSunPosition (
        enum AgEVASunPosition pVal );
    IAgVACentralBodyCollectionPtr GetEclipsingBodies ( );
    double GetMeanFlux ( );
    void PutMeanFlux (
        double pVal );
    double GetLuminosity ( );
    void PutLuminosity (
        double pVal );
    enum AgEVASolarForceMethod GetSolarForceMethod ( );
    void PutSolarForceMethod (
        enum AgEVASolarForceMethod pVal );
    VARIANT_BOOL GetIncludeBoundaryMitigation ( );
    void PutIncludeBoundaryMitigation (
        VARIANT_BOOL pMitigation );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _bstr_t GetUserComment ( );
    void PutUserComment (
        _bstr_t pVal );
    _bstr_t GetDescription ( );
    VARIANT_BOOL IsReadOnly ( );
    IUnknownPtr CloneObject ( );
    VARIANT_BOOL GetUseSunCbFileValues ( );
    void PutUseSunCbFileValues (
        VARIANT_BOOL pVal );
    double GetSolarRadius ( );
    void PutSolarRadius (
        double pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AtmosAlt (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AtmosAlt (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ShadowModel (
        /*[out,retval]*/ enum AgEVAShadowModel * pVal ) = 0;
      virtual HRESULT __stdcall put_ShadowModel (
        /*[in]*/ enum AgEVAShadowModel pVal ) = 0;
      virtual HRESULT __stdcall get_SunPosition (
        /*[out,retval]*/ enum AgEVASunPosition * pVal ) = 0;
      virtual HRESULT __stdcall put_SunPosition (
        /*[in]*/ enum AgEVASunPosition pVal ) = 0;
      virtual HRESULT __stdcall get_EclipsingBodies (
        /*[out,retval]*/ struct IAgVACentralBodyCollection * * ppCentralBodyCollection ) = 0;
      virtual HRESULT __stdcall get_MeanFlux (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_MeanFlux (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Luminosity (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Luminosity (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SolarForceMethod (
        /*[out,retval]*/ enum AgEVASolarForceMethod * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarForceMethod (
        /*[in]*/ enum AgEVASolarForceMethod pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeBoundaryMitigation (
        /*[out,retval]*/ VARIANT_BOOL * pMitigation ) = 0;
      virtual HRESULT __stdcall put_IncludeBoundaryMitigation (
        /*[in]*/ VARIANT_BOOL pMitigation ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_UserComment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_UserComment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloneObject (
        /*[out,retval]*/ IUnknown * * ppComponent ) = 0;
      virtual HRESULT __stdcall get_UseSunCbFileValues (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseSunCbFileValues (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SolarRadius (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SolarRadius (
        /*[in]*/ double pVal ) = 0;
};

//
// Function implementation mapping
//

#pragma start_map_region("d:\dev\r_stk_prod_x64\source\lib\release.x64\tlhbuilder\agstkgator.tli")
__declspec(implementation_key(1)) STKObjects::IAgComponentInfoPtr IAgVACalcObjectCollection::Add ( _bstr_t Name );
__declspec(implementation_key(2)) STKObjects::IAgComponentInfoPtr IAgVACalcObjectCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(3)) HRESULT IAgVACalcObjectCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(4)) IUnknownPtr IAgVACalcObjectCollection::Get_NewEnum ( );
__declspec(implementation_key(5)) long IAgVACalcObjectCollection::GetCount ( );
__declspec(implementation_key(6)) HRESULT IAgVACalcObjectCollection::Cut ( const _variant_t & IndexOrName );
__declspec(implementation_key(7)) STKObjects::IAgComponentInfoPtr IAgVACalcObjectCollection::Paste ( );
__declspec(implementation_key(8)) STKObjects::IAgComponentInfoPtr IAgVACalcObjectCollection::InsertCopy ( struct STKObjects::IAgComponentInfo * CalcObj );
__declspec(implementation_key(9)) _bstr_t IAgVAStateCalcHeightAboveTerrain::GetCentralBodyName ( );
__declspec(implementation_key(10)) void IAgVAStateCalcHeightAboveTerrain::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(11)) _bstr_t _IAgVAStateCalcHeightAboveTerrain::GetName ( );
__declspec(implementation_key(12)) void _IAgVAStateCalcHeightAboveTerrain::PutName ( _bstr_t pVal );
__declspec(implementation_key(13)) _bstr_t _IAgVAStateCalcHeightAboveTerrain::GetUserComment ( );
__declspec(implementation_key(14)) void _IAgVAStateCalcHeightAboveTerrain::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(15)) _bstr_t _IAgVAStateCalcHeightAboveTerrain::GetDescription ( );
__declspec(implementation_key(16)) VARIANT_BOOL _IAgVAStateCalcHeightAboveTerrain::IsReadOnly ( );
__declspec(implementation_key(17)) IUnknownPtr _IAgVAStateCalcHeightAboveTerrain::CloneObject ( );
__declspec(implementation_key(18)) _bstr_t _IAgVAStateCalcHeightAboveTerrain::GetCentralBodyName ( );
__declspec(implementation_key(19)) void _IAgVAStateCalcHeightAboveTerrain::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(20)) _bstr_t _IAgVAStateCalcEpoch::GetName ( );
__declspec(implementation_key(21)) void _IAgVAStateCalcEpoch::PutName ( _bstr_t pVal );
__declspec(implementation_key(22)) _bstr_t _IAgVAStateCalcEpoch::GetUserComment ( );
__declspec(implementation_key(23)) void _IAgVAStateCalcEpoch::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(24)) _bstr_t _IAgVAStateCalcEpoch::GetDescription ( );
__declspec(implementation_key(25)) VARIANT_BOOL _IAgVAStateCalcEpoch::IsReadOnly ( );
__declspec(implementation_key(26)) IUnknownPtr _IAgVAStateCalcEpoch::CloneObject ( );
__declspec(implementation_key(27)) _bstr_t IAgVAStateCalcOrbitDelaunayG::GetCentralBodyName ( );
__declspec(implementation_key(28)) void IAgVAStateCalcOrbitDelaunayG::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(29)) enum AgEVAElement IAgVAStateCalcOrbitDelaunayG::GetElementType ( );
__declspec(implementation_key(30)) void IAgVAStateCalcOrbitDelaunayG::PutElementType ( enum AgEVAElement pVal );
__declspec(implementation_key(31)) _bstr_t _IAgVAStateCalcOrbitDelaunayG::GetName ( );
__declspec(implementation_key(32)) void _IAgVAStateCalcOrbitDelaunayG::PutName ( _bstr_t pVal );
__declspec(implementation_key(33)) _bstr_t _IAgVAStateCalcOrbitDelaunayG::GetUserComment ( );
__declspec(implementation_key(34)) void _IAgVAStateCalcOrbitDelaunayG::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(35)) _bstr_t _IAgVAStateCalcOrbitDelaunayG::GetDescription ( );
__declspec(implementation_key(36)) VARIANT_BOOL _IAgVAStateCalcOrbitDelaunayG::IsReadOnly ( );
__declspec(implementation_key(37)) IUnknownPtr _IAgVAStateCalcOrbitDelaunayG::CloneObject ( );
__declspec(implementation_key(38)) _bstr_t _IAgVAStateCalcOrbitDelaunayG::GetCentralBodyName ( );
__declspec(implementation_key(39)) void _IAgVAStateCalcOrbitDelaunayG::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(40)) enum AgEVAElement _IAgVAStateCalcOrbitDelaunayG::GetElementType ( );
__declspec(implementation_key(41)) void _IAgVAStateCalcOrbitDelaunayG::PutElementType ( enum AgEVAElement pVal );
__declspec(implementation_key(42)) _bstr_t IAgVAStateCalcOrbitDelaunayH::GetCentralBodyName ( );
__declspec(implementation_key(43)) void IAgVAStateCalcOrbitDelaunayH::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(44)) enum AgEVAElement IAgVAStateCalcOrbitDelaunayH::GetElementType ( );
__declspec(implementation_key(45)) void IAgVAStateCalcOrbitDelaunayH::PutElementType ( enum AgEVAElement pVal );
__declspec(implementation_key(46)) _bstr_t _IAgVAStateCalcOrbitDelaunayH::GetName ( );
__declspec(implementation_key(47)) void _IAgVAStateCalcOrbitDelaunayH::PutName ( _bstr_t pVal );
__declspec(implementation_key(48)) _bstr_t _IAgVAStateCalcOrbitDelaunayH::GetUserComment ( );
__declspec(implementation_key(49)) void _IAgVAStateCalcOrbitDelaunayH::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(50)) _bstr_t _IAgVAStateCalcOrbitDelaunayH::GetDescription ( );
__declspec(implementation_key(51)) VARIANT_BOOL _IAgVAStateCalcOrbitDelaunayH::IsReadOnly ( );
__declspec(implementation_key(52)) IUnknownPtr _IAgVAStateCalcOrbitDelaunayH::CloneObject ( );
__declspec(implementation_key(53)) _bstr_t _IAgVAStateCalcOrbitDelaunayH::GetCentralBodyName ( );
__declspec(implementation_key(54)) void _IAgVAStateCalcOrbitDelaunayH::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(55)) enum AgEVAElement _IAgVAStateCalcOrbitDelaunayH::GetElementType ( );
__declspec(implementation_key(56)) void _IAgVAStateCalcOrbitDelaunayH::PutElementType ( enum AgEVAElement pVal );
__declspec(implementation_key(57)) _bstr_t IAgVAStateCalcOrbitDelaunayL::GetCentralBodyName ( );
__declspec(implementation_key(58)) void IAgVAStateCalcOrbitDelaunayL::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(59)) enum AgEVAElement IAgVAStateCalcOrbitDelaunayL::GetElementType ( );
__declspec(implementation_key(60)) void IAgVAStateCalcOrbitDelaunayL::PutElementType ( enum AgEVAElement pVal );
__declspec(implementation_key(61)) _bstr_t _IAgVAStateCalcOrbitDelaunayL::GetName ( );
__declspec(implementation_key(62)) void _IAgVAStateCalcOrbitDelaunayL::PutName ( _bstr_t pVal );
__declspec(implementation_key(63)) _bstr_t _IAgVAStateCalcOrbitDelaunayL::GetUserComment ( );
__declspec(implementation_key(64)) void _IAgVAStateCalcOrbitDelaunayL::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(65)) _bstr_t _IAgVAStateCalcOrbitDelaunayL::GetDescription ( );
__declspec(implementation_key(66)) VARIANT_BOOL _IAgVAStateCalcOrbitDelaunayL::IsReadOnly ( );
__declspec(implementation_key(67)) IUnknownPtr _IAgVAStateCalcOrbitDelaunayL::CloneObject ( );
__declspec(implementation_key(68)) _bstr_t _IAgVAStateCalcOrbitDelaunayL::GetCentralBodyName ( );
__declspec(implementation_key(69)) void _IAgVAStateCalcOrbitDelaunayL::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(70)) enum AgEVAElement _IAgVAStateCalcOrbitDelaunayL::GetElementType ( );
__declspec(implementation_key(71)) void _IAgVAStateCalcOrbitDelaunayL::PutElementType ( enum AgEVAElement pVal );
__declspec(implementation_key(72)) _bstr_t IAgVAStateCalcOrbitSemiLatusRectum::GetCentralBodyName ( );
__declspec(implementation_key(73)) void IAgVAStateCalcOrbitSemiLatusRectum::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(74)) enum AgEVAElement IAgVAStateCalcOrbitSemiLatusRectum::GetElementType ( );
__declspec(implementation_key(75)) void IAgVAStateCalcOrbitSemiLatusRectum::PutElementType ( enum AgEVAElement pVal );
__declspec(implementation_key(76)) _bstr_t _IAgVAStateCalcOrbitSemiLatusRectum::GetName ( );
__declspec(implementation_key(77)) void _IAgVAStateCalcOrbitSemiLatusRectum::PutName ( _bstr_t pVal );
__declspec(implementation_key(78)) _bstr_t _IAgVAStateCalcOrbitSemiLatusRectum::GetUserComment ( );
__declspec(implementation_key(79)) void _IAgVAStateCalcOrbitSemiLatusRectum::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(80)) _bstr_t _IAgVAStateCalcOrbitSemiLatusRectum::GetDescription ( );
__declspec(implementation_key(81)) VARIANT_BOOL _IAgVAStateCalcOrbitSemiLatusRectum::IsReadOnly ( );
__declspec(implementation_key(82)) IUnknownPtr _IAgVAStateCalcOrbitSemiLatusRectum::CloneObject ( );
__declspec(implementation_key(83)) _bstr_t _IAgVAStateCalcOrbitSemiLatusRectum::GetCentralBodyName ( );
__declspec(implementation_key(84)) void _IAgVAStateCalcOrbitSemiLatusRectum::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(85)) enum AgEVAElement _IAgVAStateCalcOrbitSemiLatusRectum::GetElementType ( );
__declspec(implementation_key(86)) void _IAgVAStateCalcOrbitSemiLatusRectum::PutElementType ( enum AgEVAElement pVal );
__declspec(implementation_key(87)) _bstr_t IAgVAStateCalcCartesianElem::GetCoordSystemName ( );
__declspec(implementation_key(88)) void IAgVAStateCalcCartesianElem::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(89)) _bstr_t _IAgVAStateCalcCartesianElem::GetName ( );
__declspec(implementation_key(90)) void _IAgVAStateCalcCartesianElem::PutName ( _bstr_t pVal );
__declspec(implementation_key(91)) _bstr_t _IAgVAStateCalcCartesianElem::GetUserComment ( );
__declspec(implementation_key(92)) void _IAgVAStateCalcCartesianElem::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(93)) _bstr_t _IAgVAStateCalcCartesianElem::GetDescription ( );
__declspec(implementation_key(94)) VARIANT_BOOL _IAgVAStateCalcCartesianElem::IsReadOnly ( );
__declspec(implementation_key(95)) IUnknownPtr _IAgVAStateCalcCartesianElem::CloneObject ( );
__declspec(implementation_key(96)) _bstr_t _IAgVAStateCalcCartesianElem::GetCoordSystemName ( );
__declspec(implementation_key(97)) void _IAgVAStateCalcCartesianElem::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(98)) _bstr_t IAgVAStateCalcCartSTMElem::GetCoordSystemName ( );
__declspec(implementation_key(99)) void IAgVAStateCalcCartSTMElem::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(100)) enum AgEVASTMPertVariables IAgVAStateCalcCartSTMElem::GetFinalVar ( );
__declspec(implementation_key(101)) void IAgVAStateCalcCartSTMElem::PutFinalVar ( enum AgEVASTMPertVariables pVal );
__declspec(implementation_key(102)) enum AgEVASTMPertVariables IAgVAStateCalcCartSTMElem::GetInitVar ( );
__declspec(implementation_key(103)) void IAgVAStateCalcCartSTMElem::PutInitVar ( enum AgEVASTMPertVariables pVal );
__declspec(implementation_key(104)) _bstr_t _IAgVAStateCalcCartSTMElem::GetName ( );
__declspec(implementation_key(105)) void _IAgVAStateCalcCartSTMElem::PutName ( _bstr_t pVal );
__declspec(implementation_key(106)) _bstr_t _IAgVAStateCalcCartSTMElem::GetUserComment ( );
__declspec(implementation_key(107)) void _IAgVAStateCalcCartSTMElem::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(108)) _bstr_t _IAgVAStateCalcCartSTMElem::GetDescription ( );
__declspec(implementation_key(109)) VARIANT_BOOL _IAgVAStateCalcCartSTMElem::IsReadOnly ( );
__declspec(implementation_key(110)) IUnknownPtr _IAgVAStateCalcCartSTMElem::CloneObject ( );
__declspec(implementation_key(111)) _bstr_t _IAgVAStateCalcCartSTMElem::GetCoordSystemName ( );
__declspec(implementation_key(112)) void _IAgVAStateCalcCartSTMElem::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(113)) enum AgEVASTMPertVariables _IAgVAStateCalcCartSTMElem::GetFinalVar ( );
__declspec(implementation_key(114)) void _IAgVAStateCalcCartSTMElem::PutFinalVar ( enum AgEVASTMPertVariables pVal );
__declspec(implementation_key(115)) enum AgEVASTMPertVariables _IAgVAStateCalcCartSTMElem::GetInitVar ( );
__declspec(implementation_key(116)) void _IAgVAStateCalcCartSTMElem::PutInitVar ( enum AgEVASTMPertVariables pVal );
__declspec(implementation_key(117)) _bstr_t IAgVAStateCalcEnvironment::GetCentralBodyName ( );
__declspec(implementation_key(118)) void IAgVAStateCalcEnvironment::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(119)) _bstr_t IAgVAStateCalcEnvironment::GetAtmosModelName ( );
__declspec(implementation_key(120)) void IAgVAStateCalcEnvironment::PutAtmosModelName ( _bstr_t pVal );
__declspec(implementation_key(121)) _bstr_t _IAgVAStateCalcEnvironment::GetName ( );
__declspec(implementation_key(122)) void _IAgVAStateCalcEnvironment::PutName ( _bstr_t pVal );
__declspec(implementation_key(123)) _bstr_t _IAgVAStateCalcEnvironment::GetUserComment ( );
__declspec(implementation_key(124)) void _IAgVAStateCalcEnvironment::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(125)) _bstr_t _IAgVAStateCalcEnvironment::GetDescription ( );
__declspec(implementation_key(126)) VARIANT_BOOL _IAgVAStateCalcEnvironment::IsReadOnly ( );
__declspec(implementation_key(127)) IUnknownPtr _IAgVAStateCalcEnvironment::CloneObject ( );
__declspec(implementation_key(128)) _bstr_t _IAgVAStateCalcEnvironment::GetCentralBodyName ( );
__declspec(implementation_key(129)) void _IAgVAStateCalcEnvironment::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(130)) _bstr_t _IAgVAStateCalcEnvironment::GetAtmosModelName ( );
__declspec(implementation_key(131)) void _IAgVAStateCalcEnvironment::PutAtmosModelName ( _bstr_t pVal );
__declspec(implementation_key(132)) _bstr_t IAgVAStateCalcEquinoctialElem::GetCoordSystemName ( );
__declspec(implementation_key(133)) void IAgVAStateCalcEquinoctialElem::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(134)) enum AgEVACalcObjectElem IAgVAStateCalcEquinoctialElem::GetElementType ( );
__declspec(implementation_key(135)) void IAgVAStateCalcEquinoctialElem::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(136)) _bstr_t _IAgVAStateCalcEquinoctialElem::GetName ( );
__declspec(implementation_key(137)) void _IAgVAStateCalcEquinoctialElem::PutName ( _bstr_t pVal );
__declspec(implementation_key(138)) _bstr_t _IAgVAStateCalcEquinoctialElem::GetUserComment ( );
__declspec(implementation_key(139)) void _IAgVAStateCalcEquinoctialElem::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(140)) _bstr_t _IAgVAStateCalcEquinoctialElem::GetDescription ( );
__declspec(implementation_key(141)) VARIANT_BOOL _IAgVAStateCalcEquinoctialElem::IsReadOnly ( );
__declspec(implementation_key(142)) IUnknownPtr _IAgVAStateCalcEquinoctialElem::CloneObject ( );
__declspec(implementation_key(143)) _bstr_t _IAgVAStateCalcEquinoctialElem::GetCoordSystemName ( );
__declspec(implementation_key(144)) void _IAgVAStateCalcEquinoctialElem::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(145)) enum AgEVACalcObjectElem _IAgVAStateCalcEquinoctialElem::GetElementType ( );
__declspec(implementation_key(146)) void _IAgVAStateCalcEquinoctialElem::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(147)) _bstr_t _IAgVAStateCalcDamageFlux::GetName ( );
__declspec(implementation_key(148)) void _IAgVAStateCalcDamageFlux::PutName ( _bstr_t pVal );
__declspec(implementation_key(149)) _bstr_t _IAgVAStateCalcDamageFlux::GetUserComment ( );
__declspec(implementation_key(150)) void _IAgVAStateCalcDamageFlux::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(151)) _bstr_t _IAgVAStateCalcDamageFlux::GetDescription ( );
__declspec(implementation_key(152)) VARIANT_BOOL _IAgVAStateCalcDamageFlux::IsReadOnly ( );
__declspec(implementation_key(153)) IUnknownPtr _IAgVAStateCalcDamageFlux::CloneObject ( );
__declspec(implementation_key(154)) _bstr_t _IAgVAStateCalcDamageMassFlux::GetName ( );
__declspec(implementation_key(155)) void _IAgVAStateCalcDamageMassFlux::PutName ( _bstr_t pVal );
__declspec(implementation_key(156)) _bstr_t _IAgVAStateCalcDamageMassFlux::GetUserComment ( );
__declspec(implementation_key(157)) void _IAgVAStateCalcDamageMassFlux::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(158)) _bstr_t _IAgVAStateCalcDamageMassFlux::GetDescription ( );
__declspec(implementation_key(159)) VARIANT_BOOL _IAgVAStateCalcDamageMassFlux::IsReadOnly ( );
__declspec(implementation_key(160)) IUnknownPtr _IAgVAStateCalcDamageMassFlux::CloneObject ( );
__declspec(implementation_key(161)) _bstr_t _IAgVAStateCalcMagFieldDipoleL::GetName ( );
__declspec(implementation_key(162)) void _IAgVAStateCalcMagFieldDipoleL::PutName ( _bstr_t pVal );
__declspec(implementation_key(163)) _bstr_t _IAgVAStateCalcMagFieldDipoleL::GetUserComment ( );
__declspec(implementation_key(164)) void _IAgVAStateCalcMagFieldDipoleL::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(165)) _bstr_t _IAgVAStateCalcMagFieldDipoleL::GetDescription ( );
__declspec(implementation_key(166)) VARIANT_BOOL _IAgVAStateCalcMagFieldDipoleL::IsReadOnly ( );
__declspec(implementation_key(167)) IUnknownPtr _IAgVAStateCalcMagFieldDipoleL::CloneObject ( );
__declspec(implementation_key(168)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcSEETMagFieldFieldLineSepAngle::GetTargetObject ( );
__declspec(implementation_key(169)) _bstr_t _IAgVAStateCalcSEETMagFieldFieldLineSepAngle::GetName ( );
__declspec(implementation_key(170)) void _IAgVAStateCalcSEETMagFieldFieldLineSepAngle::PutName ( _bstr_t pVal );
__declspec(implementation_key(171)) _bstr_t _IAgVAStateCalcSEETMagFieldFieldLineSepAngle::GetUserComment ( );
__declspec(implementation_key(172)) void _IAgVAStateCalcSEETMagFieldFieldLineSepAngle::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(173)) _bstr_t _IAgVAStateCalcSEETMagFieldFieldLineSepAngle::GetDescription ( );
__declspec(implementation_key(174)) VARIANT_BOOL _IAgVAStateCalcSEETMagFieldFieldLineSepAngle::IsReadOnly ( );
__declspec(implementation_key(175)) IUnknownPtr _IAgVAStateCalcSEETMagFieldFieldLineSepAngle::CloneObject ( );
__declspec(implementation_key(176)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcSEETMagFieldFieldLineSepAngle::GetTargetObject ( );
__declspec(implementation_key(177)) _bstr_t _IAgVAStateCalcImpactFlux::GetName ( );
__declspec(implementation_key(178)) void _IAgVAStateCalcImpactFlux::PutName ( _bstr_t pVal );
__declspec(implementation_key(179)) _bstr_t _IAgVAStateCalcImpactFlux::GetUserComment ( );
__declspec(implementation_key(180)) void _IAgVAStateCalcImpactFlux::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(181)) _bstr_t _IAgVAStateCalcImpactFlux::GetDescription ( );
__declspec(implementation_key(182)) VARIANT_BOOL _IAgVAStateCalcImpactFlux::IsReadOnly ( );
__declspec(implementation_key(183)) IUnknownPtr _IAgVAStateCalcImpactFlux::CloneObject ( );
__declspec(implementation_key(184)) _bstr_t _IAgVAStateCalcImpactMassFlux::GetName ( );
__declspec(implementation_key(185)) void _IAgVAStateCalcImpactMassFlux::PutName ( _bstr_t pVal );
__declspec(implementation_key(186)) _bstr_t _IAgVAStateCalcImpactMassFlux::GetUserComment ( );
__declspec(implementation_key(187)) void _IAgVAStateCalcImpactMassFlux::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(188)) _bstr_t _IAgVAStateCalcImpactMassFlux::GetDescription ( );
__declspec(implementation_key(189)) VARIANT_BOOL _IAgVAStateCalcImpactMassFlux::IsReadOnly ( );
__declspec(implementation_key(190)) IUnknownPtr _IAgVAStateCalcImpactMassFlux::CloneObject ( );
__declspec(implementation_key(191)) _bstr_t _IAgVAStateCalcSEETSAAFlux::GetName ( );
__declspec(implementation_key(192)) void _IAgVAStateCalcSEETSAAFlux::PutName ( _bstr_t pVal );
__declspec(implementation_key(193)) _bstr_t _IAgVAStateCalcSEETSAAFlux::GetUserComment ( );
__declspec(implementation_key(194)) void _IAgVAStateCalcSEETSAAFlux::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(195)) _bstr_t _IAgVAStateCalcSEETSAAFlux::GetDescription ( );
__declspec(implementation_key(196)) VARIANT_BOOL _IAgVAStateCalcSEETSAAFlux::IsReadOnly ( );
__declspec(implementation_key(197)) IUnknownPtr _IAgVAStateCalcSEETSAAFlux::CloneObject ( );
__declspec(implementation_key(198)) _bstr_t _IAgVAStateCalcSEETVehTemp::GetName ( );
__declspec(implementation_key(199)) void _IAgVAStateCalcSEETVehTemp::PutName ( _bstr_t pVal );
__declspec(implementation_key(200)) _bstr_t _IAgVAStateCalcSEETVehTemp::GetUserComment ( );
__declspec(implementation_key(201)) void _IAgVAStateCalcSEETVehTemp::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(202)) _bstr_t _IAgVAStateCalcSEETVehTemp::GetDescription ( );
__declspec(implementation_key(203)) VARIANT_BOOL _IAgVAStateCalcSEETVehTemp::IsReadOnly ( );
__declspec(implementation_key(204)) IUnknownPtr _IAgVAStateCalcSEETVehTemp::CloneObject ( );
__declspec(implementation_key(205)) _bstr_t IAgVAStateCalcCloseApproachBearing::GetCentralBodyName ( );
__declspec(implementation_key(206)) void IAgVAStateCalcCloseApproachBearing::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(207)) enum AgEVACalcObjectReference IAgVAStateCalcCloseApproachBearing::GetReferenceSelection ( );
__declspec(implementation_key(208)) void IAgVAStateCalcCloseApproachBearing::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(209)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcCloseApproachBearing::GetReference ( );
__declspec(implementation_key(210)) _bstr_t _IAgVAStateCalcCloseApproachBearing::GetName ( );
__declspec(implementation_key(211)) void _IAgVAStateCalcCloseApproachBearing::PutName ( _bstr_t pVal );
__declspec(implementation_key(212)) _bstr_t _IAgVAStateCalcCloseApproachBearing::GetUserComment ( );
__declspec(implementation_key(213)) void _IAgVAStateCalcCloseApproachBearing::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(214)) _bstr_t _IAgVAStateCalcCloseApproachBearing::GetDescription ( );
__declspec(implementation_key(215)) VARIANT_BOOL _IAgVAStateCalcCloseApproachBearing::IsReadOnly ( );
__declspec(implementation_key(216)) IUnknownPtr _IAgVAStateCalcCloseApproachBearing::CloneObject ( );
__declspec(implementation_key(217)) _bstr_t _IAgVAStateCalcCloseApproachBearing::GetCentralBodyName ( );
__declspec(implementation_key(218)) void _IAgVAStateCalcCloseApproachBearing::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(219)) enum AgEVACalcObjectReference _IAgVAStateCalcCloseApproachBearing::GetReferenceSelection ( );
__declspec(implementation_key(220)) void _IAgVAStateCalcCloseApproachBearing::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(221)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcCloseApproachBearing::GetReference ( );
__declspec(implementation_key(222)) _bstr_t IAgVAStateCalcCloseApproachMag::GetCentralBodyName ( );
__declspec(implementation_key(223)) void IAgVAStateCalcCloseApproachMag::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(224)) enum AgEVACalcObjectReference IAgVAStateCalcCloseApproachMag::GetReferenceSelection ( );
__declspec(implementation_key(225)) void IAgVAStateCalcCloseApproachMag::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(226)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcCloseApproachMag::GetReference ( );
__declspec(implementation_key(227)) _bstr_t _IAgVAStateCalcCloseApproachMag::GetName ( );
__declspec(implementation_key(228)) void _IAgVAStateCalcCloseApproachMag::PutName ( _bstr_t pVal );
__declspec(implementation_key(229)) _bstr_t _IAgVAStateCalcCloseApproachMag::GetUserComment ( );
__declspec(implementation_key(230)) void _IAgVAStateCalcCloseApproachMag::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(231)) _bstr_t _IAgVAStateCalcCloseApproachMag::GetDescription ( );
__declspec(implementation_key(232)) VARIANT_BOOL _IAgVAStateCalcCloseApproachMag::IsReadOnly ( );
__declspec(implementation_key(233)) IUnknownPtr _IAgVAStateCalcCloseApproachMag::CloneObject ( );
__declspec(implementation_key(234)) _bstr_t _IAgVAStateCalcCloseApproachMag::GetCentralBodyName ( );
__declspec(implementation_key(235)) void _IAgVAStateCalcCloseApproachMag::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(236)) enum AgEVACalcObjectReference _IAgVAStateCalcCloseApproachMag::GetReferenceSelection ( );
__declspec(implementation_key(237)) void _IAgVAStateCalcCloseApproachMag::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(238)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcCloseApproachMag::GetReference ( );
__declspec(implementation_key(239)) _bstr_t IAgVAStateCalcCloseApproachTheta::GetCentralBodyName ( );
__declspec(implementation_key(240)) void IAgVAStateCalcCloseApproachTheta::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(241)) enum AgEVACalcObjectReference IAgVAStateCalcCloseApproachTheta::GetReferenceSelection ( );
__declspec(implementation_key(242)) void IAgVAStateCalcCloseApproachTheta::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(243)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcCloseApproachTheta::GetReference ( );
__declspec(implementation_key(244)) _bstr_t _IAgVAStateCalcCloseApproachTheta::GetName ( );
__declspec(implementation_key(245)) void _IAgVAStateCalcCloseApproachTheta::PutName ( _bstr_t pVal );
__declspec(implementation_key(246)) _bstr_t _IAgVAStateCalcCloseApproachTheta::GetUserComment ( );
__declspec(implementation_key(247)) void _IAgVAStateCalcCloseApproachTheta::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(248)) _bstr_t _IAgVAStateCalcCloseApproachTheta::GetDescription ( );
__declspec(implementation_key(249)) VARIANT_BOOL _IAgVAStateCalcCloseApproachTheta::IsReadOnly ( );
__declspec(implementation_key(250)) IUnknownPtr _IAgVAStateCalcCloseApproachTheta::CloneObject ( );
__declspec(implementation_key(251)) _bstr_t _IAgVAStateCalcCloseApproachTheta::GetCentralBodyName ( );
__declspec(implementation_key(252)) void _IAgVAStateCalcCloseApproachTheta::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(253)) enum AgEVACalcObjectReference _IAgVAStateCalcCloseApproachTheta::GetReferenceSelection ( );
__declspec(implementation_key(254)) void _IAgVAStateCalcCloseApproachTheta::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(255)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcCloseApproachTheta::GetReference ( );
__declspec(implementation_key(256)) _bstr_t IAgVAStateCalcCloseApproachX::GetCentralBodyName ( );
__declspec(implementation_key(257)) void IAgVAStateCalcCloseApproachX::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(258)) enum AgEVACalcObjectReference IAgVAStateCalcCloseApproachX::GetReferenceSelection ( );
__declspec(implementation_key(259)) void IAgVAStateCalcCloseApproachX::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(260)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcCloseApproachX::GetReference ( );
__declspec(implementation_key(261)) _bstr_t _IAgVAStateCalcCloseApproachX::GetName ( );
__declspec(implementation_key(262)) void _IAgVAStateCalcCloseApproachX::PutName ( _bstr_t pVal );
__declspec(implementation_key(263)) _bstr_t _IAgVAStateCalcCloseApproachX::GetUserComment ( );
__declspec(implementation_key(264)) void _IAgVAStateCalcCloseApproachX::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(265)) _bstr_t _IAgVAStateCalcCloseApproachX::GetDescription ( );
__declspec(implementation_key(266)) VARIANT_BOOL _IAgVAStateCalcCloseApproachX::IsReadOnly ( );
__declspec(implementation_key(267)) IUnknownPtr _IAgVAStateCalcCloseApproachX::CloneObject ( );
__declspec(implementation_key(268)) _bstr_t _IAgVAStateCalcCloseApproachX::GetCentralBodyName ( );
__declspec(implementation_key(269)) void _IAgVAStateCalcCloseApproachX::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(270)) enum AgEVACalcObjectReference _IAgVAStateCalcCloseApproachX::GetReferenceSelection ( );
__declspec(implementation_key(271)) void _IAgVAStateCalcCloseApproachX::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(272)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcCloseApproachX::GetReference ( );
__declspec(implementation_key(273)) _bstr_t IAgVAStateCalcCloseApproachY::GetCentralBodyName ( );
__declspec(implementation_key(274)) void IAgVAStateCalcCloseApproachY::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(275)) enum AgEVACalcObjectReference IAgVAStateCalcCloseApproachY::GetReferenceSelection ( );
__declspec(implementation_key(276)) void IAgVAStateCalcCloseApproachY::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(277)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcCloseApproachY::GetReference ( );
__declspec(implementation_key(278)) _bstr_t _IAgVAStateCalcCloseApproachY::GetName ( );
__declspec(implementation_key(279)) void _IAgVAStateCalcCloseApproachY::PutName ( _bstr_t pVal );
__declspec(implementation_key(280)) _bstr_t _IAgVAStateCalcCloseApproachY::GetUserComment ( );
__declspec(implementation_key(281)) void _IAgVAStateCalcCloseApproachY::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(282)) _bstr_t _IAgVAStateCalcCloseApproachY::GetDescription ( );
__declspec(implementation_key(283)) VARIANT_BOOL _IAgVAStateCalcCloseApproachY::IsReadOnly ( );
__declspec(implementation_key(284)) IUnknownPtr _IAgVAStateCalcCloseApproachY::CloneObject ( );
__declspec(implementation_key(285)) _bstr_t _IAgVAStateCalcCloseApproachY::GetCentralBodyName ( );
__declspec(implementation_key(286)) void _IAgVAStateCalcCloseApproachY::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(287)) enum AgEVACalcObjectReference _IAgVAStateCalcCloseApproachY::GetReferenceSelection ( );
__declspec(implementation_key(288)) void _IAgVAStateCalcCloseApproachY::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(289)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcCloseApproachY::GetReference ( );
__declspec(implementation_key(290)) _bstr_t IAgVAStateCalcCloseApproachCosBearing::GetCentralBodyName ( );
__declspec(implementation_key(291)) void IAgVAStateCalcCloseApproachCosBearing::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(292)) enum AgEVACalcObjectReference IAgVAStateCalcCloseApproachCosBearing::GetReferenceSelection ( );
__declspec(implementation_key(293)) void IAgVAStateCalcCloseApproachCosBearing::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(294)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcCloseApproachCosBearing::GetReference ( );
__declspec(implementation_key(295)) _bstr_t _IAgVAStateCalcCloseApproachCosBearing::GetName ( );
__declspec(implementation_key(296)) void _IAgVAStateCalcCloseApproachCosBearing::PutName ( _bstr_t pVal );
__declspec(implementation_key(297)) _bstr_t _IAgVAStateCalcCloseApproachCosBearing::GetUserComment ( );
__declspec(implementation_key(298)) void _IAgVAStateCalcCloseApproachCosBearing::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(299)) _bstr_t _IAgVAStateCalcCloseApproachCosBearing::GetDescription ( );
__declspec(implementation_key(300)) VARIANT_BOOL _IAgVAStateCalcCloseApproachCosBearing::IsReadOnly ( );
__declspec(implementation_key(301)) IUnknownPtr _IAgVAStateCalcCloseApproachCosBearing::CloneObject ( );
__declspec(implementation_key(302)) _bstr_t _IAgVAStateCalcCloseApproachCosBearing::GetCentralBodyName ( );
__declspec(implementation_key(303)) void _IAgVAStateCalcCloseApproachCosBearing::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(304)) enum AgEVACalcObjectReference _IAgVAStateCalcCloseApproachCosBearing::GetReferenceSelection ( );
__declspec(implementation_key(305)) void _IAgVAStateCalcCloseApproachCosBearing::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(306)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcCloseApproachCosBearing::GetReference ( );
__declspec(implementation_key(307)) _bstr_t IAgVAStateCalcRelGroundTrackError::GetCentralBodyName ( );
__declspec(implementation_key(308)) void IAgVAStateCalcRelGroundTrackError::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(309)) enum AgEVACalcObjectDirection IAgVAStateCalcRelGroundTrackError::GetDirection ( );
__declspec(implementation_key(310)) void IAgVAStateCalcRelGroundTrackError::PutDirection ( enum AgEVACalcObjectDirection pVal );
__declspec(implementation_key(311)) VARIANT_BOOL IAgVAStateCalcRelGroundTrackError::GetSigned ( );
__declspec(implementation_key(312)) void IAgVAStateCalcRelGroundTrackError::PutSigned ( VARIANT_BOOL pVal );
__declspec(implementation_key(313)) enum AgEVACalcObjectReference IAgVAStateCalcRelGroundTrackError::GetReferenceSelection ( );
__declspec(implementation_key(314)) void IAgVAStateCalcRelGroundTrackError::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(315)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcRelGroundTrackError::GetReference ( );
__declspec(implementation_key(316)) _bstr_t _IAgVAStateCalcRelGroundTrackError::GetName ( );
__declspec(implementation_key(317)) void _IAgVAStateCalcRelGroundTrackError::PutName ( _bstr_t pVal );
__declspec(implementation_key(318)) _bstr_t _IAgVAStateCalcRelGroundTrackError::GetUserComment ( );
__declspec(implementation_key(319)) void _IAgVAStateCalcRelGroundTrackError::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(320)) _bstr_t _IAgVAStateCalcRelGroundTrackError::GetDescription ( );
__declspec(implementation_key(321)) VARIANT_BOOL _IAgVAStateCalcRelGroundTrackError::IsReadOnly ( );
__declspec(implementation_key(322)) IUnknownPtr _IAgVAStateCalcRelGroundTrackError::CloneObject ( );
__declspec(implementation_key(323)) _bstr_t _IAgVAStateCalcRelGroundTrackError::GetCentralBodyName ( );
__declspec(implementation_key(324)) void _IAgVAStateCalcRelGroundTrackError::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(325)) enum AgEVACalcObjectDirection _IAgVAStateCalcRelGroundTrackError::GetDirection ( );
__declspec(implementation_key(326)) void _IAgVAStateCalcRelGroundTrackError::PutDirection ( enum AgEVACalcObjectDirection pVal );
__declspec(implementation_key(327)) VARIANT_BOOL _IAgVAStateCalcRelGroundTrackError::GetSigned ( );
__declspec(implementation_key(328)) void _IAgVAStateCalcRelGroundTrackError::PutSigned ( VARIANT_BOOL pVal );
__declspec(implementation_key(329)) enum AgEVACalcObjectReference _IAgVAStateCalcRelGroundTrackError::GetReferenceSelection ( );
__declspec(implementation_key(330)) void _IAgVAStateCalcRelGroundTrackError::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(331)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcRelGroundTrackError::GetReference ( );
__declspec(implementation_key(332)) _bstr_t IAgVAStateCalcRelAtAOLMaster::GetCentralBodyName ( );
__declspec(implementation_key(333)) void IAgVAStateCalcRelAtAOLMaster::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(334)) _bstr_t IAgVAStateCalcRelAtAOLMaster::GetCalcObjectName ( );
__declspec(implementation_key(335)) void IAgVAStateCalcRelAtAOLMaster::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(336)) enum AgEVACalcObjectDirection IAgVAStateCalcRelAtAOLMaster::GetDirection ( );
__declspec(implementation_key(337)) void IAgVAStateCalcRelAtAOLMaster::PutDirection ( enum AgEVACalcObjectDirection pVal );
__declspec(implementation_key(338)) enum AgEVACalcObjectReference IAgVAStateCalcRelAtAOLMaster::GetReferenceSelection ( );
__declspec(implementation_key(339)) void IAgVAStateCalcRelAtAOLMaster::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(340)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcRelAtAOLMaster::GetReference ( );
__declspec(implementation_key(341)) _bstr_t _IAgVAStateCalcRelAtAOLMaster::GetName ( );
__declspec(implementation_key(342)) void _IAgVAStateCalcRelAtAOLMaster::PutName ( _bstr_t pVal );
__declspec(implementation_key(343)) _bstr_t _IAgVAStateCalcRelAtAOLMaster::GetUserComment ( );
__declspec(implementation_key(344)) void _IAgVAStateCalcRelAtAOLMaster::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(345)) _bstr_t _IAgVAStateCalcRelAtAOLMaster::GetDescription ( );
__declspec(implementation_key(346)) VARIANT_BOOL _IAgVAStateCalcRelAtAOLMaster::IsReadOnly ( );
__declspec(implementation_key(347)) IUnknownPtr _IAgVAStateCalcRelAtAOLMaster::CloneObject ( );
__declspec(implementation_key(348)) _bstr_t _IAgVAStateCalcRelAtAOLMaster::GetCentralBodyName ( );
__declspec(implementation_key(349)) void _IAgVAStateCalcRelAtAOLMaster::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(350)) _bstr_t _IAgVAStateCalcRelAtAOLMaster::GetCalcObjectName ( );
__declspec(implementation_key(351)) void _IAgVAStateCalcRelAtAOLMaster::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(352)) enum AgEVACalcObjectDirection _IAgVAStateCalcRelAtAOLMaster::GetDirection ( );
__declspec(implementation_key(353)) void _IAgVAStateCalcRelAtAOLMaster::PutDirection ( enum AgEVACalcObjectDirection pVal );
__declspec(implementation_key(354)) enum AgEVACalcObjectReference _IAgVAStateCalcRelAtAOLMaster::GetReferenceSelection ( );
__declspec(implementation_key(355)) void _IAgVAStateCalcRelAtAOLMaster::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(356)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcRelAtAOLMaster::GetReference ( );
__declspec(implementation_key(357)) _bstr_t IAgVAStateCalcDeltaFromMaster::GetCalcObjectName ( );
__declspec(implementation_key(358)) void IAgVAStateCalcDeltaFromMaster::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(359)) enum AgEVACalcObjectReference IAgVAStateCalcDeltaFromMaster::GetReferenceSelection ( );
__declspec(implementation_key(360)) void IAgVAStateCalcDeltaFromMaster::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(361)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcDeltaFromMaster::GetReference ( );
__declspec(implementation_key(362)) _bstr_t _IAgVAStateCalcDeltaFromMaster::GetName ( );
__declspec(implementation_key(363)) void _IAgVAStateCalcDeltaFromMaster::PutName ( _bstr_t pVal );
__declspec(implementation_key(364)) _bstr_t _IAgVAStateCalcDeltaFromMaster::GetUserComment ( );
__declspec(implementation_key(365)) void _IAgVAStateCalcDeltaFromMaster::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(366)) _bstr_t _IAgVAStateCalcDeltaFromMaster::GetDescription ( );
__declspec(implementation_key(367)) VARIANT_BOOL _IAgVAStateCalcDeltaFromMaster::IsReadOnly ( );
__declspec(implementation_key(368)) IUnknownPtr _IAgVAStateCalcDeltaFromMaster::CloneObject ( );
__declspec(implementation_key(369)) _bstr_t _IAgVAStateCalcDeltaFromMaster::GetCalcObjectName ( );
__declspec(implementation_key(370)) void _IAgVAStateCalcDeltaFromMaster::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(371)) enum AgEVACalcObjectReference _IAgVAStateCalcDeltaFromMaster::GetReferenceSelection ( );
__declspec(implementation_key(372)) void _IAgVAStateCalcDeltaFromMaster::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(373)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcDeltaFromMaster::GetReference ( );
__declspec(implementation_key(374)) _bstr_t IAgVAStateCalcLonDriftRate::GetCentralBodyName ( );
__declspec(implementation_key(375)) void IAgVAStateCalcLonDriftRate::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(376)) enum AgEVACalcObjectElem IAgVAStateCalcLonDriftRate::GetElementType ( );
__declspec(implementation_key(377)) void IAgVAStateCalcLonDriftRate::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(378)) _bstr_t _IAgVAStateCalcLonDriftRate::GetName ( );
__declspec(implementation_key(379)) void _IAgVAStateCalcLonDriftRate::PutName ( _bstr_t pVal );
__declspec(implementation_key(380)) _bstr_t _IAgVAStateCalcLonDriftRate::GetUserComment ( );
__declspec(implementation_key(381)) void _IAgVAStateCalcLonDriftRate::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(382)) _bstr_t _IAgVAStateCalcLonDriftRate::GetDescription ( );
__declspec(implementation_key(383)) VARIANT_BOOL _IAgVAStateCalcLonDriftRate::IsReadOnly ( );
__declspec(implementation_key(384)) IUnknownPtr _IAgVAStateCalcLonDriftRate::CloneObject ( );
__declspec(implementation_key(385)) _bstr_t _IAgVAStateCalcLonDriftRate::GetCentralBodyName ( );
__declspec(implementation_key(386)) void _IAgVAStateCalcLonDriftRate::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(387)) enum AgEVACalcObjectElem _IAgVAStateCalcLonDriftRate::GetElementType ( );
__declspec(implementation_key(388)) void _IAgVAStateCalcLonDriftRate::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(389)) _bstr_t IAgVAStateCalcMeanEarthLon::GetCentralBodyName ( );
__declspec(implementation_key(390)) void IAgVAStateCalcMeanEarthLon::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(391)) _bstr_t _IAgVAStateCalcMeanEarthLon::GetName ( );
__declspec(implementation_key(392)) void _IAgVAStateCalcMeanEarthLon::PutName ( _bstr_t pVal );
__declspec(implementation_key(393)) _bstr_t _IAgVAStateCalcMeanEarthLon::GetUserComment ( );
__declspec(implementation_key(394)) void _IAgVAStateCalcMeanEarthLon::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(395)) _bstr_t _IAgVAStateCalcMeanEarthLon::GetDescription ( );
__declspec(implementation_key(396)) VARIANT_BOOL _IAgVAStateCalcMeanEarthLon::IsReadOnly ( );
__declspec(implementation_key(397)) IUnknownPtr _IAgVAStateCalcMeanEarthLon::CloneObject ( );
__declspec(implementation_key(398)) _bstr_t _IAgVAStateCalcMeanEarthLon::GetCentralBodyName ( );
__declspec(implementation_key(399)) void _IAgVAStateCalcMeanEarthLon::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(400)) _bstr_t IAgVAStateCalcRectifiedLon::GetCentralBodyName ( );
__declspec(implementation_key(401)) void IAgVAStateCalcRectifiedLon::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(402)) _bstr_t _IAgVAStateCalcRectifiedLon::GetName ( );
__declspec(implementation_key(403)) void _IAgVAStateCalcRectifiedLon::PutName ( _bstr_t pVal );
__declspec(implementation_key(404)) _bstr_t _IAgVAStateCalcRectifiedLon::GetUserComment ( );
__declspec(implementation_key(405)) void _IAgVAStateCalcRectifiedLon::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(406)) _bstr_t _IAgVAStateCalcRectifiedLon::GetDescription ( );
__declspec(implementation_key(407)) VARIANT_BOOL _IAgVAStateCalcRectifiedLon::IsReadOnly ( );
__declspec(implementation_key(408)) IUnknownPtr _IAgVAStateCalcRectifiedLon::CloneObject ( );
__declspec(implementation_key(409)) _bstr_t _IAgVAStateCalcRectifiedLon::GetCentralBodyName ( );
__declspec(implementation_key(410)) void _IAgVAStateCalcRectifiedLon::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(411)) _bstr_t IAgVAStateCalcGeodeticElem::GetCentralBodyName ( );
__declspec(implementation_key(412)) void IAgVAStateCalcGeodeticElem::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(413)) _bstr_t _IAgVAStateCalcGeodeticElem::GetName ( );
__declspec(implementation_key(414)) void _IAgVAStateCalcGeodeticElem::PutName ( _bstr_t pVal );
__declspec(implementation_key(415)) _bstr_t _IAgVAStateCalcGeodeticElem::GetUserComment ( );
__declspec(implementation_key(416)) void _IAgVAStateCalcGeodeticElem::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(417)) _bstr_t _IAgVAStateCalcGeodeticElem::GetDescription ( );
__declspec(implementation_key(418)) VARIANT_BOOL _IAgVAStateCalcGeodeticElem::IsReadOnly ( );
__declspec(implementation_key(419)) IUnknownPtr _IAgVAStateCalcGeodeticElem::CloneObject ( );
__declspec(implementation_key(420)) _bstr_t _IAgVAStateCalcGeodeticElem::GetCentralBodyName ( );
__declspec(implementation_key(421)) void _IAgVAStateCalcGeodeticElem::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(422)) _bstr_t IAgVAStateCalcRepeatingGroundTrackErr::GetCentralBodyName ( );
__declspec(implementation_key(423)) void IAgVAStateCalcRepeatingGroundTrackErr::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(424)) _variant_t IAgVAStateCalcRepeatingGroundTrackErr::GetReferenceLongitude ( );
__declspec(implementation_key(425)) void IAgVAStateCalcRepeatingGroundTrackErr::PutReferenceLongitude ( const _variant_t & pVal );
__declspec(implementation_key(426)) double IAgVAStateCalcRepeatingGroundTrackErr::GetRepeatCount ( );
__declspec(implementation_key(427)) void IAgVAStateCalcRepeatingGroundTrackErr::PutRepeatCount ( double pVal );
__declspec(implementation_key(428)) HRESULT IAgVAStateCalcRepeatingGroundTrackErr::EnableControlParameter ( enum AgEVAControlRepeatingGroundTrackErr Param );
__declspec(implementation_key(429)) HRESULT IAgVAStateCalcRepeatingGroundTrackErr::DisableControlParameter ( enum AgEVAControlRepeatingGroundTrackErr Param );
__declspec(implementation_key(430)) VARIANT_BOOL IAgVAStateCalcRepeatingGroundTrackErr::IsControlParameterEnabled ( enum AgEVAControlRepeatingGroundTrackErr Param );
__declspec(implementation_key(431)) VARIANT_BOOL IAgVAStateCalcRepeatingGroundTrackErr::GetControlParametersAvailable ( );
__declspec(implementation_key(432)) _bstr_t _IAgVAStateCalcRepeatingGroundTrackErr::GetName ( );
__declspec(implementation_key(433)) void _IAgVAStateCalcRepeatingGroundTrackErr::PutName ( _bstr_t pVal );
__declspec(implementation_key(434)) _bstr_t _IAgVAStateCalcRepeatingGroundTrackErr::GetUserComment ( );
__declspec(implementation_key(435)) void _IAgVAStateCalcRepeatingGroundTrackErr::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(436)) _bstr_t _IAgVAStateCalcRepeatingGroundTrackErr::GetDescription ( );
__declspec(implementation_key(437)) VARIANT_BOOL _IAgVAStateCalcRepeatingGroundTrackErr::IsReadOnly ( );
__declspec(implementation_key(438)) IUnknownPtr _IAgVAStateCalcRepeatingGroundTrackErr::CloneObject ( );
__declspec(implementation_key(439)) _bstr_t _IAgVAStateCalcRepeatingGroundTrackErr::GetCentralBodyName ( );
__declspec(implementation_key(440)) void _IAgVAStateCalcRepeatingGroundTrackErr::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(441)) _variant_t _IAgVAStateCalcRepeatingGroundTrackErr::GetReferenceLongitude ( );
__declspec(implementation_key(442)) void _IAgVAStateCalcRepeatingGroundTrackErr::PutReferenceLongitude ( const _variant_t & pVal );
__declspec(implementation_key(443)) double _IAgVAStateCalcRepeatingGroundTrackErr::GetRepeatCount ( );
__declspec(implementation_key(444)) void _IAgVAStateCalcRepeatingGroundTrackErr::PutRepeatCount ( double pVal );
__declspec(implementation_key(445)) HRESULT _IAgVAStateCalcRepeatingGroundTrackErr::EnableControlParameter ( enum AgEVAControlRepeatingGroundTrackErr Param );
__declspec(implementation_key(446)) HRESULT _IAgVAStateCalcRepeatingGroundTrackErr::DisableControlParameter ( enum AgEVAControlRepeatingGroundTrackErr Param );
__declspec(implementation_key(447)) VARIANT_BOOL _IAgVAStateCalcRepeatingGroundTrackErr::IsControlParameterEnabled ( enum AgEVAControlRepeatingGroundTrackErr Param );
__declspec(implementation_key(448)) VARIANT_BOOL _IAgVAStateCalcRepeatingGroundTrackErr::GetControlParametersAvailable ( );
__declspec(implementation_key(449)) _bstr_t IAgVAStateCalcAltOfApoapsis::GetCentralBodyName ( );
__declspec(implementation_key(450)) void IAgVAStateCalcAltOfApoapsis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(451)) enum AgEVACalcObjectElem IAgVAStateCalcAltOfApoapsis::GetElementType ( );
__declspec(implementation_key(452)) void IAgVAStateCalcAltOfApoapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(453)) _bstr_t _IAgVAStateCalcAltOfApoapsis::GetName ( );
__declspec(implementation_key(454)) void _IAgVAStateCalcAltOfApoapsis::PutName ( _bstr_t pVal );
__declspec(implementation_key(455)) _bstr_t _IAgVAStateCalcAltOfApoapsis::GetUserComment ( );
__declspec(implementation_key(456)) void _IAgVAStateCalcAltOfApoapsis::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(457)) _bstr_t _IAgVAStateCalcAltOfApoapsis::GetDescription ( );
__declspec(implementation_key(458)) VARIANT_BOOL _IAgVAStateCalcAltOfApoapsis::IsReadOnly ( );
__declspec(implementation_key(459)) IUnknownPtr _IAgVAStateCalcAltOfApoapsis::CloneObject ( );
__declspec(implementation_key(460)) _bstr_t _IAgVAStateCalcAltOfApoapsis::GetCentralBodyName ( );
__declspec(implementation_key(461)) void _IAgVAStateCalcAltOfApoapsis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(462)) enum AgEVACalcObjectElem _IAgVAStateCalcAltOfApoapsis::GetElementType ( );
__declspec(implementation_key(463)) void _IAgVAStateCalcAltOfApoapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(464)) _bstr_t IAgVAStateCalcAltOfPeriapsis::GetCentralBodyName ( );
__declspec(implementation_key(465)) void IAgVAStateCalcAltOfPeriapsis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(466)) enum AgEVACalcObjectElem IAgVAStateCalcAltOfPeriapsis::GetElementType ( );
__declspec(implementation_key(467)) void IAgVAStateCalcAltOfPeriapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(468)) _bstr_t _IAgVAStateCalcAltOfPeriapsis::GetName ( );
__declspec(implementation_key(469)) void _IAgVAStateCalcAltOfPeriapsis::PutName ( _bstr_t pVal );
__declspec(implementation_key(470)) _bstr_t _IAgVAStateCalcAltOfPeriapsis::GetUserComment ( );
__declspec(implementation_key(471)) void _IAgVAStateCalcAltOfPeriapsis::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(472)) _bstr_t _IAgVAStateCalcAltOfPeriapsis::GetDescription ( );
__declspec(implementation_key(473)) VARIANT_BOOL _IAgVAStateCalcAltOfPeriapsis::IsReadOnly ( );
__declspec(implementation_key(474)) IUnknownPtr _IAgVAStateCalcAltOfPeriapsis::CloneObject ( );
__declspec(implementation_key(475)) _bstr_t _IAgVAStateCalcAltOfPeriapsis::GetCentralBodyName ( );
__declspec(implementation_key(476)) void _IAgVAStateCalcAltOfPeriapsis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(477)) enum AgEVACalcObjectElem _IAgVAStateCalcAltOfPeriapsis::GetElementType ( );
__declspec(implementation_key(478)) void _IAgVAStateCalcAltOfPeriapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(479)) _bstr_t IAgVAStateCalcArgOfLat::GetCoordSystemName ( );
__declspec(implementation_key(480)) void IAgVAStateCalcArgOfLat::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(481)) enum AgEVACalcObjectElem IAgVAStateCalcArgOfLat::GetElementType ( );
__declspec(implementation_key(482)) void IAgVAStateCalcArgOfLat::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(483)) _bstr_t _IAgVAStateCalcArgOfLat::GetName ( );
__declspec(implementation_key(484)) void _IAgVAStateCalcArgOfLat::PutName ( _bstr_t pVal );
__declspec(implementation_key(485)) _bstr_t _IAgVAStateCalcArgOfLat::GetUserComment ( );
__declspec(implementation_key(486)) void _IAgVAStateCalcArgOfLat::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(487)) _bstr_t _IAgVAStateCalcArgOfLat::GetDescription ( );
__declspec(implementation_key(488)) VARIANT_BOOL _IAgVAStateCalcArgOfLat::IsReadOnly ( );
__declspec(implementation_key(489)) IUnknownPtr _IAgVAStateCalcArgOfLat::CloneObject ( );
__declspec(implementation_key(490)) _bstr_t _IAgVAStateCalcArgOfLat::GetCoordSystemName ( );
__declspec(implementation_key(491)) void _IAgVAStateCalcArgOfLat::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(492)) enum AgEVACalcObjectElem _IAgVAStateCalcArgOfLat::GetElementType ( );
__declspec(implementation_key(493)) void _IAgVAStateCalcArgOfLat::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(494)) _bstr_t IAgVAStateCalcArgOfPeriapsis::GetCoordSystemName ( );
__declspec(implementation_key(495)) void IAgVAStateCalcArgOfPeriapsis::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(496)) enum AgEVACalcObjectElem IAgVAStateCalcArgOfPeriapsis::GetElementType ( );
__declspec(implementation_key(497)) void IAgVAStateCalcArgOfPeriapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(498)) _bstr_t _IAgVAStateCalcArgOfPeriapsis::GetName ( );
__declspec(implementation_key(499)) void _IAgVAStateCalcArgOfPeriapsis::PutName ( _bstr_t pVal );
__declspec(implementation_key(500)) _bstr_t _IAgVAStateCalcArgOfPeriapsis::GetUserComment ( );
__declspec(implementation_key(501)) void _IAgVAStateCalcArgOfPeriapsis::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(502)) _bstr_t _IAgVAStateCalcArgOfPeriapsis::GetDescription ( );
__declspec(implementation_key(503)) VARIANT_BOOL _IAgVAStateCalcArgOfPeriapsis::IsReadOnly ( );
__declspec(implementation_key(504)) IUnknownPtr _IAgVAStateCalcArgOfPeriapsis::CloneObject ( );
__declspec(implementation_key(505)) _bstr_t _IAgVAStateCalcArgOfPeriapsis::GetCoordSystemName ( );
__declspec(implementation_key(506)) void _IAgVAStateCalcArgOfPeriapsis::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(507)) enum AgEVACalcObjectElem _IAgVAStateCalcArgOfPeriapsis::GetElementType ( );
__declspec(implementation_key(508)) void _IAgVAStateCalcArgOfPeriapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(509)) _bstr_t IAgVAStateCalcEccAnomaly::GetCentralBodyName ( );
__declspec(implementation_key(510)) void IAgVAStateCalcEccAnomaly::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(511)) enum AgEVACalcObjectElem IAgVAStateCalcEccAnomaly::GetElementType ( );
__declspec(implementation_key(512)) void IAgVAStateCalcEccAnomaly::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(513)) _bstr_t _IAgVAStateCalcEccAnomaly::GetName ( );
__declspec(implementation_key(514)) void _IAgVAStateCalcEccAnomaly::PutName ( _bstr_t pVal );
__declspec(implementation_key(515)) _bstr_t _IAgVAStateCalcEccAnomaly::GetUserComment ( );
__declspec(implementation_key(516)) void _IAgVAStateCalcEccAnomaly::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(517)) _bstr_t _IAgVAStateCalcEccAnomaly::GetDescription ( );
__declspec(implementation_key(518)) VARIANT_BOOL _IAgVAStateCalcEccAnomaly::IsReadOnly ( );
__declspec(implementation_key(519)) IUnknownPtr _IAgVAStateCalcEccAnomaly::CloneObject ( );
__declspec(implementation_key(520)) _bstr_t _IAgVAStateCalcEccAnomaly::GetCentralBodyName ( );
__declspec(implementation_key(521)) void _IAgVAStateCalcEccAnomaly::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(522)) enum AgEVACalcObjectElem _IAgVAStateCalcEccAnomaly::GetElementType ( );
__declspec(implementation_key(523)) void _IAgVAStateCalcEccAnomaly::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(524)) _bstr_t IAgVAStateCalcEccentricity::GetCentralBodyName ( );
__declspec(implementation_key(525)) void IAgVAStateCalcEccentricity::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(526)) enum AgEVACalcObjectElem IAgVAStateCalcEccentricity::GetElementType ( );
__declspec(implementation_key(527)) void IAgVAStateCalcEccentricity::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(528)) _bstr_t _IAgVAStateCalcEccentricity::GetName ( );
__declspec(implementation_key(529)) void _IAgVAStateCalcEccentricity::PutName ( _bstr_t pVal );
__declspec(implementation_key(530)) _bstr_t _IAgVAStateCalcEccentricity::GetUserComment ( );
__declspec(implementation_key(531)) void _IAgVAStateCalcEccentricity::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(532)) _bstr_t _IAgVAStateCalcEccentricity::GetDescription ( );
__declspec(implementation_key(533)) VARIANT_BOOL _IAgVAStateCalcEccentricity::IsReadOnly ( );
__declspec(implementation_key(534)) IUnknownPtr _IAgVAStateCalcEccentricity::CloneObject ( );
__declspec(implementation_key(535)) _bstr_t _IAgVAStateCalcEccentricity::GetCentralBodyName ( );
__declspec(implementation_key(536)) void _IAgVAStateCalcEccentricity::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(537)) enum AgEVACalcObjectElem _IAgVAStateCalcEccentricity::GetElementType ( );
__declspec(implementation_key(538)) void _IAgVAStateCalcEccentricity::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(539)) _bstr_t IAgVAStateCalcInclination::GetCoordSystemName ( );
__declspec(implementation_key(540)) void IAgVAStateCalcInclination::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(541)) enum AgEVACalcObjectElem IAgVAStateCalcInclination::GetElementType ( );
__declspec(implementation_key(542)) void IAgVAStateCalcInclination::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(543)) _bstr_t _IAgVAStateCalcInclination::GetName ( );
__declspec(implementation_key(544)) void _IAgVAStateCalcInclination::PutName ( _bstr_t pVal );
__declspec(implementation_key(545)) _bstr_t _IAgVAStateCalcInclination::GetUserComment ( );
__declspec(implementation_key(546)) void _IAgVAStateCalcInclination::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(547)) _bstr_t _IAgVAStateCalcInclination::GetDescription ( );
__declspec(implementation_key(548)) VARIANT_BOOL _IAgVAStateCalcInclination::IsReadOnly ( );
__declspec(implementation_key(549)) IUnknownPtr _IAgVAStateCalcInclination::CloneObject ( );
__declspec(implementation_key(550)) _bstr_t _IAgVAStateCalcInclination::GetCoordSystemName ( );
__declspec(implementation_key(551)) void _IAgVAStateCalcInclination::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(552)) enum AgEVACalcObjectElem _IAgVAStateCalcInclination::GetElementType ( );
__declspec(implementation_key(553)) void _IAgVAStateCalcInclination::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(554)) _bstr_t IAgVAStateCalcLonOfAscNode::GetCentralBodyName ( );
__declspec(implementation_key(555)) void IAgVAStateCalcLonOfAscNode::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(556)) enum AgEVACalcObjectElem IAgVAStateCalcLonOfAscNode::GetElementType ( );
__declspec(implementation_key(557)) void IAgVAStateCalcLonOfAscNode::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(558)) _bstr_t _IAgVAStateCalcLonOfAscNode::GetName ( );
__declspec(implementation_key(559)) void _IAgVAStateCalcLonOfAscNode::PutName ( _bstr_t pVal );
__declspec(implementation_key(560)) _bstr_t _IAgVAStateCalcLonOfAscNode::GetUserComment ( );
__declspec(implementation_key(561)) void _IAgVAStateCalcLonOfAscNode::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(562)) _bstr_t _IAgVAStateCalcLonOfAscNode::GetDescription ( );
__declspec(implementation_key(563)) VARIANT_BOOL _IAgVAStateCalcLonOfAscNode::IsReadOnly ( );
__declspec(implementation_key(564)) IUnknownPtr _IAgVAStateCalcLonOfAscNode::CloneObject ( );
__declspec(implementation_key(565)) _bstr_t _IAgVAStateCalcLonOfAscNode::GetCentralBodyName ( );
__declspec(implementation_key(566)) void _IAgVAStateCalcLonOfAscNode::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(567)) enum AgEVACalcObjectElem _IAgVAStateCalcLonOfAscNode::GetElementType ( );
__declspec(implementation_key(568)) void _IAgVAStateCalcLonOfAscNode::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(569)) _bstr_t IAgVAStateCalcMeanAnomaly::GetCentralBodyName ( );
__declspec(implementation_key(570)) void IAgVAStateCalcMeanAnomaly::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(571)) enum AgEVACalcObjectElem IAgVAStateCalcMeanAnomaly::GetElementType ( );
__declspec(implementation_key(572)) void IAgVAStateCalcMeanAnomaly::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(573)) _bstr_t _IAgVAStateCalcMeanAnomaly::GetName ( );
__declspec(implementation_key(574)) void _IAgVAStateCalcMeanAnomaly::PutName ( _bstr_t pVal );
__declspec(implementation_key(575)) _bstr_t _IAgVAStateCalcMeanAnomaly::GetUserComment ( );
__declspec(implementation_key(576)) void _IAgVAStateCalcMeanAnomaly::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(577)) _bstr_t _IAgVAStateCalcMeanAnomaly::GetDescription ( );
__declspec(implementation_key(578)) VARIANT_BOOL _IAgVAStateCalcMeanAnomaly::IsReadOnly ( );
__declspec(implementation_key(579)) IUnknownPtr _IAgVAStateCalcMeanAnomaly::CloneObject ( );
__declspec(implementation_key(580)) _bstr_t _IAgVAStateCalcMeanAnomaly::GetCentralBodyName ( );
__declspec(implementation_key(581)) void _IAgVAStateCalcMeanAnomaly::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(582)) enum AgEVACalcObjectElem _IAgVAStateCalcMeanAnomaly::GetElementType ( );
__declspec(implementation_key(583)) void _IAgVAStateCalcMeanAnomaly::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(584)) _bstr_t IAgVAStateCalcMeanMotion::GetCentralBodyName ( );
__declspec(implementation_key(585)) void IAgVAStateCalcMeanMotion::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(586)) enum AgEVACalcObjectElem IAgVAStateCalcMeanMotion::GetElementType ( );
__declspec(implementation_key(587)) void IAgVAStateCalcMeanMotion::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(588)) _bstr_t _IAgVAStateCalcMeanMotion::GetName ( );
__declspec(implementation_key(589)) void _IAgVAStateCalcMeanMotion::PutName ( _bstr_t pVal );
__declspec(implementation_key(590)) _bstr_t _IAgVAStateCalcMeanMotion::GetUserComment ( );
__declspec(implementation_key(591)) void _IAgVAStateCalcMeanMotion::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(592)) _bstr_t _IAgVAStateCalcMeanMotion::GetDescription ( );
__declspec(implementation_key(593)) VARIANT_BOOL _IAgVAStateCalcMeanMotion::IsReadOnly ( );
__declspec(implementation_key(594)) IUnknownPtr _IAgVAStateCalcMeanMotion::CloneObject ( );
__declspec(implementation_key(595)) _bstr_t _IAgVAStateCalcMeanMotion::GetCentralBodyName ( );
__declspec(implementation_key(596)) void _IAgVAStateCalcMeanMotion::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(597)) enum AgEVACalcObjectElem _IAgVAStateCalcMeanMotion::GetElementType ( );
__declspec(implementation_key(598)) void _IAgVAStateCalcMeanMotion::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(599)) _bstr_t IAgVAStateCalcOrbitPeriod::GetCentralBodyName ( );
__declspec(implementation_key(600)) void IAgVAStateCalcOrbitPeriod::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(601)) enum AgEVACalcObjectElem IAgVAStateCalcOrbitPeriod::GetElementType ( );
__declspec(implementation_key(602)) void IAgVAStateCalcOrbitPeriod::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(603)) _bstr_t _IAgVAStateCalcOrbitPeriod::GetName ( );
__declspec(implementation_key(604)) void _IAgVAStateCalcOrbitPeriod::PutName ( _bstr_t pVal );
__declspec(implementation_key(605)) _bstr_t _IAgVAStateCalcOrbitPeriod::GetUserComment ( );
__declspec(implementation_key(606)) void _IAgVAStateCalcOrbitPeriod::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(607)) _bstr_t _IAgVAStateCalcOrbitPeriod::GetDescription ( );
__declspec(implementation_key(608)) VARIANT_BOOL _IAgVAStateCalcOrbitPeriod::IsReadOnly ( );
__declspec(implementation_key(609)) IUnknownPtr _IAgVAStateCalcOrbitPeriod::CloneObject ( );
__declspec(implementation_key(610)) _bstr_t _IAgVAStateCalcOrbitPeriod::GetCentralBodyName ( );
__declspec(implementation_key(611)) void _IAgVAStateCalcOrbitPeriod::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(612)) enum AgEVACalcObjectElem _IAgVAStateCalcOrbitPeriod::GetElementType ( );
__declspec(implementation_key(613)) void _IAgVAStateCalcOrbitPeriod::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(614)) _bstr_t IAgVAStateCalcRAAN::GetCoordSystemName ( );
__declspec(implementation_key(615)) void IAgVAStateCalcRAAN::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(616)) enum AgEVACalcObjectElem IAgVAStateCalcRAAN::GetElementType ( );
__declspec(implementation_key(617)) void IAgVAStateCalcRAAN::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(618)) _bstr_t _IAgVAStateCalcRAAN::GetName ( );
__declspec(implementation_key(619)) void _IAgVAStateCalcRAAN::PutName ( _bstr_t pVal );
__declspec(implementation_key(620)) _bstr_t _IAgVAStateCalcRAAN::GetUserComment ( );
__declspec(implementation_key(621)) void _IAgVAStateCalcRAAN::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(622)) _bstr_t _IAgVAStateCalcRAAN::GetDescription ( );
__declspec(implementation_key(623)) VARIANT_BOOL _IAgVAStateCalcRAAN::IsReadOnly ( );
__declspec(implementation_key(624)) IUnknownPtr _IAgVAStateCalcRAAN::CloneObject ( );
__declspec(implementation_key(625)) _bstr_t _IAgVAStateCalcRAAN::GetCoordSystemName ( );
__declspec(implementation_key(626)) void _IAgVAStateCalcRAAN::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(627)) enum AgEVACalcObjectElem _IAgVAStateCalcRAAN::GetElementType ( );
__declspec(implementation_key(628)) void _IAgVAStateCalcRAAN::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(629)) _bstr_t IAgVAStateCalcRadOfApoapsis::GetCentralBodyName ( );
__declspec(implementation_key(630)) void IAgVAStateCalcRadOfApoapsis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(631)) enum AgEVACalcObjectElem IAgVAStateCalcRadOfApoapsis::GetElementType ( );
__declspec(implementation_key(632)) void IAgVAStateCalcRadOfApoapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(633)) _bstr_t _IAgVAStateCalcRadOfApoapsis::GetName ( );
__declspec(implementation_key(634)) void _IAgVAStateCalcRadOfApoapsis::PutName ( _bstr_t pVal );
__declspec(implementation_key(635)) _bstr_t _IAgVAStateCalcRadOfApoapsis::GetUserComment ( );
__declspec(implementation_key(636)) void _IAgVAStateCalcRadOfApoapsis::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(637)) _bstr_t _IAgVAStateCalcRadOfApoapsis::GetDescription ( );
__declspec(implementation_key(638)) VARIANT_BOOL _IAgVAStateCalcRadOfApoapsis::IsReadOnly ( );
__declspec(implementation_key(639)) IUnknownPtr _IAgVAStateCalcRadOfApoapsis::CloneObject ( );
__declspec(implementation_key(640)) _bstr_t _IAgVAStateCalcRadOfApoapsis::GetCentralBodyName ( );
__declspec(implementation_key(641)) void _IAgVAStateCalcRadOfApoapsis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(642)) enum AgEVACalcObjectElem _IAgVAStateCalcRadOfApoapsis::GetElementType ( );
__declspec(implementation_key(643)) void _IAgVAStateCalcRadOfApoapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(644)) _bstr_t IAgVAStateCalcRadOfPeriapsis::GetCentralBodyName ( );
__declspec(implementation_key(645)) void IAgVAStateCalcRadOfPeriapsis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(646)) enum AgEVACalcObjectElem IAgVAStateCalcRadOfPeriapsis::GetElementType ( );
__declspec(implementation_key(647)) void IAgVAStateCalcRadOfPeriapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(648)) _bstr_t _IAgVAStateCalcRadOfPeriapsis::GetName ( );
__declspec(implementation_key(649)) void _IAgVAStateCalcRadOfPeriapsis::PutName ( _bstr_t pVal );
__declspec(implementation_key(650)) _bstr_t _IAgVAStateCalcRadOfPeriapsis::GetUserComment ( );
__declspec(implementation_key(651)) void _IAgVAStateCalcRadOfPeriapsis::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(652)) _bstr_t _IAgVAStateCalcRadOfPeriapsis::GetDescription ( );
__declspec(implementation_key(653)) VARIANT_BOOL _IAgVAStateCalcRadOfPeriapsis::IsReadOnly ( );
__declspec(implementation_key(654)) IUnknownPtr _IAgVAStateCalcRadOfPeriapsis::CloneObject ( );
__declspec(implementation_key(655)) _bstr_t _IAgVAStateCalcRadOfPeriapsis::GetCentralBodyName ( );
__declspec(implementation_key(656)) void _IAgVAStateCalcRadOfPeriapsis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(657)) enum AgEVACalcObjectElem _IAgVAStateCalcRadOfPeriapsis::GetElementType ( );
__declspec(implementation_key(658)) void _IAgVAStateCalcRadOfPeriapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(659)) _bstr_t IAgVAStateCalcSemiMajorAxis::GetCentralBodyName ( );
__declspec(implementation_key(660)) void IAgVAStateCalcSemiMajorAxis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(661)) enum AgEVACalcObjectElem IAgVAStateCalcSemiMajorAxis::GetElementType ( );
__declspec(implementation_key(662)) void IAgVAStateCalcSemiMajorAxis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(663)) _bstr_t _IAgVAStateCalcSemiMajorAxis::GetName ( );
__declspec(implementation_key(664)) void _IAgVAStateCalcSemiMajorAxis::PutName ( _bstr_t pVal );
__declspec(implementation_key(665)) _bstr_t _IAgVAStateCalcSemiMajorAxis::GetUserComment ( );
__declspec(implementation_key(666)) void _IAgVAStateCalcSemiMajorAxis::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(667)) _bstr_t _IAgVAStateCalcSemiMajorAxis::GetDescription ( );
__declspec(implementation_key(668)) VARIANT_BOOL _IAgVAStateCalcSemiMajorAxis::IsReadOnly ( );
__declspec(implementation_key(669)) IUnknownPtr _IAgVAStateCalcSemiMajorAxis::CloneObject ( );
__declspec(implementation_key(670)) _bstr_t _IAgVAStateCalcSemiMajorAxis::GetCentralBodyName ( );
__declspec(implementation_key(671)) void _IAgVAStateCalcSemiMajorAxis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(672)) enum AgEVACalcObjectElem _IAgVAStateCalcSemiMajorAxis::GetElementType ( );
__declspec(implementation_key(673)) void _IAgVAStateCalcSemiMajorAxis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(674)) _bstr_t IAgVAStateCalcTimePastAscNode::GetCoordSystemName ( );
__declspec(implementation_key(675)) void IAgVAStateCalcTimePastAscNode::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(676)) enum AgEVACalcObjectElem IAgVAStateCalcTimePastAscNode::GetElementType ( );
__declspec(implementation_key(677)) void IAgVAStateCalcTimePastAscNode::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(678)) _bstr_t _IAgVAStateCalcTimePastAscNode::GetName ( );
__declspec(implementation_key(679)) void _IAgVAStateCalcTimePastAscNode::PutName ( _bstr_t pVal );
__declspec(implementation_key(680)) _bstr_t _IAgVAStateCalcTimePastAscNode::GetUserComment ( );
__declspec(implementation_key(681)) void _IAgVAStateCalcTimePastAscNode::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(682)) _bstr_t _IAgVAStateCalcTimePastAscNode::GetDescription ( );
__declspec(implementation_key(683)) VARIANT_BOOL _IAgVAStateCalcTimePastAscNode::IsReadOnly ( );
__declspec(implementation_key(684)) IUnknownPtr _IAgVAStateCalcTimePastAscNode::CloneObject ( );
__declspec(implementation_key(685)) _bstr_t _IAgVAStateCalcTimePastAscNode::GetCoordSystemName ( );
__declspec(implementation_key(686)) void _IAgVAStateCalcTimePastAscNode::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(687)) enum AgEVACalcObjectElem _IAgVAStateCalcTimePastAscNode::GetElementType ( );
__declspec(implementation_key(688)) void _IAgVAStateCalcTimePastAscNode::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(689)) _bstr_t IAgVAStateCalcTimePastPeriapsis::GetCentralBodyName ( );
__declspec(implementation_key(690)) void IAgVAStateCalcTimePastPeriapsis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(691)) enum AgEVACalcObjectElem IAgVAStateCalcTimePastPeriapsis::GetElementType ( );
__declspec(implementation_key(692)) void IAgVAStateCalcTimePastPeriapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(693)) _bstr_t _IAgVAStateCalcTimePastPeriapsis::GetName ( );
__declspec(implementation_key(694)) void _IAgVAStateCalcTimePastPeriapsis::PutName ( _bstr_t pVal );
__declspec(implementation_key(695)) _bstr_t _IAgVAStateCalcTimePastPeriapsis::GetUserComment ( );
__declspec(implementation_key(696)) void _IAgVAStateCalcTimePastPeriapsis::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(697)) _bstr_t _IAgVAStateCalcTimePastPeriapsis::GetDescription ( );
__declspec(implementation_key(698)) VARIANT_BOOL _IAgVAStateCalcTimePastPeriapsis::IsReadOnly ( );
__declspec(implementation_key(699)) IUnknownPtr _IAgVAStateCalcTimePastPeriapsis::CloneObject ( );
__declspec(implementation_key(700)) _bstr_t _IAgVAStateCalcTimePastPeriapsis::GetCentralBodyName ( );
__declspec(implementation_key(701)) void _IAgVAStateCalcTimePastPeriapsis::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(702)) enum AgEVACalcObjectElem _IAgVAStateCalcTimePastPeriapsis::GetElementType ( );
__declspec(implementation_key(703)) void _IAgVAStateCalcTimePastPeriapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(704)) _bstr_t _IAgVAStateCalcDeltaV::GetName ( );
__declspec(implementation_key(705)) void _IAgVAStateCalcDeltaV::PutName ( _bstr_t pVal );
__declspec(implementation_key(706)) _bstr_t _IAgVAStateCalcDeltaV::GetUserComment ( );
__declspec(implementation_key(707)) void _IAgVAStateCalcDeltaV::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(708)) _bstr_t _IAgVAStateCalcDeltaV::GetDescription ( );
__declspec(implementation_key(709)) VARIANT_BOOL _IAgVAStateCalcDeltaV::IsReadOnly ( );
__declspec(implementation_key(710)) IUnknownPtr _IAgVAStateCalcDeltaV::CloneObject ( );
__declspec(implementation_key(711)) _bstr_t _IAgVAStateCalcDeltaVSquared::GetName ( );
__declspec(implementation_key(712)) void _IAgVAStateCalcDeltaVSquared::PutName ( _bstr_t pVal );
__declspec(implementation_key(713)) _bstr_t _IAgVAStateCalcDeltaVSquared::GetUserComment ( );
__declspec(implementation_key(714)) void _IAgVAStateCalcDeltaVSquared::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(715)) _bstr_t _IAgVAStateCalcDeltaVSquared::GetDescription ( );
__declspec(implementation_key(716)) VARIANT_BOOL _IAgVAStateCalcDeltaVSquared::IsReadOnly ( );
__declspec(implementation_key(717)) IUnknownPtr _IAgVAStateCalcDeltaVSquared::CloneObject ( );
__declspec(implementation_key(718)) _bstr_t _IAgVAStateCalcMCSDeltaV::GetName ( );
__declspec(implementation_key(719)) void _IAgVAStateCalcMCSDeltaV::PutName ( _bstr_t pVal );
__declspec(implementation_key(720)) _bstr_t _IAgVAStateCalcMCSDeltaV::GetUserComment ( );
__declspec(implementation_key(721)) void _IAgVAStateCalcMCSDeltaV::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(722)) _bstr_t _IAgVAStateCalcMCSDeltaV::GetDescription ( );
__declspec(implementation_key(723)) VARIANT_BOOL _IAgVAStateCalcMCSDeltaV::IsReadOnly ( );
__declspec(implementation_key(724)) IUnknownPtr _IAgVAStateCalcMCSDeltaV::CloneObject ( );
__declspec(implementation_key(725)) _bstr_t _IAgVAStateCalcMCSDeltaVSquared::GetName ( );
__declspec(implementation_key(726)) void _IAgVAStateCalcMCSDeltaVSquared::PutName ( _bstr_t pVal );
__declspec(implementation_key(727)) _bstr_t _IAgVAStateCalcMCSDeltaVSquared::GetUserComment ( );
__declspec(implementation_key(728)) void _IAgVAStateCalcMCSDeltaVSquared::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(729)) _bstr_t _IAgVAStateCalcMCSDeltaVSquared::GetDescription ( );
__declspec(implementation_key(730)) VARIANT_BOOL _IAgVAStateCalcMCSDeltaVSquared::IsReadOnly ( );
__declspec(implementation_key(731)) IUnknownPtr _IAgVAStateCalcMCSDeltaVSquared::CloneObject ( );
__declspec(implementation_key(732)) _bstr_t IAgVAStateCalcSequenceDeltaV::GetSequenceName ( );
__declspec(implementation_key(733)) void IAgVAStateCalcSequenceDeltaV::PutSequenceName ( _bstr_t pVal );
__declspec(implementation_key(734)) _bstr_t _IAgVAStateCalcSequenceDeltaV::GetName ( );
__declspec(implementation_key(735)) void _IAgVAStateCalcSequenceDeltaV::PutName ( _bstr_t pVal );
__declspec(implementation_key(736)) _bstr_t _IAgVAStateCalcSequenceDeltaV::GetUserComment ( );
__declspec(implementation_key(737)) void _IAgVAStateCalcSequenceDeltaV::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(738)) _bstr_t _IAgVAStateCalcSequenceDeltaV::GetDescription ( );
__declspec(implementation_key(739)) VARIANT_BOOL _IAgVAStateCalcSequenceDeltaV::IsReadOnly ( );
__declspec(implementation_key(740)) IUnknownPtr _IAgVAStateCalcSequenceDeltaV::CloneObject ( );
__declspec(implementation_key(741)) _bstr_t _IAgVAStateCalcSequenceDeltaV::GetSequenceName ( );
__declspec(implementation_key(742)) void _IAgVAStateCalcSequenceDeltaV::PutSequenceName ( _bstr_t pVal );
__declspec(implementation_key(743)) _bstr_t IAgVAStateCalcSequenceDeltaVSquared::GetSequenceName ( );
__declspec(implementation_key(744)) void IAgVAStateCalcSequenceDeltaVSquared::PutSequenceName ( _bstr_t pVal );
__declspec(implementation_key(745)) _bstr_t _IAgVAStateCalcSequenceDeltaVSquared::GetName ( );
__declspec(implementation_key(746)) void _IAgVAStateCalcSequenceDeltaVSquared::PutName ( _bstr_t pVal );
__declspec(implementation_key(747)) _bstr_t _IAgVAStateCalcSequenceDeltaVSquared::GetUserComment ( );
__declspec(implementation_key(748)) void _IAgVAStateCalcSequenceDeltaVSquared::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(749)) _bstr_t _IAgVAStateCalcSequenceDeltaVSquared::GetDescription ( );
__declspec(implementation_key(750)) VARIANT_BOOL _IAgVAStateCalcSequenceDeltaVSquared::IsReadOnly ( );
__declspec(implementation_key(751)) IUnknownPtr _IAgVAStateCalcSequenceDeltaVSquared::CloneObject ( );
__declspec(implementation_key(752)) _bstr_t _IAgVAStateCalcSequenceDeltaVSquared::GetSequenceName ( );
__declspec(implementation_key(753)) void _IAgVAStateCalcSequenceDeltaVSquared::PutSequenceName ( _bstr_t pVal );
__declspec(implementation_key(754)) _bstr_t _IAgVAStateCalcFuelMass::GetName ( );
__declspec(implementation_key(755)) void _IAgVAStateCalcFuelMass::PutName ( _bstr_t pVal );
__declspec(implementation_key(756)) _bstr_t _IAgVAStateCalcFuelMass::GetUserComment ( );
__declspec(implementation_key(757)) void _IAgVAStateCalcFuelMass::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(758)) _bstr_t _IAgVAStateCalcFuelMass::GetDescription ( );
__declspec(implementation_key(759)) VARIANT_BOOL _IAgVAStateCalcFuelMass::IsReadOnly ( );
__declspec(implementation_key(760)) IUnknownPtr _IAgVAStateCalcFuelMass::CloneObject ( );
__declspec(implementation_key(761)) _bstr_t _IAgVAStateCalcDensity::GetName ( );
__declspec(implementation_key(762)) void _IAgVAStateCalcDensity::PutName ( _bstr_t pVal );
__declspec(implementation_key(763)) _bstr_t _IAgVAStateCalcDensity::GetUserComment ( );
__declspec(implementation_key(764)) void _IAgVAStateCalcDensity::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(765)) _bstr_t _IAgVAStateCalcDensity::GetDescription ( );
__declspec(implementation_key(766)) VARIANT_BOOL _IAgVAStateCalcDensity::IsReadOnly ( );
__declspec(implementation_key(767)) IUnknownPtr _IAgVAStateCalcDensity::CloneObject ( );
__declspec(implementation_key(768)) _bstr_t _IAgVAStateCalcInertialDeltaVMag::GetName ( );
__declspec(implementation_key(769)) void _IAgVAStateCalcInertialDeltaVMag::PutName ( _bstr_t pVal );
__declspec(implementation_key(770)) _bstr_t _IAgVAStateCalcInertialDeltaVMag::GetUserComment ( );
__declspec(implementation_key(771)) void _IAgVAStateCalcInertialDeltaVMag::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(772)) _bstr_t _IAgVAStateCalcInertialDeltaVMag::GetDescription ( );
__declspec(implementation_key(773)) VARIANT_BOOL _IAgVAStateCalcInertialDeltaVMag::IsReadOnly ( );
__declspec(implementation_key(774)) IUnknownPtr _IAgVAStateCalcInertialDeltaVMag::CloneObject ( );
__declspec(implementation_key(775)) _bstr_t IAgVAStateCalcInertialDeltaVx::GetCoordAxesName ( );
__declspec(implementation_key(776)) void IAgVAStateCalcInertialDeltaVx::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(777)) _bstr_t _IAgVAStateCalcInertialDeltaVx::GetName ( );
__declspec(implementation_key(778)) void _IAgVAStateCalcInertialDeltaVx::PutName ( _bstr_t pVal );
__declspec(implementation_key(779)) _bstr_t _IAgVAStateCalcInertialDeltaVx::GetUserComment ( );
__declspec(implementation_key(780)) void _IAgVAStateCalcInertialDeltaVx::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(781)) _bstr_t _IAgVAStateCalcInertialDeltaVx::GetDescription ( );
__declspec(implementation_key(782)) VARIANT_BOOL _IAgVAStateCalcInertialDeltaVx::IsReadOnly ( );
__declspec(implementation_key(783)) IUnknownPtr _IAgVAStateCalcInertialDeltaVx::CloneObject ( );
__declspec(implementation_key(784)) _bstr_t _IAgVAStateCalcInertialDeltaVx::GetCoordAxesName ( );
__declspec(implementation_key(785)) void _IAgVAStateCalcInertialDeltaVx::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(786)) _bstr_t IAgVAStateCalcInertialDeltaVy::GetCoordAxesName ( );
__declspec(implementation_key(787)) void IAgVAStateCalcInertialDeltaVy::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(788)) _bstr_t _IAgVAStateCalcInertialDeltaVy::GetName ( );
__declspec(implementation_key(789)) void _IAgVAStateCalcInertialDeltaVy::PutName ( _bstr_t pVal );
__declspec(implementation_key(790)) _bstr_t _IAgVAStateCalcInertialDeltaVy::GetUserComment ( );
__declspec(implementation_key(791)) void _IAgVAStateCalcInertialDeltaVy::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(792)) _bstr_t _IAgVAStateCalcInertialDeltaVy::GetDescription ( );
__declspec(implementation_key(793)) VARIANT_BOOL _IAgVAStateCalcInertialDeltaVy::IsReadOnly ( );
__declspec(implementation_key(794)) IUnknownPtr _IAgVAStateCalcInertialDeltaVy::CloneObject ( );
__declspec(implementation_key(795)) _bstr_t _IAgVAStateCalcInertialDeltaVy::GetCoordAxesName ( );
__declspec(implementation_key(796)) void _IAgVAStateCalcInertialDeltaVy::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(797)) _bstr_t IAgVAStateCalcInertialDeltaVz::GetCoordAxesName ( );
__declspec(implementation_key(798)) void IAgVAStateCalcInertialDeltaVz::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(799)) _bstr_t _IAgVAStateCalcInertialDeltaVz::GetName ( );
__declspec(implementation_key(800)) void _IAgVAStateCalcInertialDeltaVz::PutName ( _bstr_t pVal );
__declspec(implementation_key(801)) _bstr_t _IAgVAStateCalcInertialDeltaVz::GetUserComment ( );
__declspec(implementation_key(802)) void _IAgVAStateCalcInertialDeltaVz::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(803)) _bstr_t _IAgVAStateCalcInertialDeltaVz::GetDescription ( );
__declspec(implementation_key(804)) VARIANT_BOOL _IAgVAStateCalcInertialDeltaVz::IsReadOnly ( );
__declspec(implementation_key(805)) IUnknownPtr _IAgVAStateCalcInertialDeltaVz::CloneObject ( );
__declspec(implementation_key(806)) _bstr_t _IAgVAStateCalcInertialDeltaVz::GetCoordAxesName ( );
__declspec(implementation_key(807)) void _IAgVAStateCalcInertialDeltaVz::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(808)) _bstr_t _IAgVAStateCalcManeuverSpecificImpulse::GetName ( );
__declspec(implementation_key(809)) void _IAgVAStateCalcManeuverSpecificImpulse::PutName ( _bstr_t pVal );
__declspec(implementation_key(810)) _bstr_t _IAgVAStateCalcManeuverSpecificImpulse::GetUserComment ( );
__declspec(implementation_key(811)) void _IAgVAStateCalcManeuverSpecificImpulse::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(812)) _bstr_t _IAgVAStateCalcManeuverSpecificImpulse::GetDescription ( );
__declspec(implementation_key(813)) VARIANT_BOOL _IAgVAStateCalcManeuverSpecificImpulse::IsReadOnly ( );
__declspec(implementation_key(814)) IUnknownPtr _IAgVAStateCalcManeuverSpecificImpulse::CloneObject ( );
__declspec(implementation_key(815)) _bstr_t _IAgVAStateCalcPressure::GetName ( );
__declspec(implementation_key(816)) void _IAgVAStateCalcPressure::PutName ( _bstr_t pVal );
__declspec(implementation_key(817)) _bstr_t _IAgVAStateCalcPressure::GetUserComment ( );
__declspec(implementation_key(818)) void _IAgVAStateCalcPressure::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(819)) _bstr_t _IAgVAStateCalcPressure::GetDescription ( );
__declspec(implementation_key(820)) VARIANT_BOOL _IAgVAStateCalcPressure::IsReadOnly ( );
__declspec(implementation_key(821)) IUnknownPtr _IAgVAStateCalcPressure::CloneObject ( );
__declspec(implementation_key(822)) _bstr_t _IAgVAStateCalcTemperature::GetName ( );
__declspec(implementation_key(823)) void _IAgVAStateCalcTemperature::PutName ( _bstr_t pVal );
__declspec(implementation_key(824)) _bstr_t _IAgVAStateCalcTemperature::GetUserComment ( );
__declspec(implementation_key(825)) void _IAgVAStateCalcTemperature::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(826)) _bstr_t _IAgVAStateCalcTemperature::GetDescription ( );
__declspec(implementation_key(827)) VARIANT_BOOL _IAgVAStateCalcTemperature::IsReadOnly ( );
__declspec(implementation_key(828)) IUnknownPtr _IAgVAStateCalcTemperature::CloneObject ( );
__declspec(implementation_key(829)) _bstr_t IAgVAStateCalcVectorX::GetCoordAxesName ( );
__declspec(implementation_key(830)) void IAgVAStateCalcVectorX::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(831)) _bstr_t IAgVAStateCalcVectorX::GetVectorName ( );
__declspec(implementation_key(832)) void IAgVAStateCalcVectorX::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(833)) _bstr_t IAgVAStateCalcVectorX::GetUnitDimension ( );
__declspec(implementation_key(834)) void IAgVAStateCalcVectorX::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(835)) VARIANT_BOOL IAgVAStateCalcVectorX::GetNormalize ( );
__declspec(implementation_key(836)) void IAgVAStateCalcVectorX::PutNormalize ( VARIANT_BOOL pVal );
__declspec(implementation_key(837)) _bstr_t _IAgVAStateCalcVectorX::GetName ( );
__declspec(implementation_key(838)) void _IAgVAStateCalcVectorX::PutName ( _bstr_t pVal );
__declspec(implementation_key(839)) _bstr_t _IAgVAStateCalcVectorX::GetUserComment ( );
__declspec(implementation_key(840)) void _IAgVAStateCalcVectorX::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(841)) _bstr_t _IAgVAStateCalcVectorX::GetDescription ( );
__declspec(implementation_key(842)) VARIANT_BOOL _IAgVAStateCalcVectorX::IsReadOnly ( );
__declspec(implementation_key(843)) IUnknownPtr _IAgVAStateCalcVectorX::CloneObject ( );
__declspec(implementation_key(844)) _bstr_t _IAgVAStateCalcVectorX::GetCoordAxesName ( );
__declspec(implementation_key(845)) void _IAgVAStateCalcVectorX::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(846)) _bstr_t _IAgVAStateCalcVectorX::GetVectorName ( );
__declspec(implementation_key(847)) void _IAgVAStateCalcVectorX::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(848)) _bstr_t _IAgVAStateCalcVectorX::GetUnitDimension ( );
__declspec(implementation_key(849)) void _IAgVAStateCalcVectorX::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(850)) VARIANT_BOOL _IAgVAStateCalcVectorX::GetNormalize ( );
__declspec(implementation_key(851)) void _IAgVAStateCalcVectorX::PutNormalize ( VARIANT_BOOL pVal );
__declspec(implementation_key(852)) _bstr_t IAgVAStateCalcVectorY::GetCoordAxesName ( );
__declspec(implementation_key(853)) void IAgVAStateCalcVectorY::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(854)) _bstr_t IAgVAStateCalcVectorY::GetVectorName ( );
__declspec(implementation_key(855)) void IAgVAStateCalcVectorY::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(856)) _bstr_t IAgVAStateCalcVectorY::GetUnitDimension ( );
__declspec(implementation_key(857)) void IAgVAStateCalcVectorY::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(858)) VARIANT_BOOL IAgVAStateCalcVectorY::GetNormalize ( );
__declspec(implementation_key(859)) void IAgVAStateCalcVectorY::PutNormalize ( VARIANT_BOOL pVal );
__declspec(implementation_key(860)) _bstr_t _IAgVAStateCalcVectorY::GetName ( );
__declspec(implementation_key(861)) void _IAgVAStateCalcVectorY::PutName ( _bstr_t pVal );
__declspec(implementation_key(862)) _bstr_t _IAgVAStateCalcVectorY::GetUserComment ( );
__declspec(implementation_key(863)) void _IAgVAStateCalcVectorY::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(864)) _bstr_t _IAgVAStateCalcVectorY::GetDescription ( );
__declspec(implementation_key(865)) VARIANT_BOOL _IAgVAStateCalcVectorY::IsReadOnly ( );
__declspec(implementation_key(866)) IUnknownPtr _IAgVAStateCalcVectorY::CloneObject ( );
__declspec(implementation_key(867)) _bstr_t _IAgVAStateCalcVectorY::GetCoordAxesName ( );
__declspec(implementation_key(868)) void _IAgVAStateCalcVectorY::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(869)) _bstr_t _IAgVAStateCalcVectorY::GetVectorName ( );
__declspec(implementation_key(870)) void _IAgVAStateCalcVectorY::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(871)) _bstr_t _IAgVAStateCalcVectorY::GetUnitDimension ( );
__declspec(implementation_key(872)) void _IAgVAStateCalcVectorY::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(873)) VARIANT_BOOL _IAgVAStateCalcVectorY::GetNormalize ( );
__declspec(implementation_key(874)) void _IAgVAStateCalcVectorY::PutNormalize ( VARIANT_BOOL pVal );
__declspec(implementation_key(875)) _bstr_t IAgVAStateCalcVectorZ::GetCoordAxesName ( );
__declspec(implementation_key(876)) void IAgVAStateCalcVectorZ::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(877)) _bstr_t IAgVAStateCalcVectorZ::GetVectorName ( );
__declspec(implementation_key(878)) void IAgVAStateCalcVectorZ::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(879)) _bstr_t IAgVAStateCalcVectorZ::GetUnitDimension ( );
__declspec(implementation_key(880)) void IAgVAStateCalcVectorZ::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(881)) VARIANT_BOOL IAgVAStateCalcVectorZ::GetNormalize ( );
__declspec(implementation_key(882)) void IAgVAStateCalcVectorZ::PutNormalize ( VARIANT_BOOL pVal );
__declspec(implementation_key(883)) _bstr_t _IAgVAStateCalcVectorZ::GetName ( );
__declspec(implementation_key(884)) void _IAgVAStateCalcVectorZ::PutName ( _bstr_t pVal );
__declspec(implementation_key(885)) _bstr_t _IAgVAStateCalcVectorZ::GetUserComment ( );
__declspec(implementation_key(886)) void _IAgVAStateCalcVectorZ::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(887)) _bstr_t _IAgVAStateCalcVectorZ::GetDescription ( );
__declspec(implementation_key(888)) VARIANT_BOOL _IAgVAStateCalcVectorZ::IsReadOnly ( );
__declspec(implementation_key(889)) IUnknownPtr _IAgVAStateCalcVectorZ::CloneObject ( );
__declspec(implementation_key(890)) _bstr_t _IAgVAStateCalcVectorZ::GetCoordAxesName ( );
__declspec(implementation_key(891)) void _IAgVAStateCalcVectorZ::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(892)) _bstr_t _IAgVAStateCalcVectorZ::GetVectorName ( );
__declspec(implementation_key(893)) void _IAgVAStateCalcVectorZ::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(894)) _bstr_t _IAgVAStateCalcVectorZ::GetUnitDimension ( );
__declspec(implementation_key(895)) void _IAgVAStateCalcVectorZ::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(896)) VARIANT_BOOL _IAgVAStateCalcVectorZ::GetNormalize ( );
__declspec(implementation_key(897)) void _IAgVAStateCalcVectorZ::PutNormalize ( VARIANT_BOOL pVal );
__declspec(implementation_key(898)) _bstr_t _IAgVAStateCalcMass::GetName ( );
__declspec(implementation_key(899)) void _IAgVAStateCalcMass::PutName ( _bstr_t pVal );
__declspec(implementation_key(900)) _bstr_t _IAgVAStateCalcMass::GetUserComment ( );
__declspec(implementation_key(901)) void _IAgVAStateCalcMass::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(902)) _bstr_t _IAgVAStateCalcMass::GetDescription ( );
__declspec(implementation_key(903)) VARIANT_BOOL _IAgVAStateCalcMass::IsReadOnly ( );
__declspec(implementation_key(904)) IUnknownPtr _IAgVAStateCalcMass::CloneObject ( );
__declspec(implementation_key(905)) _bstr_t _IAgVAStateCalcManeuverTotalMassFlowRate::GetName ( );
__declspec(implementation_key(906)) void _IAgVAStateCalcManeuverTotalMassFlowRate::PutName ( _bstr_t pVal );
__declspec(implementation_key(907)) _bstr_t _IAgVAStateCalcManeuverTotalMassFlowRate::GetUserComment ( );
__declspec(implementation_key(908)) void _IAgVAStateCalcManeuverTotalMassFlowRate::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(909)) _bstr_t _IAgVAStateCalcManeuverTotalMassFlowRate::GetDescription ( );
__declspec(implementation_key(910)) VARIANT_BOOL _IAgVAStateCalcManeuverTotalMassFlowRate::IsReadOnly ( );
__declspec(implementation_key(911)) IUnknownPtr _IAgVAStateCalcManeuverTotalMassFlowRate::CloneObject ( );
__declspec(implementation_key(912)) _bstr_t IAgVAStateCalcAbsoluteValue::GetCalcObjectName ( );
__declspec(implementation_key(913)) void IAgVAStateCalcAbsoluteValue::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(914)) _bstr_t _IAgVAStateCalcAbsoluteValue::GetName ( );
__declspec(implementation_key(915)) void _IAgVAStateCalcAbsoluteValue::PutName ( _bstr_t pVal );
__declspec(implementation_key(916)) _bstr_t _IAgVAStateCalcAbsoluteValue::GetUserComment ( );
__declspec(implementation_key(917)) void _IAgVAStateCalcAbsoluteValue::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(918)) _bstr_t _IAgVAStateCalcAbsoluteValue::GetDescription ( );
__declspec(implementation_key(919)) VARIANT_BOOL _IAgVAStateCalcAbsoluteValue::IsReadOnly ( );
__declspec(implementation_key(920)) IUnknownPtr _IAgVAStateCalcAbsoluteValue::CloneObject ( );
__declspec(implementation_key(921)) _bstr_t _IAgVAStateCalcAbsoluteValue::GetCalcObjectName ( );
__declspec(implementation_key(922)) void _IAgVAStateCalcAbsoluteValue::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(923)) _bstr_t IAgVAStateCalcDifference::GetCalcObjectName ( );
__declspec(implementation_key(924)) void IAgVAStateCalcDifference::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(925)) enum AgEVADifferenceOrder IAgVAStateCalcDifference::GetDifferenceOrder ( );
__declspec(implementation_key(926)) void IAgVAStateCalcDifference::PutDifferenceOrder ( enum AgEVADifferenceOrder pVal );
__declspec(implementation_key(927)) _bstr_t _IAgVAStateCalcDifference::GetName ( );
__declspec(implementation_key(928)) void _IAgVAStateCalcDifference::PutName ( _bstr_t pVal );
__declspec(implementation_key(929)) _bstr_t _IAgVAStateCalcDifference::GetUserComment ( );
__declspec(implementation_key(930)) void _IAgVAStateCalcDifference::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(931)) _bstr_t _IAgVAStateCalcDifference::GetDescription ( );
__declspec(implementation_key(932)) VARIANT_BOOL _IAgVAStateCalcDifference::IsReadOnly ( );
__declspec(implementation_key(933)) IUnknownPtr _IAgVAStateCalcDifference::CloneObject ( );
__declspec(implementation_key(934)) _bstr_t _IAgVAStateCalcDifference::GetCalcObjectName ( );
__declspec(implementation_key(935)) void _IAgVAStateCalcDifference::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(936)) enum AgEVADifferenceOrder _IAgVAStateCalcDifference::GetDifferenceOrder ( );
__declspec(implementation_key(937)) void _IAgVAStateCalcDifference::PutDifferenceOrder ( enum AgEVADifferenceOrder pVal );
__declspec(implementation_key(938)) _bstr_t IAgVAStateCalcDifferenceOtherSegment::GetCalcObjectName ( );
__declspec(implementation_key(939)) void IAgVAStateCalcDifferenceOtherSegment::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(940)) _bstr_t IAgVAStateCalcDifferenceOtherSegment::GetOtherSegmentName ( );
__declspec(implementation_key(941)) void IAgVAStateCalcDifferenceOtherSegment::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(942)) enum AgEVASegmentState IAgVAStateCalcDifferenceOtherSegment::GetSegmentStateToUse ( );
__declspec(implementation_key(943)) void IAgVAStateCalcDifferenceOtherSegment::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(944)) enum AgEVASegmentDifferenceOrder IAgVAStateCalcDifferenceOtherSegment::GetDifferenceOrder ( );
__declspec(implementation_key(945)) void IAgVAStateCalcDifferenceOtherSegment::PutDifferenceOrder ( enum AgEVASegmentDifferenceOrder pVal );
__declspec(implementation_key(946)) _bstr_t _IAgVAStateCalcDifferenceOtherSegment::GetName ( );
__declspec(implementation_key(947)) void _IAgVAStateCalcDifferenceOtherSegment::PutName ( _bstr_t pVal );
__declspec(implementation_key(948)) _bstr_t _IAgVAStateCalcDifferenceOtherSegment::GetUserComment ( );
__declspec(implementation_key(949)) void _IAgVAStateCalcDifferenceOtherSegment::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(950)) _bstr_t _IAgVAStateCalcDifferenceOtherSegment::GetDescription ( );
__declspec(implementation_key(951)) VARIANT_BOOL _IAgVAStateCalcDifferenceOtherSegment::IsReadOnly ( );
__declspec(implementation_key(952)) IUnknownPtr _IAgVAStateCalcDifferenceOtherSegment::CloneObject ( );
__declspec(implementation_key(953)) _bstr_t _IAgVAStateCalcDifferenceOtherSegment::GetCalcObjectName ( );
__declspec(implementation_key(954)) void _IAgVAStateCalcDifferenceOtherSegment::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(955)) _bstr_t _IAgVAStateCalcDifferenceOtherSegment::GetOtherSegmentName ( );
__declspec(implementation_key(956)) void _IAgVAStateCalcDifferenceOtherSegment::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(957)) enum AgEVASegmentState _IAgVAStateCalcDifferenceOtherSegment::GetSegmentStateToUse ( );
__declspec(implementation_key(958)) void _IAgVAStateCalcDifferenceOtherSegment::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(959)) enum AgEVASegmentDifferenceOrder _IAgVAStateCalcDifferenceOtherSegment::GetDifferenceOrder ( );
__declspec(implementation_key(960)) void _IAgVAStateCalcDifferenceOtherSegment::PutDifferenceOrder ( enum AgEVASegmentDifferenceOrder pVal );
__declspec(implementation_key(961)) _bstr_t IAgVAStateCalcPosDifferenceOtherSegment::GetOtherSegmentName ( );
__declspec(implementation_key(962)) void IAgVAStateCalcPosDifferenceOtherSegment::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(963)) enum AgEVASegmentState IAgVAStateCalcPosDifferenceOtherSegment::GetSegmentStateToUse ( );
__declspec(implementation_key(964)) void IAgVAStateCalcPosDifferenceOtherSegment::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(965)) _bstr_t _IAgVAStateCalcPosDifferenceOtherSegment::GetName ( );
__declspec(implementation_key(966)) void _IAgVAStateCalcPosDifferenceOtherSegment::PutName ( _bstr_t pVal );
__declspec(implementation_key(967)) _bstr_t _IAgVAStateCalcPosDifferenceOtherSegment::GetUserComment ( );
__declspec(implementation_key(968)) void _IAgVAStateCalcPosDifferenceOtherSegment::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(969)) _bstr_t _IAgVAStateCalcPosDifferenceOtherSegment::GetDescription ( );
__declspec(implementation_key(970)) VARIANT_BOOL _IAgVAStateCalcPosDifferenceOtherSegment::IsReadOnly ( );
__declspec(implementation_key(971)) IUnknownPtr _IAgVAStateCalcPosDifferenceOtherSegment::CloneObject ( );
__declspec(implementation_key(972)) _bstr_t _IAgVAStateCalcPosDifferenceOtherSegment::GetOtherSegmentName ( );
__declspec(implementation_key(973)) void _IAgVAStateCalcPosDifferenceOtherSegment::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(974)) enum AgEVASegmentState _IAgVAStateCalcPosDifferenceOtherSegment::GetSegmentStateToUse ( );
__declspec(implementation_key(975)) void _IAgVAStateCalcPosDifferenceOtherSegment::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(976)) _bstr_t IAgVAStateCalcVelDifferenceOtherSegment::GetOtherSegmentName ( );
__declspec(implementation_key(977)) void IAgVAStateCalcVelDifferenceOtherSegment::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(978)) enum AgEVASegmentState IAgVAStateCalcVelDifferenceOtherSegment::GetSegmentStateToUse ( );
__declspec(implementation_key(979)) void IAgVAStateCalcVelDifferenceOtherSegment::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(980)) _bstr_t _IAgVAStateCalcVelDifferenceOtherSegment::GetName ( );
__declspec(implementation_key(981)) void _IAgVAStateCalcVelDifferenceOtherSegment::PutName ( _bstr_t pVal );
__declspec(implementation_key(982)) _bstr_t _IAgVAStateCalcVelDifferenceOtherSegment::GetUserComment ( );
__declspec(implementation_key(983)) void _IAgVAStateCalcVelDifferenceOtherSegment::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(984)) _bstr_t _IAgVAStateCalcVelDifferenceOtherSegment::GetDescription ( );
__declspec(implementation_key(985)) VARIANT_BOOL _IAgVAStateCalcVelDifferenceOtherSegment::IsReadOnly ( );
__declspec(implementation_key(986)) IUnknownPtr _IAgVAStateCalcVelDifferenceOtherSegment::CloneObject ( );
__declspec(implementation_key(987)) _bstr_t _IAgVAStateCalcVelDifferenceOtherSegment::GetOtherSegmentName ( );
__declspec(implementation_key(988)) void _IAgVAStateCalcVelDifferenceOtherSegment::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(989)) enum AgEVASegmentState _IAgVAStateCalcVelDifferenceOtherSegment::GetSegmentStateToUse ( );
__declspec(implementation_key(990)) void _IAgVAStateCalcVelDifferenceOtherSegment::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(991)) _bstr_t IAgVAStateCalcPosVelDifferenceOtherSegment::GetOtherSegmentName ( );
__declspec(implementation_key(992)) void IAgVAStateCalcPosVelDifferenceOtherSegment::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(993)) enum AgEVASegmentState IAgVAStateCalcPosVelDifferenceOtherSegment::GetSegmentStateToUse ( );
__declspec(implementation_key(994)) void IAgVAStateCalcPosVelDifferenceOtherSegment::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(995)) _bstr_t _IAgVAStateCalcPosVelDifferenceOtherSegment::GetName ( );
__declspec(implementation_key(996)) void _IAgVAStateCalcPosVelDifferenceOtherSegment::PutName ( _bstr_t pVal );
__declspec(implementation_key(997)) _bstr_t _IAgVAStateCalcPosVelDifferenceOtherSegment::GetUserComment ( );
__declspec(implementation_key(998)) void _IAgVAStateCalcPosVelDifferenceOtherSegment::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(999)) _bstr_t _IAgVAStateCalcPosVelDifferenceOtherSegment::GetDescription ( );
__declspec(implementation_key(1000)) VARIANT_BOOL _IAgVAStateCalcPosVelDifferenceOtherSegment::IsReadOnly ( );
__declspec(implementation_key(1001)) IUnknownPtr _IAgVAStateCalcPosVelDifferenceOtherSegment::CloneObject ( );
__declspec(implementation_key(1002)) _bstr_t _IAgVAStateCalcPosVelDifferenceOtherSegment::GetOtherSegmentName ( );
__declspec(implementation_key(1003)) void _IAgVAStateCalcPosVelDifferenceOtherSegment::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(1004)) enum AgEVASegmentState _IAgVAStateCalcPosVelDifferenceOtherSegment::GetSegmentStateToUse ( );
__declspec(implementation_key(1005)) void _IAgVAStateCalcPosVelDifferenceOtherSegment::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(1006)) _bstr_t IAgVAStateCalcValueAtSegment::GetCalcObjectName ( );
__declspec(implementation_key(1007)) void IAgVAStateCalcValueAtSegment::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1008)) _bstr_t IAgVAStateCalcValueAtSegment::GetOtherSegmentName ( );
__declspec(implementation_key(1009)) void IAgVAStateCalcValueAtSegment::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(1010)) enum AgEVASegmentState IAgVAStateCalcValueAtSegment::GetSegmentStateToUse ( );
__declspec(implementation_key(1011)) void IAgVAStateCalcValueAtSegment::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(1012)) _bstr_t _IAgVAStateCalcValueAtSegment::GetName ( );
__declspec(implementation_key(1013)) void _IAgVAStateCalcValueAtSegment::PutName ( _bstr_t pVal );
__declspec(implementation_key(1014)) _bstr_t _IAgVAStateCalcValueAtSegment::GetUserComment ( );
__declspec(implementation_key(1015)) void _IAgVAStateCalcValueAtSegment::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1016)) _bstr_t _IAgVAStateCalcValueAtSegment::GetDescription ( );
__declspec(implementation_key(1017)) VARIANT_BOOL _IAgVAStateCalcValueAtSegment::IsReadOnly ( );
__declspec(implementation_key(1018)) IUnknownPtr _IAgVAStateCalcValueAtSegment::CloneObject ( );
__declspec(implementation_key(1019)) _bstr_t _IAgVAStateCalcValueAtSegment::GetCalcObjectName ( );
__declspec(implementation_key(1020)) void _IAgVAStateCalcValueAtSegment::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1021)) _bstr_t _IAgVAStateCalcValueAtSegment::GetOtherSegmentName ( );
__declspec(implementation_key(1022)) void _IAgVAStateCalcValueAtSegment::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(1023)) enum AgEVASegmentState _IAgVAStateCalcValueAtSegment::GetSegmentStateToUse ( );
__declspec(implementation_key(1024)) void _IAgVAStateCalcValueAtSegment::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(1025)) _bstr_t IAgVAStateCalcMaxValue::GetCalcObjectName ( );
__declspec(implementation_key(1026)) void IAgVAStateCalcMaxValue::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1027)) _bstr_t _IAgVAStateCalcMaxValue::GetName ( );
__declspec(implementation_key(1028)) void _IAgVAStateCalcMaxValue::PutName ( _bstr_t pVal );
__declspec(implementation_key(1029)) _bstr_t _IAgVAStateCalcMaxValue::GetUserComment ( );
__declspec(implementation_key(1030)) void _IAgVAStateCalcMaxValue::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1031)) _bstr_t _IAgVAStateCalcMaxValue::GetDescription ( );
__declspec(implementation_key(1032)) VARIANT_BOOL _IAgVAStateCalcMaxValue::IsReadOnly ( );
__declspec(implementation_key(1033)) IUnknownPtr _IAgVAStateCalcMaxValue::CloneObject ( );
__declspec(implementation_key(1034)) _bstr_t _IAgVAStateCalcMaxValue::GetCalcObjectName ( );
__declspec(implementation_key(1035)) void _IAgVAStateCalcMaxValue::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1036)) _bstr_t IAgVAStateCalcMinValue::GetCalcObjectName ( );
__declspec(implementation_key(1037)) void IAgVAStateCalcMinValue::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1038)) _bstr_t _IAgVAStateCalcMinValue::GetName ( );
__declspec(implementation_key(1039)) void _IAgVAStateCalcMinValue::PutName ( _bstr_t pVal );
__declspec(implementation_key(1040)) _bstr_t _IAgVAStateCalcMinValue::GetUserComment ( );
__declspec(implementation_key(1041)) void _IAgVAStateCalcMinValue::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1042)) _bstr_t _IAgVAStateCalcMinValue::GetDescription ( );
__declspec(implementation_key(1043)) VARIANT_BOOL _IAgVAStateCalcMinValue::IsReadOnly ( );
__declspec(implementation_key(1044)) IUnknownPtr _IAgVAStateCalcMinValue::CloneObject ( );
__declspec(implementation_key(1045)) _bstr_t _IAgVAStateCalcMinValue::GetCalcObjectName ( );
__declspec(implementation_key(1046)) void _IAgVAStateCalcMinValue::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1047)) _bstr_t IAgVAStateCalcNegative::GetCalcObjectName ( );
__declspec(implementation_key(1048)) void IAgVAStateCalcNegative::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1049)) _bstr_t _IAgVAStateCalcNegative::GetName ( );
__declspec(implementation_key(1050)) void _IAgVAStateCalcNegative::PutName ( _bstr_t pVal );
__declspec(implementation_key(1051)) _bstr_t _IAgVAStateCalcNegative::GetUserComment ( );
__declspec(implementation_key(1052)) void _IAgVAStateCalcNegative::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1053)) _bstr_t _IAgVAStateCalcNegative::GetDescription ( );
__declspec(implementation_key(1054)) VARIANT_BOOL _IAgVAStateCalcNegative::IsReadOnly ( );
__declspec(implementation_key(1055)) IUnknownPtr _IAgVAStateCalcNegative::CloneObject ( );
__declspec(implementation_key(1056)) _bstr_t _IAgVAStateCalcNegative::GetCalcObjectName ( );
__declspec(implementation_key(1057)) void _IAgVAStateCalcNegative::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1058)) _bstr_t IAgVAStateCalcTrueAnomaly::GetCentralBodyName ( );
__declspec(implementation_key(1059)) void IAgVAStateCalcTrueAnomaly::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1060)) enum AgEVACalcObjectElem IAgVAStateCalcTrueAnomaly::GetElementType ( );
__declspec(implementation_key(1061)) void IAgVAStateCalcTrueAnomaly::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(1062)) _bstr_t _IAgVAStateCalcTrueAnomaly::GetName ( );
__declspec(implementation_key(1063)) void _IAgVAStateCalcTrueAnomaly::PutName ( _bstr_t pVal );
__declspec(implementation_key(1064)) _bstr_t _IAgVAStateCalcTrueAnomaly::GetUserComment ( );
__declspec(implementation_key(1065)) void _IAgVAStateCalcTrueAnomaly::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1066)) _bstr_t _IAgVAStateCalcTrueAnomaly::GetDescription ( );
__declspec(implementation_key(1067)) VARIANT_BOOL _IAgVAStateCalcTrueAnomaly::IsReadOnly ( );
__declspec(implementation_key(1068)) IUnknownPtr _IAgVAStateCalcTrueAnomaly::CloneObject ( );
__declspec(implementation_key(1069)) _bstr_t _IAgVAStateCalcTrueAnomaly::GetCentralBodyName ( );
__declspec(implementation_key(1070)) void _IAgVAStateCalcTrueAnomaly::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1071)) enum AgEVACalcObjectElem _IAgVAStateCalcTrueAnomaly::GetElementType ( );
__declspec(implementation_key(1072)) void _IAgVAStateCalcTrueAnomaly::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(1073)) _bstr_t IAgVABDotRCalc::GetTargetBodyName ( );
__declspec(implementation_key(1074)) void IAgVABDotRCalc::PutTargetBodyName ( _bstr_t pVal );
__declspec(implementation_key(1075)) _bstr_t IAgVABDotRCalc::GetRefVectorName ( );
__declspec(implementation_key(1076)) void IAgVABDotRCalc::PutRefVectorName ( _bstr_t pVal );
__declspec(implementation_key(1077)) _bstr_t _IAgVABDotRCalc::GetName ( );
__declspec(implementation_key(1078)) void _IAgVABDotRCalc::PutName ( _bstr_t pVal );
__declspec(implementation_key(1079)) _bstr_t _IAgVABDotRCalc::GetUserComment ( );
__declspec(implementation_key(1080)) void _IAgVABDotRCalc::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1081)) _bstr_t _IAgVABDotRCalc::GetDescription ( );
__declspec(implementation_key(1082)) VARIANT_BOOL _IAgVABDotRCalc::IsReadOnly ( );
__declspec(implementation_key(1083)) IUnknownPtr _IAgVABDotRCalc::CloneObject ( );
__declspec(implementation_key(1084)) _bstr_t _IAgVABDotRCalc::GetTargetBodyName ( );
__declspec(implementation_key(1085)) void _IAgVABDotRCalc::PutTargetBodyName ( _bstr_t pVal );
__declspec(implementation_key(1086)) _bstr_t _IAgVABDotRCalc::GetRefVectorName ( );
__declspec(implementation_key(1087)) void _IAgVABDotRCalc::PutRefVectorName ( _bstr_t pVal );
__declspec(implementation_key(1088)) _bstr_t IAgVABDotTCalc::GetTargetBodyName ( );
__declspec(implementation_key(1089)) void IAgVABDotTCalc::PutTargetBodyName ( _bstr_t pVal );
__declspec(implementation_key(1090)) _bstr_t IAgVABDotTCalc::GetRefVectorName ( );
__declspec(implementation_key(1091)) void IAgVABDotTCalc::PutRefVectorName ( _bstr_t pVal );
__declspec(implementation_key(1092)) _bstr_t _IAgVABDotTCalc::GetName ( );
__declspec(implementation_key(1093)) void _IAgVABDotTCalc::PutName ( _bstr_t pVal );
__declspec(implementation_key(1094)) _bstr_t _IAgVABDotTCalc::GetUserComment ( );
__declspec(implementation_key(1095)) void _IAgVABDotTCalc::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1096)) _bstr_t _IAgVABDotTCalc::GetDescription ( );
__declspec(implementation_key(1097)) VARIANT_BOOL _IAgVABDotTCalc::IsReadOnly ( );
__declspec(implementation_key(1098)) IUnknownPtr _IAgVABDotTCalc::CloneObject ( );
__declspec(implementation_key(1099)) _bstr_t _IAgVABDotTCalc::GetTargetBodyName ( );
__declspec(implementation_key(1100)) void _IAgVABDotTCalc::PutTargetBodyName ( _bstr_t pVal );
__declspec(implementation_key(1101)) _bstr_t _IAgVABDotTCalc::GetRefVectorName ( );
__declspec(implementation_key(1102)) void _IAgVABDotTCalc::PutRefVectorName ( _bstr_t pVal );
__declspec(implementation_key(1103)) _bstr_t IAgVABMagCalc::GetTargetBodyName ( );
__declspec(implementation_key(1104)) void IAgVABMagCalc::PutTargetBodyName ( _bstr_t pVal );
__declspec(implementation_key(1105)) _bstr_t _IAgVABMagCalc::GetName ( );
__declspec(implementation_key(1106)) void _IAgVABMagCalc::PutName ( _bstr_t pVal );
__declspec(implementation_key(1107)) _bstr_t _IAgVABMagCalc::GetUserComment ( );
__declspec(implementation_key(1108)) void _IAgVABMagCalc::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1109)) _bstr_t _IAgVABMagCalc::GetDescription ( );
__declspec(implementation_key(1110)) VARIANT_BOOL _IAgVABMagCalc::IsReadOnly ( );
__declspec(implementation_key(1111)) IUnknownPtr _IAgVABMagCalc::CloneObject ( );
__declspec(implementation_key(1112)) _bstr_t _IAgVABMagCalc::GetTargetBodyName ( );
__declspec(implementation_key(1113)) void _IAgVABMagCalc::PutTargetBodyName ( _bstr_t pVal );
__declspec(implementation_key(1114)) _bstr_t IAgVABThetaCalc::GetTargetBodyName ( );
__declspec(implementation_key(1115)) void IAgVABThetaCalc::PutTargetBodyName ( _bstr_t pVal );
__declspec(implementation_key(1116)) _bstr_t IAgVABThetaCalc::GetRefVectorName ( );
__declspec(implementation_key(1117)) void IAgVABThetaCalc::PutRefVectorName ( _bstr_t pVal );
__declspec(implementation_key(1118)) _bstr_t _IAgVABThetaCalc::GetName ( );
__declspec(implementation_key(1119)) void _IAgVABThetaCalc::PutName ( _bstr_t pVal );
__declspec(implementation_key(1120)) _bstr_t _IAgVABThetaCalc::GetUserComment ( );
__declspec(implementation_key(1121)) void _IAgVABThetaCalc::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1122)) _bstr_t _IAgVABThetaCalc::GetDescription ( );
__declspec(implementation_key(1123)) VARIANT_BOOL _IAgVABThetaCalc::IsReadOnly ( );
__declspec(implementation_key(1124)) IUnknownPtr _IAgVABThetaCalc::CloneObject ( );
__declspec(implementation_key(1125)) _bstr_t _IAgVABThetaCalc::GetTargetBodyName ( );
__declspec(implementation_key(1126)) void _IAgVABThetaCalc::PutTargetBodyName ( _bstr_t pVal );
__declspec(implementation_key(1127)) _bstr_t _IAgVABThetaCalc::GetRefVectorName ( );
__declspec(implementation_key(1128)) void _IAgVABThetaCalc::PutRefVectorName ( _bstr_t pVal );
__declspec(implementation_key(1129)) _bstr_t IAgVAStateCalcDeltaDec::GetCentralBodyName ( );
__declspec(implementation_key(1130)) void IAgVAStateCalcDeltaDec::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1131)) enum AgEVACalcObjectCentralBodyReference IAgVAStateCalcDeltaDec::GetReferenceType ( );
__declspec(implementation_key(1132)) void IAgVAStateCalcDeltaDec::PutReferenceType ( enum AgEVACalcObjectCentralBodyReference pVal );
__declspec(implementation_key(1133)) _bstr_t IAgVAStateCalcDeltaDec::GetReferenceBody ( );
__declspec(implementation_key(1134)) void IAgVAStateCalcDeltaDec::PutReferenceBody ( _bstr_t pVal );
__declspec(implementation_key(1135)) _bstr_t _IAgVAStateCalcDeltaDec::GetName ( );
__declspec(implementation_key(1136)) void _IAgVAStateCalcDeltaDec::PutName ( _bstr_t pVal );
__declspec(implementation_key(1137)) _bstr_t _IAgVAStateCalcDeltaDec::GetUserComment ( );
__declspec(implementation_key(1138)) void _IAgVAStateCalcDeltaDec::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1139)) _bstr_t _IAgVAStateCalcDeltaDec::GetDescription ( );
__declspec(implementation_key(1140)) VARIANT_BOOL _IAgVAStateCalcDeltaDec::IsReadOnly ( );
__declspec(implementation_key(1141)) IUnknownPtr _IAgVAStateCalcDeltaDec::CloneObject ( );
__declspec(implementation_key(1142)) _bstr_t _IAgVAStateCalcDeltaDec::GetCentralBodyName ( );
__declspec(implementation_key(1143)) void _IAgVAStateCalcDeltaDec::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1144)) enum AgEVACalcObjectCentralBodyReference _IAgVAStateCalcDeltaDec::GetReferenceType ( );
__declspec(implementation_key(1145)) void _IAgVAStateCalcDeltaDec::PutReferenceType ( enum AgEVACalcObjectCentralBodyReference pVal );
__declspec(implementation_key(1146)) _bstr_t _IAgVAStateCalcDeltaDec::GetReferenceBody ( );
__declspec(implementation_key(1147)) void _IAgVAStateCalcDeltaDec::PutReferenceBody ( _bstr_t pVal );
__declspec(implementation_key(1148)) _bstr_t IAgVAStateCalcDeltaRA::GetCentralBodyName ( );
__declspec(implementation_key(1149)) void IAgVAStateCalcDeltaRA::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1150)) enum AgEVACalcObjectCentralBodyReference IAgVAStateCalcDeltaRA::GetReferenceType ( );
__declspec(implementation_key(1151)) void IAgVAStateCalcDeltaRA::PutReferenceType ( enum AgEVACalcObjectCentralBodyReference pVal );
__declspec(implementation_key(1152)) _bstr_t IAgVAStateCalcDeltaRA::GetReferenceBody ( );
__declspec(implementation_key(1153)) void IAgVAStateCalcDeltaRA::PutReferenceBody ( _bstr_t pVal );
__declspec(implementation_key(1154)) _bstr_t _IAgVAStateCalcDeltaRA::GetName ( );
__declspec(implementation_key(1155)) void _IAgVAStateCalcDeltaRA::PutName ( _bstr_t pVal );
__declspec(implementation_key(1156)) _bstr_t _IAgVAStateCalcDeltaRA::GetUserComment ( );
__declspec(implementation_key(1157)) void _IAgVAStateCalcDeltaRA::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1158)) _bstr_t _IAgVAStateCalcDeltaRA::GetDescription ( );
__declspec(implementation_key(1159)) VARIANT_BOOL _IAgVAStateCalcDeltaRA::IsReadOnly ( );
__declspec(implementation_key(1160)) IUnknownPtr _IAgVAStateCalcDeltaRA::CloneObject ( );
__declspec(implementation_key(1161)) _bstr_t _IAgVAStateCalcDeltaRA::GetCentralBodyName ( );
__declspec(implementation_key(1162)) void _IAgVAStateCalcDeltaRA::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1163)) enum AgEVACalcObjectCentralBodyReference _IAgVAStateCalcDeltaRA::GetReferenceType ( );
__declspec(implementation_key(1164)) void _IAgVAStateCalcDeltaRA::PutReferenceType ( enum AgEVACalcObjectCentralBodyReference pVal );
__declspec(implementation_key(1165)) _bstr_t _IAgVAStateCalcDeltaRA::GetReferenceBody ( );
__declspec(implementation_key(1166)) void _IAgVAStateCalcDeltaRA::PutReferenceBody ( _bstr_t pVal );
__declspec(implementation_key(1167)) _bstr_t IAgVAStateCalcApparentSolarLon::GetCentralBodyName ( );
__declspec(implementation_key(1168)) void IAgVAStateCalcApparentSolarLon::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1169)) _bstr_t _IAgVAStateCalcApparentSolarLon::GetName ( );
__declspec(implementation_key(1170)) void _IAgVAStateCalcApparentSolarLon::PutName ( _bstr_t pVal );
__declspec(implementation_key(1171)) _bstr_t _IAgVAStateCalcApparentSolarLon::GetUserComment ( );
__declspec(implementation_key(1172)) void _IAgVAStateCalcApparentSolarLon::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1173)) _bstr_t _IAgVAStateCalcApparentSolarLon::GetDescription ( );
__declspec(implementation_key(1174)) VARIANT_BOOL _IAgVAStateCalcApparentSolarLon::IsReadOnly ( );
__declspec(implementation_key(1175)) IUnknownPtr _IAgVAStateCalcApparentSolarLon::CloneObject ( );
__declspec(implementation_key(1176)) _bstr_t _IAgVAStateCalcApparentSolarLon::GetCentralBodyName ( );
__declspec(implementation_key(1177)) void _IAgVAStateCalcApparentSolarLon::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1178)) _bstr_t IAgVAStateCalcBetaAngle::GetCentralBodyName ( );
__declspec(implementation_key(1179)) void IAgVAStateCalcBetaAngle::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1180)) _bstr_t _IAgVAStateCalcBetaAngle::GetName ( );
__declspec(implementation_key(1181)) void _IAgVAStateCalcBetaAngle::PutName ( _bstr_t pVal );
__declspec(implementation_key(1182)) _bstr_t _IAgVAStateCalcBetaAngle::GetUserComment ( );
__declspec(implementation_key(1183)) void _IAgVAStateCalcBetaAngle::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1184)) _bstr_t _IAgVAStateCalcBetaAngle::GetDescription ( );
__declspec(implementation_key(1185)) VARIANT_BOOL _IAgVAStateCalcBetaAngle::IsReadOnly ( );
__declspec(implementation_key(1186)) IUnknownPtr _IAgVAStateCalcBetaAngle::CloneObject ( );
__declspec(implementation_key(1187)) _bstr_t _IAgVAStateCalcBetaAngle::GetCentralBodyName ( );
__declspec(implementation_key(1188)) void _IAgVAStateCalcBetaAngle::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1189)) _bstr_t IAgVAStateCalcEarthMeanSolarLon::GetCentralBodyName ( );
__declspec(implementation_key(1190)) void IAgVAStateCalcEarthMeanSolarLon::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1191)) _bstr_t _IAgVAStateCalcEarthMeanSolarLon::GetName ( );
__declspec(implementation_key(1192)) void _IAgVAStateCalcEarthMeanSolarLon::PutName ( _bstr_t pVal );
__declspec(implementation_key(1193)) _bstr_t _IAgVAStateCalcEarthMeanSolarLon::GetUserComment ( );
__declspec(implementation_key(1194)) void _IAgVAStateCalcEarthMeanSolarLon::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1195)) _bstr_t _IAgVAStateCalcEarthMeanSolarLon::GetDescription ( );
__declspec(implementation_key(1196)) VARIANT_BOOL _IAgVAStateCalcEarthMeanSolarLon::IsReadOnly ( );
__declspec(implementation_key(1197)) IUnknownPtr _IAgVAStateCalcEarthMeanSolarLon::CloneObject ( );
__declspec(implementation_key(1198)) _bstr_t _IAgVAStateCalcEarthMeanSolarLon::GetCentralBodyName ( );
__declspec(implementation_key(1199)) void _IAgVAStateCalcEarthMeanSolarLon::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1200)) _bstr_t IAgVAStateCalcLocalApparentSolarLon::GetCentralBodyName ( );
__declspec(implementation_key(1201)) void IAgVAStateCalcLocalApparentSolarLon::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1202)) _bstr_t _IAgVAStateCalcLocalApparentSolarLon::GetName ( );
__declspec(implementation_key(1203)) void _IAgVAStateCalcLocalApparentSolarLon::PutName ( _bstr_t pVal );
__declspec(implementation_key(1204)) _bstr_t _IAgVAStateCalcLocalApparentSolarLon::GetUserComment ( );
__declspec(implementation_key(1205)) void _IAgVAStateCalcLocalApparentSolarLon::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1206)) _bstr_t _IAgVAStateCalcLocalApparentSolarLon::GetDescription ( );
__declspec(implementation_key(1207)) VARIANT_BOOL _IAgVAStateCalcLocalApparentSolarLon::IsReadOnly ( );
__declspec(implementation_key(1208)) IUnknownPtr _IAgVAStateCalcLocalApparentSolarLon::CloneObject ( );
__declspec(implementation_key(1209)) _bstr_t _IAgVAStateCalcLocalApparentSolarLon::GetCentralBodyName ( );
__declspec(implementation_key(1210)) void _IAgVAStateCalcLocalApparentSolarLon::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1211)) _bstr_t IAgVAStateCalcLonOfPeriapsis::GetCoordSystemName ( );
__declspec(implementation_key(1212)) void IAgVAStateCalcLonOfPeriapsis::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1213)) enum AgEVACalcObjectElem IAgVAStateCalcLonOfPeriapsis::GetElementType ( );
__declspec(implementation_key(1214)) void IAgVAStateCalcLonOfPeriapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(1215)) _bstr_t _IAgVAStateCalcLonOfPeriapsis::GetName ( );
__declspec(implementation_key(1216)) void _IAgVAStateCalcLonOfPeriapsis::PutName ( _bstr_t pVal );
__declspec(implementation_key(1217)) _bstr_t _IAgVAStateCalcLonOfPeriapsis::GetUserComment ( );
__declspec(implementation_key(1218)) void _IAgVAStateCalcLonOfPeriapsis::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1219)) _bstr_t _IAgVAStateCalcLonOfPeriapsis::GetDescription ( );
__declspec(implementation_key(1220)) VARIANT_BOOL _IAgVAStateCalcLonOfPeriapsis::IsReadOnly ( );
__declspec(implementation_key(1221)) IUnknownPtr _IAgVAStateCalcLonOfPeriapsis::CloneObject ( );
__declspec(implementation_key(1222)) _bstr_t _IAgVAStateCalcLonOfPeriapsis::GetCoordSystemName ( );
__declspec(implementation_key(1223)) void _IAgVAStateCalcLonOfPeriapsis::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1224)) enum AgEVACalcObjectElem _IAgVAStateCalcLonOfPeriapsis::GetElementType ( );
__declspec(implementation_key(1225)) void _IAgVAStateCalcLonOfPeriapsis::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(1226)) _bstr_t IAgVAStateCalcOrbitStateValue::GetCalcObjectName ( );
__declspec(implementation_key(1227)) void IAgVAStateCalcOrbitStateValue::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1228)) _bstr_t IAgVAStateCalcOrbitStateValue::GetInputCoordSystemName ( );
__declspec(implementation_key(1229)) void IAgVAStateCalcOrbitStateValue::PutInputCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1230)) _variant_t IAgVAStateCalcOrbitStateValue::GetX ( );
__declspec(implementation_key(1231)) void IAgVAStateCalcOrbitStateValue::PutX ( const _variant_t & pVal );
__declspec(implementation_key(1232)) _variant_t IAgVAStateCalcOrbitStateValue::GetY ( );
__declspec(implementation_key(1233)) void IAgVAStateCalcOrbitStateValue::PutY ( const _variant_t & pVal );
__declspec(implementation_key(1234)) _variant_t IAgVAStateCalcOrbitStateValue::GetZ ( );
__declspec(implementation_key(1235)) void IAgVAStateCalcOrbitStateValue::PutZ ( const _variant_t & pVal );
__declspec(implementation_key(1236)) _variant_t IAgVAStateCalcOrbitStateValue::GetVx ( );
__declspec(implementation_key(1237)) void IAgVAStateCalcOrbitStateValue::PutVx ( const _variant_t & pVal );
__declspec(implementation_key(1238)) _variant_t IAgVAStateCalcOrbitStateValue::GetVy ( );
__declspec(implementation_key(1239)) void IAgVAStateCalcOrbitStateValue::PutVy ( const _variant_t & pVal );
__declspec(implementation_key(1240)) _variant_t IAgVAStateCalcOrbitStateValue::GetVz ( );
__declspec(implementation_key(1241)) void IAgVAStateCalcOrbitStateValue::PutVz ( const _variant_t & pVal );
__declspec(implementation_key(1242)) HRESULT IAgVAStateCalcOrbitStateValue::EnableControlParameter ( enum AgEVAControlOrbitStateValue Param );
__declspec(implementation_key(1243)) HRESULT IAgVAStateCalcOrbitStateValue::DisableControlParameter ( enum AgEVAControlOrbitStateValue Param );
__declspec(implementation_key(1244)) VARIANT_BOOL IAgVAStateCalcOrbitStateValue::IsControlParameterEnabled ( enum AgEVAControlOrbitStateValue Param );
__declspec(implementation_key(1245)) VARIANT_BOOL IAgVAStateCalcOrbitStateValue::GetControlParametersAvailable ( );
__declspec(implementation_key(1246)) _bstr_t _IAgVAStateCalcOrbitStateValue::GetName ( );
__declspec(implementation_key(1247)) void _IAgVAStateCalcOrbitStateValue::PutName ( _bstr_t pVal );
__declspec(implementation_key(1248)) _bstr_t _IAgVAStateCalcOrbitStateValue::GetUserComment ( );
__declspec(implementation_key(1249)) void _IAgVAStateCalcOrbitStateValue::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1250)) _bstr_t _IAgVAStateCalcOrbitStateValue::GetDescription ( );
__declspec(implementation_key(1251)) VARIANT_BOOL _IAgVAStateCalcOrbitStateValue::IsReadOnly ( );
__declspec(implementation_key(1252)) IUnknownPtr _IAgVAStateCalcOrbitStateValue::CloneObject ( );
__declspec(implementation_key(1253)) _bstr_t _IAgVAStateCalcOrbitStateValue::GetCalcObjectName ( );
__declspec(implementation_key(1254)) void _IAgVAStateCalcOrbitStateValue::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1255)) _bstr_t _IAgVAStateCalcOrbitStateValue::GetInputCoordSystemName ( );
__declspec(implementation_key(1256)) void _IAgVAStateCalcOrbitStateValue::PutInputCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1257)) _variant_t _IAgVAStateCalcOrbitStateValue::GetX ( );
__declspec(implementation_key(1258)) void _IAgVAStateCalcOrbitStateValue::PutX ( const _variant_t & pVal );
__declspec(implementation_key(1259)) _variant_t _IAgVAStateCalcOrbitStateValue::GetY ( );
__declspec(implementation_key(1260)) void _IAgVAStateCalcOrbitStateValue::PutY ( const _variant_t & pVal );
__declspec(implementation_key(1261)) _variant_t _IAgVAStateCalcOrbitStateValue::GetZ ( );
__declspec(implementation_key(1262)) void _IAgVAStateCalcOrbitStateValue::PutZ ( const _variant_t & pVal );
__declspec(implementation_key(1263)) _variant_t _IAgVAStateCalcOrbitStateValue::GetVx ( );
__declspec(implementation_key(1264)) void _IAgVAStateCalcOrbitStateValue::PutVx ( const _variant_t & pVal );
__declspec(implementation_key(1265)) _variant_t _IAgVAStateCalcOrbitStateValue::GetVy ( );
__declspec(implementation_key(1266)) void _IAgVAStateCalcOrbitStateValue::PutVy ( const _variant_t & pVal );
__declspec(implementation_key(1267)) _variant_t _IAgVAStateCalcOrbitStateValue::GetVz ( );
__declspec(implementation_key(1268)) void _IAgVAStateCalcOrbitStateValue::PutVz ( const _variant_t & pVal );
__declspec(implementation_key(1269)) HRESULT _IAgVAStateCalcOrbitStateValue::EnableControlParameter ( enum AgEVAControlOrbitStateValue Param );
__declspec(implementation_key(1270)) HRESULT _IAgVAStateCalcOrbitStateValue::DisableControlParameter ( enum AgEVAControlOrbitStateValue Param );
__declspec(implementation_key(1271)) VARIANT_BOOL _IAgVAStateCalcOrbitStateValue::IsControlParameterEnabled ( enum AgEVAControlOrbitStateValue Param );
__declspec(implementation_key(1272)) VARIANT_BOOL _IAgVAStateCalcOrbitStateValue::GetControlParametersAvailable ( );
__declspec(implementation_key(1273)) _bstr_t IAgVAStateCalcSignedEccentricity::GetCentralBodyName ( );
__declspec(implementation_key(1274)) void IAgVAStateCalcSignedEccentricity::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1275)) enum AgEVACalcObjectElem IAgVAStateCalcSignedEccentricity::GetElementType ( );
__declspec(implementation_key(1276)) void IAgVAStateCalcSignedEccentricity::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(1277)) _bstr_t _IAgVAStateCalcSignedEccentricity::GetName ( );
__declspec(implementation_key(1278)) void _IAgVAStateCalcSignedEccentricity::PutName ( _bstr_t pVal );
__declspec(implementation_key(1279)) _bstr_t _IAgVAStateCalcSignedEccentricity::GetUserComment ( );
__declspec(implementation_key(1280)) void _IAgVAStateCalcSignedEccentricity::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1281)) _bstr_t _IAgVAStateCalcSignedEccentricity::GetDescription ( );
__declspec(implementation_key(1282)) VARIANT_BOOL _IAgVAStateCalcSignedEccentricity::IsReadOnly ( );
__declspec(implementation_key(1283)) IUnknownPtr _IAgVAStateCalcSignedEccentricity::CloneObject ( );
__declspec(implementation_key(1284)) _bstr_t _IAgVAStateCalcSignedEccentricity::GetCentralBodyName ( );
__declspec(implementation_key(1285)) void _IAgVAStateCalcSignedEccentricity::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1286)) enum AgEVACalcObjectElem _IAgVAStateCalcSignedEccentricity::GetElementType ( );
__declspec(implementation_key(1287)) void _IAgVAStateCalcSignedEccentricity::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(1288)) _bstr_t IAgVAStateCalcTrueLon::GetCoordSystemName ( );
__declspec(implementation_key(1289)) void IAgVAStateCalcTrueLon::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1290)) enum AgEVACalcObjectElem IAgVAStateCalcTrueLon::GetElementType ( );
__declspec(implementation_key(1291)) void IAgVAStateCalcTrueLon::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(1292)) _bstr_t _IAgVAStateCalcTrueLon::GetName ( );
__declspec(implementation_key(1293)) void _IAgVAStateCalcTrueLon::PutName ( _bstr_t pVal );
__declspec(implementation_key(1294)) _bstr_t _IAgVAStateCalcTrueLon::GetUserComment ( );
__declspec(implementation_key(1295)) void _IAgVAStateCalcTrueLon::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1296)) _bstr_t _IAgVAStateCalcTrueLon::GetDescription ( );
__declspec(implementation_key(1297)) VARIANT_BOOL _IAgVAStateCalcTrueLon::IsReadOnly ( );
__declspec(implementation_key(1298)) IUnknownPtr _IAgVAStateCalcTrueLon::CloneObject ( );
__declspec(implementation_key(1299)) _bstr_t _IAgVAStateCalcTrueLon::GetCoordSystemName ( );
__declspec(implementation_key(1300)) void _IAgVAStateCalcTrueLon::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1301)) enum AgEVACalcObjectElem _IAgVAStateCalcTrueLon::GetElementType ( );
__declspec(implementation_key(1302)) void _IAgVAStateCalcTrueLon::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(1303)) _bstr_t IAgVAStateCalcPower::GetPowerSourceName ( );
__declspec(implementation_key(1304)) void IAgVAStateCalcPower::PutPowerSourceName ( _bstr_t pVal );
__declspec(implementation_key(1305)) _bstr_t _IAgVAStateCalcPower::GetName ( );
__declspec(implementation_key(1306)) void _IAgVAStateCalcPower::PutName ( _bstr_t pVal );
__declspec(implementation_key(1307)) _bstr_t _IAgVAStateCalcPower::GetUserComment ( );
__declspec(implementation_key(1308)) void _IAgVAStateCalcPower::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1309)) _bstr_t _IAgVAStateCalcPower::GetDescription ( );
__declspec(implementation_key(1310)) VARIANT_BOOL _IAgVAStateCalcPower::IsReadOnly ( );
__declspec(implementation_key(1311)) IUnknownPtr _IAgVAStateCalcPower::CloneObject ( );
__declspec(implementation_key(1312)) _bstr_t _IAgVAStateCalcPower::GetPowerSourceName ( );
__declspec(implementation_key(1313)) void _IAgVAStateCalcPower::PutPowerSourceName ( _bstr_t pVal );
__declspec(implementation_key(1314)) _bstr_t IAgVAStateCalcRelMotion::GetCentralBodyName ( );
__declspec(implementation_key(1315)) void IAgVAStateCalcRelMotion::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1316)) VARIANT_BOOL IAgVAStateCalcRelMotion::GetOriginAtMaster ( );
__declspec(implementation_key(1317)) void IAgVAStateCalcRelMotion::PutOriginAtMaster ( VARIANT_BOOL pVal );
__declspec(implementation_key(1318)) enum AgEVACalcObjectReference IAgVAStateCalcRelMotion::GetReferenceSelection ( );
__declspec(implementation_key(1319)) void IAgVAStateCalcRelMotion::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(1320)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcRelMotion::GetReference ( );
__declspec(implementation_key(1321)) _bstr_t _IAgVAStateCalcRelMotion::GetName ( );
__declspec(implementation_key(1322)) void _IAgVAStateCalcRelMotion::PutName ( _bstr_t pVal );
__declspec(implementation_key(1323)) _bstr_t _IAgVAStateCalcRelMotion::GetUserComment ( );
__declspec(implementation_key(1324)) void _IAgVAStateCalcRelMotion::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1325)) _bstr_t _IAgVAStateCalcRelMotion::GetDescription ( );
__declspec(implementation_key(1326)) VARIANT_BOOL _IAgVAStateCalcRelMotion::IsReadOnly ( );
__declspec(implementation_key(1327)) IUnknownPtr _IAgVAStateCalcRelMotion::CloneObject ( );
__declspec(implementation_key(1328)) _bstr_t _IAgVAStateCalcRelMotion::GetCentralBodyName ( );
__declspec(implementation_key(1329)) void _IAgVAStateCalcRelMotion::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1330)) VARIANT_BOOL _IAgVAStateCalcRelMotion::GetOriginAtMaster ( );
__declspec(implementation_key(1331)) void _IAgVAStateCalcRelMotion::PutOriginAtMaster ( VARIANT_BOOL pVal );
__declspec(implementation_key(1332)) enum AgEVACalcObjectReference _IAgVAStateCalcRelMotion::GetReferenceSelection ( );
__declspec(implementation_key(1333)) void _IAgVAStateCalcRelMotion::PutReferenceSelection ( enum AgEVACalcObjectReference pVal );
__declspec(implementation_key(1334)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcRelMotion::GetReference ( );
__declspec(implementation_key(1335)) _bstr_t IAgVAStateCalcCustomFunction::GetResetFunctionName ( );
__declspec(implementation_key(1336)) void IAgVAStateCalcCustomFunction::PutResetFunctionName ( _bstr_t pVal );
__declspec(implementation_key(1337)) _bstr_t IAgVAStateCalcCustomFunction::GetEvalFunctionName ( );
__declspec(implementation_key(1338)) void IAgVAStateCalcCustomFunction::PutEvalFunctionName ( _bstr_t pVal );
__declspec(implementation_key(1339)) _bstr_t IAgVAStateCalcCustomFunction::GetUnitDimension ( );
__declspec(implementation_key(1340)) void IAgVAStateCalcCustomFunction::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(1341)) _bstr_t _IAgVAStateCalcCustomFunction::GetName ( );
__declspec(implementation_key(1342)) void _IAgVAStateCalcCustomFunction::PutName ( _bstr_t pVal );
__declspec(implementation_key(1343)) _bstr_t _IAgVAStateCalcCustomFunction::GetUserComment ( );
__declspec(implementation_key(1344)) void _IAgVAStateCalcCustomFunction::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1345)) _bstr_t _IAgVAStateCalcCustomFunction::GetDescription ( );
__declspec(implementation_key(1346)) VARIANT_BOOL _IAgVAStateCalcCustomFunction::IsReadOnly ( );
__declspec(implementation_key(1347)) IUnknownPtr _IAgVAStateCalcCustomFunction::CloneObject ( );
__declspec(implementation_key(1348)) _bstr_t _IAgVAStateCalcCustomFunction::GetResetFunctionName ( );
__declspec(implementation_key(1349)) void _IAgVAStateCalcCustomFunction::PutResetFunctionName ( _bstr_t pVal );
__declspec(implementation_key(1350)) _bstr_t _IAgVAStateCalcCustomFunction::GetEvalFunctionName ( );
__declspec(implementation_key(1351)) void _IAgVAStateCalcCustomFunction::PutEvalFunctionName ( _bstr_t pVal );
__declspec(implementation_key(1352)) _bstr_t _IAgVAStateCalcCustomFunction::GetUnitDimension ( );
__declspec(implementation_key(1353)) void _IAgVAStateCalcCustomFunction::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(1354)) IAgVACalcObjectCollectionPtr IAgVAStateCalcScript::GetCalcArguments ( );
__declspec(implementation_key(1355)) _bstr_t IAgVAStateCalcScript::GetInlineFunc ( );
__declspec(implementation_key(1356)) void IAgVAStateCalcScript::PutInlineFunc ( _bstr_t pVal );
__declspec(implementation_key(1357)) _bstr_t IAgVAStateCalcScript::GetUnitDimension ( );
__declspec(implementation_key(1358)) void IAgVAStateCalcScript::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(1359)) _bstr_t _IAgVAStateCalcScript::GetName ( );
__declspec(implementation_key(1360)) void _IAgVAStateCalcScript::PutName ( _bstr_t pVal );
__declspec(implementation_key(1361)) _bstr_t _IAgVAStateCalcScript::GetUserComment ( );
__declspec(implementation_key(1362)) void _IAgVAStateCalcScript::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1363)) _bstr_t _IAgVAStateCalcScript::GetDescription ( );
__declspec(implementation_key(1364)) VARIANT_BOOL _IAgVAStateCalcScript::IsReadOnly ( );
__declspec(implementation_key(1365)) IUnknownPtr _IAgVAStateCalcScript::CloneObject ( );
__declspec(implementation_key(1366)) IAgVACalcObjectCollectionPtr _IAgVAStateCalcScript::GetCalcArguments ( );
__declspec(implementation_key(1367)) _bstr_t _IAgVAStateCalcScript::GetInlineFunc ( );
__declspec(implementation_key(1368)) void _IAgVAStateCalcScript::PutInlineFunc ( _bstr_t pVal );
__declspec(implementation_key(1369)) _bstr_t _IAgVAStateCalcScript::GetUnitDimension ( );
__declspec(implementation_key(1370)) void _IAgVAStateCalcScript::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(1371)) _bstr_t _IAgVAStateCalcCd::GetName ( );
__declspec(implementation_key(1372)) void _IAgVAStateCalcCd::PutName ( _bstr_t pVal );
__declspec(implementation_key(1373)) _bstr_t _IAgVAStateCalcCd::GetUserComment ( );
__declspec(implementation_key(1374)) void _IAgVAStateCalcCd::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1375)) _bstr_t _IAgVAStateCalcCd::GetDescription ( );
__declspec(implementation_key(1376)) VARIANT_BOOL _IAgVAStateCalcCd::IsReadOnly ( );
__declspec(implementation_key(1377)) IUnknownPtr _IAgVAStateCalcCd::CloneObject ( );
__declspec(implementation_key(1378)) _bstr_t _IAgVAStateCalcCr::GetName ( );
__declspec(implementation_key(1379)) void _IAgVAStateCalcCr::PutName ( _bstr_t pVal );
__declspec(implementation_key(1380)) _bstr_t _IAgVAStateCalcCr::GetUserComment ( );
__declspec(implementation_key(1381)) void _IAgVAStateCalcCr::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1382)) _bstr_t _IAgVAStateCalcCr::GetDescription ( );
__declspec(implementation_key(1383)) VARIANT_BOOL _IAgVAStateCalcCr::IsReadOnly ( );
__declspec(implementation_key(1384)) IUnknownPtr _IAgVAStateCalcCr::CloneObject ( );
__declspec(implementation_key(1385)) _bstr_t _IAgVAStateCalcDragArea::GetName ( );
__declspec(implementation_key(1386)) void _IAgVAStateCalcDragArea::PutName ( _bstr_t pVal );
__declspec(implementation_key(1387)) _bstr_t _IAgVAStateCalcDragArea::GetUserComment ( );
__declspec(implementation_key(1388)) void _IAgVAStateCalcDragArea::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1389)) _bstr_t _IAgVAStateCalcDragArea::GetDescription ( );
__declspec(implementation_key(1390)) VARIANT_BOOL _IAgVAStateCalcDragArea::IsReadOnly ( );
__declspec(implementation_key(1391)) IUnknownPtr _IAgVAStateCalcDragArea::CloneObject ( );
__declspec(implementation_key(1392)) _bstr_t _IAgVAStateCalcRadiationPressureArea::GetName ( );
__declspec(implementation_key(1393)) void _IAgVAStateCalcRadiationPressureArea::PutName ( _bstr_t pVal );
__declspec(implementation_key(1394)) _bstr_t _IAgVAStateCalcRadiationPressureArea::GetUserComment ( );
__declspec(implementation_key(1395)) void _IAgVAStateCalcRadiationPressureArea::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1396)) _bstr_t _IAgVAStateCalcRadiationPressureArea::GetDescription ( );
__declspec(implementation_key(1397)) VARIANT_BOOL _IAgVAStateCalcRadiationPressureArea::IsReadOnly ( );
__declspec(implementation_key(1398)) IUnknownPtr _IAgVAStateCalcRadiationPressureArea::CloneObject ( );
__declspec(implementation_key(1399)) _bstr_t _IAgVAStateCalcRadiationPressureCoefficient::GetName ( );
__declspec(implementation_key(1400)) void _IAgVAStateCalcRadiationPressureCoefficient::PutName ( _bstr_t pVal );
__declspec(implementation_key(1401)) _bstr_t _IAgVAStateCalcRadiationPressureCoefficient::GetUserComment ( );
__declspec(implementation_key(1402)) void _IAgVAStateCalcRadiationPressureCoefficient::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1403)) _bstr_t _IAgVAStateCalcRadiationPressureCoefficient::GetDescription ( );
__declspec(implementation_key(1404)) VARIANT_BOOL _IAgVAStateCalcRadiationPressureCoefficient::IsReadOnly ( );
__declspec(implementation_key(1405)) IUnknownPtr _IAgVAStateCalcRadiationPressureCoefficient::CloneObject ( );
__declspec(implementation_key(1406)) _bstr_t _IAgVAStateCalcSRPArea::GetName ( );
__declspec(implementation_key(1407)) void _IAgVAStateCalcSRPArea::PutName ( _bstr_t pVal );
__declspec(implementation_key(1408)) _bstr_t _IAgVAStateCalcSRPArea::GetUserComment ( );
__declspec(implementation_key(1409)) void _IAgVAStateCalcSRPArea::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1410)) _bstr_t _IAgVAStateCalcSRPArea::GetDescription ( );
__declspec(implementation_key(1411)) VARIANT_BOOL _IAgVAStateCalcSRPArea::IsReadOnly ( );
__declspec(implementation_key(1412)) IUnknownPtr _IAgVAStateCalcSRPArea::CloneObject ( );
__declspec(implementation_key(1413)) _bstr_t IAgVAStateCalcCosOfVerticalFPA::GetCentralBodyName ( );
__declspec(implementation_key(1414)) void IAgVAStateCalcCosOfVerticalFPA::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1415)) _bstr_t _IAgVAStateCalcCosOfVerticalFPA::GetName ( );
__declspec(implementation_key(1416)) void _IAgVAStateCalcCosOfVerticalFPA::PutName ( _bstr_t pVal );
__declspec(implementation_key(1417)) _bstr_t _IAgVAStateCalcCosOfVerticalFPA::GetUserComment ( );
__declspec(implementation_key(1418)) void _IAgVAStateCalcCosOfVerticalFPA::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1419)) _bstr_t _IAgVAStateCalcCosOfVerticalFPA::GetDescription ( );
__declspec(implementation_key(1420)) VARIANT_BOOL _IAgVAStateCalcCosOfVerticalFPA::IsReadOnly ( );
__declspec(implementation_key(1421)) IUnknownPtr _IAgVAStateCalcCosOfVerticalFPA::CloneObject ( );
__declspec(implementation_key(1422)) _bstr_t _IAgVAStateCalcCosOfVerticalFPA::GetCentralBodyName ( );
__declspec(implementation_key(1423)) void _IAgVAStateCalcCosOfVerticalFPA::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1424)) _bstr_t IAgVAStateCalcDec::GetCoordSystemName ( );
__declspec(implementation_key(1425)) void IAgVAStateCalcDec::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1426)) _bstr_t _IAgVAStateCalcDec::GetName ( );
__declspec(implementation_key(1427)) void _IAgVAStateCalcDec::PutName ( _bstr_t pVal );
__declspec(implementation_key(1428)) _bstr_t _IAgVAStateCalcDec::GetUserComment ( );
__declspec(implementation_key(1429)) void _IAgVAStateCalcDec::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1430)) _bstr_t _IAgVAStateCalcDec::GetDescription ( );
__declspec(implementation_key(1431)) VARIANT_BOOL _IAgVAStateCalcDec::IsReadOnly ( );
__declspec(implementation_key(1432)) IUnknownPtr _IAgVAStateCalcDec::CloneObject ( );
__declspec(implementation_key(1433)) _bstr_t _IAgVAStateCalcDec::GetCoordSystemName ( );
__declspec(implementation_key(1434)) void _IAgVAStateCalcDec::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1435)) _bstr_t IAgVAStateCalcFPA::GetCoordSystemName ( );
__declspec(implementation_key(1436)) void IAgVAStateCalcFPA::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1437)) _bstr_t _IAgVAStateCalcFPA::GetName ( );
__declspec(implementation_key(1438)) void _IAgVAStateCalcFPA::PutName ( _bstr_t pVal );
__declspec(implementation_key(1439)) _bstr_t _IAgVAStateCalcFPA::GetUserComment ( );
__declspec(implementation_key(1440)) void _IAgVAStateCalcFPA::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1441)) _bstr_t _IAgVAStateCalcFPA::GetDescription ( );
__declspec(implementation_key(1442)) VARIANT_BOOL _IAgVAStateCalcFPA::IsReadOnly ( );
__declspec(implementation_key(1443)) IUnknownPtr _IAgVAStateCalcFPA::CloneObject ( );
__declspec(implementation_key(1444)) _bstr_t _IAgVAStateCalcFPA::GetCoordSystemName ( );
__declspec(implementation_key(1445)) void _IAgVAStateCalcFPA::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1446)) _bstr_t IAgVAStateCalcRMag::GetCoordSystemName ( );
__declspec(implementation_key(1447)) void IAgVAStateCalcRMag::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1448)) _bstr_t IAgVAStateCalcRMag::GetReferencePointName ( );
__declspec(implementation_key(1449)) void IAgVAStateCalcRMag::PutReferencePointName ( _bstr_t pVal );
__declspec(implementation_key(1450)) _bstr_t _IAgVAStateCalcRMag::GetName ( );
__declspec(implementation_key(1451)) void _IAgVAStateCalcRMag::PutName ( _bstr_t pVal );
__declspec(implementation_key(1452)) _bstr_t _IAgVAStateCalcRMag::GetUserComment ( );
__declspec(implementation_key(1453)) void _IAgVAStateCalcRMag::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1454)) _bstr_t _IAgVAStateCalcRMag::GetDescription ( );
__declspec(implementation_key(1455)) VARIANT_BOOL _IAgVAStateCalcRMag::IsReadOnly ( );
__declspec(implementation_key(1456)) IUnknownPtr _IAgVAStateCalcRMag::CloneObject ( );
__declspec(implementation_key(1457)) _bstr_t _IAgVAStateCalcRMag::GetCoordSystemName ( );
__declspec(implementation_key(1458)) void _IAgVAStateCalcRMag::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1459)) _bstr_t _IAgVAStateCalcRMag::GetReferencePointName ( );
__declspec(implementation_key(1460)) void _IAgVAStateCalcRMag::PutReferencePointName ( _bstr_t pVal );
__declspec(implementation_key(1461)) _bstr_t IAgVAStateCalcRA::GetCoordSystemName ( );
__declspec(implementation_key(1462)) void IAgVAStateCalcRA::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1463)) _bstr_t _IAgVAStateCalcRA::GetName ( );
__declspec(implementation_key(1464)) void _IAgVAStateCalcRA::PutName ( _bstr_t pVal );
__declspec(implementation_key(1465)) _bstr_t _IAgVAStateCalcRA::GetUserComment ( );
__declspec(implementation_key(1466)) void _IAgVAStateCalcRA::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1467)) _bstr_t _IAgVAStateCalcRA::GetDescription ( );
__declspec(implementation_key(1468)) VARIANT_BOOL _IAgVAStateCalcRA::IsReadOnly ( );
__declspec(implementation_key(1469)) IUnknownPtr _IAgVAStateCalcRA::CloneObject ( );
__declspec(implementation_key(1470)) _bstr_t _IAgVAStateCalcRA::GetCoordSystemName ( );
__declspec(implementation_key(1471)) void _IAgVAStateCalcRA::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1472)) _bstr_t IAgVAStateCalcVMag::GetCoordSystemName ( );
__declspec(implementation_key(1473)) void IAgVAStateCalcVMag::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1474)) _bstr_t _IAgVAStateCalcVMag::GetName ( );
__declspec(implementation_key(1475)) void _IAgVAStateCalcVMag::PutName ( _bstr_t pVal );
__declspec(implementation_key(1476)) _bstr_t _IAgVAStateCalcVMag::GetUserComment ( );
__declspec(implementation_key(1477)) void _IAgVAStateCalcVMag::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1478)) _bstr_t _IAgVAStateCalcVMag::GetDescription ( );
__declspec(implementation_key(1479)) VARIANT_BOOL _IAgVAStateCalcVMag::IsReadOnly ( );
__declspec(implementation_key(1480)) IUnknownPtr _IAgVAStateCalcVMag::CloneObject ( );
__declspec(implementation_key(1481)) _bstr_t _IAgVAStateCalcVMag::GetCoordSystemName ( );
__declspec(implementation_key(1482)) void _IAgVAStateCalcVMag::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1483)) _bstr_t IAgVAStateCalcVelAz::GetCoordSystemName ( );
__declspec(implementation_key(1484)) void IAgVAStateCalcVelAz::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1485)) _bstr_t _IAgVAStateCalcVelAz::GetName ( );
__declspec(implementation_key(1486)) void _IAgVAStateCalcVelAz::PutName ( _bstr_t pVal );
__declspec(implementation_key(1487)) _bstr_t _IAgVAStateCalcVelAz::GetUserComment ( );
__declspec(implementation_key(1488)) void _IAgVAStateCalcVelAz::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1489)) _bstr_t _IAgVAStateCalcVelAz::GetDescription ( );
__declspec(implementation_key(1490)) VARIANT_BOOL _IAgVAStateCalcVelAz::IsReadOnly ( );
__declspec(implementation_key(1491)) IUnknownPtr _IAgVAStateCalcVelAz::CloneObject ( );
__declspec(implementation_key(1492)) _bstr_t _IAgVAStateCalcVelAz::GetCoordSystemName ( );
__declspec(implementation_key(1493)) void _IAgVAStateCalcVelAz::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1494)) _bstr_t IAgVAStateCalcC3Energy::GetCentralBodyName ( );
__declspec(implementation_key(1495)) void IAgVAStateCalcC3Energy::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1496)) enum AgEVACalcObjectElem IAgVAStateCalcC3Energy::GetElementType ( );
__declspec(implementation_key(1497)) void IAgVAStateCalcC3Energy::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(1498)) _bstr_t _IAgVAStateCalcC3Energy::GetName ( );
__declspec(implementation_key(1499)) void _IAgVAStateCalcC3Energy::PutName ( _bstr_t pVal );
__declspec(implementation_key(1500)) _bstr_t _IAgVAStateCalcC3Energy::GetUserComment ( );
__declspec(implementation_key(1501)) void _IAgVAStateCalcC3Energy::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1502)) _bstr_t _IAgVAStateCalcC3Energy::GetDescription ( );
__declspec(implementation_key(1503)) VARIANT_BOOL _IAgVAStateCalcC3Energy::IsReadOnly ( );
__declspec(implementation_key(1504)) IUnknownPtr _IAgVAStateCalcC3Energy::CloneObject ( );
__declspec(implementation_key(1505)) _bstr_t _IAgVAStateCalcC3Energy::GetCentralBodyName ( );
__declspec(implementation_key(1506)) void _IAgVAStateCalcC3Energy::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1507)) enum AgEVACalcObjectElem _IAgVAStateCalcC3Energy::GetElementType ( );
__declspec(implementation_key(1508)) void _IAgVAStateCalcC3Energy::PutElementType ( enum AgEVACalcObjectElem pVal );
__declspec(implementation_key(1509)) _bstr_t IAgVAStateCalcInAsympDec::GetCoordSystemName ( );
__declspec(implementation_key(1510)) void IAgVAStateCalcInAsympDec::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1511)) _bstr_t _IAgVAStateCalcInAsympDec::GetName ( );
__declspec(implementation_key(1512)) void _IAgVAStateCalcInAsympDec::PutName ( _bstr_t pVal );
__declspec(implementation_key(1513)) _bstr_t _IAgVAStateCalcInAsympDec::GetUserComment ( );
__declspec(implementation_key(1514)) void _IAgVAStateCalcInAsympDec::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1515)) _bstr_t _IAgVAStateCalcInAsympDec::GetDescription ( );
__declspec(implementation_key(1516)) VARIANT_BOOL _IAgVAStateCalcInAsympDec::IsReadOnly ( );
__declspec(implementation_key(1517)) IUnknownPtr _IAgVAStateCalcInAsympDec::CloneObject ( );
__declspec(implementation_key(1518)) _bstr_t _IAgVAStateCalcInAsympDec::GetCoordSystemName ( );
__declspec(implementation_key(1519)) void _IAgVAStateCalcInAsympDec::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1520)) _bstr_t IAgVAStateCalcInAsympRA::GetCoordSystemName ( );
__declspec(implementation_key(1521)) void IAgVAStateCalcInAsympRA::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1522)) _bstr_t _IAgVAStateCalcInAsympRA::GetName ( );
__declspec(implementation_key(1523)) void _IAgVAStateCalcInAsympRA::PutName ( _bstr_t pVal );
__declspec(implementation_key(1524)) _bstr_t _IAgVAStateCalcInAsympRA::GetUserComment ( );
__declspec(implementation_key(1525)) void _IAgVAStateCalcInAsympRA::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1526)) _bstr_t _IAgVAStateCalcInAsympRA::GetDescription ( );
__declspec(implementation_key(1527)) VARIANT_BOOL _IAgVAStateCalcInAsympRA::IsReadOnly ( );
__declspec(implementation_key(1528)) IUnknownPtr _IAgVAStateCalcInAsympRA::CloneObject ( );
__declspec(implementation_key(1529)) _bstr_t _IAgVAStateCalcInAsympRA::GetCoordSystemName ( );
__declspec(implementation_key(1530)) void _IAgVAStateCalcInAsympRA::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1531)) _bstr_t IAgVAStateCalcInVelAzAtPeriapsis::GetCoordSystemName ( );
__declspec(implementation_key(1532)) void IAgVAStateCalcInVelAzAtPeriapsis::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1533)) _bstr_t _IAgVAStateCalcInVelAzAtPeriapsis::GetName ( );
__declspec(implementation_key(1534)) void _IAgVAStateCalcInVelAzAtPeriapsis::PutName ( _bstr_t pVal );
__declspec(implementation_key(1535)) _bstr_t _IAgVAStateCalcInVelAzAtPeriapsis::GetUserComment ( );
__declspec(implementation_key(1536)) void _IAgVAStateCalcInVelAzAtPeriapsis::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1537)) _bstr_t _IAgVAStateCalcInVelAzAtPeriapsis::GetDescription ( );
__declspec(implementation_key(1538)) VARIANT_BOOL _IAgVAStateCalcInVelAzAtPeriapsis::IsReadOnly ( );
__declspec(implementation_key(1539)) IUnknownPtr _IAgVAStateCalcInVelAzAtPeriapsis::CloneObject ( );
__declspec(implementation_key(1540)) _bstr_t _IAgVAStateCalcInVelAzAtPeriapsis::GetCoordSystemName ( );
__declspec(implementation_key(1541)) void _IAgVAStateCalcInVelAzAtPeriapsis::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1542)) _bstr_t IAgVAStateCalcOutAsympDec::GetCoordSystemName ( );
__declspec(implementation_key(1543)) void IAgVAStateCalcOutAsympDec::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1544)) _bstr_t _IAgVAStateCalcOutAsympDec::GetName ( );
__declspec(implementation_key(1545)) void _IAgVAStateCalcOutAsympDec::PutName ( _bstr_t pVal );
__declspec(implementation_key(1546)) _bstr_t _IAgVAStateCalcOutAsympDec::GetUserComment ( );
__declspec(implementation_key(1547)) void _IAgVAStateCalcOutAsympDec::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1548)) _bstr_t _IAgVAStateCalcOutAsympDec::GetDescription ( );
__declspec(implementation_key(1549)) VARIANT_BOOL _IAgVAStateCalcOutAsympDec::IsReadOnly ( );
__declspec(implementation_key(1550)) IUnknownPtr _IAgVAStateCalcOutAsympDec::CloneObject ( );
__declspec(implementation_key(1551)) _bstr_t _IAgVAStateCalcOutAsympDec::GetCoordSystemName ( );
__declspec(implementation_key(1552)) void _IAgVAStateCalcOutAsympDec::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1553)) _bstr_t IAgVAStateCalcOutAsympRA::GetCoordSystemName ( );
__declspec(implementation_key(1554)) void IAgVAStateCalcOutAsympRA::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1555)) _bstr_t _IAgVAStateCalcOutAsympRA::GetName ( );
__declspec(implementation_key(1556)) void _IAgVAStateCalcOutAsympRA::PutName ( _bstr_t pVal );
__declspec(implementation_key(1557)) _bstr_t _IAgVAStateCalcOutAsympRA::GetUserComment ( );
__declspec(implementation_key(1558)) void _IAgVAStateCalcOutAsympRA::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1559)) _bstr_t _IAgVAStateCalcOutAsympRA::GetDescription ( );
__declspec(implementation_key(1560)) VARIANT_BOOL _IAgVAStateCalcOutAsympRA::IsReadOnly ( );
__declspec(implementation_key(1561)) IUnknownPtr _IAgVAStateCalcOutAsympRA::CloneObject ( );
__declspec(implementation_key(1562)) _bstr_t _IAgVAStateCalcOutAsympRA::GetCoordSystemName ( );
__declspec(implementation_key(1563)) void _IAgVAStateCalcOutAsympRA::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1564)) _bstr_t IAgVAStateCalcOutVelAzAtPeriapsis::GetCoordSystemName ( );
__declspec(implementation_key(1565)) void IAgVAStateCalcOutVelAzAtPeriapsis::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1566)) _bstr_t _IAgVAStateCalcOutVelAzAtPeriapsis::GetName ( );
__declspec(implementation_key(1567)) void _IAgVAStateCalcOutVelAzAtPeriapsis::PutName ( _bstr_t pVal );
__declspec(implementation_key(1568)) _bstr_t _IAgVAStateCalcOutVelAzAtPeriapsis::GetUserComment ( );
__declspec(implementation_key(1569)) void _IAgVAStateCalcOutVelAzAtPeriapsis::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1570)) _bstr_t _IAgVAStateCalcOutVelAzAtPeriapsis::GetDescription ( );
__declspec(implementation_key(1571)) VARIANT_BOOL _IAgVAStateCalcOutVelAzAtPeriapsis::IsReadOnly ( );
__declspec(implementation_key(1572)) IUnknownPtr _IAgVAStateCalcOutVelAzAtPeriapsis::CloneObject ( );
__declspec(implementation_key(1573)) _bstr_t _IAgVAStateCalcOutVelAzAtPeriapsis::GetCoordSystemName ( );
__declspec(implementation_key(1574)) void _IAgVAStateCalcOutVelAzAtPeriapsis::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1575)) _bstr_t _IAgVAStateCalcDuration::GetName ( );
__declspec(implementation_key(1576)) void _IAgVAStateCalcDuration::PutName ( _bstr_t pVal );
__declspec(implementation_key(1577)) _bstr_t _IAgVAStateCalcDuration::GetUserComment ( );
__declspec(implementation_key(1578)) void _IAgVAStateCalcDuration::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1579)) _bstr_t _IAgVAStateCalcDuration::GetDescription ( );
__declspec(implementation_key(1580)) VARIANT_BOOL _IAgVAStateCalcDuration::IsReadOnly ( );
__declspec(implementation_key(1581)) IUnknownPtr _IAgVAStateCalcDuration::CloneObject ( );
__declspec(implementation_key(1582)) _bstr_t IAgVAStateCalcUserValue::GetVariableName ( );
__declspec(implementation_key(1583)) void IAgVAStateCalcUserValue::PutVariableName ( _bstr_t pVal );
__declspec(implementation_key(1584)) _bstr_t _IAgVAStateCalcUserValue::GetName ( );
__declspec(implementation_key(1585)) void _IAgVAStateCalcUserValue::PutName ( _bstr_t pVal );
__declspec(implementation_key(1586)) _bstr_t _IAgVAStateCalcUserValue::GetUserComment ( );
__declspec(implementation_key(1587)) void _IAgVAStateCalcUserValue::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1588)) _bstr_t _IAgVAStateCalcUserValue::GetDescription ( );
__declspec(implementation_key(1589)) VARIANT_BOOL _IAgVAStateCalcUserValue::IsReadOnly ( );
__declspec(implementation_key(1590)) IUnknownPtr _IAgVAStateCalcUserValue::CloneObject ( );
__declspec(implementation_key(1591)) _bstr_t _IAgVAStateCalcUserValue::GetVariableName ( );
__declspec(implementation_key(1592)) void _IAgVAStateCalcUserValue::PutVariableName ( _bstr_t pVal );
__declspec(implementation_key(1593)) _bstr_t IAgVAStateCalcCrdnAngle::GetAngleName ( );
__declspec(implementation_key(1594)) void IAgVAStateCalcCrdnAngle::PutAngleName ( _bstr_t pVal );
__declspec(implementation_key(1595)) _bstr_t _IAgVAStateCalcCrdnAngle::GetName ( );
__declspec(implementation_key(1596)) void _IAgVAStateCalcCrdnAngle::PutName ( _bstr_t pVal );
__declspec(implementation_key(1597)) _bstr_t _IAgVAStateCalcCrdnAngle::GetUserComment ( );
__declspec(implementation_key(1598)) void _IAgVAStateCalcCrdnAngle::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1599)) _bstr_t _IAgVAStateCalcCrdnAngle::GetDescription ( );
__declspec(implementation_key(1600)) VARIANT_BOOL _IAgVAStateCalcCrdnAngle::IsReadOnly ( );
__declspec(implementation_key(1601)) IUnknownPtr _IAgVAStateCalcCrdnAngle::CloneObject ( );
__declspec(implementation_key(1602)) _bstr_t _IAgVAStateCalcCrdnAngle::GetAngleName ( );
__declspec(implementation_key(1603)) void _IAgVAStateCalcCrdnAngle::PutAngleName ( _bstr_t pVal );
__declspec(implementation_key(1604)) _bstr_t IAgVAStateCalcAngle::GetVector1Name ( );
__declspec(implementation_key(1605)) void IAgVAStateCalcAngle::PutVector1Name ( _bstr_t pVal );
__declspec(implementation_key(1606)) _bstr_t IAgVAStateCalcAngle::GetVector2Name ( );
__declspec(implementation_key(1607)) void IAgVAStateCalcAngle::PutVector2Name ( _bstr_t pVal );
__declspec(implementation_key(1608)) _bstr_t _IAgVAStateCalcAngle::GetName ( );
__declspec(implementation_key(1609)) void _IAgVAStateCalcAngle::PutName ( _bstr_t pVal );
__declspec(implementation_key(1610)) _bstr_t _IAgVAStateCalcAngle::GetUserComment ( );
__declspec(implementation_key(1611)) void _IAgVAStateCalcAngle::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1612)) _bstr_t _IAgVAStateCalcAngle::GetDescription ( );
__declspec(implementation_key(1613)) VARIANT_BOOL _IAgVAStateCalcAngle::IsReadOnly ( );
__declspec(implementation_key(1614)) IUnknownPtr _IAgVAStateCalcAngle::CloneObject ( );
__declspec(implementation_key(1615)) _bstr_t _IAgVAStateCalcAngle::GetVector1Name ( );
__declspec(implementation_key(1616)) void _IAgVAStateCalcAngle::PutVector1Name ( _bstr_t pVal );
__declspec(implementation_key(1617)) _bstr_t _IAgVAStateCalcAngle::GetVector2Name ( );
__declspec(implementation_key(1618)) void _IAgVAStateCalcAngle::PutVector2Name ( _bstr_t pVal );
__declspec(implementation_key(1619)) _bstr_t IAgVAStateCalcDotProduct::GetVector1Name ( );
__declspec(implementation_key(1620)) void IAgVAStateCalcDotProduct::PutVector1Name ( _bstr_t pVal );
__declspec(implementation_key(1621)) _bstr_t IAgVAStateCalcDotProduct::GetVector2Name ( );
__declspec(implementation_key(1622)) void IAgVAStateCalcDotProduct::PutVector2Name ( _bstr_t pVal );
__declspec(implementation_key(1623)) _bstr_t _IAgVAStateCalcDotProduct::GetName ( );
__declspec(implementation_key(1624)) void _IAgVAStateCalcDotProduct::PutName ( _bstr_t pVal );
__declspec(implementation_key(1625)) _bstr_t _IAgVAStateCalcDotProduct::GetUserComment ( );
__declspec(implementation_key(1626)) void _IAgVAStateCalcDotProduct::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1627)) _bstr_t _IAgVAStateCalcDotProduct::GetDescription ( );
__declspec(implementation_key(1628)) VARIANT_BOOL _IAgVAStateCalcDotProduct::IsReadOnly ( );
__declspec(implementation_key(1629)) IUnknownPtr _IAgVAStateCalcDotProduct::CloneObject ( );
__declspec(implementation_key(1630)) _bstr_t _IAgVAStateCalcDotProduct::GetVector1Name ( );
__declspec(implementation_key(1631)) void _IAgVAStateCalcDotProduct::PutVector1Name ( _bstr_t pVal );
__declspec(implementation_key(1632)) _bstr_t _IAgVAStateCalcDotProduct::GetVector2Name ( );
__declspec(implementation_key(1633)) void _IAgVAStateCalcDotProduct::PutVector2Name ( _bstr_t pVal );
__declspec(implementation_key(1634)) _bstr_t IAgVAStateCalcVectorDec::GetCoordAxesName ( );
__declspec(implementation_key(1635)) void IAgVAStateCalcVectorDec::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(1636)) _bstr_t IAgVAStateCalcVectorDec::GetVectorName ( );
__declspec(implementation_key(1637)) void IAgVAStateCalcVectorDec::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(1638)) _bstr_t _IAgVAStateCalcVectorDec::GetName ( );
__declspec(implementation_key(1639)) void _IAgVAStateCalcVectorDec::PutName ( _bstr_t pVal );
__declspec(implementation_key(1640)) _bstr_t _IAgVAStateCalcVectorDec::GetUserComment ( );
__declspec(implementation_key(1641)) void _IAgVAStateCalcVectorDec::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1642)) _bstr_t _IAgVAStateCalcVectorDec::GetDescription ( );
__declspec(implementation_key(1643)) VARIANT_BOOL _IAgVAStateCalcVectorDec::IsReadOnly ( );
__declspec(implementation_key(1644)) IUnknownPtr _IAgVAStateCalcVectorDec::CloneObject ( );
__declspec(implementation_key(1645)) _bstr_t _IAgVAStateCalcVectorDec::GetCoordAxesName ( );
__declspec(implementation_key(1646)) void _IAgVAStateCalcVectorDec::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(1647)) _bstr_t _IAgVAStateCalcVectorDec::GetVectorName ( );
__declspec(implementation_key(1648)) void _IAgVAStateCalcVectorDec::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(1649)) _bstr_t IAgVAStateCalcVectorMag::GetVectorName ( );
__declspec(implementation_key(1650)) void IAgVAStateCalcVectorMag::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(1651)) _bstr_t IAgVAStateCalcVectorMag::GetUnitDimension ( );
__declspec(implementation_key(1652)) void IAgVAStateCalcVectorMag::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(1653)) _bstr_t _IAgVAStateCalcVectorMag::GetName ( );
__declspec(implementation_key(1654)) void _IAgVAStateCalcVectorMag::PutName ( _bstr_t pVal );
__declspec(implementation_key(1655)) _bstr_t _IAgVAStateCalcVectorMag::GetUserComment ( );
__declspec(implementation_key(1656)) void _IAgVAStateCalcVectorMag::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1657)) _bstr_t _IAgVAStateCalcVectorMag::GetDescription ( );
__declspec(implementation_key(1658)) VARIANT_BOOL _IAgVAStateCalcVectorMag::IsReadOnly ( );
__declspec(implementation_key(1659)) IUnknownPtr _IAgVAStateCalcVectorMag::CloneObject ( );
__declspec(implementation_key(1660)) _bstr_t _IAgVAStateCalcVectorMag::GetVectorName ( );
__declspec(implementation_key(1661)) void _IAgVAStateCalcVectorMag::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(1662)) _bstr_t _IAgVAStateCalcVectorMag::GetUnitDimension ( );
__declspec(implementation_key(1663)) void _IAgVAStateCalcVectorMag::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(1664)) _bstr_t IAgVAStateCalcVectorRA::GetCoordAxesName ( );
__declspec(implementation_key(1665)) void IAgVAStateCalcVectorRA::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(1666)) _bstr_t IAgVAStateCalcVectorRA::GetVectorName ( );
__declspec(implementation_key(1667)) void IAgVAStateCalcVectorRA::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(1668)) _bstr_t _IAgVAStateCalcVectorRA::GetName ( );
__declspec(implementation_key(1669)) void _IAgVAStateCalcVectorRA::PutName ( _bstr_t pVal );
__declspec(implementation_key(1670)) _bstr_t _IAgVAStateCalcVectorRA::GetUserComment ( );
__declspec(implementation_key(1671)) void _IAgVAStateCalcVectorRA::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1672)) _bstr_t _IAgVAStateCalcVectorRA::GetDescription ( );
__declspec(implementation_key(1673)) VARIANT_BOOL _IAgVAStateCalcVectorRA::IsReadOnly ( );
__declspec(implementation_key(1674)) IUnknownPtr _IAgVAStateCalcVectorRA::CloneObject ( );
__declspec(implementation_key(1675)) _bstr_t _IAgVAStateCalcVectorRA::GetCoordAxesName ( );
__declspec(implementation_key(1676)) void _IAgVAStateCalcVectorRA::PutCoordAxesName ( _bstr_t pVal );
__declspec(implementation_key(1677)) _bstr_t _IAgVAStateCalcVectorRA::GetVectorName ( );
__declspec(implementation_key(1678)) void _IAgVAStateCalcVectorRA::PutVectorName ( _bstr_t pVal );
__declspec(implementation_key(1679)) enum STKObjects::AgEAberrationType IAgVAStateCalcOnePtAccess::GetAberrationType ( );
__declspec(implementation_key(1680)) void IAgVAStateCalcOnePtAccess::PutAberrationType ( enum STKObjects::AgEAberrationType pVal );
__declspec(implementation_key(1681)) HRESULT IAgVAStateCalcOnePtAccess::SetBaseSelection ( enum AgEVABaseSelection Selection );
__declspec(implementation_key(1682)) enum AgEVABaseSelection IAgVAStateCalcOnePtAccess::GetBaseSelectionType ( );
__declspec(implementation_key(1683)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcOnePtAccess::GetBaseSelection ( );
__declspec(implementation_key(1684)) enum STKObjects::AgEIvClockHost IAgVAStateCalcOnePtAccess::GetClockHost ( );
__declspec(implementation_key(1685)) void IAgVAStateCalcOnePtAccess::PutClockHost ( enum STKObjects::AgEIvClockHost pVal );
__declspec(implementation_key(1686)) enum STKObjects::AgEIvTimeSense IAgVAStateCalcOnePtAccess::GetSignalSense ( );
__declspec(implementation_key(1687)) void IAgVAStateCalcOnePtAccess::PutSignalSense ( enum STKObjects::AgEIvTimeSense pVal );
__declspec(implementation_key(1688)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcOnePtAccess::GetTargetObject ( );
__declspec(implementation_key(1689)) double IAgVAStateCalcOnePtAccess::GetTimeDelayConvergenceTolerance ( );
__declspec(implementation_key(1690)) void IAgVAStateCalcOnePtAccess::PutTimeDelayConvergenceTolerance ( double pVal );
__declspec(implementation_key(1691)) VARIANT_BOOL IAgVAStateCalcOnePtAccess::GetUseLightTimeDelay ( );
__declspec(implementation_key(1692)) void IAgVAStateCalcOnePtAccess::PutUseLightTimeDelay ( VARIANT_BOOL pVal );
__declspec(implementation_key(1693)) _bstr_t _IAgVAStateCalcOnePtAccess::GetName ( );
__declspec(implementation_key(1694)) void _IAgVAStateCalcOnePtAccess::PutName ( _bstr_t pVal );
__declspec(implementation_key(1695)) _bstr_t _IAgVAStateCalcOnePtAccess::GetUserComment ( );
__declspec(implementation_key(1696)) void _IAgVAStateCalcOnePtAccess::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1697)) _bstr_t _IAgVAStateCalcOnePtAccess::GetDescription ( );
__declspec(implementation_key(1698)) VARIANT_BOOL _IAgVAStateCalcOnePtAccess::IsReadOnly ( );
__declspec(implementation_key(1699)) IUnknownPtr _IAgVAStateCalcOnePtAccess::CloneObject ( );
__declspec(implementation_key(1700)) enum STKObjects::AgEAberrationType _IAgVAStateCalcOnePtAccess::GetAberrationType ( );
__declspec(implementation_key(1701)) void _IAgVAStateCalcOnePtAccess::PutAberrationType ( enum STKObjects::AgEAberrationType pVal );
__declspec(implementation_key(1702)) HRESULT _IAgVAStateCalcOnePtAccess::SetBaseSelection ( enum AgEVABaseSelection Selection );
__declspec(implementation_key(1703)) enum AgEVABaseSelection _IAgVAStateCalcOnePtAccess::GetBaseSelectionType ( );
__declspec(implementation_key(1704)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcOnePtAccess::GetBaseSelection ( );
__declspec(implementation_key(1705)) enum STKObjects::AgEIvClockHost _IAgVAStateCalcOnePtAccess::GetClockHost ( );
__declspec(implementation_key(1706)) void _IAgVAStateCalcOnePtAccess::PutClockHost ( enum STKObjects::AgEIvClockHost pVal );
__declspec(implementation_key(1707)) enum STKObjects::AgEIvTimeSense _IAgVAStateCalcOnePtAccess::GetSignalSense ( );
__declspec(implementation_key(1708)) void _IAgVAStateCalcOnePtAccess::PutSignalSense ( enum STKObjects::AgEIvTimeSense pVal );
__declspec(implementation_key(1709)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcOnePtAccess::GetTargetObject ( );
__declspec(implementation_key(1710)) double _IAgVAStateCalcOnePtAccess::GetTimeDelayConvergenceTolerance ( );
__declspec(implementation_key(1711)) void _IAgVAStateCalcOnePtAccess::PutTimeDelayConvergenceTolerance ( double pVal );
__declspec(implementation_key(1712)) VARIANT_BOOL _IAgVAStateCalcOnePtAccess::GetUseLightTimeDelay ( );
__declspec(implementation_key(1713)) void _IAgVAStateCalcOnePtAccess::PutUseLightTimeDelay ( VARIANT_BOOL pVal );
__declspec(implementation_key(1714)) _bstr_t IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetCalcObjectName ( );
__declspec(implementation_key(1715)) void IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1716)) _bstr_t IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetOtherSegmentName ( );
__declspec(implementation_key(1717)) void IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(1718)) enum AgEVASegmentState IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetSegmentStateToUse ( );
__declspec(implementation_key(1719)) void IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(1720)) enum AgEVASegmentDifferenceOrder IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetDifferenceOrder ( );
__declspec(implementation_key(1721)) void IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::PutDifferenceOrder ( enum AgEVASegmentDifferenceOrder pVal );
__declspec(implementation_key(1722)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetReferenceSat ( );
__declspec(implementation_key(1723)) _bstr_t _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetName ( );
__declspec(implementation_key(1724)) void _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::PutName ( _bstr_t pVal );
__declspec(implementation_key(1725)) _bstr_t _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetUserComment ( );
__declspec(implementation_key(1726)) void _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1727)) _bstr_t _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetDescription ( );
__declspec(implementation_key(1728)) VARIANT_BOOL _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::IsReadOnly ( );
__declspec(implementation_key(1729)) IUnknownPtr _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::CloneObject ( );
__declspec(implementation_key(1730)) _bstr_t _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetCalcObjectName ( );
__declspec(implementation_key(1731)) void _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1732)) _bstr_t _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetOtherSegmentName ( );
__declspec(implementation_key(1733)) void _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(1734)) enum AgEVASegmentState _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetSegmentStateToUse ( );
__declspec(implementation_key(1735)) void _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(1736)) enum AgEVASegmentDifferenceOrder _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetDifferenceOrder ( );
__declspec(implementation_key(1737)) void _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::PutDifferenceOrder ( enum AgEVASegmentDifferenceOrder pVal );
__declspec(implementation_key(1738)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcDifferenceAcrossSegmentsOtherSat::GetReferenceSat ( );
__declspec(implementation_key(1739)) _bstr_t IAgVAStateCalcValueAtSegmentOtherSat::GetCalcObjectName ( );
__declspec(implementation_key(1740)) void IAgVAStateCalcValueAtSegmentOtherSat::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1741)) _bstr_t IAgVAStateCalcValueAtSegmentOtherSat::GetOtherSegmentName ( );
__declspec(implementation_key(1742)) void IAgVAStateCalcValueAtSegmentOtherSat::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(1743)) enum AgEVASegmentState IAgVAStateCalcValueAtSegmentOtherSat::GetSegmentStateToUse ( );
__declspec(implementation_key(1744)) void IAgVAStateCalcValueAtSegmentOtherSat::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(1745)) STKObjects::IAgLinkToObjectPtr IAgVAStateCalcValueAtSegmentOtherSat::GetReferenceSat ( );
__declspec(implementation_key(1746)) _bstr_t _IAgVAStateCalcValueAtSegmentOtherSat::GetName ( );
__declspec(implementation_key(1747)) void _IAgVAStateCalcValueAtSegmentOtherSat::PutName ( _bstr_t pVal );
__declspec(implementation_key(1748)) _bstr_t _IAgVAStateCalcValueAtSegmentOtherSat::GetUserComment ( );
__declspec(implementation_key(1749)) void _IAgVAStateCalcValueAtSegmentOtherSat::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1750)) _bstr_t _IAgVAStateCalcValueAtSegmentOtherSat::GetDescription ( );
__declspec(implementation_key(1751)) VARIANT_BOOL _IAgVAStateCalcValueAtSegmentOtherSat::IsReadOnly ( );
__declspec(implementation_key(1752)) IUnknownPtr _IAgVAStateCalcValueAtSegmentOtherSat::CloneObject ( );
__declspec(implementation_key(1753)) _bstr_t _IAgVAStateCalcValueAtSegmentOtherSat::GetCalcObjectName ( );
__declspec(implementation_key(1754)) void _IAgVAStateCalcValueAtSegmentOtherSat::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(1755)) _bstr_t _IAgVAStateCalcValueAtSegmentOtherSat::GetOtherSegmentName ( );
__declspec(implementation_key(1756)) void _IAgVAStateCalcValueAtSegmentOtherSat::PutOtherSegmentName ( _bstr_t pVal );
__declspec(implementation_key(1757)) enum AgEVASegmentState _IAgVAStateCalcValueAtSegmentOtherSat::GetSegmentStateToUse ( );
__declspec(implementation_key(1758)) void _IAgVAStateCalcValueAtSegmentOtherSat::PutSegmentStateToUse ( enum AgEVASegmentState pVal );
__declspec(implementation_key(1759)) STKObjects::IAgLinkToObjectPtr _IAgVAStateCalcValueAtSegmentOtherSat::GetReferenceSat ( );
__declspec(implementation_key(1760)) _bstr_t IAgVAStateCalcRARate::GetCoordSystemName ( );
__declspec(implementation_key(1761)) void IAgVAStateCalcRARate::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1762)) _bstr_t _IAgVAStateCalcRARate::GetName ( );
__declspec(implementation_key(1763)) void _IAgVAStateCalcRARate::PutName ( _bstr_t pVal );
__declspec(implementation_key(1764)) _bstr_t _IAgVAStateCalcRARate::GetUserComment ( );
__declspec(implementation_key(1765)) void _IAgVAStateCalcRARate::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1766)) _bstr_t _IAgVAStateCalcRARate::GetDescription ( );
__declspec(implementation_key(1767)) VARIANT_BOOL _IAgVAStateCalcRARate::IsReadOnly ( );
__declspec(implementation_key(1768)) IUnknownPtr _IAgVAStateCalcRARate::CloneObject ( );
__declspec(implementation_key(1769)) _bstr_t _IAgVAStateCalcRARate::GetCoordSystemName ( );
__declspec(implementation_key(1770)) void _IAgVAStateCalcRARate::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1771)) _bstr_t IAgVAStateCalcDecRate::GetCoordSystemName ( );
__declspec(implementation_key(1772)) void IAgVAStateCalcDecRate::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1773)) _bstr_t _IAgVAStateCalcDecRate::GetName ( );
__declspec(implementation_key(1774)) void _IAgVAStateCalcDecRate::PutName ( _bstr_t pVal );
__declspec(implementation_key(1775)) _bstr_t _IAgVAStateCalcDecRate::GetUserComment ( );
__declspec(implementation_key(1776)) void _IAgVAStateCalcDecRate::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1777)) _bstr_t _IAgVAStateCalcDecRate::GetDescription ( );
__declspec(implementation_key(1778)) VARIANT_BOOL _IAgVAStateCalcDecRate::IsReadOnly ( );
__declspec(implementation_key(1779)) IUnknownPtr _IAgVAStateCalcDecRate::CloneObject ( );
__declspec(implementation_key(1780)) _bstr_t _IAgVAStateCalcDecRate::GetCoordSystemName ( );
__declspec(implementation_key(1781)) void _IAgVAStateCalcDecRate::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(1782)) _bstr_t IAgVAStateCalcGravitationalParameter::GetCentralBodyName ( );
__declspec(implementation_key(1783)) void IAgVAStateCalcGravitationalParameter::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1784)) enum AgEVAGravitationalParameterSource IAgVAStateCalcGravitationalParameter::GetGravSource ( );
__declspec(implementation_key(1785)) void IAgVAStateCalcGravitationalParameter::PutGravSource ( enum AgEVAGravitationalParameterSource pVal );
__declspec(implementation_key(1786)) _bstr_t IAgVAStateCalcGravitationalParameter::GetGravityFilename ( );
__declspec(implementation_key(1787)) void IAgVAStateCalcGravitationalParameter::PutGravityFilename ( _bstr_t pVal );
__declspec(implementation_key(1788)) _bstr_t _IAgVAStateCalcGravitationalParameter::GetName ( );
__declspec(implementation_key(1789)) void _IAgVAStateCalcGravitationalParameter::PutName ( _bstr_t pVal );
__declspec(implementation_key(1790)) _bstr_t _IAgVAStateCalcGravitationalParameter::GetUserComment ( );
__declspec(implementation_key(1791)) void _IAgVAStateCalcGravitationalParameter::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1792)) _bstr_t _IAgVAStateCalcGravitationalParameter::GetDescription ( );
__declspec(implementation_key(1793)) VARIANT_BOOL _IAgVAStateCalcGravitationalParameter::IsReadOnly ( );
__declspec(implementation_key(1794)) IUnknownPtr _IAgVAStateCalcGravitationalParameter::CloneObject ( );
__declspec(implementation_key(1795)) _bstr_t _IAgVAStateCalcGravitationalParameter::GetCentralBodyName ( );
__declspec(implementation_key(1796)) void _IAgVAStateCalcGravitationalParameter::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1797)) enum AgEVAGravitationalParameterSource _IAgVAStateCalcGravitationalParameter::GetGravSource ( );
__declspec(implementation_key(1798)) void _IAgVAStateCalcGravitationalParameter::PutGravSource ( enum AgEVAGravitationalParameterSource pVal );
__declspec(implementation_key(1799)) _bstr_t _IAgVAStateCalcGravitationalParameter::GetGravityFilename ( );
__declspec(implementation_key(1800)) void _IAgVAStateCalcGravitationalParameter::PutGravityFilename ( _bstr_t pVal );
__declspec(implementation_key(1801)) _bstr_t IAgVAStateCalcReferenceRadius::GetCentralBodyName ( );
__declspec(implementation_key(1802)) void IAgVAStateCalcReferenceRadius::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1803)) enum AgEVAReferenceRadiusSource IAgVAStateCalcReferenceRadius::GetReferenceRadiusSource ( );
__declspec(implementation_key(1804)) void IAgVAStateCalcReferenceRadius::PutReferenceRadiusSource ( enum AgEVAReferenceRadiusSource pVal );
__declspec(implementation_key(1805)) _bstr_t IAgVAStateCalcReferenceRadius::GetGravityFilename ( );
__declspec(implementation_key(1806)) void IAgVAStateCalcReferenceRadius::PutGravityFilename ( _bstr_t pVal );
__declspec(implementation_key(1807)) _bstr_t _IAgVAStateCalcReferenceRadius::GetName ( );
__declspec(implementation_key(1808)) void _IAgVAStateCalcReferenceRadius::PutName ( _bstr_t pVal );
__declspec(implementation_key(1809)) _bstr_t _IAgVAStateCalcReferenceRadius::GetUserComment ( );
__declspec(implementation_key(1810)) void _IAgVAStateCalcReferenceRadius::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1811)) _bstr_t _IAgVAStateCalcReferenceRadius::GetDescription ( );
__declspec(implementation_key(1812)) VARIANT_BOOL _IAgVAStateCalcReferenceRadius::IsReadOnly ( );
__declspec(implementation_key(1813)) IUnknownPtr _IAgVAStateCalcReferenceRadius::CloneObject ( );
__declspec(implementation_key(1814)) _bstr_t _IAgVAStateCalcReferenceRadius::GetCentralBodyName ( );
__declspec(implementation_key(1815)) void _IAgVAStateCalcReferenceRadius::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1816)) enum AgEVAReferenceRadiusSource _IAgVAStateCalcReferenceRadius::GetReferenceRadiusSource ( );
__declspec(implementation_key(1817)) void _IAgVAStateCalcReferenceRadius::PutReferenceRadiusSource ( enum AgEVAReferenceRadiusSource pVal );
__declspec(implementation_key(1818)) _bstr_t _IAgVAStateCalcReferenceRadius::GetGravityFilename ( );
__declspec(implementation_key(1819)) void _IAgVAStateCalcReferenceRadius::PutGravityFilename ( _bstr_t pVal );
__declspec(implementation_key(1820)) _bstr_t IAgVAStateCalcGravCoeff::GetCentralBodyName ( );
__declspec(implementation_key(1821)) void IAgVAStateCalcGravCoeff::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1822)) _bstr_t IAgVAStateCalcGravCoeff::GetGravityFilename ( );
__declspec(implementation_key(1823)) void IAgVAStateCalcGravCoeff::PutGravityFilename ( _bstr_t pVal );
__declspec(implementation_key(1824)) enum AgEVAGravCoeffCoefficientType IAgVAStateCalcGravCoeff::GetCoefficientType ( );
__declspec(implementation_key(1825)) void IAgVAStateCalcGravCoeff::PutCoefficientType ( enum AgEVAGravCoeffCoefficientType pVal );
__declspec(implementation_key(1826)) int IAgVAStateCalcGravCoeff::GetDegree ( );
__declspec(implementation_key(1827)) void IAgVAStateCalcGravCoeff::PutDegree ( int pVal );
__declspec(implementation_key(1828)) int IAgVAStateCalcGravCoeff::GetOrder ( );
__declspec(implementation_key(1829)) void IAgVAStateCalcGravCoeff::PutOrder ( int pVal );
__declspec(implementation_key(1830)) enum AgEVAGravCoeffNormalizationType IAgVAStateCalcGravCoeff::GetNormalizationType ( );
__declspec(implementation_key(1831)) void IAgVAStateCalcGravCoeff::PutNormalizationType ( enum AgEVAGravCoeffNormalizationType pVal );
__declspec(implementation_key(1832)) _bstr_t _IAgVAStateCalcGravCoeff::GetName ( );
__declspec(implementation_key(1833)) void _IAgVAStateCalcGravCoeff::PutName ( _bstr_t pVal );
__declspec(implementation_key(1834)) _bstr_t _IAgVAStateCalcGravCoeff::GetUserComment ( );
__declspec(implementation_key(1835)) void _IAgVAStateCalcGravCoeff::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1836)) _bstr_t _IAgVAStateCalcGravCoeff::GetDescription ( );
__declspec(implementation_key(1837)) VARIANT_BOOL _IAgVAStateCalcGravCoeff::IsReadOnly ( );
__declspec(implementation_key(1838)) IUnknownPtr _IAgVAStateCalcGravCoeff::CloneObject ( );
__declspec(implementation_key(1839)) _bstr_t _IAgVAStateCalcGravCoeff::GetCentralBodyName ( );
__declspec(implementation_key(1840)) void _IAgVAStateCalcGravCoeff::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1841)) _bstr_t _IAgVAStateCalcGravCoeff::GetGravityFilename ( );
__declspec(implementation_key(1842)) void _IAgVAStateCalcGravCoeff::PutGravityFilename ( _bstr_t pVal );
__declspec(implementation_key(1843)) enum AgEVAGravCoeffCoefficientType _IAgVAStateCalcGravCoeff::GetCoefficientType ( );
__declspec(implementation_key(1844)) void _IAgVAStateCalcGravCoeff::PutCoefficientType ( enum AgEVAGravCoeffCoefficientType pVal );
__declspec(implementation_key(1845)) int _IAgVAStateCalcGravCoeff::GetDegree ( );
__declspec(implementation_key(1846)) void _IAgVAStateCalcGravCoeff::PutDegree ( int pVal );
__declspec(implementation_key(1847)) int _IAgVAStateCalcGravCoeff::GetOrder ( );
__declspec(implementation_key(1848)) void _IAgVAStateCalcGravCoeff::PutOrder ( int pVal );
__declspec(implementation_key(1849)) enum AgEVAGravCoeffNormalizationType _IAgVAStateCalcGravCoeff::GetNormalizationType ( );
__declspec(implementation_key(1850)) void _IAgVAStateCalcGravCoeff::PutNormalizationType ( enum AgEVAGravCoeffNormalizationType pVal );
__declspec(implementation_key(1851)) _bstr_t _IAgVAStateCalcSpeedOfLight::GetName ( );
__declspec(implementation_key(1852)) void _IAgVAStateCalcSpeedOfLight::PutName ( _bstr_t pVal );
__declspec(implementation_key(1853)) _bstr_t _IAgVAStateCalcSpeedOfLight::GetUserComment ( );
__declspec(implementation_key(1854)) void _IAgVAStateCalcSpeedOfLight::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1855)) _bstr_t _IAgVAStateCalcSpeedOfLight::GetDescription ( );
__declspec(implementation_key(1856)) VARIANT_BOOL _IAgVAStateCalcSpeedOfLight::IsReadOnly ( );
__declspec(implementation_key(1857)) IUnknownPtr _IAgVAStateCalcSpeedOfLight::CloneObject ( );
__declspec(implementation_key(1858)) _bstr_t IAgVAStateCalcScalar::GetScalarName ( );
__declspec(implementation_key(1859)) void IAgVAStateCalcScalar::PutScalarName ( _bstr_t pVal );
__declspec(implementation_key(1860)) _bstr_t IAgVAStateCalcScalar::GetUnitDimension ( );
__declspec(implementation_key(1861)) void IAgVAStateCalcScalar::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(1862)) _bstr_t _IAgVAStateCalcScalar::GetName ( );
__declspec(implementation_key(1863)) void _IAgVAStateCalcScalar::PutName ( _bstr_t pVal );
__declspec(implementation_key(1864)) _bstr_t _IAgVAStateCalcScalar::GetUserComment ( );
__declspec(implementation_key(1865)) void _IAgVAStateCalcScalar::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1866)) _bstr_t _IAgVAStateCalcScalar::GetDescription ( );
__declspec(implementation_key(1867)) VARIANT_BOOL _IAgVAStateCalcScalar::IsReadOnly ( );
__declspec(implementation_key(1868)) _bstr_t _IAgVAStateCalcScalar::GetScalarName ( );
__declspec(implementation_key(1869)) void _IAgVAStateCalcScalar::PutScalarName ( _bstr_t pVal );
__declspec(implementation_key(1870)) _bstr_t _IAgVAStateCalcScalar::GetUnitDimension ( );
__declspec(implementation_key(1871)) void _IAgVAStateCalcScalar::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(1872)) IUnknownPtr _IAgVAStateCalcScalar::CloneObject ( );
__declspec(implementation_key(1873)) _bstr_t IAgVAStateCalcApparentSolarTime::GetCentralBodyName ( );
__declspec(implementation_key(1874)) void IAgVAStateCalcApparentSolarTime::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1875)) _bstr_t _IAgVAStateCalcApparentSolarTime::GetName ( );
__declspec(implementation_key(1876)) void _IAgVAStateCalcApparentSolarTime::PutName ( _bstr_t pVal );
__declspec(implementation_key(1877)) _bstr_t _IAgVAStateCalcApparentSolarTime::GetUserComment ( );
__declspec(implementation_key(1878)) void _IAgVAStateCalcApparentSolarTime::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1879)) _bstr_t _IAgVAStateCalcApparentSolarTime::GetDescription ( );
__declspec(implementation_key(1880)) VARIANT_BOOL _IAgVAStateCalcApparentSolarTime::IsReadOnly ( );
__declspec(implementation_key(1881)) IUnknownPtr _IAgVAStateCalcApparentSolarTime::CloneObject ( );
__declspec(implementation_key(1882)) _bstr_t _IAgVAStateCalcApparentSolarTime::GetCentralBodyName ( );
__declspec(implementation_key(1883)) void _IAgVAStateCalcApparentSolarTime::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1884)) _bstr_t IAgVAStateCalcEarthMeanSolarTime::GetCentralBodyName ( );
__declspec(implementation_key(1885)) void IAgVAStateCalcEarthMeanSolarTime::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1886)) _bstr_t _IAgVAStateCalcEarthMeanSolarTime::GetName ( );
__declspec(implementation_key(1887)) void _IAgVAStateCalcEarthMeanSolarTime::PutName ( _bstr_t pVal );
__declspec(implementation_key(1888)) _bstr_t _IAgVAStateCalcEarthMeanSolarTime::GetUserComment ( );
__declspec(implementation_key(1889)) void _IAgVAStateCalcEarthMeanSolarTime::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1890)) _bstr_t _IAgVAStateCalcEarthMeanSolarTime::GetDescription ( );
__declspec(implementation_key(1891)) VARIANT_BOOL _IAgVAStateCalcEarthMeanSolarTime::IsReadOnly ( );
__declspec(implementation_key(1892)) IUnknownPtr _IAgVAStateCalcEarthMeanSolarTime::CloneObject ( );
__declspec(implementation_key(1893)) _bstr_t _IAgVAStateCalcEarthMeanSolarTime::GetCentralBodyName ( );
__declspec(implementation_key(1894)) void _IAgVAStateCalcEarthMeanSolarTime::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1895)) _bstr_t IAgVAStateCalcEarthMeanLocTimeAN::GetCentralBodyName ( );
__declspec(implementation_key(1896)) void IAgVAStateCalcEarthMeanLocTimeAN::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1897)) _bstr_t _IAgVAStateCalcEarthMeanLocTimeAN::GetName ( );
__declspec(implementation_key(1898)) void _IAgVAStateCalcEarthMeanLocTimeAN::PutName ( _bstr_t pVal );
__declspec(implementation_key(1899)) _bstr_t _IAgVAStateCalcEarthMeanLocTimeAN::GetUserComment ( );
__declspec(implementation_key(1900)) void _IAgVAStateCalcEarthMeanLocTimeAN::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(1901)) _bstr_t _IAgVAStateCalcEarthMeanLocTimeAN::GetDescription ( );
__declspec(implementation_key(1902)) VARIANT_BOOL _IAgVAStateCalcEarthMeanLocTimeAN::IsReadOnly ( );
__declspec(implementation_key(1903)) IUnknownPtr _IAgVAStateCalcEarthMeanLocTimeAN::CloneObject ( );
__declspec(implementation_key(1904)) _bstr_t _IAgVAStateCalcEarthMeanLocTimeAN::GetCentralBodyName ( );
__declspec(implementation_key(1905)) void _IAgVAStateCalcEarthMeanLocTimeAN::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(1906)) double IAgVACbGravityModel::GetGravitationalParam ( );
__declspec(implementation_key(1907)) void IAgVACbGravityModel::PutGravitationalParam ( double pVal );
__declspec(implementation_key(1908)) double IAgVACbGravityModel::GetRefDistance ( );
__declspec(implementation_key(1909)) void IAgVACbGravityModel::PutRefDistance ( double pVal );
__declspec(implementation_key(1910)) double IAgVACbGravityModel::GetJ2 ( );
__declspec(implementation_key(1911)) void IAgVACbGravityModel::PutJ2 ( double pVal );
__declspec(implementation_key(1912)) double IAgVACbGravityModel::GetJ3 ( );
__declspec(implementation_key(1913)) void IAgVACbGravityModel::PutJ3 ( double pVal );
__declspec(implementation_key(1914)) double IAgVACbGravityModel::GetJ4 ( );
__declspec(implementation_key(1915)) void IAgVACbGravityModel::PutJ4 ( double pVal );
__declspec(implementation_key(1916)) double _IAgVACbGravityModel::GetGravitationalParam ( );
__declspec(implementation_key(1917)) void _IAgVACbGravityModel::PutGravitationalParam ( double pVal );
__declspec(implementation_key(1918)) double _IAgVACbGravityModel::GetRefDistance ( );
__declspec(implementation_key(1919)) void _IAgVACbGravityModel::PutRefDistance ( double pVal );
__declspec(implementation_key(1920)) double _IAgVACbGravityModel::GetJ2 ( );
__declspec(implementation_key(1921)) void _IAgVACbGravityModel::PutJ2 ( double pVal );
__declspec(implementation_key(1922)) double _IAgVACbGravityModel::GetJ3 ( );
__declspec(implementation_key(1923)) void _IAgVACbGravityModel::PutJ3 ( double pVal );
__declspec(implementation_key(1924)) double _IAgVACbGravityModel::GetJ4 ( );
__declspec(implementation_key(1925)) void _IAgVACbGravityModel::PutJ4 ( double pVal );
__declspec(implementation_key(1926)) double IAgVACbShapeSphere::GetRadius ( );
__declspec(implementation_key(1927)) void IAgVACbShapeSphere::PutRadius ( double pVal );
__declspec(implementation_key(1928)) double _IAgVACbShapeSphere::GetRadius ( );
__declspec(implementation_key(1929)) void _IAgVACbShapeSphere::PutRadius ( double pVal );
__declspec(implementation_key(1930)) double IAgVACbShapeOblateSpheroid::GetMinRadius ( );
__declspec(implementation_key(1931)) void IAgVACbShapeOblateSpheroid::PutMinRadius ( double pVal );
__declspec(implementation_key(1932)) double IAgVACbShapeOblateSpheroid::GetMaxRadius ( );
__declspec(implementation_key(1933)) void IAgVACbShapeOblateSpheroid::PutMaxRadius ( double pVal );
__declspec(implementation_key(1934)) double IAgVACbShapeOblateSpheroid::GetFlatteningCoefficient ( );
__declspec(implementation_key(1935)) double _IAgVACbShapeOblateSpheroid::GetMinRadius ( );
__declspec(implementation_key(1936)) void _IAgVACbShapeOblateSpheroid::PutMinRadius ( double pVal );
__declspec(implementation_key(1937)) double _IAgVACbShapeOblateSpheroid::GetMaxRadius ( );
__declspec(implementation_key(1938)) void _IAgVACbShapeOblateSpheroid::PutMaxRadius ( double pVal );
__declspec(implementation_key(1939)) double _IAgVACbShapeOblateSpheroid::GetFlatteningCoefficient ( );
__declspec(implementation_key(1940)) double IAgVACbShapeTriaxialEllipsoid::GetSemiMajorAxis ( );
__declspec(implementation_key(1941)) void IAgVACbShapeTriaxialEllipsoid::PutSemiMajorAxis ( double pVal );
__declspec(implementation_key(1942)) double IAgVACbShapeTriaxialEllipsoid::GetSemiMidAxis ( );
__declspec(implementation_key(1943)) void IAgVACbShapeTriaxialEllipsoid::PutSemiMidAxis ( double pVal );
__declspec(implementation_key(1944)) double IAgVACbShapeTriaxialEllipsoid::GetSemiMinorAxis ( );
__declspec(implementation_key(1945)) void IAgVACbShapeTriaxialEllipsoid::PutSemiMinorAxis ( double pVal );
__declspec(implementation_key(1946)) double _IAgVACbShapeTriaxialEllipsoid::GetSemiMajorAxis ( );
__declspec(implementation_key(1947)) void _IAgVACbShapeTriaxialEllipsoid::PutSemiMajorAxis ( double pVal );
__declspec(implementation_key(1948)) double _IAgVACbShapeTriaxialEllipsoid::GetSemiMidAxis ( );
__declspec(implementation_key(1949)) void _IAgVACbShapeTriaxialEllipsoid::PutSemiMidAxis ( double pVal );
__declspec(implementation_key(1950)) double _IAgVACbShapeTriaxialEllipsoid::GetSemiMinorAxis ( );
__declspec(implementation_key(1951)) void _IAgVACbShapeTriaxialEllipsoid::PutSemiMinorAxis ( double pVal );
__declspec(implementation_key(1952)) _bstr_t IAgVACbAttitudeRotationCoefficientsFile::GetFilename ( );
__declspec(implementation_key(1953)) void IAgVACbAttitudeRotationCoefficientsFile::PutFilename ( _bstr_t pVal );
__declspec(implementation_key(1954)) _bstr_t _IAgVACbAttitudeRotationCoefficientsFile::GetFilename ( );
__declspec(implementation_key(1955)) void _IAgVACbAttitudeRotationCoefficientsFile::PutFilename ( _bstr_t pVal );
__declspec(implementation_key(1956)) _variant_t IAgVACbAttitudeIAU1994::GetRightAscension ( );
__declspec(implementation_key(1957)) void IAgVACbAttitudeIAU1994::PutRightAscension ( const _variant_t & pVal );
__declspec(implementation_key(1958)) _variant_t IAgVACbAttitudeIAU1994::GetDeclination ( );
__declspec(implementation_key(1959)) void IAgVACbAttitudeIAU1994::PutDeclination ( const _variant_t & pVal );
__declspec(implementation_key(1960)) double IAgVACbAttitudeIAU1994::GetRightAscensionRate ( );
__declspec(implementation_key(1961)) void IAgVACbAttitudeIAU1994::PutRightAscensionRate ( double pVal );
__declspec(implementation_key(1962)) double IAgVACbAttitudeIAU1994::GetDeclinationRate ( );
__declspec(implementation_key(1963)) void IAgVACbAttitudeIAU1994::PutDeclinationRate ( double pVal );
__declspec(implementation_key(1964)) _variant_t IAgVACbAttitudeIAU1994::GetRotationOffset ( );
__declspec(implementation_key(1965)) void IAgVACbAttitudeIAU1994::PutRotationOffset ( const _variant_t & pVal );
__declspec(implementation_key(1966)) double IAgVACbAttitudeIAU1994::GetRotationRate ( );
__declspec(implementation_key(1967)) void IAgVACbAttitudeIAU1994::PutRotationRate ( double pVal );
__declspec(implementation_key(1968)) _variant_t _IAgVACbAttitudeIAU1994::GetRightAscension ( );
__declspec(implementation_key(1969)) void _IAgVACbAttitudeIAU1994::PutRightAscension ( const _variant_t & pVal );
__declspec(implementation_key(1970)) _variant_t _IAgVACbAttitudeIAU1994::GetDeclination ( );
__declspec(implementation_key(1971)) void _IAgVACbAttitudeIAU1994::PutDeclination ( const _variant_t & pVal );
__declspec(implementation_key(1972)) double _IAgVACbAttitudeIAU1994::GetRightAscensionRate ( );
__declspec(implementation_key(1973)) void _IAgVACbAttitudeIAU1994::PutRightAscensionRate ( double pVal );
__declspec(implementation_key(1974)) double _IAgVACbAttitudeIAU1994::GetDeclinationRate ( );
__declspec(implementation_key(1975)) void _IAgVACbAttitudeIAU1994::PutDeclinationRate ( double pVal );
__declspec(implementation_key(1976)) _variant_t _IAgVACbAttitudeIAU1994::GetRotationOffset ( );
__declspec(implementation_key(1977)) void _IAgVACbAttitudeIAU1994::PutRotationOffset ( const _variant_t & pVal );
__declspec(implementation_key(1978)) double _IAgVACbAttitudeIAU1994::GetRotationRate ( );
__declspec(implementation_key(1979)) void _IAgVACbAttitudeIAU1994::PutRotationRate ( double pVal );
__declspec(implementation_key(1980)) double IAgVACbEphemerisAnalyticOrbit::GetEpoch ( );
__declspec(implementation_key(1981)) void IAgVACbEphemerisAnalyticOrbit::PutEpoch ( double pVal );
__declspec(implementation_key(1982)) double IAgVACbEphemerisAnalyticOrbit::GetSemiMajorAxis ( );
__declspec(implementation_key(1983)) void IAgVACbEphemerisAnalyticOrbit::PutSemiMajorAxis ( double pVal );
__declspec(implementation_key(1984)) double IAgVACbEphemerisAnalyticOrbit::GetSemiMajorAxisRate ( );
__declspec(implementation_key(1985)) void IAgVACbEphemerisAnalyticOrbit::PutSemiMajorAxisRate ( double pVal );
__declspec(implementation_key(1986)) double IAgVACbEphemerisAnalyticOrbit::GetEccentricity ( );
__declspec(implementation_key(1987)) void IAgVACbEphemerisAnalyticOrbit::PutEccentricity ( double pVal );
__declspec(implementation_key(1988)) double IAgVACbEphemerisAnalyticOrbit::GetEccentricityRate ( );
__declspec(implementation_key(1989)) void IAgVACbEphemerisAnalyticOrbit::PutEccentricityRate ( double pVal );
__declspec(implementation_key(1990)) _variant_t IAgVACbEphemerisAnalyticOrbit::GetInclination ( );
__declspec(implementation_key(1991)) void IAgVACbEphemerisAnalyticOrbit::PutInclination ( const _variant_t & pVal );
__declspec(implementation_key(1992)) double IAgVACbEphemerisAnalyticOrbit::GetInclinationRate ( );
__declspec(implementation_key(1993)) void IAgVACbEphemerisAnalyticOrbit::PutInclinationRate ( double pVal );
__declspec(implementation_key(1994)) _variant_t IAgVACbEphemerisAnalyticOrbit::GetRAAN ( );
__declspec(implementation_key(1995)) void IAgVACbEphemerisAnalyticOrbit::PutRAAN ( const _variant_t & pVal );
__declspec(implementation_key(1996)) double IAgVACbEphemerisAnalyticOrbit::GetRAANRate ( );
__declspec(implementation_key(1997)) void IAgVACbEphemerisAnalyticOrbit::PutRAANRate ( double pVal );
__declspec(implementation_key(1998)) _variant_t IAgVACbEphemerisAnalyticOrbit::GetArgOfPeriapsis ( );
__declspec(implementation_key(1999)) void IAgVACbEphemerisAnalyticOrbit::PutArgOfPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(2000)) double IAgVACbEphemerisAnalyticOrbit::GetArgOfPeriapsisRate ( );
__declspec(implementation_key(2001)) void IAgVACbEphemerisAnalyticOrbit::PutArgOfPeriapsisRate ( double pVal );
__declspec(implementation_key(2002)) _variant_t IAgVACbEphemerisAnalyticOrbit::GetMeanLongitude ( );
__declspec(implementation_key(2003)) void IAgVACbEphemerisAnalyticOrbit::PutMeanLongitude ( const _variant_t & pVal );
__declspec(implementation_key(2004)) double IAgVACbEphemerisAnalyticOrbit::GetMeanLongitudeRate ( );
__declspec(implementation_key(2005)) void IAgVACbEphemerisAnalyticOrbit::PutMeanLongitudeRate ( double pVal );
__declspec(implementation_key(2006)) double _IAgVACbEphemerisAnalyticOrbit::GetEpoch ( );
__declspec(implementation_key(2007)) void _IAgVACbEphemerisAnalyticOrbit::PutEpoch ( double pVal );
__declspec(implementation_key(2008)) double _IAgVACbEphemerisAnalyticOrbit::GetSemiMajorAxis ( );
__declspec(implementation_key(2009)) void _IAgVACbEphemerisAnalyticOrbit::PutSemiMajorAxis ( double pVal );
__declspec(implementation_key(2010)) double _IAgVACbEphemerisAnalyticOrbit::GetSemiMajorAxisRate ( );
__declspec(implementation_key(2011)) void _IAgVACbEphemerisAnalyticOrbit::PutSemiMajorAxisRate ( double pVal );
__declspec(implementation_key(2012)) double _IAgVACbEphemerisAnalyticOrbit::GetEccentricity ( );
__declspec(implementation_key(2013)) void _IAgVACbEphemerisAnalyticOrbit::PutEccentricity ( double pVal );
__declspec(implementation_key(2014)) double _IAgVACbEphemerisAnalyticOrbit::GetEccentricityRate ( );
__declspec(implementation_key(2015)) void _IAgVACbEphemerisAnalyticOrbit::PutEccentricityRate ( double pVal );
__declspec(implementation_key(2016)) _variant_t _IAgVACbEphemerisAnalyticOrbit::GetInclination ( );
__declspec(implementation_key(2017)) void _IAgVACbEphemerisAnalyticOrbit::PutInclination ( const _variant_t & pVal );
__declspec(implementation_key(2018)) double _IAgVACbEphemerisAnalyticOrbit::GetInclinationRate ( );
__declspec(implementation_key(2019)) void _IAgVACbEphemerisAnalyticOrbit::PutInclinationRate ( double pVal );
__declspec(implementation_key(2020)) _variant_t _IAgVACbEphemerisAnalyticOrbit::GetRAAN ( );
__declspec(implementation_key(2021)) void _IAgVACbEphemerisAnalyticOrbit::PutRAAN ( const _variant_t & pVal );
__declspec(implementation_key(2022)) double _IAgVACbEphemerisAnalyticOrbit::GetRAANRate ( );
__declspec(implementation_key(2023)) void _IAgVACbEphemerisAnalyticOrbit::PutRAANRate ( double pVal );
__declspec(implementation_key(2024)) _variant_t _IAgVACbEphemerisAnalyticOrbit::GetArgOfPeriapsis ( );
__declspec(implementation_key(2025)) void _IAgVACbEphemerisAnalyticOrbit::PutArgOfPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(2026)) double _IAgVACbEphemerisAnalyticOrbit::GetArgOfPeriapsisRate ( );
__declspec(implementation_key(2027)) void _IAgVACbEphemerisAnalyticOrbit::PutArgOfPeriapsisRate ( double pVal );
__declspec(implementation_key(2028)) _variant_t _IAgVACbEphemerisAnalyticOrbit::GetMeanLongitude ( );
__declspec(implementation_key(2029)) void _IAgVACbEphemerisAnalyticOrbit::PutMeanLongitude ( const _variant_t & pVal );
__declspec(implementation_key(2030)) double _IAgVACbEphemerisAnalyticOrbit::GetMeanLongitudeRate ( );
__declspec(implementation_key(2031)) void _IAgVACbEphemerisAnalyticOrbit::PutMeanLongitudeRate ( double pVal );
__declspec(implementation_key(2032)) _bstr_t IAgVACbEphemerisJPLSpice::GetJPLSpiceId ( );
__declspec(implementation_key(2033)) void IAgVACbEphemerisJPLSpice::PutJPLSpiceId ( _bstr_t pVal );
__declspec(implementation_key(2034)) _bstr_t _IAgVACbEphemerisJPLSpice::GetJPLSpiceId ( );
__declspec(implementation_key(2035)) void _IAgVACbEphemerisJPLSpice::PutJPLSpiceId ( _bstr_t pVal );
__declspec(implementation_key(2036)) _bstr_t IAgVACbEphemerisFile::GetFilename ( );
__declspec(implementation_key(2037)) void IAgVACbEphemerisFile::PutFilename ( _bstr_t pVal );
__declspec(implementation_key(2038)) _bstr_t _IAgVACbEphemerisFile::GetFilename ( );
__declspec(implementation_key(2039)) void _IAgVACbEphemerisFile::PutFilename ( _bstr_t pVal );
__declspec(implementation_key(2040)) _bstr_t IAgVACbEphemerisJPLDE::GetJPLDEFilename ( );
__declspec(implementation_key(2041)) void IAgVACbEphemerisJPLDE::PutJPLDEFilename ( _bstr_t pVal );
__declspec(implementation_key(2042)) _bstr_t _IAgVACbEphemerisJPLDE::GetJPLDEFilename ( );
__declspec(implementation_key(2043)) void _IAgVACbEphemerisJPLDE::PutJPLDEFilename ( _bstr_t pVal );
__declspec(implementation_key(2044)) _bstr_t IAgVACbEphemerisPlanetary::GetPlanetaryFilename ( );
__declspec(implementation_key(2045)) void IAgVACbEphemerisPlanetary::PutPlanetaryFilename ( _bstr_t pVal );
__declspec(implementation_key(2046)) _bstr_t _IAgVACbEphemerisPlanetary::GetPlanetaryFilename ( );
__declspec(implementation_key(2047)) void _IAgVACbEphemerisPlanetary::PutPlanetaryFilename ( _bstr_t pVal );
__declspec(implementation_key(2048)) double IAgVAPowerInternal::GetGeneratedPower ( );
__declspec(implementation_key(2049)) void IAgVAPowerInternal::PutGeneratedPower ( double pVal );
__declspec(implementation_key(2050)) double IAgVAPowerInternal::GetPercentDegradationPerYear ( );
__declspec(implementation_key(2051)) void IAgVAPowerInternal::PutPercentDegradationPerYear ( double pVal );
__declspec(implementation_key(2052)) _variant_t IAgVAPowerInternal::GetReferenceEpoch ( );
__declspec(implementation_key(2053)) void IAgVAPowerInternal::PutReferenceEpoch ( const _variant_t & pVal );
__declspec(implementation_key(2054)) HRESULT IAgVAPowerInternal::EnableControlParameter ( enum AgEVAControlPowerInternal Param );
__declspec(implementation_key(2055)) HRESULT IAgVAPowerInternal::DisableControlParameter ( enum AgEVAControlPowerInternal Param );
__declspec(implementation_key(2056)) VARIANT_BOOL IAgVAPowerInternal::IsControlParameterEnabled ( enum AgEVAControlPowerInternal Param );
__declspec(implementation_key(2057)) VARIANT_BOOL IAgVAPowerInternal::GetControlParametersAvailable ( );
__declspec(implementation_key(2058)) double _IAgVAPowerInternal::GetGeneratedPower ( );
__declspec(implementation_key(2059)) void _IAgVAPowerInternal::PutGeneratedPower ( double pVal );
__declspec(implementation_key(2060)) double _IAgVAPowerInternal::GetPercentDegradationPerYear ( );
__declspec(implementation_key(2061)) void _IAgVAPowerInternal::PutPercentDegradationPerYear ( double pVal );
__declspec(implementation_key(2062)) _variant_t _IAgVAPowerInternal::GetReferenceEpoch ( );
__declspec(implementation_key(2063)) void _IAgVAPowerInternal::PutReferenceEpoch ( const _variant_t & pVal );
__declspec(implementation_key(2064)) HRESULT _IAgVAPowerInternal::EnableControlParameter ( enum AgEVAControlPowerInternal Param );
__declspec(implementation_key(2065)) HRESULT _IAgVAPowerInternal::DisableControlParameter ( enum AgEVAControlPowerInternal Param );
__declspec(implementation_key(2066)) VARIANT_BOOL _IAgVAPowerInternal::IsControlParameterEnabled ( enum AgEVAControlPowerInternal Param );
__declspec(implementation_key(2067)) VARIANT_BOOL _IAgVAPowerInternal::GetControlParametersAvailable ( );
__declspec(implementation_key(2068)) _bstr_t _IAgVAPowerInternal::GetName ( );
__declspec(implementation_key(2069)) void _IAgVAPowerInternal::PutName ( _bstr_t pVal );
__declspec(implementation_key(2070)) _bstr_t _IAgVAPowerInternal::GetUserComment ( );
__declspec(implementation_key(2071)) void _IAgVAPowerInternal::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2072)) _bstr_t _IAgVAPowerInternal::GetDescription ( );
__declspec(implementation_key(2073)) VARIANT_BOOL _IAgVAPowerInternal::IsReadOnly ( );
__declspec(implementation_key(2074)) IUnknownPtr _IAgVAPowerInternal::CloneObject ( );
__declspec(implementation_key(2075)) double IAgVAPowerProcessed::GetLoad ( );
__declspec(implementation_key(2076)) void IAgVAPowerProcessed::PutLoad ( double pVal );
__declspec(implementation_key(2077)) double IAgVAPowerProcessed::GetEfficiency ( );
__declspec(implementation_key(2078)) void IAgVAPowerProcessed::PutEfficiency ( double pVal );
__declspec(implementation_key(2079)) _bstr_t IAgVAPowerProcessed::GetInputPowerSourceName ( );
__declspec(implementation_key(2080)) void IAgVAPowerProcessed::PutInputPowerSourceName ( _bstr_t pVal );
__declspec(implementation_key(2081)) HRESULT IAgVAPowerProcessed::EnableControlParameter ( enum AgEVAControlPowerProcessed Param );
__declspec(implementation_key(2082)) HRESULT IAgVAPowerProcessed::DisableControlParameter ( enum AgEVAControlPowerProcessed Param );
__declspec(implementation_key(2083)) VARIANT_BOOL IAgVAPowerProcessed::IsControlParameterEnabled ( enum AgEVAControlPowerProcessed Param );
__declspec(implementation_key(2084)) VARIANT_BOOL IAgVAPowerProcessed::GetControlParametersAvailable ( );
__declspec(implementation_key(2085)) double _IAgVAPowerProcessed::GetLoad ( );
__declspec(implementation_key(2086)) void _IAgVAPowerProcessed::PutLoad ( double pVal );
__declspec(implementation_key(2087)) double _IAgVAPowerProcessed::GetEfficiency ( );
__declspec(implementation_key(2088)) void _IAgVAPowerProcessed::PutEfficiency ( double pVal );
__declspec(implementation_key(2089)) _bstr_t _IAgVAPowerProcessed::GetInputPowerSourceName ( );
__declspec(implementation_key(2090)) void _IAgVAPowerProcessed::PutInputPowerSourceName ( _bstr_t pVal );
__declspec(implementation_key(2091)) HRESULT _IAgVAPowerProcessed::EnableControlParameter ( enum AgEVAControlPowerProcessed Param );
__declspec(implementation_key(2092)) HRESULT _IAgVAPowerProcessed::DisableControlParameter ( enum AgEVAControlPowerProcessed Param );
__declspec(implementation_key(2093)) VARIANT_BOOL _IAgVAPowerProcessed::IsControlParameterEnabled ( enum AgEVAControlPowerProcessed Param );
__declspec(implementation_key(2094)) VARIANT_BOOL _IAgVAPowerProcessed::GetControlParametersAvailable ( );
__declspec(implementation_key(2095)) _bstr_t _IAgVAPowerProcessed::GetName ( );
__declspec(implementation_key(2096)) void _IAgVAPowerProcessed::PutName ( _bstr_t pVal );
__declspec(implementation_key(2097)) _bstr_t _IAgVAPowerProcessed::GetUserComment ( );
__declspec(implementation_key(2098)) void _IAgVAPowerProcessed::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2099)) _bstr_t _IAgVAPowerProcessed::GetDescription ( );
__declspec(implementation_key(2100)) VARIANT_BOOL _IAgVAPowerProcessed::IsReadOnly ( );
__declspec(implementation_key(2101)) IUnknownPtr _IAgVAPowerProcessed::CloneObject ( );
__declspec(implementation_key(2102)) double IAgVAPowerSolarArray::GetArea ( );
__declspec(implementation_key(2103)) void IAgVAPowerSolarArray::PutArea ( double pVal );
__declspec(implementation_key(2104)) double IAgVAPowerSolarArray::GetConcentration ( );
__declspec(implementation_key(2105)) void IAgVAPowerSolarArray::PutConcentration ( double pVal );
__declspec(implementation_key(2106)) double IAgVAPowerSolarArray::GetCellEfficiencyPercent ( );
__declspec(implementation_key(2107)) void IAgVAPowerSolarArray::PutCellEfficiencyPercent ( double pVal );
__declspec(implementation_key(2108)) double IAgVAPowerSolarArray::GetArrayEfficiencyPercent ( );
__declspec(implementation_key(2109)) void IAgVAPowerSolarArray::PutArrayEfficiencyPercent ( double pVal );
__declspec(implementation_key(2110)) double IAgVAPowerSolarArray::GetPercentDegradationPerYear ( );
__declspec(implementation_key(2111)) void IAgVAPowerSolarArray::PutPercentDegradationPerYear ( double pVal );
__declspec(implementation_key(2112)) _variant_t IAgVAPowerSolarArray::GetReferenceEpoch ( );
__declspec(implementation_key(2113)) void IAgVAPowerSolarArray::PutReferenceEpoch ( const _variant_t & pVal );
__declspec(implementation_key(2114)) _variant_t IAgVAPowerSolarArray::GetInclinationToSunLine ( );
__declspec(implementation_key(2115)) void IAgVAPowerSolarArray::PutInclinationToSunLine ( const _variant_t & pVal );
__declspec(implementation_key(2116)) double IAgVAPowerSolarArray::GetC0 ( );
__declspec(implementation_key(2117)) void IAgVAPowerSolarArray::PutC0 ( double pVal );
__declspec(implementation_key(2118)) double IAgVAPowerSolarArray::GetC1 ( );
__declspec(implementation_key(2119)) void IAgVAPowerSolarArray::PutC1 ( double pVal );
__declspec(implementation_key(2120)) double IAgVAPowerSolarArray::GetC2 ( );
__declspec(implementation_key(2121)) void IAgVAPowerSolarArray::PutC2 ( double pVal );
__declspec(implementation_key(2122)) double IAgVAPowerSolarArray::GetC3 ( );
__declspec(implementation_key(2123)) void IAgVAPowerSolarArray::PutC3 ( double pVal );
__declspec(implementation_key(2124)) double IAgVAPowerSolarArray::GetC4 ( );
__declspec(implementation_key(2125)) void IAgVAPowerSolarArray::PutC4 ( double pVal );
__declspec(implementation_key(2126)) _bstr_t IAgVAPowerSolarArray::GetApproximationFormula ( );
__declspec(implementation_key(2127)) HRESULT IAgVAPowerSolarArray::EnableControlParameter ( enum AgEVAControlPowerSolarArray Param );
__declspec(implementation_key(2128)) HRESULT IAgVAPowerSolarArray::DisableControlParameter ( enum AgEVAControlPowerSolarArray Param );
__declspec(implementation_key(2129)) VARIANT_BOOL IAgVAPowerSolarArray::IsControlParameterEnabled ( enum AgEVAControlPowerSolarArray Param );
__declspec(implementation_key(2130)) VARIANT_BOOL IAgVAPowerSolarArray::GetControlParametersAvailable ( );
__declspec(implementation_key(2131)) double _IAgVAPowerSolarArray::GetArea ( );
__declspec(implementation_key(2132)) void _IAgVAPowerSolarArray::PutArea ( double pVal );
__declspec(implementation_key(2133)) double _IAgVAPowerSolarArray::GetConcentration ( );
__declspec(implementation_key(2134)) void _IAgVAPowerSolarArray::PutConcentration ( double pVal );
__declspec(implementation_key(2135)) double _IAgVAPowerSolarArray::GetCellEfficiencyPercent ( );
__declspec(implementation_key(2136)) void _IAgVAPowerSolarArray::PutCellEfficiencyPercent ( double pVal );
__declspec(implementation_key(2137)) double _IAgVAPowerSolarArray::GetArrayEfficiencyPercent ( );
__declspec(implementation_key(2138)) void _IAgVAPowerSolarArray::PutArrayEfficiencyPercent ( double pVal );
__declspec(implementation_key(2139)) double _IAgVAPowerSolarArray::GetPercentDegradationPerYear ( );
__declspec(implementation_key(2140)) void _IAgVAPowerSolarArray::PutPercentDegradationPerYear ( double pVal );
__declspec(implementation_key(2141)) _variant_t _IAgVAPowerSolarArray::GetReferenceEpoch ( );
__declspec(implementation_key(2142)) void _IAgVAPowerSolarArray::PutReferenceEpoch ( const _variant_t & pVal );
__declspec(implementation_key(2143)) _variant_t _IAgVAPowerSolarArray::GetInclinationToSunLine ( );
__declspec(implementation_key(2144)) void _IAgVAPowerSolarArray::PutInclinationToSunLine ( const _variant_t & pVal );
__declspec(implementation_key(2145)) double _IAgVAPowerSolarArray::GetC0 ( );
__declspec(implementation_key(2146)) void _IAgVAPowerSolarArray::PutC0 ( double pVal );
__declspec(implementation_key(2147)) double _IAgVAPowerSolarArray::GetC1 ( );
__declspec(implementation_key(2148)) void _IAgVAPowerSolarArray::PutC1 ( double pVal );
__declspec(implementation_key(2149)) double _IAgVAPowerSolarArray::GetC2 ( );
__declspec(implementation_key(2150)) void _IAgVAPowerSolarArray::PutC2 ( double pVal );
__declspec(implementation_key(2151)) double _IAgVAPowerSolarArray::GetC3 ( );
__declspec(implementation_key(2152)) void _IAgVAPowerSolarArray::PutC3 ( double pVal );
__declspec(implementation_key(2153)) double _IAgVAPowerSolarArray::GetC4 ( );
__declspec(implementation_key(2154)) void _IAgVAPowerSolarArray::PutC4 ( double pVal );
__declspec(implementation_key(2155)) _bstr_t _IAgVAPowerSolarArray::GetApproximationFormula ( );
__declspec(implementation_key(2156)) HRESULT _IAgVAPowerSolarArray::EnableControlParameter ( enum AgEVAControlPowerSolarArray Param );
__declspec(implementation_key(2157)) HRESULT _IAgVAPowerSolarArray::DisableControlParameter ( enum AgEVAControlPowerSolarArray Param );
__declspec(implementation_key(2158)) VARIANT_BOOL _IAgVAPowerSolarArray::IsControlParameterEnabled ( enum AgEVAControlPowerSolarArray Param );
__declspec(implementation_key(2159)) VARIANT_BOOL _IAgVAPowerSolarArray::GetControlParametersAvailable ( );
__declspec(implementation_key(2160)) _bstr_t _IAgVAPowerSolarArray::GetName ( );
__declspec(implementation_key(2161)) void _IAgVAPowerSolarArray::PutName ( _bstr_t pVal );
__declspec(implementation_key(2162)) _bstr_t _IAgVAPowerSolarArray::GetUserComment ( );
__declspec(implementation_key(2163)) void _IAgVAPowerSolarArray::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2164)) _bstr_t _IAgVAPowerSolarArray::GetDescription ( );
__declspec(implementation_key(2165)) VARIANT_BOOL _IAgVAPowerSolarArray::IsReadOnly ( );
__declspec(implementation_key(2166)) IUnknownPtr _IAgVAPowerSolarArray::CloneObject ( );
__declspec(implementation_key(2167)) _variant_t IAgVAPluginProperties::GetProperty ( _bstr_t Path );
__declspec(implementation_key(2168)) HRESULT IAgVAPluginProperties::SetProperty ( _bstr_t Path, const _variant_t & PropertyValue );
__declspec(implementation_key(2169)) SAFEARRAY * IAgVAPluginProperties::GetAvailableProperties ( );
__declspec(implementation_key(2170)) _bstr_t _IAgVAGeneralRelativityFunction::GetName ( );
__declspec(implementation_key(2171)) void _IAgVAGeneralRelativityFunction::PutName ( _bstr_t pVal );
__declspec(implementation_key(2172)) _bstr_t _IAgVAGeneralRelativityFunction::GetUserComment ( );
__declspec(implementation_key(2173)) void _IAgVAGeneralRelativityFunction::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2174)) _bstr_t _IAgVAGeneralRelativityFunction::GetDescription ( );
__declspec(implementation_key(2175)) VARIANT_BOOL _IAgVAGeneralRelativityFunction::IsReadOnly ( );
__declspec(implementation_key(2176)) IUnknownPtr _IAgVAGeneralRelativityFunction::CloneObject ( );
__declspec(implementation_key(2177)) _bstr_t _IAgVAStateTransFunction::GetName ( );
__declspec(implementation_key(2178)) void _IAgVAStateTransFunction::PutName ( _bstr_t pVal );
__declspec(implementation_key(2179)) _bstr_t _IAgVAStateTransFunction::GetUserComment ( );
__declspec(implementation_key(2180)) void _IAgVAStateTransFunction::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2181)) _bstr_t _IAgVAStateTransFunction::GetDescription ( );
__declspec(implementation_key(2182)) VARIANT_BOOL _IAgVAStateTransFunction::IsReadOnly ( );
__declspec(implementation_key(2183)) IUnknownPtr _IAgVAStateTransFunction::CloneObject ( );
__declspec(implementation_key(2184)) VARIANT_BOOL IAgVARadiationPressureFunction::GetIncludeAlbedo ( );
__declspec(implementation_key(2185)) void IAgVARadiationPressureFunction::PutIncludeAlbedo ( VARIANT_BOOL pVal );
__declspec(implementation_key(2186)) VARIANT_BOOL IAgVARadiationPressureFunction::GetIncludeThermalRadiationPressure ( );
__declspec(implementation_key(2187)) void IAgVARadiationPressureFunction::PutIncludeThermalRadiationPressure ( VARIANT_BOOL pVal );
__declspec(implementation_key(2188)) _bstr_t IAgVARadiationPressureFunction::GetGroundReflectionModelFilename ( );
__declspec(implementation_key(2189)) void IAgVARadiationPressureFunction::PutGroundReflectionModelFilename ( _bstr_t pVal );
__declspec(implementation_key(2190)) _bstr_t IAgVARadiationPressureFunction::GetCentralBodyName ( );
__declspec(implementation_key(2191)) VARIANT_BOOL _IAgVARadiationPressureFunction::GetIncludeAlbedo ( );
__declspec(implementation_key(2192)) void _IAgVARadiationPressureFunction::PutIncludeAlbedo ( VARIANT_BOOL pVal );
__declspec(implementation_key(2193)) VARIANT_BOOL _IAgVARadiationPressureFunction::GetIncludeThermalRadiationPressure ( );
__declspec(implementation_key(2194)) void _IAgVARadiationPressureFunction::PutIncludeThermalRadiationPressure ( VARIANT_BOOL pVal );
__declspec(implementation_key(2195)) _bstr_t _IAgVARadiationPressureFunction::GetGroundReflectionModelFilename ( );
__declspec(implementation_key(2196)) void _IAgVARadiationPressureFunction::PutGroundReflectionModelFilename ( _bstr_t pVal );
__declspec(implementation_key(2197)) _bstr_t _IAgVARadiationPressureFunction::GetCentralBodyName ( );
__declspec(implementation_key(2198)) _bstr_t _IAgVARadiationPressureFunction::GetName ( );
__declspec(implementation_key(2199)) void _IAgVARadiationPressureFunction::PutName ( _bstr_t pVal );
__declspec(implementation_key(2200)) _bstr_t _IAgVARadiationPressureFunction::GetUserComment ( );
__declspec(implementation_key(2201)) void _IAgVARadiationPressureFunction::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2202)) _bstr_t _IAgVARadiationPressureFunction::GetDescription ( );
__declspec(implementation_key(2203)) VARIANT_BOOL _IAgVARadiationPressureFunction::IsReadOnly ( );
__declspec(implementation_key(2204)) IUnknownPtr _IAgVARadiationPressureFunction::CloneObject ( );
__declspec(implementation_key(2205)) double IAgVAYarkovskyFunc::Getalpha ( );
__declspec(implementation_key(2206)) void IAgVAYarkovskyFunc::Putalpha ( double pVal );
__declspec(implementation_key(2207)) double IAgVAYarkovskyFunc::GetR0 ( );
__declspec(implementation_key(2208)) void IAgVAYarkovskyFunc::PutR0 ( double pVal );
__declspec(implementation_key(2209)) double IAgVAYarkovskyFunc::GetNM ( );
__declspec(implementation_key(2210)) void IAgVAYarkovskyFunc::PutNM ( double pVal );
__declspec(implementation_key(2211)) double IAgVAYarkovskyFunc::GetNN ( );
__declspec(implementation_key(2212)) void IAgVAYarkovskyFunc::PutNN ( double pVal );
__declspec(implementation_key(2213)) double IAgVAYarkovskyFunc::GetNK ( );
__declspec(implementation_key(2214)) void IAgVAYarkovskyFunc::PutNK ( double pVal );
__declspec(implementation_key(2215)) double IAgVAYarkovskyFunc::GetA1 ( );
__declspec(implementation_key(2216)) void IAgVAYarkovskyFunc::PutA1 ( double pVal );
__declspec(implementation_key(2217)) double IAgVAYarkovskyFunc::GetA2 ( );
__declspec(implementation_key(2218)) void IAgVAYarkovskyFunc::PutA2 ( double pVal );
__declspec(implementation_key(2219)) double IAgVAYarkovskyFunc::GetA3 ( );
__declspec(implementation_key(2220)) void IAgVAYarkovskyFunc::PutA3 ( double pVal );
__declspec(implementation_key(2221)) double _IAgVAYarkovskyFunc::Getalpha ( );
__declspec(implementation_key(2222)) void _IAgVAYarkovskyFunc::Putalpha ( double pVal );
__declspec(implementation_key(2223)) double _IAgVAYarkovskyFunc::GetR0 ( );
__declspec(implementation_key(2224)) void _IAgVAYarkovskyFunc::PutR0 ( double pVal );
__declspec(implementation_key(2225)) double _IAgVAYarkovskyFunc::GetNM ( );
__declspec(implementation_key(2226)) void _IAgVAYarkovskyFunc::PutNM ( double pVal );
__declspec(implementation_key(2227)) double _IAgVAYarkovskyFunc::GetNN ( );
__declspec(implementation_key(2228)) void _IAgVAYarkovskyFunc::PutNN ( double pVal );
__declspec(implementation_key(2229)) double _IAgVAYarkovskyFunc::GetNK ( );
__declspec(implementation_key(2230)) void _IAgVAYarkovskyFunc::PutNK ( double pVal );
__declspec(implementation_key(2231)) double _IAgVAYarkovskyFunc::GetA1 ( );
__declspec(implementation_key(2232)) void _IAgVAYarkovskyFunc::PutA1 ( double pVal );
__declspec(implementation_key(2233)) double _IAgVAYarkovskyFunc::GetA2 ( );
__declspec(implementation_key(2234)) void _IAgVAYarkovskyFunc::PutA2 ( double pVal );
__declspec(implementation_key(2235)) double _IAgVAYarkovskyFunc::GetA3 ( );
__declspec(implementation_key(2236)) void _IAgVAYarkovskyFunc::PutA3 ( double pVal );
__declspec(implementation_key(2237)) _bstr_t _IAgVAYarkovskyFunc::GetName ( );
__declspec(implementation_key(2238)) void _IAgVAYarkovskyFunc::PutName ( _bstr_t pVal );
__declspec(implementation_key(2239)) _bstr_t _IAgVAYarkovskyFunc::GetUserComment ( );
__declspec(implementation_key(2240)) void _IAgVAYarkovskyFunc::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2241)) _bstr_t _IAgVAYarkovskyFunc::GetDescription ( );
__declspec(implementation_key(2242)) VARIANT_BOOL _IAgVAYarkovskyFunc::IsReadOnly ( );
__declspec(implementation_key(2243)) IUnknownPtr _IAgVAYarkovskyFunc::CloneObject ( );
__declspec(implementation_key(2244)) HRESULT IAgVABlendedDensity::AtmDensityModel ( struct STKObjects::IAgComponentInfo * pInVal );
__declspec(implementation_key(2245)) HRESULT IAgVABlendedDensity::LowAltAtmDensityModel ( struct STKObjects::IAgComponentInfo * pInVal );
__declspec(implementation_key(2246)) double IAgVABlendedDensity::GetDensityBlendingAltRange ( );
__declspec(implementation_key(2247)) void IAgVABlendedDensity::PutDensityBlendingAltRange ( double pVal );
__declspec(implementation_key(2248)) _bstr_t IAgVABlendedDensity::GetAtmDensityModelName ( );
__declspec(implementation_key(2249)) _bstr_t IAgVABlendedDensity::GetLowAltAtmDensityModelName ( );
__declspec(implementation_key(2250)) VARIANT_BOOL IAgVABlendedDensity::GetUseApproxAltitude ( );
__declspec(implementation_key(2251)) void IAgVABlendedDensity::PutUseApproxAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2252)) double IAgVABlendedDensity::GetLowerBoundUpperAtmModel ( );
__declspec(implementation_key(2253)) HRESULT _IAgVABlendedDensity::AtmDensityModel ( struct STKObjects::IAgComponentInfo * pInVal );
__declspec(implementation_key(2254)) HRESULT _IAgVABlendedDensity::LowAltAtmDensityModel ( struct STKObjects::IAgComponentInfo * pInVal );
__declspec(implementation_key(2255)) double _IAgVABlendedDensity::GetDensityBlendingAltRange ( );
__declspec(implementation_key(2256)) void _IAgVABlendedDensity::PutDensityBlendingAltRange ( double pVal );
__declspec(implementation_key(2257)) _bstr_t _IAgVABlendedDensity::GetAtmDensityModelName ( );
__declspec(implementation_key(2258)) _bstr_t _IAgVABlendedDensity::GetLowAltAtmDensityModelName ( );
__declspec(implementation_key(2259)) VARIANT_BOOL _IAgVABlendedDensity::GetUseApproxAltitude ( );
__declspec(implementation_key(2260)) void _IAgVABlendedDensity::PutUseApproxAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2261)) double _IAgVABlendedDensity::GetLowerBoundUpperAtmModel ( );
__declspec(implementation_key(2262)) _bstr_t _IAgVABlendedDensity::GetName ( );
__declspec(implementation_key(2263)) void _IAgVABlendedDensity::PutName ( _bstr_t pVal );
__declspec(implementation_key(2264)) _bstr_t _IAgVABlendedDensity::GetUserComment ( );
__declspec(implementation_key(2265)) void _IAgVABlendedDensity::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2266)) _bstr_t _IAgVABlendedDensity::GetDescription ( );
__declspec(implementation_key(2267)) VARIANT_BOOL _IAgVABlendedDensity::IsReadOnly ( );
__declspec(implementation_key(2268)) IUnknownPtr _IAgVABlendedDensity::CloneObject ( );
__declspec(implementation_key(2269)) _bstr_t IAgVADragModelPlugin::GetPluginIdentifier ( );
__declspec(implementation_key(2270)) void IAgVADragModelPlugin::PutPluginIdentifier ( _bstr_t pVal );
__declspec(implementation_key(2271)) IAgVAPluginPropertiesPtr IAgVADragModelPlugin::GetPluginConfig ( );
__declspec(implementation_key(2272)) _bstr_t _IAgVADragModelPlugin::GetPluginIdentifier ( );
__declspec(implementation_key(2273)) void _IAgVADragModelPlugin::PutPluginIdentifier ( _bstr_t pVal );
__declspec(implementation_key(2274)) IAgVAPluginPropertiesPtr _IAgVADragModelPlugin::GetPluginConfig ( );
__declspec(implementation_key(2275)) _bstr_t _IAgVADragModelPlugin::GetName ( );
__declspec(implementation_key(2276)) void _IAgVADragModelPlugin::PutName ( _bstr_t pVal );
__declspec(implementation_key(2277)) _bstr_t _IAgVADragModelPlugin::GetUserComment ( );
__declspec(implementation_key(2278)) void _IAgVADragModelPlugin::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2279)) _bstr_t _IAgVADragModelPlugin::GetDescription ( );
__declspec(implementation_key(2280)) VARIANT_BOOL _IAgVADragModelPlugin::IsReadOnly ( );
__declspec(implementation_key(2281)) IUnknownPtr _IAgVADragModelPlugin::CloneObject ( );
__declspec(implementation_key(2282)) VARIANT_BOOL IAgVACira72Function::GetUseApproximateAltitude ( );
__declspec(implementation_key(2283)) void IAgVACira72Function::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2284)) VARIANT_BOOL IAgVACira72Function::GetComputesTemperature ( );
__declspec(implementation_key(2285)) VARIANT_BOOL IAgVACira72Function::GetComputesPressure ( );
__declspec(implementation_key(2286)) enum AgEVASunPosition IAgVACira72Function::GetSunPosition ( );
__declspec(implementation_key(2287)) void IAgVACira72Function::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2288)) enum AgEVAAtmosDataSource IAgVACira72Function::GetAtmosDataSource ( );
__declspec(implementation_key(2289)) void IAgVACira72Function::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2290)) double IAgVACira72Function::GetF10p7 ( );
__declspec(implementation_key(2291)) void IAgVACira72Function::PutF10p7 ( double pVal );
__declspec(implementation_key(2292)) double IAgVACira72Function::GetF10p7Avg ( );
__declspec(implementation_key(2293)) void IAgVACira72Function::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2294)) double IAgVACira72Function::GetKp ( );
__declspec(implementation_key(2295)) void IAgVACira72Function::PutKp ( double pVal );
__declspec(implementation_key(2296)) enum AgEVAGeoMagneticFluxSource IAgVACira72Function::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2297)) void IAgVACira72Function::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2298)) enum AgEVAGeoMagneticFluxUpdateRate IAgVACira72Function::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2299)) void IAgVACira72Function::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2300)) _bstr_t IAgVACira72Function::GetAtmosDataFilename ( );
__declspec(implementation_key(2301)) void IAgVACira72Function::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2302)) enum AgEVADragModelType IAgVACira72Function::GetDragModelType ( );
__declspec(implementation_key(2303)) void IAgVACira72Function::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2304)) _bstr_t IAgVACira72Function::GetDragModelPluginName ( );
__declspec(implementation_key(2305)) void IAgVACira72Function::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2306)) IAgVADragModelPluginPtr IAgVACira72Function::GetDragModelPlugin ( );
__declspec(implementation_key(2307)) VARIANT_BOOL _IAgVACira72Function::GetUseApproximateAltitude ( );
__declspec(implementation_key(2308)) void _IAgVACira72Function::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2309)) VARIANT_BOOL _IAgVACira72Function::GetComputesTemperature ( );
__declspec(implementation_key(2310)) VARIANT_BOOL _IAgVACira72Function::GetComputesPressure ( );
__declspec(implementation_key(2311)) enum AgEVASunPosition _IAgVACira72Function::GetSunPosition ( );
__declspec(implementation_key(2312)) void _IAgVACira72Function::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2313)) enum AgEVAAtmosDataSource _IAgVACira72Function::GetAtmosDataSource ( );
__declspec(implementation_key(2314)) void _IAgVACira72Function::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2315)) double _IAgVACira72Function::GetF10p7 ( );
__declspec(implementation_key(2316)) void _IAgVACira72Function::PutF10p7 ( double pVal );
__declspec(implementation_key(2317)) double _IAgVACira72Function::GetF10p7Avg ( );
__declspec(implementation_key(2318)) void _IAgVACira72Function::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2319)) double _IAgVACira72Function::GetKp ( );
__declspec(implementation_key(2320)) void _IAgVACira72Function::PutKp ( double pVal );
__declspec(implementation_key(2321)) enum AgEVAGeoMagneticFluxSource _IAgVACira72Function::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2322)) void _IAgVACira72Function::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2323)) enum AgEVAGeoMagneticFluxUpdateRate _IAgVACira72Function::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2324)) void _IAgVACira72Function::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2325)) _bstr_t _IAgVACira72Function::GetAtmosDataFilename ( );
__declspec(implementation_key(2326)) void _IAgVACira72Function::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2327)) _bstr_t _IAgVACira72Function::GetName ( );
__declspec(implementation_key(2328)) void _IAgVACira72Function::PutName ( _bstr_t pVal );
__declspec(implementation_key(2329)) _bstr_t _IAgVACira72Function::GetUserComment ( );
__declspec(implementation_key(2330)) void _IAgVACira72Function::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2331)) _bstr_t _IAgVACira72Function::GetDescription ( );
__declspec(implementation_key(2332)) VARIANT_BOOL _IAgVACira72Function::IsReadOnly ( );
__declspec(implementation_key(2333)) IUnknownPtr _IAgVACira72Function::CloneObject ( );
__declspec(implementation_key(2334)) enum AgEVADragModelType _IAgVACira72Function::GetDragModelType ( );
__declspec(implementation_key(2335)) void _IAgVACira72Function::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2336)) _bstr_t _IAgVACira72Function::GetDragModelPluginName ( );
__declspec(implementation_key(2337)) void _IAgVACira72Function::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2338)) IAgVADragModelPluginPtr _IAgVACira72Function::GetDragModelPlugin ( );
__declspec(implementation_key(2339)) VARIANT_BOOL IAgVAExponential::GetUseApproximateAltitude ( );
__declspec(implementation_key(2340)) void IAgVAExponential::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2341)) double IAgVAExponential::GetReferenceDensity ( );
__declspec(implementation_key(2342)) void IAgVAExponential::PutReferenceDensity ( double pVal );
__declspec(implementation_key(2343)) double IAgVAExponential::GetReferenceAltitude ( );
__declspec(implementation_key(2344)) void IAgVAExponential::PutReferenceAltitude ( double pVal );
__declspec(implementation_key(2345)) double IAgVAExponential::GetScaleAltitude ( );
__declspec(implementation_key(2346)) void IAgVAExponential::PutScaleAltitude ( double pVal );
__declspec(implementation_key(2347)) enum AgEVADragModelType IAgVAExponential::GetDragModelType ( );
__declspec(implementation_key(2348)) void IAgVAExponential::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2349)) _bstr_t IAgVAExponential::GetDragModelPluginName ( );
__declspec(implementation_key(2350)) void IAgVAExponential::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2351)) IAgVADragModelPluginPtr IAgVAExponential::GetDragModelPlugin ( );
__declspec(implementation_key(2352)) VARIANT_BOOL _IAgVAExponential::GetUseApproximateAltitude ( );
__declspec(implementation_key(2353)) void _IAgVAExponential::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2354)) double _IAgVAExponential::GetReferenceDensity ( );
__declspec(implementation_key(2355)) void _IAgVAExponential::PutReferenceDensity ( double pVal );
__declspec(implementation_key(2356)) double _IAgVAExponential::GetReferenceAltitude ( );
__declspec(implementation_key(2357)) void _IAgVAExponential::PutReferenceAltitude ( double pVal );
__declspec(implementation_key(2358)) double _IAgVAExponential::GetScaleAltitude ( );
__declspec(implementation_key(2359)) void _IAgVAExponential::PutScaleAltitude ( double pVal );
__declspec(implementation_key(2360)) _bstr_t _IAgVAExponential::GetName ( );
__declspec(implementation_key(2361)) void _IAgVAExponential::PutName ( _bstr_t pVal );
__declspec(implementation_key(2362)) _bstr_t _IAgVAExponential::GetUserComment ( );
__declspec(implementation_key(2363)) void _IAgVAExponential::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2364)) _bstr_t _IAgVAExponential::GetDescription ( );
__declspec(implementation_key(2365)) VARIANT_BOOL _IAgVAExponential::IsReadOnly ( );
__declspec(implementation_key(2366)) IUnknownPtr _IAgVAExponential::CloneObject ( );
__declspec(implementation_key(2367)) enum AgEVADragModelType _IAgVAExponential::GetDragModelType ( );
__declspec(implementation_key(2368)) void _IAgVAExponential::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2369)) _bstr_t _IAgVAExponential::GetDragModelPluginName ( );
__declspec(implementation_key(2370)) void _IAgVAExponential::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2371)) IAgVADragModelPluginPtr _IAgVAExponential::GetDragModelPlugin ( );
__declspec(implementation_key(2372)) VARIANT_BOOL IAgVAHarrisPriester::GetUseApproximateAltitude ( );
__declspec(implementation_key(2373)) void IAgVAHarrisPriester::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2374)) VARIANT_BOOL IAgVAHarrisPriester::GetComputesTemperature ( );
__declspec(implementation_key(2375)) VARIANT_BOOL IAgVAHarrisPriester::GetComputesPressure ( );
__declspec(implementation_key(2376)) enum AgEVASunPosition IAgVAHarrisPriester::GetSunPosition ( );
__declspec(implementation_key(2377)) void IAgVAHarrisPriester::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2378)) enum AgEVAAtmosDataSource IAgVAHarrisPriester::GetAtmosDataSource ( );
__declspec(implementation_key(2379)) void IAgVAHarrisPriester::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2380)) double IAgVAHarrisPriester::GetF10p7Avg ( );
__declspec(implementation_key(2381)) void IAgVAHarrisPriester::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2382)) _bstr_t IAgVAHarrisPriester::GetAtmosDataFilename ( );
__declspec(implementation_key(2383)) void IAgVAHarrisPriester::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2384)) enum AgEVADragModelType IAgVAHarrisPriester::GetDragModelType ( );
__declspec(implementation_key(2385)) void IAgVAHarrisPriester::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2386)) _bstr_t IAgVAHarrisPriester::GetDragModelPluginName ( );
__declspec(implementation_key(2387)) void IAgVAHarrisPriester::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2388)) IAgVADragModelPluginPtr IAgVAHarrisPriester::GetDragModelPlugin ( );
__declspec(implementation_key(2389)) VARIANT_BOOL _IAgVAHarrisPriester::GetUseApproximateAltitude ( );
__declspec(implementation_key(2390)) void _IAgVAHarrisPriester::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2391)) VARIANT_BOOL _IAgVAHarrisPriester::GetComputesTemperature ( );
__declspec(implementation_key(2392)) VARIANT_BOOL _IAgVAHarrisPriester::GetComputesPressure ( );
__declspec(implementation_key(2393)) enum AgEVASunPosition _IAgVAHarrisPriester::GetSunPosition ( );
__declspec(implementation_key(2394)) void _IAgVAHarrisPriester::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2395)) enum AgEVAAtmosDataSource _IAgVAHarrisPriester::GetAtmosDataSource ( );
__declspec(implementation_key(2396)) void _IAgVAHarrisPriester::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2397)) double _IAgVAHarrisPriester::GetF10p7Avg ( );
__declspec(implementation_key(2398)) void _IAgVAHarrisPriester::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2399)) _bstr_t _IAgVAHarrisPriester::GetAtmosDataFilename ( );
__declspec(implementation_key(2400)) void _IAgVAHarrisPriester::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2401)) _bstr_t _IAgVAHarrisPriester::GetName ( );
__declspec(implementation_key(2402)) void _IAgVAHarrisPriester::PutName ( _bstr_t pVal );
__declspec(implementation_key(2403)) _bstr_t _IAgVAHarrisPriester::GetUserComment ( );
__declspec(implementation_key(2404)) void _IAgVAHarrisPriester::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2405)) _bstr_t _IAgVAHarrisPriester::GetDescription ( );
__declspec(implementation_key(2406)) VARIANT_BOOL _IAgVAHarrisPriester::IsReadOnly ( );
__declspec(implementation_key(2407)) IUnknownPtr _IAgVAHarrisPriester::CloneObject ( );
__declspec(implementation_key(2408)) enum AgEVADragModelType _IAgVAHarrisPriester::GetDragModelType ( );
__declspec(implementation_key(2409)) void _IAgVAHarrisPriester::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2410)) _bstr_t _IAgVAHarrisPriester::GetDragModelPluginName ( );
__declspec(implementation_key(2411)) void _IAgVAHarrisPriester::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2412)) IAgVADragModelPluginPtr _IAgVAHarrisPriester::GetDragModelPlugin ( );
__declspec(implementation_key(2413)) _bstr_t IAgVADensityModelPlugin::GetPluginIdentifier ( );
__declspec(implementation_key(2414)) void IAgVADensityModelPlugin::PutPluginIdentifier ( _bstr_t pVal );
__declspec(implementation_key(2415)) IAgVAPluginPropertiesPtr IAgVADensityModelPlugin::GetPluginConfig ( );
__declspec(implementation_key(2416)) VARIANT_BOOL IAgVADensityModelPlugin::GetUseApproximateAltitude ( );
__declspec(implementation_key(2417)) void IAgVADensityModelPlugin::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2418)) VARIANT_BOOL IAgVADensityModelPlugin::GetComputesTemperature ( );
__declspec(implementation_key(2419)) VARIANT_BOOL IAgVADensityModelPlugin::GetComputesPressure ( );
__declspec(implementation_key(2420)) enum AgEVASunPosition IAgVADensityModelPlugin::GetSunPosition ( );
__declspec(implementation_key(2421)) void IAgVADensityModelPlugin::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2422)) enum AgEVAAtmosDataSource IAgVADensityModelPlugin::GetAtmosDataSource ( );
__declspec(implementation_key(2423)) void IAgVADensityModelPlugin::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2424)) double IAgVADensityModelPlugin::GetF10 ( );
__declspec(implementation_key(2425)) void IAgVADensityModelPlugin::PutF10 ( double pVal );
__declspec(implementation_key(2426)) double IAgVADensityModelPlugin::GetF10Avg ( );
__declspec(implementation_key(2427)) void IAgVADensityModelPlugin::PutF10Avg ( double pVal );
__declspec(implementation_key(2428)) double IAgVADensityModelPlugin::GetM10 ( );
__declspec(implementation_key(2429)) void IAgVADensityModelPlugin::PutM10 ( double pVal );
__declspec(implementation_key(2430)) double IAgVADensityModelPlugin::GetM10Avg ( );
__declspec(implementation_key(2431)) void IAgVADensityModelPlugin::PutM10Avg ( double pVal );
__declspec(implementation_key(2432)) double IAgVADensityModelPlugin::GetS10 ( );
__declspec(implementation_key(2433)) void IAgVADensityModelPlugin::PutS10 ( double pVal );
__declspec(implementation_key(2434)) double IAgVADensityModelPlugin::GetS10Avg ( );
__declspec(implementation_key(2435)) void IAgVADensityModelPlugin::PutS10Avg ( double pVal );
__declspec(implementation_key(2436)) double IAgVADensityModelPlugin::GetY10 ( );
__declspec(implementation_key(2437)) void IAgVADensityModelPlugin::PutY10 ( double pVal );
__declspec(implementation_key(2438)) double IAgVADensityModelPlugin::GetY10Avg ( );
__declspec(implementation_key(2439)) void IAgVADensityModelPlugin::PutY10Avg ( double pVal );
__declspec(implementation_key(2440)) double IAgVADensityModelPlugin::GetKp ( );
__declspec(implementation_key(2441)) void IAgVADensityModelPlugin::PutKp ( double pVal );
__declspec(implementation_key(2442)) double IAgVADensityModelPlugin::GetDstDTc ( );
__declspec(implementation_key(2443)) void IAgVADensityModelPlugin::PutDstDTc ( double pVal );
__declspec(implementation_key(2444)) enum AgEVAGeoMagneticFluxSource IAgVADensityModelPlugin::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2445)) void IAgVADensityModelPlugin::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2446)) enum AgEVAGeoMagneticFluxUpdateRate IAgVADensityModelPlugin::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2447)) void IAgVADensityModelPlugin::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2448)) _bstr_t IAgVADensityModelPlugin::GetAtmosDataFilename ( );
__declspec(implementation_key(2449)) void IAgVADensityModelPlugin::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2450)) _bstr_t IAgVADensityModelPlugin::GetAtmosAugDataFile ( );
__declspec(implementation_key(2451)) void IAgVADensityModelPlugin::PutAtmosAugDataFile ( _bstr_t pVal );
__declspec(implementation_key(2452)) _bstr_t IAgVADensityModelPlugin::GetAtmosAugDTCFile ( );
__declspec(implementation_key(2453)) void IAgVADensityModelPlugin::PutAtmosAugDTCFile ( _bstr_t pVal );
__declspec(implementation_key(2454)) enum AgEVADragModelType IAgVADensityModelPlugin::GetDragModelType ( );
__declspec(implementation_key(2455)) void IAgVADensityModelPlugin::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2456)) _bstr_t IAgVADensityModelPlugin::GetDragModelPluginName ( );
__declspec(implementation_key(2457)) void IAgVADensityModelPlugin::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2458)) IAgVADragModelPluginPtr IAgVADensityModelPlugin::GetDragModelPlugin ( );
__declspec(implementation_key(2459)) VARIANT_BOOL IAgVADensityModelPlugin::GetUsesAugmentedSpaceWeather ( );
__declspec(implementation_key(2460)) _bstr_t _IAgVADensityModelPlugin::GetPluginIdentifier ( );
__declspec(implementation_key(2461)) void _IAgVADensityModelPlugin::PutPluginIdentifier ( _bstr_t pVal );
__declspec(implementation_key(2462)) IAgVAPluginPropertiesPtr _IAgVADensityModelPlugin::GetPluginConfig ( );
__declspec(implementation_key(2463)) VARIANT_BOOL _IAgVADensityModelPlugin::GetUseApproximateAltitude ( );
__declspec(implementation_key(2464)) void _IAgVADensityModelPlugin::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2465)) VARIANT_BOOL _IAgVADensityModelPlugin::GetComputesTemperature ( );
__declspec(implementation_key(2466)) VARIANT_BOOL _IAgVADensityModelPlugin::GetComputesPressure ( );
__declspec(implementation_key(2467)) enum AgEVASunPosition _IAgVADensityModelPlugin::GetSunPosition ( );
__declspec(implementation_key(2468)) void _IAgVADensityModelPlugin::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2469)) enum AgEVAAtmosDataSource _IAgVADensityModelPlugin::GetAtmosDataSource ( );
__declspec(implementation_key(2470)) void _IAgVADensityModelPlugin::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2471)) double _IAgVADensityModelPlugin::GetF10 ( );
__declspec(implementation_key(2472)) void _IAgVADensityModelPlugin::PutF10 ( double pVal );
__declspec(implementation_key(2473)) double _IAgVADensityModelPlugin::GetF10Avg ( );
__declspec(implementation_key(2474)) void _IAgVADensityModelPlugin::PutF10Avg ( double pVal );
__declspec(implementation_key(2475)) double _IAgVADensityModelPlugin::GetM10 ( );
__declspec(implementation_key(2476)) void _IAgVADensityModelPlugin::PutM10 ( double pVal );
__declspec(implementation_key(2477)) double _IAgVADensityModelPlugin::GetM10Avg ( );
__declspec(implementation_key(2478)) void _IAgVADensityModelPlugin::PutM10Avg ( double pVal );
__declspec(implementation_key(2479)) double _IAgVADensityModelPlugin::GetS10 ( );
__declspec(implementation_key(2480)) void _IAgVADensityModelPlugin::PutS10 ( double pVal );
__declspec(implementation_key(2481)) double _IAgVADensityModelPlugin::GetS10Avg ( );
__declspec(implementation_key(2482)) void _IAgVADensityModelPlugin::PutS10Avg ( double pVal );
__declspec(implementation_key(2483)) double _IAgVADensityModelPlugin::GetY10 ( );
__declspec(implementation_key(2484)) void _IAgVADensityModelPlugin::PutY10 ( double pVal );
__declspec(implementation_key(2485)) double _IAgVADensityModelPlugin::GetY10Avg ( );
__declspec(implementation_key(2486)) void _IAgVADensityModelPlugin::PutY10Avg ( double pVal );
__declspec(implementation_key(2487)) double _IAgVADensityModelPlugin::GetKp ( );
__declspec(implementation_key(2488)) void _IAgVADensityModelPlugin::PutKp ( double pVal );
__declspec(implementation_key(2489)) double _IAgVADensityModelPlugin::GetDstDTc ( );
__declspec(implementation_key(2490)) void _IAgVADensityModelPlugin::PutDstDTc ( double pVal );
__declspec(implementation_key(2491)) enum AgEVAGeoMagneticFluxSource _IAgVADensityModelPlugin::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2492)) void _IAgVADensityModelPlugin::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2493)) enum AgEVAGeoMagneticFluxUpdateRate _IAgVADensityModelPlugin::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2494)) void _IAgVADensityModelPlugin::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2495)) _bstr_t _IAgVADensityModelPlugin::GetAtmosDataFilename ( );
__declspec(implementation_key(2496)) void _IAgVADensityModelPlugin::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2497)) _bstr_t _IAgVADensityModelPlugin::GetAtmosAugDataFile ( );
__declspec(implementation_key(2498)) void _IAgVADensityModelPlugin::PutAtmosAugDataFile ( _bstr_t pVal );
__declspec(implementation_key(2499)) _bstr_t _IAgVADensityModelPlugin::GetAtmosAugDTCFile ( );
__declspec(implementation_key(2500)) void _IAgVADensityModelPlugin::PutAtmosAugDTCFile ( _bstr_t pVal );
__declspec(implementation_key(2501)) enum AgEVADragModelType _IAgVADensityModelPlugin::GetDragModelType ( );
__declspec(implementation_key(2502)) void _IAgVADensityModelPlugin::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2503)) _bstr_t _IAgVADensityModelPlugin::GetDragModelPluginName ( );
__declspec(implementation_key(2504)) void _IAgVADensityModelPlugin::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2505)) IAgVADragModelPluginPtr _IAgVADensityModelPlugin::GetDragModelPlugin ( );
__declspec(implementation_key(2506)) VARIANT_BOOL _IAgVADensityModelPlugin::GetUsesAugmentedSpaceWeather ( );
__declspec(implementation_key(2507)) _bstr_t _IAgVADensityModelPlugin::GetName ( );
__declspec(implementation_key(2508)) void _IAgVADensityModelPlugin::PutName ( _bstr_t pVal );
__declspec(implementation_key(2509)) _bstr_t _IAgVADensityModelPlugin::GetUserComment ( );
__declspec(implementation_key(2510)) void _IAgVADensityModelPlugin::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2511)) _bstr_t _IAgVADensityModelPlugin::GetDescription ( );
__declspec(implementation_key(2512)) VARIANT_BOOL _IAgVADensityModelPlugin::IsReadOnly ( );
__declspec(implementation_key(2513)) IUnknownPtr _IAgVADensityModelPlugin::CloneObject ( );
__declspec(implementation_key(2514)) VARIANT_BOOL IAgVAJacchiaRoberts::GetUseApproximateAltitude ( );
__declspec(implementation_key(2515)) void IAgVAJacchiaRoberts::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2516)) VARIANT_BOOL IAgVAJacchiaRoberts::GetComputesTemperature ( );
__declspec(implementation_key(2517)) VARIANT_BOOL IAgVAJacchiaRoberts::GetComputesPressure ( );
__declspec(implementation_key(2518)) enum AgEVASunPosition IAgVAJacchiaRoberts::GetSunPosition ( );
__declspec(implementation_key(2519)) void IAgVAJacchiaRoberts::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2520)) enum AgEVAAtmosDataSource IAgVAJacchiaRoberts::GetAtmosDataSource ( );
__declspec(implementation_key(2521)) void IAgVAJacchiaRoberts::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2522)) double IAgVAJacchiaRoberts::GetF10p7 ( );
__declspec(implementation_key(2523)) void IAgVAJacchiaRoberts::PutF10p7 ( double pVal );
__declspec(implementation_key(2524)) double IAgVAJacchiaRoberts::GetF10p7Avg ( );
__declspec(implementation_key(2525)) void IAgVAJacchiaRoberts::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2526)) double IAgVAJacchiaRoberts::GetKp ( );
__declspec(implementation_key(2527)) void IAgVAJacchiaRoberts::PutKp ( double pVal );
__declspec(implementation_key(2528)) enum AgEVAGeoMagneticFluxSource IAgVAJacchiaRoberts::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2529)) void IAgVAJacchiaRoberts::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2530)) enum AgEVAGeoMagneticFluxUpdateRate IAgVAJacchiaRoberts::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2531)) void IAgVAJacchiaRoberts::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2532)) _bstr_t IAgVAJacchiaRoberts::GetAtmosDataFilename ( );
__declspec(implementation_key(2533)) void IAgVAJacchiaRoberts::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2534)) enum AgEVADragModelType IAgVAJacchiaRoberts::GetDragModelType ( );
__declspec(implementation_key(2535)) void IAgVAJacchiaRoberts::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2536)) _bstr_t IAgVAJacchiaRoberts::GetDragModelPluginName ( );
__declspec(implementation_key(2537)) void IAgVAJacchiaRoberts::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2538)) IAgVADragModelPluginPtr IAgVAJacchiaRoberts::GetDragModelPlugin ( );
__declspec(implementation_key(2539)) VARIANT_BOOL _IAgVAJacchiaRoberts::GetUseApproximateAltitude ( );
__declspec(implementation_key(2540)) void _IAgVAJacchiaRoberts::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2541)) VARIANT_BOOL _IAgVAJacchiaRoberts::GetComputesTemperature ( );
__declspec(implementation_key(2542)) VARIANT_BOOL _IAgVAJacchiaRoberts::GetComputesPressure ( );
__declspec(implementation_key(2543)) enum AgEVASunPosition _IAgVAJacchiaRoberts::GetSunPosition ( );
__declspec(implementation_key(2544)) void _IAgVAJacchiaRoberts::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2545)) enum AgEVAAtmosDataSource _IAgVAJacchiaRoberts::GetAtmosDataSource ( );
__declspec(implementation_key(2546)) void _IAgVAJacchiaRoberts::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2547)) double _IAgVAJacchiaRoberts::GetF10p7 ( );
__declspec(implementation_key(2548)) void _IAgVAJacchiaRoberts::PutF10p7 ( double pVal );
__declspec(implementation_key(2549)) double _IAgVAJacchiaRoberts::GetF10p7Avg ( );
__declspec(implementation_key(2550)) void _IAgVAJacchiaRoberts::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2551)) double _IAgVAJacchiaRoberts::GetKp ( );
__declspec(implementation_key(2552)) void _IAgVAJacchiaRoberts::PutKp ( double pVal );
__declspec(implementation_key(2553)) enum AgEVAGeoMagneticFluxSource _IAgVAJacchiaRoberts::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2554)) void _IAgVAJacchiaRoberts::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2555)) enum AgEVAGeoMagneticFluxUpdateRate _IAgVAJacchiaRoberts::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2556)) void _IAgVAJacchiaRoberts::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2557)) _bstr_t _IAgVAJacchiaRoberts::GetName ( );
__declspec(implementation_key(2558)) void _IAgVAJacchiaRoberts::PutName ( _bstr_t pVal );
__declspec(implementation_key(2559)) _bstr_t _IAgVAJacchiaRoberts::GetUserComment ( );
__declspec(implementation_key(2560)) void _IAgVAJacchiaRoberts::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2561)) _bstr_t _IAgVAJacchiaRoberts::GetDescription ( );
__declspec(implementation_key(2562)) VARIANT_BOOL _IAgVAJacchiaRoberts::IsReadOnly ( );
__declspec(implementation_key(2563)) IUnknownPtr _IAgVAJacchiaRoberts::CloneObject ( );
__declspec(implementation_key(2564)) _bstr_t _IAgVAJacchiaRoberts::GetAtmosDataFilename ( );
__declspec(implementation_key(2565)) void _IAgVAJacchiaRoberts::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2566)) enum AgEVADragModelType _IAgVAJacchiaRoberts::GetDragModelType ( );
__declspec(implementation_key(2567)) void _IAgVAJacchiaRoberts::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2568)) _bstr_t _IAgVAJacchiaRoberts::GetDragModelPluginName ( );
__declspec(implementation_key(2569)) void _IAgVAJacchiaRoberts::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2570)) IAgVADragModelPluginPtr _IAgVAJacchiaRoberts::GetDragModelPlugin ( );
__declspec(implementation_key(2571)) VARIANT_BOOL IAgVAJacchiaBowman2008::GetUseApproximateAltitude ( );
__declspec(implementation_key(2572)) void IAgVAJacchiaBowman2008::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2573)) enum AgEVASunPosition IAgVAJacchiaBowman2008::GetSunPosition ( );
__declspec(implementation_key(2574)) void IAgVAJacchiaBowman2008::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2575)) enum AgEVAAtmosDataSource IAgVAJacchiaBowman2008::GetAtmosDataSource ( );
__declspec(implementation_key(2576)) void IAgVAJacchiaBowman2008::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2577)) double IAgVAJacchiaBowman2008::GetF10 ( );
__declspec(implementation_key(2578)) void IAgVAJacchiaBowman2008::PutF10 ( double pVal );
__declspec(implementation_key(2579)) double IAgVAJacchiaBowman2008::GetF10Avg ( );
__declspec(implementation_key(2580)) void IAgVAJacchiaBowman2008::PutF10Avg ( double pVal );
__declspec(implementation_key(2581)) double IAgVAJacchiaBowman2008::GetM10 ( );
__declspec(implementation_key(2582)) void IAgVAJacchiaBowman2008::PutM10 ( double pVal );
__declspec(implementation_key(2583)) double IAgVAJacchiaBowman2008::GetM10Avg ( );
__declspec(implementation_key(2584)) void IAgVAJacchiaBowman2008::PutM10Avg ( double pVal );
__declspec(implementation_key(2585)) double IAgVAJacchiaBowman2008::GetS10 ( );
__declspec(implementation_key(2586)) void IAgVAJacchiaBowman2008::PutS10 ( double pVal );
__declspec(implementation_key(2587)) double IAgVAJacchiaBowman2008::GetS10Avg ( );
__declspec(implementation_key(2588)) void IAgVAJacchiaBowman2008::PutS10Avg ( double pVal );
__declspec(implementation_key(2589)) double IAgVAJacchiaBowman2008::GetY10 ( );
__declspec(implementation_key(2590)) void IAgVAJacchiaBowman2008::PutY10 ( double pVal );
__declspec(implementation_key(2591)) double IAgVAJacchiaBowman2008::GetY10Avg ( );
__declspec(implementation_key(2592)) void IAgVAJacchiaBowman2008::PutY10Avg ( double pVal );
__declspec(implementation_key(2593)) double IAgVAJacchiaBowman2008::GetDstDTc ( );
__declspec(implementation_key(2594)) void IAgVAJacchiaBowman2008::PutDstDTc ( double pVal );
__declspec(implementation_key(2595)) _bstr_t IAgVAJacchiaBowman2008::GetAtmosAugDataFile ( );
__declspec(implementation_key(2596)) void IAgVAJacchiaBowman2008::PutAtmosAugDataFile ( _bstr_t pVal );
__declspec(implementation_key(2597)) _bstr_t IAgVAJacchiaBowman2008::GetAtmosAugDTCFile ( );
__declspec(implementation_key(2598)) void IAgVAJacchiaBowman2008::PutAtmosAugDTCFile ( _bstr_t pVal );
__declspec(implementation_key(2599)) enum AgEVADragModelType IAgVAJacchiaBowman2008::GetDragModelType ( );
__declspec(implementation_key(2600)) void IAgVAJacchiaBowman2008::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2601)) _bstr_t IAgVAJacchiaBowman2008::GetDragModelPluginName ( );
__declspec(implementation_key(2602)) void IAgVAJacchiaBowman2008::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2603)) IAgVADragModelPluginPtr IAgVAJacchiaBowman2008::GetDragModelPlugin ( );
__declspec(implementation_key(2604)) VARIANT_BOOL _IAgVAJacchiaBowman2008::GetUseApproximateAltitude ( );
__declspec(implementation_key(2605)) void _IAgVAJacchiaBowman2008::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2606)) enum AgEVASunPosition _IAgVAJacchiaBowman2008::GetSunPosition ( );
__declspec(implementation_key(2607)) void _IAgVAJacchiaBowman2008::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2608)) enum AgEVAAtmosDataSource _IAgVAJacchiaBowman2008::GetAtmosDataSource ( );
__declspec(implementation_key(2609)) void _IAgVAJacchiaBowman2008::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2610)) double _IAgVAJacchiaBowman2008::GetF10 ( );
__declspec(implementation_key(2611)) void _IAgVAJacchiaBowman2008::PutF10 ( double pVal );
__declspec(implementation_key(2612)) double _IAgVAJacchiaBowman2008::GetF10Avg ( );
__declspec(implementation_key(2613)) void _IAgVAJacchiaBowman2008::PutF10Avg ( double pVal );
__declspec(implementation_key(2614)) double _IAgVAJacchiaBowman2008::GetM10 ( );
__declspec(implementation_key(2615)) void _IAgVAJacchiaBowman2008::PutM10 ( double pVal );
__declspec(implementation_key(2616)) double _IAgVAJacchiaBowman2008::GetM10Avg ( );
__declspec(implementation_key(2617)) void _IAgVAJacchiaBowman2008::PutM10Avg ( double pVal );
__declspec(implementation_key(2618)) double _IAgVAJacchiaBowman2008::GetS10 ( );
__declspec(implementation_key(2619)) void _IAgVAJacchiaBowman2008::PutS10 ( double pVal );
__declspec(implementation_key(2620)) double _IAgVAJacchiaBowman2008::GetS10Avg ( );
__declspec(implementation_key(2621)) void _IAgVAJacchiaBowman2008::PutS10Avg ( double pVal );
__declspec(implementation_key(2622)) double _IAgVAJacchiaBowman2008::GetY10 ( );
__declspec(implementation_key(2623)) void _IAgVAJacchiaBowman2008::PutY10 ( double pVal );
__declspec(implementation_key(2624)) double _IAgVAJacchiaBowman2008::GetY10Avg ( );
__declspec(implementation_key(2625)) void _IAgVAJacchiaBowman2008::PutY10Avg ( double pVal );
__declspec(implementation_key(2626)) double _IAgVAJacchiaBowman2008::GetDstDTc ( );
__declspec(implementation_key(2627)) void _IAgVAJacchiaBowman2008::PutDstDTc ( double pVal );
__declspec(implementation_key(2628)) _bstr_t _IAgVAJacchiaBowman2008::GetAtmosAugDataFile ( );
__declspec(implementation_key(2629)) void _IAgVAJacchiaBowman2008::PutAtmosAugDataFile ( _bstr_t pVal );
__declspec(implementation_key(2630)) _bstr_t _IAgVAJacchiaBowman2008::GetAtmosAugDTCFile ( );
__declspec(implementation_key(2631)) void _IAgVAJacchiaBowman2008::PutAtmosAugDTCFile ( _bstr_t pVal );
__declspec(implementation_key(2632)) enum AgEVADragModelType _IAgVAJacchiaBowman2008::GetDragModelType ( );
__declspec(implementation_key(2633)) void _IAgVAJacchiaBowman2008::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2634)) _bstr_t _IAgVAJacchiaBowman2008::GetDragModelPluginName ( );
__declspec(implementation_key(2635)) void _IAgVAJacchiaBowman2008::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2636)) IAgVADragModelPluginPtr _IAgVAJacchiaBowman2008::GetDragModelPlugin ( );
__declspec(implementation_key(2637)) _bstr_t _IAgVAJacchiaBowman2008::GetName ( );
__declspec(implementation_key(2638)) void _IAgVAJacchiaBowman2008::PutName ( _bstr_t pVal );
__declspec(implementation_key(2639)) _bstr_t _IAgVAJacchiaBowman2008::GetUserComment ( );
__declspec(implementation_key(2640)) void _IAgVAJacchiaBowman2008::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2641)) _bstr_t _IAgVAJacchiaBowman2008::GetDescription ( );
__declspec(implementation_key(2642)) VARIANT_BOOL _IAgVAJacchiaBowman2008::IsReadOnly ( );
__declspec(implementation_key(2643)) IUnknownPtr _IAgVAJacchiaBowman2008::CloneObject ( );
__declspec(implementation_key(2644)) VARIANT_BOOL IAgVAJacchia_1960::GetUseApproximateAltitude ( );
__declspec(implementation_key(2645)) void IAgVAJacchia_1960::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2646)) VARIANT_BOOL IAgVAJacchia_1960::GetComputesTemperature ( );
__declspec(implementation_key(2647)) VARIANT_BOOL IAgVAJacchia_1960::GetComputesPressure ( );
__declspec(implementation_key(2648)) enum AgEVASunPosition IAgVAJacchia_1960::GetSunPosition ( );
__declspec(implementation_key(2649)) void IAgVAJacchia_1960::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2650)) enum AgEVADragModelType IAgVAJacchia_1960::GetDragModelType ( );
__declspec(implementation_key(2651)) void IAgVAJacchia_1960::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2652)) _bstr_t IAgVAJacchia_1960::GetDragModelPluginName ( );
__declspec(implementation_key(2653)) void IAgVAJacchia_1960::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2654)) IAgVADragModelPluginPtr IAgVAJacchia_1960::GetDragModelPlugin ( );
__declspec(implementation_key(2655)) VARIANT_BOOL _IAgVAJacchia_1960::GetUseApproximateAltitude ( );
__declspec(implementation_key(2656)) void _IAgVAJacchia_1960::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2657)) VARIANT_BOOL _IAgVAJacchia_1960::GetComputesTemperature ( );
__declspec(implementation_key(2658)) VARIANT_BOOL _IAgVAJacchia_1960::GetComputesPressure ( );
__declspec(implementation_key(2659)) enum AgEVASunPosition _IAgVAJacchia_1960::GetSunPosition ( );
__declspec(implementation_key(2660)) void _IAgVAJacchia_1960::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2661)) _bstr_t _IAgVAJacchia_1960::GetName ( );
__declspec(implementation_key(2662)) void _IAgVAJacchia_1960::PutName ( _bstr_t pVal );
__declspec(implementation_key(2663)) _bstr_t _IAgVAJacchia_1960::GetUserComment ( );
__declspec(implementation_key(2664)) void _IAgVAJacchia_1960::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2665)) _bstr_t _IAgVAJacchia_1960::GetDescription ( );
__declspec(implementation_key(2666)) VARIANT_BOOL _IAgVAJacchia_1960::IsReadOnly ( );
__declspec(implementation_key(2667)) IUnknownPtr _IAgVAJacchia_1960::CloneObject ( );
__declspec(implementation_key(2668)) enum AgEVADragModelType _IAgVAJacchia_1960::GetDragModelType ( );
__declspec(implementation_key(2669)) void _IAgVAJacchia_1960::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2670)) _bstr_t _IAgVAJacchia_1960::GetDragModelPluginName ( );
__declspec(implementation_key(2671)) void _IAgVAJacchia_1960::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2672)) IAgVADragModelPluginPtr _IAgVAJacchia_1960::GetDragModelPlugin ( );
__declspec(implementation_key(2673)) VARIANT_BOOL IAgVAJacchia_1970::GetUseApproximateAltitude ( );
__declspec(implementation_key(2674)) void IAgVAJacchia_1970::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2675)) VARIANT_BOOL IAgVAJacchia_1970::GetComputesTemperature ( );
__declspec(implementation_key(2676)) VARIANT_BOOL IAgVAJacchia_1970::GetComputesPressure ( );
__declspec(implementation_key(2677)) enum AgEVASunPosition IAgVAJacchia_1970::GetSunPosition ( );
__declspec(implementation_key(2678)) void IAgVAJacchia_1970::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2679)) enum AgEVAAtmosDataSource IAgVAJacchia_1970::GetAtmosDataSource ( );
__declspec(implementation_key(2680)) void IAgVAJacchia_1970::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2681)) double IAgVAJacchia_1970::GetF10p7 ( );
__declspec(implementation_key(2682)) void IAgVAJacchia_1970::PutF10p7 ( double pVal );
__declspec(implementation_key(2683)) double IAgVAJacchia_1970::GetF10p7Avg ( );
__declspec(implementation_key(2684)) void IAgVAJacchia_1970::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2685)) double IAgVAJacchia_1970::GetKp ( );
__declspec(implementation_key(2686)) void IAgVAJacchia_1970::PutKp ( double pVal );
__declspec(implementation_key(2687)) enum AgEVAGeoMagneticFluxSource IAgVAJacchia_1970::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2688)) void IAgVAJacchia_1970::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2689)) enum AgEVAGeoMagneticFluxUpdateRate IAgVAJacchia_1970::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2690)) void IAgVAJacchia_1970::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2691)) _bstr_t IAgVAJacchia_1970::GetAtmosDataFilename ( );
__declspec(implementation_key(2692)) void IAgVAJacchia_1970::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2693)) enum AgEVADragModelType IAgVAJacchia_1970::GetDragModelType ( );
__declspec(implementation_key(2694)) void IAgVAJacchia_1970::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2695)) _bstr_t IAgVAJacchia_1970::GetDragModelPluginName ( );
__declspec(implementation_key(2696)) void IAgVAJacchia_1970::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2697)) IAgVADragModelPluginPtr IAgVAJacchia_1970::GetDragModelPlugin ( );
__declspec(implementation_key(2698)) VARIANT_BOOL _IAgVAJacchia_1970::GetUseApproximateAltitude ( );
__declspec(implementation_key(2699)) void _IAgVAJacchia_1970::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2700)) VARIANT_BOOL _IAgVAJacchia_1970::GetComputesTemperature ( );
__declspec(implementation_key(2701)) VARIANT_BOOL _IAgVAJacchia_1970::GetComputesPressure ( );
__declspec(implementation_key(2702)) enum AgEVASunPosition _IAgVAJacchia_1970::GetSunPosition ( );
__declspec(implementation_key(2703)) void _IAgVAJacchia_1970::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2704)) enum AgEVAAtmosDataSource _IAgVAJacchia_1970::GetAtmosDataSource ( );
__declspec(implementation_key(2705)) void _IAgVAJacchia_1970::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2706)) double _IAgVAJacchia_1970::GetF10p7 ( );
__declspec(implementation_key(2707)) void _IAgVAJacchia_1970::PutF10p7 ( double pVal );
__declspec(implementation_key(2708)) double _IAgVAJacchia_1970::GetF10p7Avg ( );
__declspec(implementation_key(2709)) void _IAgVAJacchia_1970::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2710)) double _IAgVAJacchia_1970::GetKp ( );
__declspec(implementation_key(2711)) void _IAgVAJacchia_1970::PutKp ( double pVal );
__declspec(implementation_key(2712)) enum AgEVAGeoMagneticFluxSource _IAgVAJacchia_1970::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2713)) void _IAgVAJacchia_1970::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2714)) enum AgEVAGeoMagneticFluxUpdateRate _IAgVAJacchia_1970::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2715)) void _IAgVAJacchia_1970::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2716)) _bstr_t _IAgVAJacchia_1970::GetName ( );
__declspec(implementation_key(2717)) void _IAgVAJacchia_1970::PutName ( _bstr_t pVal );
__declspec(implementation_key(2718)) _bstr_t _IAgVAJacchia_1970::GetUserComment ( );
__declspec(implementation_key(2719)) void _IAgVAJacchia_1970::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2720)) _bstr_t _IAgVAJacchia_1970::GetDescription ( );
__declspec(implementation_key(2721)) VARIANT_BOOL _IAgVAJacchia_1970::IsReadOnly ( );
__declspec(implementation_key(2722)) IUnknownPtr _IAgVAJacchia_1970::CloneObject ( );
__declspec(implementation_key(2723)) _bstr_t _IAgVAJacchia_1970::GetAtmosDataFilename ( );
__declspec(implementation_key(2724)) void _IAgVAJacchia_1970::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2725)) enum AgEVADragModelType _IAgVAJacchia_1970::GetDragModelType ( );
__declspec(implementation_key(2726)) void _IAgVAJacchia_1970::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2727)) _bstr_t _IAgVAJacchia_1970::GetDragModelPluginName ( );
__declspec(implementation_key(2728)) void _IAgVAJacchia_1970::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2729)) IAgVADragModelPluginPtr _IAgVAJacchia_1970::GetDragModelPlugin ( );
__declspec(implementation_key(2730)) VARIANT_BOOL IAgVAJacchia_1971::GetUseApproximateAltitude ( );
__declspec(implementation_key(2731)) void IAgVAJacchia_1971::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2732)) VARIANT_BOOL IAgVAJacchia_1971::GetComputesTemperature ( );
__declspec(implementation_key(2733)) VARIANT_BOOL IAgVAJacchia_1971::GetComputesPressure ( );
__declspec(implementation_key(2734)) enum AgEVASunPosition IAgVAJacchia_1971::GetSunPosition ( );
__declspec(implementation_key(2735)) void IAgVAJacchia_1971::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2736)) enum AgEVAAtmosDataSource IAgVAJacchia_1971::GetAtmosDataSource ( );
__declspec(implementation_key(2737)) void IAgVAJacchia_1971::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2738)) double IAgVAJacchia_1971::GetF10p7 ( );
__declspec(implementation_key(2739)) void IAgVAJacchia_1971::PutF10p7 ( double pVal );
__declspec(implementation_key(2740)) double IAgVAJacchia_1971::GetF10p7Avg ( );
__declspec(implementation_key(2741)) void IAgVAJacchia_1971::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2742)) double IAgVAJacchia_1971::GetKp ( );
__declspec(implementation_key(2743)) void IAgVAJacchia_1971::PutKp ( double pVal );
__declspec(implementation_key(2744)) enum AgEVAGeoMagneticFluxSource IAgVAJacchia_1971::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2745)) void IAgVAJacchia_1971::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2746)) enum AgEVAGeoMagneticFluxUpdateRate IAgVAJacchia_1971::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2747)) void IAgVAJacchia_1971::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2748)) _bstr_t IAgVAJacchia_1971::GetAtmosDataFilename ( );
__declspec(implementation_key(2749)) void IAgVAJacchia_1971::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2750)) enum AgEVADragModelType IAgVAJacchia_1971::GetDragModelType ( );
__declspec(implementation_key(2751)) void IAgVAJacchia_1971::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2752)) _bstr_t IAgVAJacchia_1971::GetDragModelPluginName ( );
__declspec(implementation_key(2753)) void IAgVAJacchia_1971::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2754)) IAgVADragModelPluginPtr IAgVAJacchia_1971::GetDragModelPlugin ( );
__declspec(implementation_key(2755)) VARIANT_BOOL _IAgVAJacchia_1971::GetUseApproximateAltitude ( );
__declspec(implementation_key(2756)) void _IAgVAJacchia_1971::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2757)) VARIANT_BOOL _IAgVAJacchia_1971::GetComputesTemperature ( );
__declspec(implementation_key(2758)) VARIANT_BOOL _IAgVAJacchia_1971::GetComputesPressure ( );
__declspec(implementation_key(2759)) enum AgEVASunPosition _IAgVAJacchia_1971::GetSunPosition ( );
__declspec(implementation_key(2760)) void _IAgVAJacchia_1971::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2761)) enum AgEVAAtmosDataSource _IAgVAJacchia_1971::GetAtmosDataSource ( );
__declspec(implementation_key(2762)) void _IAgVAJacchia_1971::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2763)) double _IAgVAJacchia_1971::GetF10p7 ( );
__declspec(implementation_key(2764)) void _IAgVAJacchia_1971::PutF10p7 ( double pVal );
__declspec(implementation_key(2765)) double _IAgVAJacchia_1971::GetF10p7Avg ( );
__declspec(implementation_key(2766)) void _IAgVAJacchia_1971::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2767)) double _IAgVAJacchia_1971::GetKp ( );
__declspec(implementation_key(2768)) void _IAgVAJacchia_1971::PutKp ( double pVal );
__declspec(implementation_key(2769)) enum AgEVAGeoMagneticFluxSource _IAgVAJacchia_1971::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2770)) void _IAgVAJacchia_1971::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2771)) enum AgEVAGeoMagneticFluxUpdateRate _IAgVAJacchia_1971::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2772)) void _IAgVAJacchia_1971::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2773)) _bstr_t _IAgVAJacchia_1971::GetName ( );
__declspec(implementation_key(2774)) void _IAgVAJacchia_1971::PutName ( _bstr_t pVal );
__declspec(implementation_key(2775)) _bstr_t _IAgVAJacchia_1971::GetUserComment ( );
__declspec(implementation_key(2776)) void _IAgVAJacchia_1971::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2777)) _bstr_t _IAgVAJacchia_1971::GetDescription ( );
__declspec(implementation_key(2778)) VARIANT_BOOL _IAgVAJacchia_1971::IsReadOnly ( );
__declspec(implementation_key(2779)) IUnknownPtr _IAgVAJacchia_1971::CloneObject ( );
__declspec(implementation_key(2780)) _bstr_t _IAgVAJacchia_1971::GetAtmosDataFilename ( );
__declspec(implementation_key(2781)) void _IAgVAJacchia_1971::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2782)) enum AgEVADragModelType _IAgVAJacchia_1971::GetDragModelType ( );
__declspec(implementation_key(2783)) void _IAgVAJacchia_1971::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2784)) _bstr_t _IAgVAJacchia_1971::GetDragModelPluginName ( );
__declspec(implementation_key(2785)) void _IAgVAJacchia_1971::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2786)) IAgVADragModelPluginPtr _IAgVAJacchia_1971::GetDragModelPlugin ( );
__declspec(implementation_key(2787)) VARIANT_BOOL IAgVAMSISE_1990::GetUseApproximateAltitude ( );
__declspec(implementation_key(2788)) void IAgVAMSISE_1990::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2789)) VARIANT_BOOL IAgVAMSISE_1990::GetComputesTemperature ( );
__declspec(implementation_key(2790)) VARIANT_BOOL IAgVAMSISE_1990::GetComputesPressure ( );
__declspec(implementation_key(2791)) enum AgEVASunPosition IAgVAMSISE_1990::GetSunPosition ( );
__declspec(implementation_key(2792)) void IAgVAMSISE_1990::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2793)) enum AgEVAAtmosDataSource IAgVAMSISE_1990::GetAtmosDataSource ( );
__declspec(implementation_key(2794)) void IAgVAMSISE_1990::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2795)) double IAgVAMSISE_1990::GetF10p7 ( );
__declspec(implementation_key(2796)) void IAgVAMSISE_1990::PutF10p7 ( double pVal );
__declspec(implementation_key(2797)) double IAgVAMSISE_1990::GetF10p7Avg ( );
__declspec(implementation_key(2798)) void IAgVAMSISE_1990::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2799)) double IAgVAMSISE_1990::GetKp ( );
__declspec(implementation_key(2800)) void IAgVAMSISE_1990::PutKp ( double pVal );
__declspec(implementation_key(2801)) enum AgEVAGeoMagneticFluxSource IAgVAMSISE_1990::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2802)) void IAgVAMSISE_1990::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2803)) enum AgEVAGeoMagneticFluxUpdateRate IAgVAMSISE_1990::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2804)) void IAgVAMSISE_1990::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2805)) _bstr_t IAgVAMSISE_1990::GetAtmosDataFilename ( );
__declspec(implementation_key(2806)) void IAgVAMSISE_1990::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2807)) enum AgEVADragModelType IAgVAMSISE_1990::GetDragModelType ( );
__declspec(implementation_key(2808)) void IAgVAMSISE_1990::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2809)) _bstr_t IAgVAMSISE_1990::GetDragModelPluginName ( );
__declspec(implementation_key(2810)) void IAgVAMSISE_1990::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2811)) IAgVADragModelPluginPtr IAgVAMSISE_1990::GetDragModelPlugin ( );
__declspec(implementation_key(2812)) VARIANT_BOOL _IAgVAMSISE_1990::GetUseApproximateAltitude ( );
__declspec(implementation_key(2813)) void _IAgVAMSISE_1990::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2814)) VARIANT_BOOL _IAgVAMSISE_1990::GetComputesTemperature ( );
__declspec(implementation_key(2815)) VARIANT_BOOL _IAgVAMSISE_1990::GetComputesPressure ( );
__declspec(implementation_key(2816)) enum AgEVASunPosition _IAgVAMSISE_1990::GetSunPosition ( );
__declspec(implementation_key(2817)) void _IAgVAMSISE_1990::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2818)) enum AgEVAAtmosDataSource _IAgVAMSISE_1990::GetAtmosDataSource ( );
__declspec(implementation_key(2819)) void _IAgVAMSISE_1990::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2820)) double _IAgVAMSISE_1990::GetF10p7 ( );
__declspec(implementation_key(2821)) void _IAgVAMSISE_1990::PutF10p7 ( double pVal );
__declspec(implementation_key(2822)) double _IAgVAMSISE_1990::GetF10p7Avg ( );
__declspec(implementation_key(2823)) void _IAgVAMSISE_1990::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2824)) double _IAgVAMSISE_1990::GetKp ( );
__declspec(implementation_key(2825)) void _IAgVAMSISE_1990::PutKp ( double pVal );
__declspec(implementation_key(2826)) enum AgEVAGeoMagneticFluxSource _IAgVAMSISE_1990::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2827)) void _IAgVAMSISE_1990::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2828)) enum AgEVAGeoMagneticFluxUpdateRate _IAgVAMSISE_1990::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2829)) void _IAgVAMSISE_1990::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2830)) _bstr_t _IAgVAMSISE_1990::GetAtmosDataFilename ( );
__declspec(implementation_key(2831)) void _IAgVAMSISE_1990::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2832)) _bstr_t _IAgVAMSISE_1990::GetName ( );
__declspec(implementation_key(2833)) void _IAgVAMSISE_1990::PutName ( _bstr_t pVal );
__declspec(implementation_key(2834)) _bstr_t _IAgVAMSISE_1990::GetUserComment ( );
__declspec(implementation_key(2835)) void _IAgVAMSISE_1990::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2836)) _bstr_t _IAgVAMSISE_1990::GetDescription ( );
__declspec(implementation_key(2837)) VARIANT_BOOL _IAgVAMSISE_1990::IsReadOnly ( );
__declspec(implementation_key(2838)) IUnknownPtr _IAgVAMSISE_1990::CloneObject ( );
__declspec(implementation_key(2839)) enum AgEVADragModelType _IAgVAMSISE_1990::GetDragModelType ( );
__declspec(implementation_key(2840)) void _IAgVAMSISE_1990::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2841)) _bstr_t _IAgVAMSISE_1990::GetDragModelPluginName ( );
__declspec(implementation_key(2842)) void _IAgVAMSISE_1990::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2843)) IAgVADragModelPluginPtr _IAgVAMSISE_1990::GetDragModelPlugin ( );
__declspec(implementation_key(2844)) VARIANT_BOOL IAgVAMSIS_1986::GetUseApproximateAltitude ( );
__declspec(implementation_key(2845)) void IAgVAMSIS_1986::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2846)) VARIANT_BOOL IAgVAMSIS_1986::GetComputesTemperature ( );
__declspec(implementation_key(2847)) VARIANT_BOOL IAgVAMSIS_1986::GetComputesPressure ( );
__declspec(implementation_key(2848)) enum AgEVASunPosition IAgVAMSIS_1986::GetSunPosition ( );
__declspec(implementation_key(2849)) void IAgVAMSIS_1986::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2850)) enum AgEVAAtmosDataSource IAgVAMSIS_1986::GetAtmosDataSource ( );
__declspec(implementation_key(2851)) void IAgVAMSIS_1986::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2852)) double IAgVAMSIS_1986::GetF10p7 ( );
__declspec(implementation_key(2853)) void IAgVAMSIS_1986::PutF10p7 ( double pVal );
__declspec(implementation_key(2854)) double IAgVAMSIS_1986::GetF10p7Avg ( );
__declspec(implementation_key(2855)) void IAgVAMSIS_1986::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2856)) double IAgVAMSIS_1986::GetKp ( );
__declspec(implementation_key(2857)) void IAgVAMSIS_1986::PutKp ( double pVal );
__declspec(implementation_key(2858)) enum AgEVAGeoMagneticFluxSource IAgVAMSIS_1986::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2859)) void IAgVAMSIS_1986::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2860)) enum AgEVAGeoMagneticFluxUpdateRate IAgVAMSIS_1986::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2861)) void IAgVAMSIS_1986::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2862)) _bstr_t IAgVAMSIS_1986::GetAtmosDataFilename ( );
__declspec(implementation_key(2863)) void IAgVAMSIS_1986::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2864)) enum AgEVADragModelType IAgVAMSIS_1986::GetDragModelType ( );
__declspec(implementation_key(2865)) void IAgVAMSIS_1986::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2866)) _bstr_t IAgVAMSIS_1986::GetDragModelPluginName ( );
__declspec(implementation_key(2867)) void IAgVAMSIS_1986::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2868)) IAgVADragModelPluginPtr IAgVAMSIS_1986::GetDragModelPlugin ( );
__declspec(implementation_key(2869)) VARIANT_BOOL _IAgVAMSIS_1986::GetUseApproximateAltitude ( );
__declspec(implementation_key(2870)) void _IAgVAMSIS_1986::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2871)) VARIANT_BOOL _IAgVAMSIS_1986::GetComputesTemperature ( );
__declspec(implementation_key(2872)) VARIANT_BOOL _IAgVAMSIS_1986::GetComputesPressure ( );
__declspec(implementation_key(2873)) enum AgEVASunPosition _IAgVAMSIS_1986::GetSunPosition ( );
__declspec(implementation_key(2874)) void _IAgVAMSIS_1986::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2875)) enum AgEVAAtmosDataSource _IAgVAMSIS_1986::GetAtmosDataSource ( );
__declspec(implementation_key(2876)) void _IAgVAMSIS_1986::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2877)) double _IAgVAMSIS_1986::GetF10p7 ( );
__declspec(implementation_key(2878)) void _IAgVAMSIS_1986::PutF10p7 ( double pVal );
__declspec(implementation_key(2879)) double _IAgVAMSIS_1986::GetF10p7Avg ( );
__declspec(implementation_key(2880)) void _IAgVAMSIS_1986::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2881)) double _IAgVAMSIS_1986::GetKp ( );
__declspec(implementation_key(2882)) void _IAgVAMSIS_1986::PutKp ( double pVal );
__declspec(implementation_key(2883)) enum AgEVAGeoMagneticFluxSource _IAgVAMSIS_1986::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2884)) void _IAgVAMSIS_1986::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2885)) enum AgEVAGeoMagneticFluxUpdateRate _IAgVAMSIS_1986::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2886)) void _IAgVAMSIS_1986::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2887)) _bstr_t _IAgVAMSIS_1986::GetAtmosDataFilename ( );
__declspec(implementation_key(2888)) void _IAgVAMSIS_1986::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2889)) _bstr_t _IAgVAMSIS_1986::GetName ( );
__declspec(implementation_key(2890)) void _IAgVAMSIS_1986::PutName ( _bstr_t pVal );
__declspec(implementation_key(2891)) _bstr_t _IAgVAMSIS_1986::GetUserComment ( );
__declspec(implementation_key(2892)) void _IAgVAMSIS_1986::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2893)) _bstr_t _IAgVAMSIS_1986::GetDescription ( );
__declspec(implementation_key(2894)) VARIANT_BOOL _IAgVAMSIS_1986::IsReadOnly ( );
__declspec(implementation_key(2895)) IUnknownPtr _IAgVAMSIS_1986::CloneObject ( );
__declspec(implementation_key(2896)) enum AgEVADragModelType _IAgVAMSIS_1986::GetDragModelType ( );
__declspec(implementation_key(2897)) void _IAgVAMSIS_1986::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2898)) _bstr_t _IAgVAMSIS_1986::GetDragModelPluginName ( );
__declspec(implementation_key(2899)) void _IAgVAMSIS_1986::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2900)) IAgVADragModelPluginPtr _IAgVAMSIS_1986::GetDragModelPlugin ( );
__declspec(implementation_key(2901)) VARIANT_BOOL IAgVANRLMSISE_2000::GetUseApproximateAltitude ( );
__declspec(implementation_key(2902)) void IAgVANRLMSISE_2000::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2903)) VARIANT_BOOL IAgVANRLMSISE_2000::GetComputesTemperature ( );
__declspec(implementation_key(2904)) VARIANT_BOOL IAgVANRLMSISE_2000::GetComputesPressure ( );
__declspec(implementation_key(2905)) enum AgEVASunPosition IAgVANRLMSISE_2000::GetSunPosition ( );
__declspec(implementation_key(2906)) void IAgVANRLMSISE_2000::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2907)) enum AgEVAAtmosDataSource IAgVANRLMSISE_2000::GetAtmosDataSource ( );
__declspec(implementation_key(2908)) void IAgVANRLMSISE_2000::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2909)) double IAgVANRLMSISE_2000::GetF10p7 ( );
__declspec(implementation_key(2910)) void IAgVANRLMSISE_2000::PutF10p7 ( double pVal );
__declspec(implementation_key(2911)) double IAgVANRLMSISE_2000::GetF10p7Avg ( );
__declspec(implementation_key(2912)) void IAgVANRLMSISE_2000::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2913)) double IAgVANRLMSISE_2000::GetKp ( );
__declspec(implementation_key(2914)) void IAgVANRLMSISE_2000::PutKp ( double pVal );
__declspec(implementation_key(2915)) enum AgEVAGeoMagneticFluxSource IAgVANRLMSISE_2000::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2916)) void IAgVANRLMSISE_2000::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2917)) enum AgEVAGeoMagneticFluxUpdateRate IAgVANRLMSISE_2000::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2918)) void IAgVANRLMSISE_2000::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2919)) _bstr_t IAgVANRLMSISE_2000::GetAtmosDataFilename ( );
__declspec(implementation_key(2920)) void IAgVANRLMSISE_2000::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2921)) enum AgEVADragModelType IAgVANRLMSISE_2000::GetDragModelType ( );
__declspec(implementation_key(2922)) void IAgVANRLMSISE_2000::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2923)) _bstr_t IAgVANRLMSISE_2000::GetDragModelPluginName ( );
__declspec(implementation_key(2924)) void IAgVANRLMSISE_2000::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2925)) IAgVADragModelPluginPtr IAgVANRLMSISE_2000::GetDragModelPlugin ( );
__declspec(implementation_key(2926)) VARIANT_BOOL _IAgVANRLMSISE_2000::GetUseApproximateAltitude ( );
__declspec(implementation_key(2927)) void _IAgVANRLMSISE_2000::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2928)) VARIANT_BOOL _IAgVANRLMSISE_2000::GetComputesTemperature ( );
__declspec(implementation_key(2929)) VARIANT_BOOL _IAgVANRLMSISE_2000::GetComputesPressure ( );
__declspec(implementation_key(2930)) enum AgEVASunPosition _IAgVANRLMSISE_2000::GetSunPosition ( );
__declspec(implementation_key(2931)) void _IAgVANRLMSISE_2000::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2932)) enum AgEVAAtmosDataSource _IAgVANRLMSISE_2000::GetAtmosDataSource ( );
__declspec(implementation_key(2933)) void _IAgVANRLMSISE_2000::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2934)) double _IAgVANRLMSISE_2000::GetF10p7 ( );
__declspec(implementation_key(2935)) void _IAgVANRLMSISE_2000::PutF10p7 ( double pVal );
__declspec(implementation_key(2936)) double _IAgVANRLMSISE_2000::GetF10p7Avg ( );
__declspec(implementation_key(2937)) void _IAgVANRLMSISE_2000::PutF10p7Avg ( double pVal );
__declspec(implementation_key(2938)) double _IAgVANRLMSISE_2000::GetKp ( );
__declspec(implementation_key(2939)) void _IAgVANRLMSISE_2000::PutKp ( double pVal );
__declspec(implementation_key(2940)) enum AgEVAGeoMagneticFluxSource _IAgVANRLMSISE_2000::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(2941)) void _IAgVANRLMSISE_2000::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(2942)) enum AgEVAGeoMagneticFluxUpdateRate _IAgVANRLMSISE_2000::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(2943)) void _IAgVANRLMSISE_2000::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(2944)) _bstr_t _IAgVANRLMSISE_2000::GetAtmosDataFilename ( );
__declspec(implementation_key(2945)) void _IAgVANRLMSISE_2000::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(2946)) _bstr_t _IAgVANRLMSISE_2000::GetName ( );
__declspec(implementation_key(2947)) void _IAgVANRLMSISE_2000::PutName ( _bstr_t pVal );
__declspec(implementation_key(2948)) _bstr_t _IAgVANRLMSISE_2000::GetUserComment ( );
__declspec(implementation_key(2949)) void _IAgVANRLMSISE_2000::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2950)) _bstr_t _IAgVANRLMSISE_2000::GetDescription ( );
__declspec(implementation_key(2951)) VARIANT_BOOL _IAgVANRLMSISE_2000::IsReadOnly ( );
__declspec(implementation_key(2952)) IUnknownPtr _IAgVANRLMSISE_2000::CloneObject ( );
__declspec(implementation_key(2953)) enum AgEVADragModelType _IAgVANRLMSISE_2000::GetDragModelType ( );
__declspec(implementation_key(2954)) void _IAgVANRLMSISE_2000::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2955)) _bstr_t _IAgVANRLMSISE_2000::GetDragModelPluginName ( );
__declspec(implementation_key(2956)) void _IAgVANRLMSISE_2000::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2957)) IAgVADragModelPluginPtr _IAgVANRLMSISE_2000::GetDragModelPlugin ( );
__declspec(implementation_key(2958)) VARIANT_BOOL IAgVAUS_Standard_Atmosphere::GetUseApproximateAltitude ( );
__declspec(implementation_key(2959)) void IAgVAUS_Standard_Atmosphere::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2960)) VARIANT_BOOL IAgVAUS_Standard_Atmosphere::GetComputesTemperature ( );
__declspec(implementation_key(2961)) VARIANT_BOOL IAgVAUS_Standard_Atmosphere::GetComputesPressure ( );
__declspec(implementation_key(2962)) enum AgEVADragModelType IAgVAUS_Standard_Atmosphere::GetDragModelType ( );
__declspec(implementation_key(2963)) void IAgVAUS_Standard_Atmosphere::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2964)) _bstr_t IAgVAUS_Standard_Atmosphere::GetDragModelPluginName ( );
__declspec(implementation_key(2965)) void IAgVAUS_Standard_Atmosphere::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2966)) IAgVADragModelPluginPtr IAgVAUS_Standard_Atmosphere::GetDragModelPlugin ( );
__declspec(implementation_key(2967)) VARIANT_BOOL _IAgVAUS_Standard_Atmosphere::GetUseApproximateAltitude ( );
__declspec(implementation_key(2968)) void _IAgVAUS_Standard_Atmosphere::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2969)) VARIANT_BOOL _IAgVAUS_Standard_Atmosphere::GetComputesTemperature ( );
__declspec(implementation_key(2970)) VARIANT_BOOL _IAgVAUS_Standard_Atmosphere::GetComputesPressure ( );
__declspec(implementation_key(2971)) _bstr_t _IAgVAUS_Standard_Atmosphere::GetName ( );
__declspec(implementation_key(2972)) void _IAgVAUS_Standard_Atmosphere::PutName ( _bstr_t pVal );
__declspec(implementation_key(2973)) _bstr_t _IAgVAUS_Standard_Atmosphere::GetUserComment ( );
__declspec(implementation_key(2974)) void _IAgVAUS_Standard_Atmosphere::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(2975)) _bstr_t _IAgVAUS_Standard_Atmosphere::GetDescription ( );
__declspec(implementation_key(2976)) VARIANT_BOOL _IAgVAUS_Standard_Atmosphere::IsReadOnly ( );
__declspec(implementation_key(2977)) IUnknownPtr _IAgVAUS_Standard_Atmosphere::CloneObject ( );
__declspec(implementation_key(2978)) enum AgEVADragModelType _IAgVAUS_Standard_Atmosphere::GetDragModelType ( );
__declspec(implementation_key(2979)) void _IAgVAUS_Standard_Atmosphere::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(2980)) _bstr_t _IAgVAUS_Standard_Atmosphere::GetDragModelPluginName ( );
__declspec(implementation_key(2981)) void _IAgVAUS_Standard_Atmosphere::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(2982)) IAgVADragModelPluginPtr _IAgVAUS_Standard_Atmosphere::GetDragModelPlugin ( );
__declspec(implementation_key(2983)) VARIANT_BOOL IAgVAMarsGRAM37::GetUseApproximateAltitude ( );
__declspec(implementation_key(2984)) void IAgVAMarsGRAM37::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(2985)) VARIANT_BOOL IAgVAMarsGRAM37::GetComputesTemperature ( );
__declspec(implementation_key(2986)) VARIANT_BOOL IAgVAMarsGRAM37::GetComputesPressure ( );
__declspec(implementation_key(2987)) enum AgEVASunPosition IAgVAMarsGRAM37::GetSunPosition ( );
__declspec(implementation_key(2988)) void IAgVAMarsGRAM37::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(2989)) _bstr_t IAgVAMarsGRAM37::GetDataDirectory ( );
__declspec(implementation_key(2990)) void IAgVAMarsGRAM37::PutDataDirectory ( _bstr_t pVal );
__declspec(implementation_key(2991)) _bstr_t IAgVAMarsGRAM37::GetNamelistFile ( );
__declspec(implementation_key(2992)) void IAgVAMarsGRAM37::PutNamelistFile ( _bstr_t pVal );
__declspec(implementation_key(2993)) enum AgEVAMarsGRAMDensityType IAgVAMarsGRAM37::GetDensityType ( );
__declspec(implementation_key(2994)) void IAgVAMarsGRAM37::PutDensityType ( enum AgEVAMarsGRAMDensityType pVal );
__declspec(implementation_key(2995)) enum AgEVAAtmosDataSource IAgVAMarsGRAM37::GetAtmosDataSource ( );
__declspec(implementation_key(2996)) void IAgVAMarsGRAM37::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(2997)) double IAgVAMarsGRAM37::GetF10p7 ( );
__declspec(implementation_key(2998)) void IAgVAMarsGRAM37::PutF10p7 ( double pVal );
__declspec(implementation_key(2999)) _bstr_t IAgVAMarsGRAM37::GetAtmosDataFilename ( );
__declspec(implementation_key(3000)) void IAgVAMarsGRAM37::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3001)) enum AgEVADragModelType IAgVAMarsGRAM37::GetDragModelType ( );
__declspec(implementation_key(3002)) void IAgVAMarsGRAM37::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3003)) _bstr_t IAgVAMarsGRAM37::GetDragModelPluginName ( );
__declspec(implementation_key(3004)) void IAgVAMarsGRAM37::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3005)) IAgVADragModelPluginPtr IAgVAMarsGRAM37::GetDragModelPlugin ( );
__declspec(implementation_key(3006)) VARIANT_BOOL _IAgVAMarsGRAM37::GetUseApproximateAltitude ( );
__declspec(implementation_key(3007)) void _IAgVAMarsGRAM37::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(3008)) VARIANT_BOOL _IAgVAMarsGRAM37::GetComputesTemperature ( );
__declspec(implementation_key(3009)) VARIANT_BOOL _IAgVAMarsGRAM37::GetComputesPressure ( );
__declspec(implementation_key(3010)) enum AgEVASunPosition _IAgVAMarsGRAM37::GetSunPosition ( );
__declspec(implementation_key(3011)) void _IAgVAMarsGRAM37::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(3012)) _bstr_t _IAgVAMarsGRAM37::GetDataDirectory ( );
__declspec(implementation_key(3013)) void _IAgVAMarsGRAM37::PutDataDirectory ( _bstr_t pVal );
__declspec(implementation_key(3014)) _bstr_t _IAgVAMarsGRAM37::GetNamelistFile ( );
__declspec(implementation_key(3015)) void _IAgVAMarsGRAM37::PutNamelistFile ( _bstr_t pVal );
__declspec(implementation_key(3016)) enum AgEVAMarsGRAMDensityType _IAgVAMarsGRAM37::GetDensityType ( );
__declspec(implementation_key(3017)) void _IAgVAMarsGRAM37::PutDensityType ( enum AgEVAMarsGRAMDensityType pVal );
__declspec(implementation_key(3018)) enum AgEVAAtmosDataSource _IAgVAMarsGRAM37::GetAtmosDataSource ( );
__declspec(implementation_key(3019)) void _IAgVAMarsGRAM37::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(3020)) double _IAgVAMarsGRAM37::GetF10p7 ( );
__declspec(implementation_key(3021)) void _IAgVAMarsGRAM37::PutF10p7 ( double pVal );
__declspec(implementation_key(3022)) _bstr_t _IAgVAMarsGRAM37::GetAtmosDataFilename ( );
__declspec(implementation_key(3023)) void _IAgVAMarsGRAM37::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3024)) _bstr_t _IAgVAMarsGRAM37::GetName ( );
__declspec(implementation_key(3025)) void _IAgVAMarsGRAM37::PutName ( _bstr_t pVal );
__declspec(implementation_key(3026)) _bstr_t _IAgVAMarsGRAM37::GetUserComment ( );
__declspec(implementation_key(3027)) void _IAgVAMarsGRAM37::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3028)) _bstr_t _IAgVAMarsGRAM37::GetDescription ( );
__declspec(implementation_key(3029)) VARIANT_BOOL _IAgVAMarsGRAM37::IsReadOnly ( );
__declspec(implementation_key(3030)) IUnknownPtr _IAgVAMarsGRAM37::CloneObject ( );
__declspec(implementation_key(3031)) enum AgEVADragModelType _IAgVAMarsGRAM37::GetDragModelType ( );
__declspec(implementation_key(3032)) void _IAgVAMarsGRAM37::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3033)) _bstr_t _IAgVAMarsGRAM37::GetDragModelPluginName ( );
__declspec(implementation_key(3034)) void _IAgVAMarsGRAM37::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3035)) IAgVADragModelPluginPtr _IAgVAMarsGRAM37::GetDragModelPlugin ( );
__declspec(implementation_key(3036)) VARIANT_BOOL IAgVAMarsGRAM2005::GetUseApproximateAltitude ( );
__declspec(implementation_key(3037)) void IAgVAMarsGRAM2005::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(3038)) VARIANT_BOOL IAgVAMarsGRAM2005::GetComputesTemperature ( );
__declspec(implementation_key(3039)) VARIANT_BOOL IAgVAMarsGRAM2005::GetComputesPressure ( );
__declspec(implementation_key(3040)) enum AgEVASunPosition IAgVAMarsGRAM2005::GetSunPosition ( );
__declspec(implementation_key(3041)) void IAgVAMarsGRAM2005::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(3042)) _bstr_t IAgVAMarsGRAM2005::GetDataDirectory ( );
__declspec(implementation_key(3043)) void IAgVAMarsGRAM2005::PutDataDirectory ( _bstr_t pVal );
__declspec(implementation_key(3044)) _bstr_t IAgVAMarsGRAM2005::GetNamelistFile ( );
__declspec(implementation_key(3045)) void IAgVAMarsGRAM2005::PutNamelistFile ( _bstr_t pVal );
__declspec(implementation_key(3046)) enum AgEVAMarsGRAMDensityType IAgVAMarsGRAM2005::GetDensityType ( );
__declspec(implementation_key(3047)) void IAgVAMarsGRAM2005::PutDensityType ( enum AgEVAMarsGRAMDensityType pVal );
__declspec(implementation_key(3048)) enum AgEVAAtmosDataSource IAgVAMarsGRAM2005::GetAtmosDataSource ( );
__declspec(implementation_key(3049)) void IAgVAMarsGRAM2005::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(3050)) double IAgVAMarsGRAM2005::GetF10p7 ( );
__declspec(implementation_key(3051)) void IAgVAMarsGRAM2005::PutF10p7 ( double pVal );
__declspec(implementation_key(3052)) _bstr_t IAgVAMarsGRAM2005::GetAtmosDataFilename ( );
__declspec(implementation_key(3053)) void IAgVAMarsGRAM2005::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3054)) enum AgEVADragModelType IAgVAMarsGRAM2005::GetDragModelType ( );
__declspec(implementation_key(3055)) void IAgVAMarsGRAM2005::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3056)) _bstr_t IAgVAMarsGRAM2005::GetDragModelPluginName ( );
__declspec(implementation_key(3057)) void IAgVAMarsGRAM2005::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3058)) IAgVADragModelPluginPtr IAgVAMarsGRAM2005::GetDragModelPlugin ( );
__declspec(implementation_key(3059)) VARIANT_BOOL _IAgVAMarsGRAM2005::GetUseApproximateAltitude ( );
__declspec(implementation_key(3060)) void _IAgVAMarsGRAM2005::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(3061)) VARIANT_BOOL _IAgVAMarsGRAM2005::GetComputesTemperature ( );
__declspec(implementation_key(3062)) VARIANT_BOOL _IAgVAMarsGRAM2005::GetComputesPressure ( );
__declspec(implementation_key(3063)) enum AgEVASunPosition _IAgVAMarsGRAM2005::GetSunPosition ( );
__declspec(implementation_key(3064)) void _IAgVAMarsGRAM2005::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(3065)) _bstr_t _IAgVAMarsGRAM2005::GetDataDirectory ( );
__declspec(implementation_key(3066)) void _IAgVAMarsGRAM2005::PutDataDirectory ( _bstr_t pVal );
__declspec(implementation_key(3067)) _bstr_t _IAgVAMarsGRAM2005::GetNamelistFile ( );
__declspec(implementation_key(3068)) void _IAgVAMarsGRAM2005::PutNamelistFile ( _bstr_t pVal );
__declspec(implementation_key(3069)) enum AgEVAMarsGRAMDensityType _IAgVAMarsGRAM2005::GetDensityType ( );
__declspec(implementation_key(3070)) void _IAgVAMarsGRAM2005::PutDensityType ( enum AgEVAMarsGRAMDensityType pVal );
__declspec(implementation_key(3071)) enum AgEVAAtmosDataSource _IAgVAMarsGRAM2005::GetAtmosDataSource ( );
__declspec(implementation_key(3072)) void _IAgVAMarsGRAM2005::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(3073)) double _IAgVAMarsGRAM2005::GetF10p7 ( );
__declspec(implementation_key(3074)) void _IAgVAMarsGRAM2005::PutF10p7 ( double pVal );
__declspec(implementation_key(3075)) _bstr_t _IAgVAMarsGRAM2005::GetAtmosDataFilename ( );
__declspec(implementation_key(3076)) void _IAgVAMarsGRAM2005::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3077)) _bstr_t _IAgVAMarsGRAM2005::GetName ( );
__declspec(implementation_key(3078)) void _IAgVAMarsGRAM2005::PutName ( _bstr_t pVal );
__declspec(implementation_key(3079)) _bstr_t _IAgVAMarsGRAM2005::GetUserComment ( );
__declspec(implementation_key(3080)) void _IAgVAMarsGRAM2005::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3081)) _bstr_t _IAgVAMarsGRAM2005::GetDescription ( );
__declspec(implementation_key(3082)) VARIANT_BOOL _IAgVAMarsGRAM2005::IsReadOnly ( );
__declspec(implementation_key(3083)) IUnknownPtr _IAgVAMarsGRAM2005::CloneObject ( );
__declspec(implementation_key(3084)) enum AgEVADragModelType _IAgVAMarsGRAM2005::GetDragModelType ( );
__declspec(implementation_key(3085)) void _IAgVAMarsGRAM2005::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3086)) _bstr_t _IAgVAMarsGRAM2005::GetDragModelPluginName ( );
__declspec(implementation_key(3087)) void _IAgVAMarsGRAM2005::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3088)) IAgVADragModelPluginPtr _IAgVAMarsGRAM2005::GetDragModelPlugin ( );
__declspec(implementation_key(3089)) VARIANT_BOOL IAgVAMarsGRAM2010::GetUseApproximateAltitude ( );
__declspec(implementation_key(3090)) void IAgVAMarsGRAM2010::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(3091)) VARIANT_BOOL IAgVAMarsGRAM2010::GetComputesTemperature ( );
__declspec(implementation_key(3092)) VARIANT_BOOL IAgVAMarsGRAM2010::GetComputesPressure ( );
__declspec(implementation_key(3093)) enum AgEVASunPosition IAgVAMarsGRAM2010::GetSunPosition ( );
__declspec(implementation_key(3094)) void IAgVAMarsGRAM2010::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(3095)) _bstr_t IAgVAMarsGRAM2010::GetDataDirectory ( );
__declspec(implementation_key(3096)) void IAgVAMarsGRAM2010::PutDataDirectory ( _bstr_t pVal );
__declspec(implementation_key(3097)) _bstr_t IAgVAMarsGRAM2010::GetNamelistFile ( );
__declspec(implementation_key(3098)) void IAgVAMarsGRAM2010::PutNamelistFile ( _bstr_t pVal );
__declspec(implementation_key(3099)) enum AgEVAMarsGRAMDensityType IAgVAMarsGRAM2010::GetDensityType ( );
__declspec(implementation_key(3100)) void IAgVAMarsGRAM2010::PutDensityType ( enum AgEVAMarsGRAMDensityType pVal );
__declspec(implementation_key(3101)) enum AgEVAAtmosDataSource IAgVAMarsGRAM2010::GetAtmosDataSource ( );
__declspec(implementation_key(3102)) void IAgVAMarsGRAM2010::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(3103)) double IAgVAMarsGRAM2010::GetF10p7 ( );
__declspec(implementation_key(3104)) void IAgVAMarsGRAM2010::PutF10p7 ( double pVal );
__declspec(implementation_key(3105)) _bstr_t IAgVAMarsGRAM2010::GetAtmosDataFilename ( );
__declspec(implementation_key(3106)) void IAgVAMarsGRAM2010::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3107)) enum AgEVADragModelType IAgVAMarsGRAM2010::GetDragModelType ( );
__declspec(implementation_key(3108)) void IAgVAMarsGRAM2010::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3109)) _bstr_t IAgVAMarsGRAM2010::GetDragModelPluginName ( );
__declspec(implementation_key(3110)) void IAgVAMarsGRAM2010::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3111)) IAgVADragModelPluginPtr IAgVAMarsGRAM2010::GetDragModelPlugin ( );
__declspec(implementation_key(3112)) VARIANT_BOOL _IAgVAMarsGRAM2010::GetUseApproximateAltitude ( );
__declspec(implementation_key(3113)) void _IAgVAMarsGRAM2010::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(3114)) VARIANT_BOOL _IAgVAMarsGRAM2010::GetComputesTemperature ( );
__declspec(implementation_key(3115)) VARIANT_BOOL _IAgVAMarsGRAM2010::GetComputesPressure ( );
__declspec(implementation_key(3116)) enum AgEVASunPosition _IAgVAMarsGRAM2010::GetSunPosition ( );
__declspec(implementation_key(3117)) void _IAgVAMarsGRAM2010::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(3118)) _bstr_t _IAgVAMarsGRAM2010::GetDataDirectory ( );
__declspec(implementation_key(3119)) void _IAgVAMarsGRAM2010::PutDataDirectory ( _bstr_t pVal );
__declspec(implementation_key(3120)) _bstr_t _IAgVAMarsGRAM2010::GetNamelistFile ( );
__declspec(implementation_key(3121)) void _IAgVAMarsGRAM2010::PutNamelistFile ( _bstr_t pVal );
__declspec(implementation_key(3122)) enum AgEVAMarsGRAMDensityType _IAgVAMarsGRAM2010::GetDensityType ( );
__declspec(implementation_key(3123)) void _IAgVAMarsGRAM2010::PutDensityType ( enum AgEVAMarsGRAMDensityType pVal );
__declspec(implementation_key(3124)) enum AgEVAAtmosDataSource _IAgVAMarsGRAM2010::GetAtmosDataSource ( );
__declspec(implementation_key(3125)) void _IAgVAMarsGRAM2010::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(3126)) double _IAgVAMarsGRAM2010::GetF10p7 ( );
__declspec(implementation_key(3127)) void _IAgVAMarsGRAM2010::PutF10p7 ( double pVal );
__declspec(implementation_key(3128)) _bstr_t _IAgVAMarsGRAM2010::GetAtmosDataFilename ( );
__declspec(implementation_key(3129)) void _IAgVAMarsGRAM2010::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3130)) _bstr_t _IAgVAMarsGRAM2010::GetName ( );
__declspec(implementation_key(3131)) void _IAgVAMarsGRAM2010::PutName ( _bstr_t pVal );
__declspec(implementation_key(3132)) _bstr_t _IAgVAMarsGRAM2010::GetUserComment ( );
__declspec(implementation_key(3133)) void _IAgVAMarsGRAM2010::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3134)) _bstr_t _IAgVAMarsGRAM2010::GetDescription ( );
__declspec(implementation_key(3135)) VARIANT_BOOL _IAgVAMarsGRAM2010::IsReadOnly ( );
__declspec(implementation_key(3136)) IUnknownPtr _IAgVAMarsGRAM2010::CloneObject ( );
__declspec(implementation_key(3137)) enum AgEVADragModelType _IAgVAMarsGRAM2010::GetDragModelType ( );
__declspec(implementation_key(3138)) void _IAgVAMarsGRAM2010::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3139)) _bstr_t _IAgVAMarsGRAM2010::GetDragModelPluginName ( );
__declspec(implementation_key(3140)) void _IAgVAMarsGRAM2010::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3141)) IAgVADragModelPluginPtr _IAgVAMarsGRAM2010::GetDragModelPlugin ( );
__declspec(implementation_key(3142)) VARIANT_BOOL IAgVAMarsGRAM2001::GetUseApproximateAltitude ( );
__declspec(implementation_key(3143)) void IAgVAMarsGRAM2001::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(3144)) VARIANT_BOOL IAgVAMarsGRAM2001::GetComputesTemperature ( );
__declspec(implementation_key(3145)) VARIANT_BOOL IAgVAMarsGRAM2001::GetComputesPressure ( );
__declspec(implementation_key(3146)) enum AgEVASunPosition IAgVAMarsGRAM2001::GetSunPosition ( );
__declspec(implementation_key(3147)) void IAgVAMarsGRAM2001::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(3148)) _bstr_t IAgVAMarsGRAM2001::GetDataDirectory ( );
__declspec(implementation_key(3149)) void IAgVAMarsGRAM2001::PutDataDirectory ( _bstr_t pVal );
__declspec(implementation_key(3150)) _bstr_t IAgVAMarsGRAM2001::GetNamelistFile ( );
__declspec(implementation_key(3151)) void IAgVAMarsGRAM2001::PutNamelistFile ( _bstr_t pVal );
__declspec(implementation_key(3152)) enum AgEVAMarsGRAMDensityType IAgVAMarsGRAM2001::GetDensityType ( );
__declspec(implementation_key(3153)) void IAgVAMarsGRAM2001::PutDensityType ( enum AgEVAMarsGRAMDensityType pVal );
__declspec(implementation_key(3154)) enum AgEVAAtmosDataSource IAgVAMarsGRAM2001::GetAtmosDataSource ( );
__declspec(implementation_key(3155)) void IAgVAMarsGRAM2001::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(3156)) double IAgVAMarsGRAM2001::GetF10p7 ( );
__declspec(implementation_key(3157)) void IAgVAMarsGRAM2001::PutF10p7 ( double pVal );
__declspec(implementation_key(3158)) _bstr_t IAgVAMarsGRAM2001::GetAtmosDataFilename ( );
__declspec(implementation_key(3159)) void IAgVAMarsGRAM2001::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3160)) enum AgEVADragModelType IAgVAMarsGRAM2001::GetDragModelType ( );
__declspec(implementation_key(3161)) void IAgVAMarsGRAM2001::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3162)) _bstr_t IAgVAMarsGRAM2001::GetDragModelPluginName ( );
__declspec(implementation_key(3163)) void IAgVAMarsGRAM2001::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3164)) IAgVADragModelPluginPtr IAgVAMarsGRAM2001::GetDragModelPlugin ( );
__declspec(implementation_key(3165)) VARIANT_BOOL _IAgVAMarsGRAM2001::GetUseApproximateAltitude ( );
__declspec(implementation_key(3166)) void _IAgVAMarsGRAM2001::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(3167)) VARIANT_BOOL _IAgVAMarsGRAM2001::GetComputesTemperature ( );
__declspec(implementation_key(3168)) VARIANT_BOOL _IAgVAMarsGRAM2001::GetComputesPressure ( );
__declspec(implementation_key(3169)) enum AgEVASunPosition _IAgVAMarsGRAM2001::GetSunPosition ( );
__declspec(implementation_key(3170)) void _IAgVAMarsGRAM2001::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(3171)) _bstr_t _IAgVAMarsGRAM2001::GetDataDirectory ( );
__declspec(implementation_key(3172)) void _IAgVAMarsGRAM2001::PutDataDirectory ( _bstr_t pVal );
__declspec(implementation_key(3173)) _bstr_t _IAgVAMarsGRAM2001::GetNamelistFile ( );
__declspec(implementation_key(3174)) void _IAgVAMarsGRAM2001::PutNamelistFile ( _bstr_t pVal );
__declspec(implementation_key(3175)) enum AgEVAMarsGRAMDensityType _IAgVAMarsGRAM2001::GetDensityType ( );
__declspec(implementation_key(3176)) void _IAgVAMarsGRAM2001::PutDensityType ( enum AgEVAMarsGRAMDensityType pVal );
__declspec(implementation_key(3177)) enum AgEVAAtmosDataSource _IAgVAMarsGRAM2001::GetAtmosDataSource ( );
__declspec(implementation_key(3178)) void _IAgVAMarsGRAM2001::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(3179)) double _IAgVAMarsGRAM2001::GetF10p7 ( );
__declspec(implementation_key(3180)) void _IAgVAMarsGRAM2001::PutF10p7 ( double pVal );
__declspec(implementation_key(3181)) _bstr_t _IAgVAMarsGRAM2001::GetAtmosDataFilename ( );
__declspec(implementation_key(3182)) void _IAgVAMarsGRAM2001::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3183)) _bstr_t _IAgVAMarsGRAM2001::GetName ( );
__declspec(implementation_key(3184)) void _IAgVAMarsGRAM2001::PutName ( _bstr_t pVal );
__declspec(implementation_key(3185)) _bstr_t _IAgVAMarsGRAM2001::GetUserComment ( );
__declspec(implementation_key(3186)) void _IAgVAMarsGRAM2001::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3187)) _bstr_t _IAgVAMarsGRAM2001::GetDescription ( );
__declspec(implementation_key(3188)) VARIANT_BOOL _IAgVAMarsGRAM2001::IsReadOnly ( );
__declspec(implementation_key(3189)) IUnknownPtr _IAgVAMarsGRAM2001::CloneObject ( );
__declspec(implementation_key(3190)) enum AgEVADragModelType _IAgVAMarsGRAM2001::GetDragModelType ( );
__declspec(implementation_key(3191)) void _IAgVAMarsGRAM2001::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3192)) _bstr_t _IAgVAMarsGRAM2001::GetDragModelPluginName ( );
__declspec(implementation_key(3193)) void _IAgVAMarsGRAM2001::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3194)) IAgVADragModelPluginPtr _IAgVAMarsGRAM2001::GetDragModelPlugin ( );
__declspec(implementation_key(3195)) VARIANT_BOOL IAgVAMarsGRAM2000::GetUseApproximateAltitude ( );
__declspec(implementation_key(3196)) void IAgVAMarsGRAM2000::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(3197)) VARIANT_BOOL IAgVAMarsGRAM2000::GetComputesTemperature ( );
__declspec(implementation_key(3198)) VARIANT_BOOL IAgVAMarsGRAM2000::GetComputesPressure ( );
__declspec(implementation_key(3199)) enum AgEVASunPosition IAgVAMarsGRAM2000::GetSunPosition ( );
__declspec(implementation_key(3200)) void IAgVAMarsGRAM2000::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(3201)) _bstr_t IAgVAMarsGRAM2000::GetDataDirectory ( );
__declspec(implementation_key(3202)) void IAgVAMarsGRAM2000::PutDataDirectory ( _bstr_t pVal );
__declspec(implementation_key(3203)) _bstr_t IAgVAMarsGRAM2000::GetNamelistFile ( );
__declspec(implementation_key(3204)) void IAgVAMarsGRAM2000::PutNamelistFile ( _bstr_t pVal );
__declspec(implementation_key(3205)) enum AgEVAMarsGRAMDensityType IAgVAMarsGRAM2000::GetDensityType ( );
__declspec(implementation_key(3206)) void IAgVAMarsGRAM2000::PutDensityType ( enum AgEVAMarsGRAMDensityType pVal );
__declspec(implementation_key(3207)) enum AgEVAAtmosDataSource IAgVAMarsGRAM2000::GetAtmosDataSource ( );
__declspec(implementation_key(3208)) void IAgVAMarsGRAM2000::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(3209)) double IAgVAMarsGRAM2000::GetF10p7 ( );
__declspec(implementation_key(3210)) void IAgVAMarsGRAM2000::PutF10p7 ( double pVal );
__declspec(implementation_key(3211)) _bstr_t IAgVAMarsGRAM2000::GetAtmosDataFilename ( );
__declspec(implementation_key(3212)) void IAgVAMarsGRAM2000::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3213)) enum AgEVADragModelType IAgVAMarsGRAM2000::GetDragModelType ( );
__declspec(implementation_key(3214)) void IAgVAMarsGRAM2000::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3215)) _bstr_t IAgVAMarsGRAM2000::GetDragModelPluginName ( );
__declspec(implementation_key(3216)) void IAgVAMarsGRAM2000::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3217)) IAgVADragModelPluginPtr IAgVAMarsGRAM2000::GetDragModelPlugin ( );
__declspec(implementation_key(3218)) VARIANT_BOOL _IAgVAMarsGRAM2000::GetUseApproximateAltitude ( );
__declspec(implementation_key(3219)) void _IAgVAMarsGRAM2000::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(3220)) VARIANT_BOOL _IAgVAMarsGRAM2000::GetComputesTemperature ( );
__declspec(implementation_key(3221)) VARIANT_BOOL _IAgVAMarsGRAM2000::GetComputesPressure ( );
__declspec(implementation_key(3222)) enum AgEVASunPosition _IAgVAMarsGRAM2000::GetSunPosition ( );
__declspec(implementation_key(3223)) void _IAgVAMarsGRAM2000::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(3224)) _bstr_t _IAgVAMarsGRAM2000::GetDataDirectory ( );
__declspec(implementation_key(3225)) void _IAgVAMarsGRAM2000::PutDataDirectory ( _bstr_t pVal );
__declspec(implementation_key(3226)) _bstr_t _IAgVAMarsGRAM2000::GetNamelistFile ( );
__declspec(implementation_key(3227)) void _IAgVAMarsGRAM2000::PutNamelistFile ( _bstr_t pVal );
__declspec(implementation_key(3228)) enum AgEVAMarsGRAMDensityType _IAgVAMarsGRAM2000::GetDensityType ( );
__declspec(implementation_key(3229)) void _IAgVAMarsGRAM2000::PutDensityType ( enum AgEVAMarsGRAMDensityType pVal );
__declspec(implementation_key(3230)) enum AgEVAAtmosDataSource _IAgVAMarsGRAM2000::GetAtmosDataSource ( );
__declspec(implementation_key(3231)) void _IAgVAMarsGRAM2000::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(3232)) double _IAgVAMarsGRAM2000::GetF10p7 ( );
__declspec(implementation_key(3233)) void _IAgVAMarsGRAM2000::PutF10p7 ( double pVal );
__declspec(implementation_key(3234)) _bstr_t _IAgVAMarsGRAM2000::GetAtmosDataFilename ( );
__declspec(implementation_key(3235)) void _IAgVAMarsGRAM2000::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3236)) _bstr_t _IAgVAMarsGRAM2000::GetName ( );
__declspec(implementation_key(3237)) void _IAgVAMarsGRAM2000::PutName ( _bstr_t pVal );
__declspec(implementation_key(3238)) _bstr_t _IAgVAMarsGRAM2000::GetUserComment ( );
__declspec(implementation_key(3239)) void _IAgVAMarsGRAM2000::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3240)) _bstr_t _IAgVAMarsGRAM2000::GetDescription ( );
__declspec(implementation_key(3241)) VARIANT_BOOL _IAgVAMarsGRAM2000::IsReadOnly ( );
__declspec(implementation_key(3242)) IUnknownPtr _IAgVAMarsGRAM2000::CloneObject ( );
__declspec(implementation_key(3243)) enum AgEVADragModelType _IAgVAMarsGRAM2000::GetDragModelType ( );
__declspec(implementation_key(3244)) void _IAgVAMarsGRAM2000::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3245)) _bstr_t _IAgVAMarsGRAM2000::GetDragModelPluginName ( );
__declspec(implementation_key(3246)) void _IAgVAMarsGRAM2000::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3247)) IAgVADragModelPluginPtr _IAgVAMarsGRAM2000::GetDragModelPlugin ( );
__declspec(implementation_key(3248)) VARIANT_BOOL IAgVADTM2012::GetUseApproximateAltitude ( );
__declspec(implementation_key(3249)) void IAgVADTM2012::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(3250)) VARIANT_BOOL IAgVADTM2012::GetComputesTemperature ( );
__declspec(implementation_key(3251)) VARIANT_BOOL IAgVADTM2012::GetComputesPressure ( );
__declspec(implementation_key(3252)) enum AgEVASunPosition IAgVADTM2012::GetSunPosition ( );
__declspec(implementation_key(3253)) void IAgVADTM2012::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(3254)) enum AgEVAAtmosDataSource IAgVADTM2012::GetAtmosDataSource ( );
__declspec(implementation_key(3255)) void IAgVADTM2012::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(3256)) double IAgVADTM2012::GetF10p7Avg ( );
__declspec(implementation_key(3257)) void IAgVADTM2012::PutF10p7Avg ( double pVal );
__declspec(implementation_key(3258)) _bstr_t IAgVADTM2012::GetAtmosDataFilename ( );
__declspec(implementation_key(3259)) void IAgVADTM2012::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3260)) enum AgEVADragModelType IAgVADTM2012::GetDragModelType ( );
__declspec(implementation_key(3261)) void IAgVADTM2012::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3262)) _bstr_t IAgVADTM2012::GetDragModelPluginName ( );
__declspec(implementation_key(3263)) void IAgVADTM2012::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3264)) IAgVADragModelPluginPtr IAgVADTM2012::GetDragModelPlugin ( );
__declspec(implementation_key(3265)) double IAgVADTM2012::GetF10p7 ( );
__declspec(implementation_key(3266)) void IAgVADTM2012::PutF10p7 ( double pVal );
__declspec(implementation_key(3267)) double IAgVADTM2012::GetKp ( );
__declspec(implementation_key(3268)) void IAgVADTM2012::PutKp ( double pVal );
__declspec(implementation_key(3269)) enum AgEVAGeoMagneticFluxSource IAgVADTM2012::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(3270)) void IAgVADTM2012::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(3271)) enum AgEVAGeoMagneticFluxUpdateRate IAgVADTM2012::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(3272)) void IAgVADTM2012::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(3273)) VARIANT_BOOL _IAgVADTM2012::GetUseApproximateAltitude ( );
__declspec(implementation_key(3274)) void _IAgVADTM2012::PutUseApproximateAltitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(3275)) VARIANT_BOOL _IAgVADTM2012::GetComputesTemperature ( );
__declspec(implementation_key(3276)) VARIANT_BOOL _IAgVADTM2012::GetComputesPressure ( );
__declspec(implementation_key(3277)) enum AgEVASunPosition _IAgVADTM2012::GetSunPosition ( );
__declspec(implementation_key(3278)) void _IAgVADTM2012::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(3279)) enum AgEVAAtmosDataSource _IAgVADTM2012::GetAtmosDataSource ( );
__declspec(implementation_key(3280)) void _IAgVADTM2012::PutAtmosDataSource ( enum AgEVAAtmosDataSource pVal );
__declspec(implementation_key(3281)) double _IAgVADTM2012::GetF10p7Avg ( );
__declspec(implementation_key(3282)) void _IAgVADTM2012::PutF10p7Avg ( double pVal );
__declspec(implementation_key(3283)) _bstr_t _IAgVADTM2012::GetAtmosDataFilename ( );
__declspec(implementation_key(3284)) void _IAgVADTM2012::PutAtmosDataFilename ( _bstr_t pVal );
__declspec(implementation_key(3285)) _bstr_t _IAgVADTM2012::GetName ( );
__declspec(implementation_key(3286)) void _IAgVADTM2012::PutName ( _bstr_t pVal );
__declspec(implementation_key(3287)) _bstr_t _IAgVADTM2012::GetUserComment ( );
__declspec(implementation_key(3288)) void _IAgVADTM2012::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3289)) _bstr_t _IAgVADTM2012::GetDescription ( );
__declspec(implementation_key(3290)) VARIANT_BOOL _IAgVADTM2012::IsReadOnly ( );
__declspec(implementation_key(3291)) IUnknownPtr _IAgVADTM2012::CloneObject ( );
__declspec(implementation_key(3292)) enum AgEVADragModelType _IAgVADTM2012::GetDragModelType ( );
__declspec(implementation_key(3293)) void _IAgVADTM2012::PutDragModelType ( enum AgEVADragModelType pVal );
__declspec(implementation_key(3294)) _bstr_t _IAgVADTM2012::GetDragModelPluginName ( );
__declspec(implementation_key(3295)) void _IAgVADTM2012::PutDragModelPluginName ( _bstr_t pVal );
__declspec(implementation_key(3296)) IAgVADragModelPluginPtr _IAgVADTM2012::GetDragModelPlugin ( );
__declspec(implementation_key(3297)) double _IAgVADTM2012::GetF10p7 ( );
__declspec(implementation_key(3298)) void _IAgVADTM2012::PutF10p7 ( double pVal );
__declspec(implementation_key(3299)) double _IAgVADTM2012::GetKp ( );
__declspec(implementation_key(3300)) void _IAgVADTM2012::PutKp ( double pVal );
__declspec(implementation_key(3301)) enum AgEVAGeoMagneticFluxSource _IAgVADTM2012::GetAtmosDataGeoMagneticFluxSource ( );
__declspec(implementation_key(3302)) void _IAgVADTM2012::PutAtmosDataGeoMagneticFluxSource ( enum AgEVAGeoMagneticFluxSource pVal );
__declspec(implementation_key(3303)) enum AgEVAGeoMagneticFluxUpdateRate _IAgVADTM2012::GetAtmosDataGeoMagneticFluxUpdateRate ( );
__declspec(implementation_key(3304)) void _IAgVADTM2012::PutAtmosDataGeoMagneticFluxUpdateRate ( enum AgEVAGeoMagneticFluxUpdateRate pVal );
__declspec(implementation_key(3305)) _bstr_t IAgVAGravityFieldFunction::GetGravityFilename ( );
__declspec(implementation_key(3306)) void IAgVAGravityFieldFunction::PutGravityFilename ( _bstr_t pVal );
__declspec(implementation_key(3307)) long IAgVAGravityFieldFunction::GetDegree ( );
__declspec(implementation_key(3308)) void IAgVAGravityFieldFunction::PutDegree ( long pVal );
__declspec(implementation_key(3309)) long IAgVAGravityFieldFunction::GetOrder ( );
__declspec(implementation_key(3310)) void IAgVAGravityFieldFunction::PutOrder ( long pVal );
__declspec(implementation_key(3311)) _bstr_t IAgVAGravityFieldFunction::GetMaxDegreeText ( );
__declspec(implementation_key(3312)) _bstr_t IAgVAGravityFieldFunction::GetMaxOrderText ( );
__declspec(implementation_key(3313)) VARIANT_BOOL IAgVAGravityFieldFunction::GetIncludeTimeDependentSolidTides ( );
__declspec(implementation_key(3314)) void IAgVAGravityFieldFunction::PutIncludeTimeDependentSolidTides ( VARIANT_BOOL pVal );
__declspec(implementation_key(3315)) double IAgVAGravityFieldFunction::GetSolidTideMinAmp ( );
__declspec(implementation_key(3316)) void IAgVAGravityFieldFunction::PutSolidTideMinAmp ( double pVal );
__declspec(implementation_key(3317)) VARIANT_BOOL IAgVAGravityFieldFunction::GetUseOceanTides ( );
__declspec(implementation_key(3318)) void IAgVAGravityFieldFunction::PutUseOceanTides ( VARIANT_BOOL pVal );
__declspec(implementation_key(3319)) double IAgVAGravityFieldFunction::GetOceanTideMinAmp ( );
__declspec(implementation_key(3320)) void IAgVAGravityFieldFunction::PutOceanTideMinAmp ( double pVal );
__declspec(implementation_key(3321)) double IAgVAGravityFieldFunction::GetMinRadiusPercent ( );
__declspec(implementation_key(3322)) void IAgVAGravityFieldFunction::PutMinRadiusPercent ( double pVal );
__declspec(implementation_key(3323)) _bstr_t IAgVAGravityFieldFunction::GetCentralBodyName ( );
__declspec(implementation_key(3324)) long IAgVAGravityFieldFunction::GetOceanTideMaxDegree ( );
__declspec(implementation_key(3325)) void IAgVAGravityFieldFunction::PutOceanTideMaxDegree ( long pVal );
__declspec(implementation_key(3326)) long IAgVAGravityFieldFunction::GetOceanTideMaxOrder ( );
__declspec(implementation_key(3327)) void IAgVAGravityFieldFunction::PutOceanTideMaxOrder ( long pVal );
__declspec(implementation_key(3328)) enum STKObjects::AgESolidTide IAgVAGravityFieldFunction::GetSolidTideType ( );
__declspec(implementation_key(3329)) void IAgVAGravityFieldFunction::PutSolidTideType ( enum STKObjects::AgESolidTide pSolidTide );
__declspec(implementation_key(3330)) VARIANT_BOOL IAgVAGravityFieldFunction::GetTruncateSolidTides ( );
__declspec(implementation_key(3331)) void IAgVAGravityFieldFunction::PutTruncateSolidTides ( VARIANT_BOOL pVal );
__declspec(implementation_key(3332)) VARIANT_BOOL IAgVAGravityFieldFunction::GetUseSecularVariations ( );
__declspec(implementation_key(3333)) void IAgVAGravityFieldFunction::PutUseSecularVariations ( VARIANT_BOOL pVal );
__declspec(implementation_key(3334)) _bstr_t _IAgVAGravityFieldFunction::GetGravityFilename ( );
__declspec(implementation_key(3335)) void _IAgVAGravityFieldFunction::PutGravityFilename ( _bstr_t pVal );
__declspec(implementation_key(3336)) long _IAgVAGravityFieldFunction::GetDegree ( );
__declspec(implementation_key(3337)) void _IAgVAGravityFieldFunction::PutDegree ( long pVal );
__declspec(implementation_key(3338)) long _IAgVAGravityFieldFunction::GetOrder ( );
__declspec(implementation_key(3339)) void _IAgVAGravityFieldFunction::PutOrder ( long pVal );
__declspec(implementation_key(3340)) _bstr_t _IAgVAGravityFieldFunction::GetMaxDegreeText ( );
__declspec(implementation_key(3341)) _bstr_t _IAgVAGravityFieldFunction::GetMaxOrderText ( );
__declspec(implementation_key(3342)) VARIANT_BOOL _IAgVAGravityFieldFunction::GetIncludeTimeDependentSolidTides ( );
__declspec(implementation_key(3343)) void _IAgVAGravityFieldFunction::PutIncludeTimeDependentSolidTides ( VARIANT_BOOL pVal );
__declspec(implementation_key(3344)) double _IAgVAGravityFieldFunction::GetSolidTideMinAmp ( );
__declspec(implementation_key(3345)) void _IAgVAGravityFieldFunction::PutSolidTideMinAmp ( double pVal );
__declspec(implementation_key(3346)) VARIANT_BOOL _IAgVAGravityFieldFunction::GetUseOceanTides ( );
__declspec(implementation_key(3347)) void _IAgVAGravityFieldFunction::PutUseOceanTides ( VARIANT_BOOL pVal );
__declspec(implementation_key(3348)) double _IAgVAGravityFieldFunction::GetOceanTideMinAmp ( );
__declspec(implementation_key(3349)) void _IAgVAGravityFieldFunction::PutOceanTideMinAmp ( double pVal );
__declspec(implementation_key(3350)) double _IAgVAGravityFieldFunction::GetMinRadiusPercent ( );
__declspec(implementation_key(3351)) void _IAgVAGravityFieldFunction::PutMinRadiusPercent ( double pVal );
__declspec(implementation_key(3352)) _bstr_t _IAgVAGravityFieldFunction::GetCentralBodyName ( );
__declspec(implementation_key(3353)) long _IAgVAGravityFieldFunction::GetOceanTideMaxDegree ( );
__declspec(implementation_key(3354)) void _IAgVAGravityFieldFunction::PutOceanTideMaxDegree ( long pVal );
__declspec(implementation_key(3355)) long _IAgVAGravityFieldFunction::GetOceanTideMaxOrder ( );
__declspec(implementation_key(3356)) void _IAgVAGravityFieldFunction::PutOceanTideMaxOrder ( long pVal );
__declspec(implementation_key(3357)) enum STKObjects::AgESolidTide _IAgVAGravityFieldFunction::GetSolidTideType ( );
__declspec(implementation_key(3358)) void _IAgVAGravityFieldFunction::PutSolidTideType ( enum STKObjects::AgESolidTide pSolidTide );
__declspec(implementation_key(3359)) _bstr_t _IAgVAGravityFieldFunction::GetName ( );
__declspec(implementation_key(3360)) void _IAgVAGravityFieldFunction::PutName ( _bstr_t pVal );
__declspec(implementation_key(3361)) _bstr_t _IAgVAGravityFieldFunction::GetUserComment ( );
__declspec(implementation_key(3362)) void _IAgVAGravityFieldFunction::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3363)) _bstr_t _IAgVAGravityFieldFunction::GetDescription ( );
__declspec(implementation_key(3364)) VARIANT_BOOL _IAgVAGravityFieldFunction::IsReadOnly ( );
__declspec(implementation_key(3365)) IUnknownPtr _IAgVAGravityFieldFunction::CloneObject ( );
__declspec(implementation_key(3366)) VARIANT_BOOL _IAgVAGravityFieldFunction::GetTruncateSolidTides ( );
__declspec(implementation_key(3367)) void _IAgVAGravityFieldFunction::PutTruncateSolidTides ( VARIANT_BOOL pVal );
__declspec(implementation_key(3368)) VARIANT_BOOL _IAgVAGravityFieldFunction::GetUseSecularVariations ( );
__declspec(implementation_key(3369)) void _IAgVAGravityFieldFunction::PutUseSecularVariations ( VARIANT_BOOL pVal );
__declspec(implementation_key(3370)) enum AgEVAGravParamSource IAgVAPointMassFunction::GetGravSource ( );
__declspec(implementation_key(3371)) void IAgVAPointMassFunction::PutGravSource ( enum AgEVAGravParamSource pVal );
__declspec(implementation_key(3372)) double IAgVAPointMassFunction::GetMu ( );
__declspec(implementation_key(3373)) void IAgVAPointMassFunction::PutMu ( double pVal );
__declspec(implementation_key(3374)) enum AgEVAGravParamSource _IAgVAPointMassFunction::GetGravSource ( );
__declspec(implementation_key(3375)) void _IAgVAPointMassFunction::PutGravSource ( enum AgEVAGravParamSource pVal );
__declspec(implementation_key(3376)) double _IAgVAPointMassFunction::GetMu ( );
__declspec(implementation_key(3377)) void _IAgVAPointMassFunction::PutMu ( double pVal );
__declspec(implementation_key(3378)) _bstr_t _IAgVAPointMassFunction::GetName ( );
__declspec(implementation_key(3379)) void _IAgVAPointMassFunction::PutName ( _bstr_t pVal );
__declspec(implementation_key(3380)) _bstr_t _IAgVAPointMassFunction::GetUserComment ( );
__declspec(implementation_key(3381)) void _IAgVAPointMassFunction::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3382)) _bstr_t _IAgVAPointMassFunction::GetDescription ( );
__declspec(implementation_key(3383)) VARIANT_BOOL _IAgVAPointMassFunction::IsReadOnly ( );
__declspec(implementation_key(3384)) IUnknownPtr _IAgVAPointMassFunction::CloneObject ( );
__declspec(implementation_key(3385)) enum AgEVAGravParamSource IAgVATwoBodyFunction::GetGravSource ( );
__declspec(implementation_key(3386)) void IAgVATwoBodyFunction::PutGravSource ( enum AgEVAGravParamSource pVal );
__declspec(implementation_key(3387)) double IAgVATwoBodyFunction::GetMu ( );
__declspec(implementation_key(3388)) void IAgVATwoBodyFunction::PutMu ( double pVal );
__declspec(implementation_key(3389)) double IAgVATwoBodyFunction::GetMinRadiusPercent ( );
__declspec(implementation_key(3390)) void IAgVATwoBodyFunction::PutMinRadiusPercent ( double pVal );
__declspec(implementation_key(3391)) enum AgEVAGravParamSource _IAgVATwoBodyFunction::GetGravSource ( );
__declspec(implementation_key(3392)) void _IAgVATwoBodyFunction::PutGravSource ( enum AgEVAGravParamSource pVal );
__declspec(implementation_key(3393)) double _IAgVATwoBodyFunction::GetMu ( );
__declspec(implementation_key(3394)) void _IAgVATwoBodyFunction::PutMu ( double pVal );
__declspec(implementation_key(3395)) double _IAgVATwoBodyFunction::GetMinRadiusPercent ( );
__declspec(implementation_key(3396)) void _IAgVATwoBodyFunction::PutMinRadiusPercent ( double pVal );
__declspec(implementation_key(3397)) _bstr_t _IAgVATwoBodyFunction::GetName ( );
__declspec(implementation_key(3398)) void _IAgVATwoBodyFunction::PutName ( _bstr_t pVal );
__declspec(implementation_key(3399)) _bstr_t _IAgVATwoBodyFunction::GetUserComment ( );
__declspec(implementation_key(3400)) void _IAgVATwoBodyFunction::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3401)) _bstr_t _IAgVATwoBodyFunction::GetDescription ( );
__declspec(implementation_key(3402)) VARIANT_BOOL _IAgVATwoBodyFunction::IsReadOnly ( );
__declspec(implementation_key(3403)) IUnknownPtr _IAgVATwoBodyFunction::CloneObject ( );
__declspec(implementation_key(3404)) _bstr_t IAgVAHPOPPluginFunction::GetPluginIdentifier ( );
__declspec(implementation_key(3405)) void IAgVAHPOPPluginFunction::PutPluginIdentifier ( _bstr_t pVal );
__declspec(implementation_key(3406)) IAgVAPluginPropertiesPtr IAgVAHPOPPluginFunction::GetPluginConfig ( );
__declspec(implementation_key(3407)) _bstr_t _IAgVAHPOPPluginFunction::GetPluginIdentifier ( );
__declspec(implementation_key(3408)) void _IAgVAHPOPPluginFunction::PutPluginIdentifier ( _bstr_t pVal );
__declspec(implementation_key(3409)) IAgVAPluginPropertiesPtr _IAgVAHPOPPluginFunction::GetPluginConfig ( );
__declspec(implementation_key(3410)) _bstr_t _IAgVAHPOPPluginFunction::GetName ( );
__declspec(implementation_key(3411)) void _IAgVAHPOPPluginFunction::PutName ( _bstr_t pVal );
__declspec(implementation_key(3412)) _bstr_t _IAgVAHPOPPluginFunction::GetUserComment ( );
__declspec(implementation_key(3413)) void _IAgVAHPOPPluginFunction::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3414)) _bstr_t _IAgVAHPOPPluginFunction::GetDescription ( );
__declspec(implementation_key(3415)) VARIANT_BOOL _IAgVAHPOPPluginFunction::IsReadOnly ( );
__declspec(implementation_key(3416)) IUnknownPtr _IAgVAHPOPPluginFunction::CloneObject ( );
__declspec(implementation_key(3417)) _bstr_t IAgVAEOMFuncPluginFunction::GetPluginIdentifier ( );
__declspec(implementation_key(3418)) void IAgVAEOMFuncPluginFunction::PutPluginIdentifier ( _bstr_t pVal );
__declspec(implementation_key(3419)) IAgVAPluginPropertiesPtr IAgVAEOMFuncPluginFunction::GetPluginConfig ( );
__declspec(implementation_key(3420)) _bstr_t _IAgVAEOMFuncPluginFunction::GetPluginIdentifier ( );
__declspec(implementation_key(3421)) void _IAgVAEOMFuncPluginFunction::PutPluginIdentifier ( _bstr_t pVal );
__declspec(implementation_key(3422)) IAgVAPluginPropertiesPtr _IAgVAEOMFuncPluginFunction::GetPluginConfig ( );
__declspec(implementation_key(3423)) _bstr_t _IAgVAEOMFuncPluginFunction::GetName ( );
__declspec(implementation_key(3424)) void _IAgVAEOMFuncPluginFunction::PutName ( _bstr_t pVal );
__declspec(implementation_key(3425)) _bstr_t _IAgVAEOMFuncPluginFunction::GetUserComment ( );
__declspec(implementation_key(3426)) void _IAgVAEOMFuncPluginFunction::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3427)) _bstr_t _IAgVAEOMFuncPluginFunction::GetDescription ( );
__declspec(implementation_key(3428)) VARIANT_BOOL _IAgVAEOMFuncPluginFunction::IsReadOnly ( );
__declspec(implementation_key(3429)) IUnknownPtr _IAgVAEOMFuncPluginFunction::CloneObject ( );
__declspec(implementation_key(3430)) _bstr_t IAgVAThirdBodyFunction::GetThirdBodyName ( );
__declspec(implementation_key(3431)) void IAgVAThirdBodyFunction::PutThirdBodyName ( _bstr_t pVal );
__declspec(implementation_key(3432)) enum AgEVAEphemSource IAgVAThirdBodyFunction::GetEphemSource ( );
__declspec(implementation_key(3433)) void IAgVAThirdBodyFunction::PutEphemSource ( enum AgEVAEphemSource pVal );
__declspec(implementation_key(3434)) STKObjects::IAgComponentInfoPtr IAgVAThirdBodyFunction::GetMode ( );
__declspec(implementation_key(3435)) HRESULT IAgVAThirdBodyFunction::SetModeType ( enum AgEVAThirdBodyMode Mode );
__declspec(implementation_key(3436)) enum AgEVAThirdBodyMode IAgVAThirdBodyFunction::GetModeType ( );
__declspec(implementation_key(3437)) _bstr_t IAgVAThirdBodyFunction::GetEphemerisSourceWarning ( );
__declspec(implementation_key(3438)) _bstr_t _IAgVAThirdBodyFunction::GetThirdBodyName ( );
__declspec(implementation_key(3439)) void _IAgVAThirdBodyFunction::PutThirdBodyName ( _bstr_t pVal );
__declspec(implementation_key(3440)) enum AgEVAEphemSource _IAgVAThirdBodyFunction::GetEphemSource ( );
__declspec(implementation_key(3441)) void _IAgVAThirdBodyFunction::PutEphemSource ( enum AgEVAEphemSource pVal );
__declspec(implementation_key(3442)) STKObjects::IAgComponentInfoPtr _IAgVAThirdBodyFunction::GetMode ( );
__declspec(implementation_key(3443)) HRESULT _IAgVAThirdBodyFunction::SetModeType ( enum AgEVAThirdBodyMode Mode );
__declspec(implementation_key(3444)) enum AgEVAThirdBodyMode _IAgVAThirdBodyFunction::GetModeType ( );
__declspec(implementation_key(3445)) _bstr_t _IAgVAThirdBodyFunction::GetEphemerisSourceWarning ( );
__declspec(implementation_key(3446)) _bstr_t _IAgVAThirdBodyFunction::GetName ( );
__declspec(implementation_key(3447)) void _IAgVAThirdBodyFunction::PutName ( _bstr_t pVal );
__declspec(implementation_key(3448)) _bstr_t _IAgVAThirdBodyFunction::GetUserComment ( );
__declspec(implementation_key(3449)) void _IAgVAThirdBodyFunction::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3450)) _bstr_t _IAgVAThirdBodyFunction::GetDescription ( );
__declspec(implementation_key(3451)) VARIANT_BOOL _IAgVAThirdBodyFunction::IsReadOnly ( );
__declspec(implementation_key(3452)) IUnknownPtr _IAgVAThirdBodyFunction::CloneObject ( );
__declspec(implementation_key(3453)) double IAgVAEngineModelThrustCoefficients::GetC0 ( );
__declspec(implementation_key(3454)) void IAgVAEngineModelThrustCoefficients::PutC0 ( double pVal );
__declspec(implementation_key(3455)) double IAgVAEngineModelThrustCoefficients::GetC1 ( );
__declspec(implementation_key(3456)) void IAgVAEngineModelThrustCoefficients::PutC1 ( double pVal );
__declspec(implementation_key(3457)) double IAgVAEngineModelThrustCoefficients::GetC2 ( );
__declspec(implementation_key(3458)) void IAgVAEngineModelThrustCoefficients::PutC2 ( double pVal );
__declspec(implementation_key(3459)) double IAgVAEngineModelThrustCoefficients::GetC3 ( );
__declspec(implementation_key(3460)) void IAgVAEngineModelThrustCoefficients::PutC3 ( double pVal );
__declspec(implementation_key(3461)) double IAgVAEngineModelThrustCoefficients::GetC4 ( );
__declspec(implementation_key(3462)) void IAgVAEngineModelThrustCoefficients::PutC4 ( double pVal );
__declspec(implementation_key(3463)) double IAgVAEngineModelThrustCoefficients::GetC5 ( );
__declspec(implementation_key(3464)) void IAgVAEngineModelThrustCoefficients::PutC5 ( double pVal );
__declspec(implementation_key(3465)) double IAgVAEngineModelThrustCoefficients::GetC6 ( );
__declspec(implementation_key(3466)) void IAgVAEngineModelThrustCoefficients::PutC6 ( double pVal );
__declspec(implementation_key(3467)) double IAgVAEngineModelThrustCoefficients::GetC7 ( );
__declspec(implementation_key(3468)) void IAgVAEngineModelThrustCoefficients::PutC7 ( double pVal );
__declspec(implementation_key(3469)) double IAgVAEngineModelThrustCoefficients::GetE4 ( );
__declspec(implementation_key(3470)) void IAgVAEngineModelThrustCoefficients::PutE4 ( double pVal );
__declspec(implementation_key(3471)) double IAgVAEngineModelThrustCoefficients::GetE5 ( );
__declspec(implementation_key(3472)) void IAgVAEngineModelThrustCoefficients::PutE5 ( double pVal );
__declspec(implementation_key(3473)) double IAgVAEngineModelThrustCoefficients::GetE6 ( );
__declspec(implementation_key(3474)) void IAgVAEngineModelThrustCoefficients::PutE6 ( double pVal );
__declspec(implementation_key(3475)) double IAgVAEngineModelThrustCoefficients::GetE7 ( );
__declspec(implementation_key(3476)) void IAgVAEngineModelThrustCoefficients::PutE7 ( double pVal );
__declspec(implementation_key(3477)) double IAgVAEngineModelThrustCoefficients::GetB7 ( );
__declspec(implementation_key(3478)) void IAgVAEngineModelThrustCoefficients::PutB7 ( double pVal );
__declspec(implementation_key(3479)) double IAgVAEngineModelThrustCoefficients::GetK0 ( );
__declspec(implementation_key(3480)) void IAgVAEngineModelThrustCoefficients::PutK0 ( double pVal );
__declspec(implementation_key(3481)) double IAgVAEngineModelThrustCoefficients::GetK1 ( );
__declspec(implementation_key(3482)) void IAgVAEngineModelThrustCoefficients::PutK1 ( double pVal );
__declspec(implementation_key(3483)) double IAgVAEngineModelThrustCoefficients::GetReferenceTemp ( );
__declspec(implementation_key(3484)) void IAgVAEngineModelThrustCoefficients::PutReferenceTemp ( double pVal );
__declspec(implementation_key(3485)) double _IAgVAEngineModelThrustCoefficients::GetC0 ( );
__declspec(implementation_key(3486)) void _IAgVAEngineModelThrustCoefficients::PutC0 ( double pVal );
__declspec(implementation_key(3487)) double _IAgVAEngineModelThrustCoefficients::GetC1 ( );
__declspec(implementation_key(3488)) void _IAgVAEngineModelThrustCoefficients::PutC1 ( double pVal );
__declspec(implementation_key(3489)) double _IAgVAEngineModelThrustCoefficients::GetC2 ( );
__declspec(implementation_key(3490)) void _IAgVAEngineModelThrustCoefficients::PutC2 ( double pVal );
__declspec(implementation_key(3491)) double _IAgVAEngineModelThrustCoefficients::GetC3 ( );
__declspec(implementation_key(3492)) void _IAgVAEngineModelThrustCoefficients::PutC3 ( double pVal );
__declspec(implementation_key(3493)) double _IAgVAEngineModelThrustCoefficients::GetC4 ( );
__declspec(implementation_key(3494)) void _IAgVAEngineModelThrustCoefficients::PutC4 ( double pVal );
__declspec(implementation_key(3495)) double _IAgVAEngineModelThrustCoefficients::GetC5 ( );
__declspec(implementation_key(3496)) void _IAgVAEngineModelThrustCoefficients::PutC5 ( double pVal );
__declspec(implementation_key(3497)) double _IAgVAEngineModelThrustCoefficients::GetC6 ( );
__declspec(implementation_key(3498)) void _IAgVAEngineModelThrustCoefficients::PutC6 ( double pVal );
__declspec(implementation_key(3499)) double _IAgVAEngineModelThrustCoefficients::GetC7 ( );
__declspec(implementation_key(3500)) void _IAgVAEngineModelThrustCoefficients::PutC7 ( double pVal );
__declspec(implementation_key(3501)) double _IAgVAEngineModelThrustCoefficients::GetE4 ( );
__declspec(implementation_key(3502)) void _IAgVAEngineModelThrustCoefficients::PutE4 ( double pVal );
__declspec(implementation_key(3503)) double _IAgVAEngineModelThrustCoefficients::GetE5 ( );
__declspec(implementation_key(3504)) void _IAgVAEngineModelThrustCoefficients::PutE5 ( double pVal );
__declspec(implementation_key(3505)) double _IAgVAEngineModelThrustCoefficients::GetE6 ( );
__declspec(implementation_key(3506)) void _IAgVAEngineModelThrustCoefficients::PutE6 ( double pVal );
__declspec(implementation_key(3507)) double _IAgVAEngineModelThrustCoefficients::GetE7 ( );
__declspec(implementation_key(3508)) void _IAgVAEngineModelThrustCoefficients::PutE7 ( double pVal );
__declspec(implementation_key(3509)) double _IAgVAEngineModelThrustCoefficients::GetB7 ( );
__declspec(implementation_key(3510)) void _IAgVAEngineModelThrustCoefficients::PutB7 ( double pVal );
__declspec(implementation_key(3511)) double _IAgVAEngineModelThrustCoefficients::GetK0 ( );
__declspec(implementation_key(3512)) void _IAgVAEngineModelThrustCoefficients::PutK0 ( double pVal );
__declspec(implementation_key(3513)) double _IAgVAEngineModelThrustCoefficients::GetK1 ( );
__declspec(implementation_key(3514)) void _IAgVAEngineModelThrustCoefficients::PutK1 ( double pVal );
__declspec(implementation_key(3515)) double _IAgVAEngineModelThrustCoefficients::GetReferenceTemp ( );
__declspec(implementation_key(3516)) void _IAgVAEngineModelThrustCoefficients::PutReferenceTemp ( double pVal );
__declspec(implementation_key(3517)) double IAgVAEngineModelIspCoefficients::GetC0 ( );
__declspec(implementation_key(3518)) void IAgVAEngineModelIspCoefficients::PutC0 ( double pVal );
__declspec(implementation_key(3519)) double IAgVAEngineModelIspCoefficients::GetC1 ( );
__declspec(implementation_key(3520)) void IAgVAEngineModelIspCoefficients::PutC1 ( double pVal );
__declspec(implementation_key(3521)) double IAgVAEngineModelIspCoefficients::GetC2 ( );
__declspec(implementation_key(3522)) void IAgVAEngineModelIspCoefficients::PutC2 ( double pVal );
__declspec(implementation_key(3523)) double IAgVAEngineModelIspCoefficients::GetC3 ( );
__declspec(implementation_key(3524)) void IAgVAEngineModelIspCoefficients::PutC3 ( double pVal );
__declspec(implementation_key(3525)) double IAgVAEngineModelIspCoefficients::GetC4 ( );
__declspec(implementation_key(3526)) void IAgVAEngineModelIspCoefficients::PutC4 ( double pVal );
__declspec(implementation_key(3527)) double IAgVAEngineModelIspCoefficients::GetC5 ( );
__declspec(implementation_key(3528)) void IAgVAEngineModelIspCoefficients::PutC5 ( double pVal );
__declspec(implementation_key(3529)) double IAgVAEngineModelIspCoefficients::GetC6 ( );
__declspec(implementation_key(3530)) void IAgVAEngineModelIspCoefficients::PutC6 ( double pVal );
__declspec(implementation_key(3531)) double IAgVAEngineModelIspCoefficients::GetC7 ( );
__declspec(implementation_key(3532)) void IAgVAEngineModelIspCoefficients::PutC7 ( double pVal );
__declspec(implementation_key(3533)) double IAgVAEngineModelIspCoefficients::GetE4 ( );
__declspec(implementation_key(3534)) void IAgVAEngineModelIspCoefficients::PutE4 ( double pVal );
__declspec(implementation_key(3535)) double IAgVAEngineModelIspCoefficients::GetE5 ( );
__declspec(implementation_key(3536)) void IAgVAEngineModelIspCoefficients::PutE5 ( double pVal );
__declspec(implementation_key(3537)) double IAgVAEngineModelIspCoefficients::GetE6 ( );
__declspec(implementation_key(3538)) void IAgVAEngineModelIspCoefficients::PutE6 ( double pVal );
__declspec(implementation_key(3539)) double IAgVAEngineModelIspCoefficients::GetE7 ( );
__declspec(implementation_key(3540)) void IAgVAEngineModelIspCoefficients::PutE7 ( double pVal );
__declspec(implementation_key(3541)) double IAgVAEngineModelIspCoefficients::GetB7 ( );
__declspec(implementation_key(3542)) void IAgVAEngineModelIspCoefficients::PutB7 ( double pVal );
__declspec(implementation_key(3543)) double IAgVAEngineModelIspCoefficients::GetK0 ( );
__declspec(implementation_key(3544)) void IAgVAEngineModelIspCoefficients::PutK0 ( double pVal );
__declspec(implementation_key(3545)) double IAgVAEngineModelIspCoefficients::GetK1 ( );
__declspec(implementation_key(3546)) void IAgVAEngineModelIspCoefficients::PutK1 ( double pVal );
__declspec(implementation_key(3547)) double IAgVAEngineModelIspCoefficients::GetReferenceTemp ( );
__declspec(implementation_key(3548)) void IAgVAEngineModelIspCoefficients::PutReferenceTemp ( double pVal );
__declspec(implementation_key(3549)) double _IAgVAEngineModelIspCoefficients::GetC0 ( );
__declspec(implementation_key(3550)) void _IAgVAEngineModelIspCoefficients::PutC0 ( double pVal );
__declspec(implementation_key(3551)) double _IAgVAEngineModelIspCoefficients::GetC1 ( );
__declspec(implementation_key(3552)) void _IAgVAEngineModelIspCoefficients::PutC1 ( double pVal );
__declspec(implementation_key(3553)) double _IAgVAEngineModelIspCoefficients::GetC2 ( );
__declspec(implementation_key(3554)) void _IAgVAEngineModelIspCoefficients::PutC2 ( double pVal );
__declspec(implementation_key(3555)) double _IAgVAEngineModelIspCoefficients::GetC3 ( );
__declspec(implementation_key(3556)) void _IAgVAEngineModelIspCoefficients::PutC3 ( double pVal );
__declspec(implementation_key(3557)) double _IAgVAEngineModelIspCoefficients::GetC4 ( );
__declspec(implementation_key(3558)) void _IAgVAEngineModelIspCoefficients::PutC4 ( double pVal );
__declspec(implementation_key(3559)) double _IAgVAEngineModelIspCoefficients::GetC5 ( );
__declspec(implementation_key(3560)) void _IAgVAEngineModelIspCoefficients::PutC5 ( double pVal );
__declspec(implementation_key(3561)) double _IAgVAEngineModelIspCoefficients::GetC6 ( );
__declspec(implementation_key(3562)) void _IAgVAEngineModelIspCoefficients::PutC6 ( double pVal );
__declspec(implementation_key(3563)) double _IAgVAEngineModelIspCoefficients::GetC7 ( );
__declspec(implementation_key(3564)) void _IAgVAEngineModelIspCoefficients::PutC7 ( double pVal );
__declspec(implementation_key(3565)) double _IAgVAEngineModelIspCoefficients::GetE4 ( );
__declspec(implementation_key(3566)) void _IAgVAEngineModelIspCoefficients::PutE4 ( double pVal );
__declspec(implementation_key(3567)) double _IAgVAEngineModelIspCoefficients::GetE5 ( );
__declspec(implementation_key(3568)) void _IAgVAEngineModelIspCoefficients::PutE5 ( double pVal );
__declspec(implementation_key(3569)) double _IAgVAEngineModelIspCoefficients::GetE6 ( );
__declspec(implementation_key(3570)) void _IAgVAEngineModelIspCoefficients::PutE6 ( double pVal );
__declspec(implementation_key(3571)) double _IAgVAEngineModelIspCoefficients::GetE7 ( );
__declspec(implementation_key(3572)) void _IAgVAEngineModelIspCoefficients::PutE7 ( double pVal );
__declspec(implementation_key(3573)) double _IAgVAEngineModelIspCoefficients::GetB7 ( );
__declspec(implementation_key(3574)) void _IAgVAEngineModelIspCoefficients::PutB7 ( double pVal );
__declspec(implementation_key(3575)) double _IAgVAEngineModelIspCoefficients::GetK0 ( );
__declspec(implementation_key(3576)) void _IAgVAEngineModelIspCoefficients::PutK0 ( double pVal );
__declspec(implementation_key(3577)) double _IAgVAEngineModelIspCoefficients::GetK1 ( );
__declspec(implementation_key(3578)) void _IAgVAEngineModelIspCoefficients::PutK1 ( double pVal );
__declspec(implementation_key(3579)) double _IAgVAEngineModelIspCoefficients::GetReferenceTemp ( );
__declspec(implementation_key(3580)) void _IAgVAEngineModelIspCoefficients::PutReferenceTemp ( double pVal );
__declspec(implementation_key(3581)) double IAgVAEngineConstAcc::Getg ( );
__declspec(implementation_key(3582)) void IAgVAEngineConstAcc::Putg ( double pVal );
__declspec(implementation_key(3583)) double IAgVAEngineConstAcc::GetAcceleration ( );
__declspec(implementation_key(3584)) void IAgVAEngineConstAcc::PutAcceleration ( double pVal );
__declspec(implementation_key(3585)) double IAgVAEngineConstAcc::GetIsp ( );
__declspec(implementation_key(3586)) void IAgVAEngineConstAcc::PutIsp ( double pVal );
__declspec(implementation_key(3587)) HRESULT IAgVAEngineConstAcc::EnableControlParameter ( enum AgEVAControlEngineConstAcc Param );
__declspec(implementation_key(3588)) HRESULT IAgVAEngineConstAcc::DisableControlParameter ( enum AgEVAControlEngineConstAcc Param );
__declspec(implementation_key(3589)) VARIANT_BOOL IAgVAEngineConstAcc::IsControlParameterEnabled ( enum AgEVAControlEngineConstAcc Param );
__declspec(implementation_key(3590)) VARIANT_BOOL IAgVAEngineConstAcc::GetControlParametersAvailable ( );
__declspec(implementation_key(3591)) double _IAgVAEngineConstAcc::Getg ( );
__declspec(implementation_key(3592)) void _IAgVAEngineConstAcc::Putg ( double pVal );
__declspec(implementation_key(3593)) double _IAgVAEngineConstAcc::GetAcceleration ( );
__declspec(implementation_key(3594)) void _IAgVAEngineConstAcc::PutAcceleration ( double pVal );
__declspec(implementation_key(3595)) double _IAgVAEngineConstAcc::GetIsp ( );
__declspec(implementation_key(3596)) void _IAgVAEngineConstAcc::PutIsp ( double pVal );
__declspec(implementation_key(3597)) HRESULT _IAgVAEngineConstAcc::EnableControlParameter ( enum AgEVAControlEngineConstAcc Param );
__declspec(implementation_key(3598)) HRESULT _IAgVAEngineConstAcc::DisableControlParameter ( enum AgEVAControlEngineConstAcc Param );
__declspec(implementation_key(3599)) VARIANT_BOOL _IAgVAEngineConstAcc::IsControlParameterEnabled ( enum AgEVAControlEngineConstAcc Param );
__declspec(implementation_key(3600)) VARIANT_BOOL _IAgVAEngineConstAcc::GetControlParametersAvailable ( );
__declspec(implementation_key(3601)) _bstr_t _IAgVAEngineConstAcc::GetName ( );
__declspec(implementation_key(3602)) void _IAgVAEngineConstAcc::PutName ( _bstr_t pVal );
__declspec(implementation_key(3603)) _bstr_t _IAgVAEngineConstAcc::GetUserComment ( );
__declspec(implementation_key(3604)) void _IAgVAEngineConstAcc::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3605)) _bstr_t _IAgVAEngineConstAcc::GetDescription ( );
__declspec(implementation_key(3606)) VARIANT_BOOL _IAgVAEngineConstAcc::IsReadOnly ( );
__declspec(implementation_key(3607)) IUnknownPtr _IAgVAEngineConstAcc::CloneObject ( );
__declspec(implementation_key(3608)) double IAgVAEngineConstant::Getg ( );
__declspec(implementation_key(3609)) void IAgVAEngineConstant::Putg ( double pVal );
__declspec(implementation_key(3610)) double IAgVAEngineConstant::GetThrust ( );
__declspec(implementation_key(3611)) void IAgVAEngineConstant::PutThrust ( double pVal );
__declspec(implementation_key(3612)) double IAgVAEngineConstant::GetIsp ( );
__declspec(implementation_key(3613)) void IAgVAEngineConstant::PutIsp ( double pVal );
__declspec(implementation_key(3614)) HRESULT IAgVAEngineConstant::EnableControlParameter ( enum AgEVAControlEngineConstant Param );
__declspec(implementation_key(3615)) HRESULT IAgVAEngineConstant::DisableControlParameter ( enum AgEVAControlEngineConstant Param );
__declspec(implementation_key(3616)) VARIANT_BOOL IAgVAEngineConstant::IsControlParameterEnabled ( enum AgEVAControlEngineConstant Param );
__declspec(implementation_key(3617)) VARIANT_BOOL IAgVAEngineConstant::GetControlParametersAvailable ( );
__declspec(implementation_key(3618)) double _IAgVAEngineConstant::Getg ( );
__declspec(implementation_key(3619)) void _IAgVAEngineConstant::Putg ( double pVal );
__declspec(implementation_key(3620)) double _IAgVAEngineConstant::GetThrust ( );
__declspec(implementation_key(3621)) void _IAgVAEngineConstant::PutThrust ( double pVal );
__declspec(implementation_key(3622)) double _IAgVAEngineConstant::GetIsp ( );
__declspec(implementation_key(3623)) void _IAgVAEngineConstant::PutIsp ( double pVal );
__declspec(implementation_key(3624)) HRESULT _IAgVAEngineConstant::EnableControlParameter ( enum AgEVAControlEngineConstant Param );
__declspec(implementation_key(3625)) HRESULT _IAgVAEngineConstant::DisableControlParameter ( enum AgEVAControlEngineConstant Param );
__declspec(implementation_key(3626)) VARIANT_BOOL _IAgVAEngineConstant::IsControlParameterEnabled ( enum AgEVAControlEngineConstant Param );
__declspec(implementation_key(3627)) VARIANT_BOOL _IAgVAEngineConstant::GetControlParametersAvailable ( );
__declspec(implementation_key(3628)) _bstr_t _IAgVAEngineConstant::GetName ( );
__declspec(implementation_key(3629)) void _IAgVAEngineConstant::PutName ( _bstr_t pVal );
__declspec(implementation_key(3630)) _bstr_t _IAgVAEngineConstant::GetUserComment ( );
__declspec(implementation_key(3631)) void _IAgVAEngineConstant::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3632)) _bstr_t _IAgVAEngineConstant::GetDescription ( );
__declspec(implementation_key(3633)) VARIANT_BOOL _IAgVAEngineConstant::IsReadOnly ( );
__declspec(implementation_key(3634)) IUnknownPtr _IAgVAEngineConstant::CloneObject ( );
__declspec(implementation_key(3635)) double IAgVAEngineDefinition::GetIspC0 ( );
__declspec(implementation_key(3636)) void IAgVAEngineDefinition::PutIspC0 ( double pVal );
__declspec(implementation_key(3637)) double IAgVAEngineDefinition::GetIspC1 ( );
__declspec(implementation_key(3638)) void IAgVAEngineDefinition::PutIspC1 ( double pVal );
__declspec(implementation_key(3639)) double IAgVAEngineDefinition::GetIspC2 ( );
__declspec(implementation_key(3640)) void IAgVAEngineDefinition::PutIspC2 ( double pVal );
__declspec(implementation_key(3641)) double IAgVAEngineDefinition::GetIspC3 ( );
__declspec(implementation_key(3642)) void IAgVAEngineDefinition::PutIspC3 ( double pVal );
__declspec(implementation_key(3643)) enum AgEVAEngineModelFunction IAgVAEngineDefinition::GetMassFlowRateEquationType ( );
__declspec(implementation_key(3644)) void IAgVAEngineDefinition::PutMassFlowRateEquationType ( enum AgEVAEngineModelFunction pVal );
__declspec(implementation_key(3645)) double IAgVAEngineDefinition::GetMassFlowRateC0 ( );
__declspec(implementation_key(3646)) void IAgVAEngineDefinition::PutMassFlowRateC0 ( double pVal );
__declspec(implementation_key(3647)) double IAgVAEngineDefinition::GetMassFlowRateC1 ( );
__declspec(implementation_key(3648)) void IAgVAEngineDefinition::PutMassFlowRateC1 ( double pVal );
__declspec(implementation_key(3649)) double IAgVAEngineDefinition::GetMassFlowRateC2 ( );
__declspec(implementation_key(3650)) void IAgVAEngineDefinition::PutMassFlowRateC2 ( double pVal );
__declspec(implementation_key(3651)) double IAgVAEngineDefinition::GetMassFlowRateC3 ( );
__declspec(implementation_key(3652)) void IAgVAEngineDefinition::PutMassFlowRateC3 ( double pVal );
__declspec(implementation_key(3653)) _bstr_t IAgVAEngineDefinition::GetMassFlowRateEquation ( );
__declspec(implementation_key(3654)) double IAgVAEngineDefinition::GetMassFlowEfficiencyC0 ( );
__declspec(implementation_key(3655)) void IAgVAEngineDefinition::PutMassFlowEfficiencyC0 ( double pVal );
__declspec(implementation_key(3656)) double IAgVAEngineDefinition::GetMassFlowEfficiencyC1 ( );
__declspec(implementation_key(3657)) void IAgVAEngineDefinition::PutMassFlowEfficiencyC1 ( double pVal );
__declspec(implementation_key(3658)) double IAgVAEngineDefinition::GetMassFlowEfficiencyC2 ( );
__declspec(implementation_key(3659)) void IAgVAEngineDefinition::PutMassFlowEfficiencyC2 ( double pVal );
__declspec(implementation_key(3660)) double IAgVAEngineDefinition::GetMassFlowEfficiencyC3 ( );
__declspec(implementation_key(3661)) void IAgVAEngineDefinition::PutMassFlowEfficiencyC3 ( double pVal );
__declspec(implementation_key(3662)) enum AgEVAEngineModelFunction IAgVAEngineDefinition::GetMassFlowEfficiencyIndependentVar ( );
__declspec(implementation_key(3663)) void IAgVAEngineDefinition::PutMassFlowEfficiencyIndependentVar ( enum AgEVAEngineModelFunction pVal );
__declspec(implementation_key(3664)) _bstr_t IAgVAEngineDefinition::GetMassFlowEfficiencyEquation ( );
__declspec(implementation_key(3665)) double IAgVAEngineDefinition::GetPowerEfficiencyC0 ( );
__declspec(implementation_key(3666)) void IAgVAEngineDefinition::PutPowerEfficiencyC0 ( double pVal );
__declspec(implementation_key(3667)) double IAgVAEngineDefinition::GetPowerEfficiencyC1 ( );
__declspec(implementation_key(3668)) void IAgVAEngineDefinition::PutPowerEfficiencyC1 ( double pVal );
__declspec(implementation_key(3669)) double IAgVAEngineDefinition::GetPowerEfficiencyC2 ( );
__declspec(implementation_key(3670)) void IAgVAEngineDefinition::PutPowerEfficiencyC2 ( double pVal );
__declspec(implementation_key(3671)) double IAgVAEngineDefinition::GetPowerEfficiencyC3 ( );
__declspec(implementation_key(3672)) void IAgVAEngineDefinition::PutPowerEfficiencyC3 ( double pVal );
__declspec(implementation_key(3673)) enum AgEVAEngineModelFunction IAgVAEngineDefinition::GetPowerEfficiencyIndependentVar ( );
__declspec(implementation_key(3674)) void IAgVAEngineDefinition::PutPowerEfficiencyIndependentVar ( enum AgEVAEngineModelFunction pVal );
__declspec(implementation_key(3675)) _bstr_t IAgVAEngineDefinition::GetPowerEfficiencyEquation ( );
__declspec(implementation_key(3676)) _bstr_t IAgVAEngineDefinition::GetInputPowerSourceName ( );
__declspec(implementation_key(3677)) double _IAgVAEngineDefinition::GetIspC0 ( );
__declspec(implementation_key(3678)) void _IAgVAEngineDefinition::PutIspC0 ( double pVal );
__declspec(implementation_key(3679)) double _IAgVAEngineDefinition::GetIspC1 ( );
__declspec(implementation_key(3680)) void _IAgVAEngineDefinition::PutIspC1 ( double pVal );
__declspec(implementation_key(3681)) double _IAgVAEngineDefinition::GetIspC2 ( );
__declspec(implementation_key(3682)) void _IAgVAEngineDefinition::PutIspC2 ( double pVal );
__declspec(implementation_key(3683)) double _IAgVAEngineDefinition::GetIspC3 ( );
__declspec(implementation_key(3684)) void _IAgVAEngineDefinition::PutIspC3 ( double pVal );
__declspec(implementation_key(3685)) enum AgEVAEngineModelFunction _IAgVAEngineDefinition::GetMassFlowRateEquationType ( );
__declspec(implementation_key(3686)) void _IAgVAEngineDefinition::PutMassFlowRateEquationType ( enum AgEVAEngineModelFunction pVal );
__declspec(implementation_key(3687)) double _IAgVAEngineDefinition::GetMassFlowRateC0 ( );
__declspec(implementation_key(3688)) void _IAgVAEngineDefinition::PutMassFlowRateC0 ( double pVal );
__declspec(implementation_key(3689)) double _IAgVAEngineDefinition::GetMassFlowRateC1 ( );
__declspec(implementation_key(3690)) void _IAgVAEngineDefinition::PutMassFlowRateC1 ( double pVal );
__declspec(implementation_key(3691)) double _IAgVAEngineDefinition::GetMassFlowRateC2 ( );
__declspec(implementation_key(3692)) void _IAgVAEngineDefinition::PutMassFlowRateC2 ( double pVal );
__declspec(implementation_key(3693)) double _IAgVAEngineDefinition::GetMassFlowRateC3 ( );
__declspec(implementation_key(3694)) void _IAgVAEngineDefinition::PutMassFlowRateC3 ( double pVal );
__declspec(implementation_key(3695)) _bstr_t _IAgVAEngineDefinition::GetMassFlowRateEquation ( );
__declspec(implementation_key(3696)) double _IAgVAEngineDefinition::GetMassFlowEfficiencyC0 ( );
__declspec(implementation_key(3697)) void _IAgVAEngineDefinition::PutMassFlowEfficiencyC0 ( double pVal );
__declspec(implementation_key(3698)) double _IAgVAEngineDefinition::GetMassFlowEfficiencyC1 ( );
__declspec(implementation_key(3699)) void _IAgVAEngineDefinition::PutMassFlowEfficiencyC1 ( double pVal );
__declspec(implementation_key(3700)) double _IAgVAEngineDefinition::GetMassFlowEfficiencyC2 ( );
__declspec(implementation_key(3701)) void _IAgVAEngineDefinition::PutMassFlowEfficiencyC2 ( double pVal );
__declspec(implementation_key(3702)) double _IAgVAEngineDefinition::GetMassFlowEfficiencyC3 ( );
__declspec(implementation_key(3703)) void _IAgVAEngineDefinition::PutMassFlowEfficiencyC3 ( double pVal );
__declspec(implementation_key(3704)) enum AgEVAEngineModelFunction _IAgVAEngineDefinition::GetMassFlowEfficiencyIndependentVar ( );
__declspec(implementation_key(3705)) void _IAgVAEngineDefinition::PutMassFlowEfficiencyIndependentVar ( enum AgEVAEngineModelFunction pVal );
__declspec(implementation_key(3706)) _bstr_t _IAgVAEngineDefinition::GetMassFlowEfficiencyEquation ( );
__declspec(implementation_key(3707)) double _IAgVAEngineDefinition::GetPowerEfficiencyC0 ( );
__declspec(implementation_key(3708)) void _IAgVAEngineDefinition::PutPowerEfficiencyC0 ( double pVal );
__declspec(implementation_key(3709)) double _IAgVAEngineDefinition::GetPowerEfficiencyC1 ( );
__declspec(implementation_key(3710)) void _IAgVAEngineDefinition::PutPowerEfficiencyC1 ( double pVal );
__declspec(implementation_key(3711)) double _IAgVAEngineDefinition::GetPowerEfficiencyC2 ( );
__declspec(implementation_key(3712)) void _IAgVAEngineDefinition::PutPowerEfficiencyC2 ( double pVal );
__declspec(implementation_key(3713)) double _IAgVAEngineDefinition::GetPowerEfficiencyC3 ( );
__declspec(implementation_key(3714)) void _IAgVAEngineDefinition::PutPowerEfficiencyC3 ( double pVal );
__declspec(implementation_key(3715)) enum AgEVAEngineModelFunction _IAgVAEngineDefinition::GetPowerEfficiencyIndependentVar ( );
__declspec(implementation_key(3716)) void _IAgVAEngineDefinition::PutPowerEfficiencyIndependentVar ( enum AgEVAEngineModelFunction pVal );
__declspec(implementation_key(3717)) _bstr_t _IAgVAEngineDefinition::GetPowerEfficiencyEquation ( );
__declspec(implementation_key(3718)) _bstr_t _IAgVAEngineDefinition::GetInputPowerSourceName ( );
__declspec(implementation_key(3719)) double IAgVAEngineIon::Getg ( );
__declspec(implementation_key(3720)) void IAgVAEngineIon::Putg ( double pVal );
__declspec(implementation_key(3721)) _bstr_t IAgVAEngineIon::GetInputPowerSourceName ( );
__declspec(implementation_key(3722)) void IAgVAEngineIon::PutInputPowerSourceName ( _bstr_t pPowerSource );
__declspec(implementation_key(3723)) double IAgVAEngineIon::GetMinRequiredPower ( );
__declspec(implementation_key(3724)) void IAgVAEngineIon::PutMinRequiredPower ( double pVal );
__declspec(implementation_key(3725)) double IAgVAEngineIon::GetMaxInputPower ( );
__declspec(implementation_key(3726)) void IAgVAEngineIon::PutMaxInputPower ( double pVal );
__declspec(implementation_key(3727)) double IAgVAEngineIon::GetPercentDegradationPerYear ( );
__declspec(implementation_key(3728)) void IAgVAEngineIon::PutPercentDegradationPerYear ( double pVal );
__declspec(implementation_key(3729)) _variant_t IAgVAEngineIon::GetReferenceEpoch ( );
__declspec(implementation_key(3730)) void IAgVAEngineIon::PutReferenceEpoch ( const _variant_t & pVal );
__declspec(implementation_key(3731)) double IAgVAEngineIon::GetPercentThrottle ( );
__declspec(implementation_key(3732)) void IAgVAEngineIon::PutPercentThrottle ( double pVal );
__declspec(implementation_key(3733)) IAgVAEngineDefinitionPtr IAgVAEngineIon::GetEngineDefinition ( );
__declspec(implementation_key(3734)) HRESULT IAgVAEngineIon::EnableControlParameter ( enum AgEVAControlEngineIon Param );
__declspec(implementation_key(3735)) HRESULT IAgVAEngineIon::DisableControlParameter ( enum AgEVAControlEngineIon Param );
__declspec(implementation_key(3736)) VARIANT_BOOL IAgVAEngineIon::IsControlParameterEnabled ( enum AgEVAControlEngineIon Param );
__declspec(implementation_key(3737)) VARIANT_BOOL IAgVAEngineIon::GetControlParametersAvailable ( );
__declspec(implementation_key(3738)) double _IAgVAEngineIon::Getg ( );
__declspec(implementation_key(3739)) void _IAgVAEngineIon::Putg ( double pVal );
__declspec(implementation_key(3740)) _bstr_t _IAgVAEngineIon::GetInputPowerSourceName ( );
__declspec(implementation_key(3741)) void _IAgVAEngineIon::PutInputPowerSourceName ( _bstr_t pPowerSource );
__declspec(implementation_key(3742)) double _IAgVAEngineIon::GetMinRequiredPower ( );
__declspec(implementation_key(3743)) void _IAgVAEngineIon::PutMinRequiredPower ( double pVal );
__declspec(implementation_key(3744)) double _IAgVAEngineIon::GetMaxInputPower ( );
__declspec(implementation_key(3745)) void _IAgVAEngineIon::PutMaxInputPower ( double pVal );
__declspec(implementation_key(3746)) double _IAgVAEngineIon::GetPercentDegradationPerYear ( );
__declspec(implementation_key(3747)) void _IAgVAEngineIon::PutPercentDegradationPerYear ( double pVal );
__declspec(implementation_key(3748)) _variant_t _IAgVAEngineIon::GetReferenceEpoch ( );
__declspec(implementation_key(3749)) void _IAgVAEngineIon::PutReferenceEpoch ( const _variant_t & pVal );
__declspec(implementation_key(3750)) double _IAgVAEngineIon::GetPercentThrottle ( );
__declspec(implementation_key(3751)) void _IAgVAEngineIon::PutPercentThrottle ( double pVal );
__declspec(implementation_key(3752)) IAgVAEngineDefinitionPtr _IAgVAEngineIon::GetEngineDefinition ( );
__declspec(implementation_key(3753)) HRESULT _IAgVAEngineIon::EnableControlParameter ( enum AgEVAControlEngineIon Param );
__declspec(implementation_key(3754)) HRESULT _IAgVAEngineIon::DisableControlParameter ( enum AgEVAControlEngineIon Param );
__declspec(implementation_key(3755)) VARIANT_BOOL _IAgVAEngineIon::IsControlParameterEnabled ( enum AgEVAControlEngineIon Param );
__declspec(implementation_key(3756)) VARIANT_BOOL _IAgVAEngineIon::GetControlParametersAvailable ( );
__declspec(implementation_key(3757)) _bstr_t _IAgVAEngineIon::GetName ( );
__declspec(implementation_key(3758)) void _IAgVAEngineIon::PutName ( _bstr_t pVal );
__declspec(implementation_key(3759)) _bstr_t _IAgVAEngineIon::GetUserComment ( );
__declspec(implementation_key(3760)) void _IAgVAEngineIon::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3761)) _bstr_t _IAgVAEngineIon::GetDescription ( );
__declspec(implementation_key(3762)) VARIANT_BOOL _IAgVAEngineIon::IsReadOnly ( );
__declspec(implementation_key(3763)) IUnknownPtr _IAgVAEngineIon::CloneObject ( );
__declspec(implementation_key(3764)) double IAgVAEngineCustom::Getg ( );
__declspec(implementation_key(3765)) void IAgVAEngineCustom::Putg ( double pVal );
__declspec(implementation_key(3766)) _bstr_t IAgVAEngineCustom::GetEvalFunctionName ( );
__declspec(implementation_key(3767)) void IAgVAEngineCustom::PutEvalFunctionName ( _bstr_t pEvalFunction );
__declspec(implementation_key(3768)) _bstr_t IAgVAEngineCustom::GetPostFunctionName ( );
__declspec(implementation_key(3769)) void IAgVAEngineCustom::PutPostFunctionName ( _bstr_t pPostFunction );
__declspec(implementation_key(3770)) _bstr_t IAgVAEngineCustom::GetPreFunctionName ( );
__declspec(implementation_key(3771)) void IAgVAEngineCustom::PutPreFunctionName ( _bstr_t pPreFunction );
__declspec(implementation_key(3772)) _bstr_t IAgVAEngineCustom::GetSegStartFunctionName ( );
__declspec(implementation_key(3773)) void IAgVAEngineCustom::PutSegStartFunctionName ( _bstr_t pSegStartFunction );
__declspec(implementation_key(3774)) _bstr_t IAgVAEngineCustom::GetUpdateFunctionName ( );
__declspec(implementation_key(3775)) void IAgVAEngineCustom::PutUpdateFunctionName ( _bstr_t pUpdateFunction );
__declspec(implementation_key(3776)) HRESULT IAgVAEngineCustom::EnableControlParameter ( enum AgEVAControlEngineCustom Param );
__declspec(implementation_key(3777)) HRESULT IAgVAEngineCustom::DisableControlParameter ( enum AgEVAControlEngineCustom Param );
__declspec(implementation_key(3778)) VARIANT_BOOL IAgVAEngineCustom::IsControlParameterEnabled ( enum AgEVAControlEngineCustom Param );
__declspec(implementation_key(3779)) VARIANT_BOOL IAgVAEngineCustom::GetControlParametersAvailable ( );
__declspec(implementation_key(3780)) double _IAgVAEngineCustom::Getg ( );
__declspec(implementation_key(3781)) void _IAgVAEngineCustom::Putg ( double pVal );
__declspec(implementation_key(3782)) _bstr_t _IAgVAEngineCustom::GetEvalFunctionName ( );
__declspec(implementation_key(3783)) void _IAgVAEngineCustom::PutEvalFunctionName ( _bstr_t pEvalFunction );
__declspec(implementation_key(3784)) _bstr_t _IAgVAEngineCustom::GetPostFunctionName ( );
__declspec(implementation_key(3785)) void _IAgVAEngineCustom::PutPostFunctionName ( _bstr_t pPostFunction );
__declspec(implementation_key(3786)) _bstr_t _IAgVAEngineCustom::GetPreFunctionName ( );
__declspec(implementation_key(3787)) void _IAgVAEngineCustom::PutPreFunctionName ( _bstr_t pPreFunction );
__declspec(implementation_key(3788)) _bstr_t _IAgVAEngineCustom::GetSegStartFunctionName ( );
__declspec(implementation_key(3789)) void _IAgVAEngineCustom::PutSegStartFunctionName ( _bstr_t pSegStartFunction );
__declspec(implementation_key(3790)) _bstr_t _IAgVAEngineCustom::GetUpdateFunctionName ( );
__declspec(implementation_key(3791)) void _IAgVAEngineCustom::PutUpdateFunctionName ( _bstr_t pUpdateFunction );
__declspec(implementation_key(3792)) HRESULT _IAgVAEngineCustom::EnableControlParameter ( enum AgEVAControlEngineCustom Param );
__declspec(implementation_key(3793)) HRESULT _IAgVAEngineCustom::DisableControlParameter ( enum AgEVAControlEngineCustom Param );
__declspec(implementation_key(3794)) VARIANT_BOOL _IAgVAEngineCustom::IsControlParameterEnabled ( enum AgEVAControlEngineCustom Param );
__declspec(implementation_key(3795)) VARIANT_BOOL _IAgVAEngineCustom::GetControlParametersAvailable ( );
__declspec(implementation_key(3796)) _bstr_t _IAgVAEngineCustom::GetName ( );
__declspec(implementation_key(3797)) void _IAgVAEngineCustom::PutName ( _bstr_t pVal );
__declspec(implementation_key(3798)) _bstr_t _IAgVAEngineCustom::GetUserComment ( );
__declspec(implementation_key(3799)) void _IAgVAEngineCustom::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3800)) _bstr_t _IAgVAEngineCustom::GetDescription ( );
__declspec(implementation_key(3801)) VARIANT_BOOL _IAgVAEngineCustom::IsReadOnly ( );
__declspec(implementation_key(3802)) IUnknownPtr _IAgVAEngineCustom::CloneObject ( );
__declspec(implementation_key(3803)) double IAgVAEnginePlugin::Getg ( );
__declspec(implementation_key(3804)) void IAgVAEnginePlugin::Putg ( double pVal );
__declspec(implementation_key(3805)) _bstr_t IAgVAEnginePlugin::GetPluginIdentifier ( );
__declspec(implementation_key(3806)) void IAgVAEnginePlugin::PutPluginIdentifier ( _bstr_t pVal );
__declspec(implementation_key(3807)) IAgVAPluginPropertiesPtr IAgVAEnginePlugin::GetPluginConfig ( );
__declspec(implementation_key(3808)) double _IAgVAEnginePlugin::Getg ( );
__declspec(implementation_key(3809)) void _IAgVAEnginePlugin::Putg ( double pVal );
__declspec(implementation_key(3810)) _bstr_t _IAgVAEnginePlugin::GetPluginIdentifier ( );
__declspec(implementation_key(3811)) void _IAgVAEnginePlugin::PutPluginIdentifier ( _bstr_t pVal );
__declspec(implementation_key(3812)) IAgVAPluginPropertiesPtr _IAgVAEnginePlugin::GetPluginConfig ( );
__declspec(implementation_key(3813)) _bstr_t _IAgVAEnginePlugin::GetName ( );
__declspec(implementation_key(3814)) void _IAgVAEnginePlugin::PutName ( _bstr_t pVal );
__declspec(implementation_key(3815)) _bstr_t _IAgVAEnginePlugin::GetUserComment ( );
__declspec(implementation_key(3816)) void _IAgVAEnginePlugin::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3817)) _bstr_t _IAgVAEnginePlugin::GetDescription ( );
__declspec(implementation_key(3818)) VARIANT_BOOL _IAgVAEnginePlugin::IsReadOnly ( );
__declspec(implementation_key(3819)) IUnknownPtr _IAgVAEnginePlugin::CloneObject ( );
__declspec(implementation_key(3820)) double IAgVAEngineModelPoly::Getg ( );
__declspec(implementation_key(3821)) void IAgVAEngineModelPoly::Putg ( double pVal );
__declspec(implementation_key(3822)) IAgVAEngineModelThrustCoefficientsPtr IAgVAEngineModelPoly::GetThrustCoefficients ( );
__declspec(implementation_key(3823)) IAgVAEngineModelIspCoefficientsPtr IAgVAEngineModelPoly::GetIspCoefficients ( );
__declspec(implementation_key(3824)) HRESULT IAgVAEngineModelPoly::EnableControlParameter ( enum AgEVAControlEngineModelPoly Param );
__declspec(implementation_key(3825)) HRESULT IAgVAEngineModelPoly::DisableControlParameter ( enum AgEVAControlEngineModelPoly Param );
__declspec(implementation_key(3826)) VARIANT_BOOL IAgVAEngineModelPoly::IsControlParameterEnabled ( enum AgEVAControlEngineModelPoly Param );
__declspec(implementation_key(3827)) VARIANT_BOOL IAgVAEngineModelPoly::GetControlParametersAvailable ( );
__declspec(implementation_key(3828)) double _IAgVAEngineModelPoly::Getg ( );
__declspec(implementation_key(3829)) void _IAgVAEngineModelPoly::Putg ( double pVal );
__declspec(implementation_key(3830)) IAgVAEngineModelThrustCoefficientsPtr _IAgVAEngineModelPoly::GetThrustCoefficients ( );
__declspec(implementation_key(3831)) IAgVAEngineModelIspCoefficientsPtr _IAgVAEngineModelPoly::GetIspCoefficients ( );
__declspec(implementation_key(3832)) HRESULT _IAgVAEngineModelPoly::EnableControlParameter ( enum AgEVAControlEngineModelPoly Param );
__declspec(implementation_key(3833)) HRESULT _IAgVAEngineModelPoly::DisableControlParameter ( enum AgEVAControlEngineModelPoly Param );
__declspec(implementation_key(3834)) VARIANT_BOOL _IAgVAEngineModelPoly::IsControlParameterEnabled ( enum AgEVAControlEngineModelPoly Param );
__declspec(implementation_key(3835)) VARIANT_BOOL _IAgVAEngineModelPoly::GetControlParametersAvailable ( );
__declspec(implementation_key(3836)) _bstr_t _IAgVAEngineModelPoly::GetName ( );
__declspec(implementation_key(3837)) void _IAgVAEngineModelPoly::PutName ( _bstr_t pVal );
__declspec(implementation_key(3838)) _bstr_t _IAgVAEngineModelPoly::GetUserComment ( );
__declspec(implementation_key(3839)) void _IAgVAEngineModelPoly::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3840)) _bstr_t _IAgVAEngineModelPoly::GetDescription ( );
__declspec(implementation_key(3841)) VARIANT_BOOL _IAgVAEngineModelPoly::IsReadOnly ( );
__declspec(implementation_key(3842)) IUnknownPtr _IAgVAEngineModelPoly::CloneObject ( );
__declspec(implementation_key(3843)) _bstr_t IAgVAThruster::GetName ( );
__declspec(implementation_key(3844)) void IAgVAThruster::PutName ( _bstr_t pVal );
__declspec(implementation_key(3845)) _bstr_t IAgVAThruster::GetUserComment ( );
__declspec(implementation_key(3846)) void IAgVAThruster::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3847)) IAgVAThrusterPtr IAgVAThruster::Copy ( );
__declspec(implementation_key(3848)) _bstr_t IAgVAThruster::GetEngineModelName ( );
__declspec(implementation_key(3849)) void IAgVAThruster::PutEngineModelName ( _bstr_t pVal );
__declspec(implementation_key(3850)) double IAgVAThruster::GetThrusterEfficiency ( );
__declspec(implementation_key(3851)) void IAgVAThruster::PutThrusterEfficiency ( double pVal );
__declspec(implementation_key(3852)) double IAgVAThruster::GetEquivalentOnTime ( );
__declspec(implementation_key(3853)) void IAgVAThruster::PutEquivalentOnTime ( double pVal );
__declspec(implementation_key(3854)) STKUtil::IAgDirectionPtr IAgVAThruster::GetThrusterDirection ( );
__declspec(implementation_key(3855)) HRESULT IAgVAThruster::EnableControlParameter ( enum AgEVAControlThrusters Param );
__declspec(implementation_key(3856)) HRESULT IAgVAThruster::DisableControlParameter ( enum AgEVAControlThrusters Param );
__declspec(implementation_key(3857)) VARIANT_BOOL IAgVAThruster::IsControlParameterEnabled ( enum AgEVAControlThrusters Param );
__declspec(implementation_key(3858)) VARIANT_BOOL IAgVAThruster::GetControlParametersAvailable ( );
__declspec(implementation_key(3859)) _bstr_t _IAgVAThruster::GetEngineModelName ( );
__declspec(implementation_key(3860)) void _IAgVAThruster::PutEngineModelName ( _bstr_t pVal );
__declspec(implementation_key(3861)) double _IAgVAThruster::GetThrusterEfficiency ( );
__declspec(implementation_key(3862)) void _IAgVAThruster::PutThrusterEfficiency ( double pVal );
__declspec(implementation_key(3863)) double _IAgVAThruster::GetEquivalentOnTime ( );
__declspec(implementation_key(3864)) void _IAgVAThruster::PutEquivalentOnTime ( double pVal );
__declspec(implementation_key(3865)) STKUtil::IAgDirectionPtr _IAgVAThruster::GetThrusterDirection ( );
__declspec(implementation_key(3866)) _bstr_t _IAgVAThruster::GetName ( );
__declspec(implementation_key(3867)) void _IAgVAThruster::PutName ( _bstr_t pVal );
__declspec(implementation_key(3868)) _bstr_t _IAgVAThruster::GetUserComment ( );
__declspec(implementation_key(3869)) void _IAgVAThruster::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3870)) IAgVAThrusterPtr _IAgVAThruster::Copy ( );
__declspec(implementation_key(3871)) HRESULT _IAgVAThruster::EnableControlParameter ( enum AgEVAControlThrusters Param );
__declspec(implementation_key(3872)) HRESULT _IAgVAThruster::DisableControlParameter ( enum AgEVAControlThrusters Param );
__declspec(implementation_key(3873)) VARIANT_BOOL _IAgVAThruster::IsControlParameterEnabled ( enum AgEVAControlThrusters Param );
__declspec(implementation_key(3874)) VARIANT_BOOL _IAgVAThruster::GetControlParametersAvailable ( );
__declspec(implementation_key(3875)) IAgVAThrusterPtr IAgVAThrusterSetCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(3876)) IUnknownPtr IAgVAThrusterSetCollection::Get_NewEnum ( );
__declspec(implementation_key(3877)) long IAgVAThrusterSetCollection::GetCount ( );
__declspec(implementation_key(3878)) IAgVAThrusterPtr IAgVAThrusterSetCollection::Add ( _bstr_t ThrusterName );
__declspec(implementation_key(3879)) HRESULT IAgVAThrusterSetCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(3880)) HRESULT IAgVAThrusterSetCollection::RemoveAll ( );
__declspec(implementation_key(3881)) HRESULT IAgVAThrusterSetCollection::Cut ( const _variant_t & IndexOrName );
__declspec(implementation_key(3882)) IAgVAThrusterPtr IAgVAThrusterSetCollection::Paste ( );
__declspec(implementation_key(3883)) IAgVAThrusterPtr IAgVAThrusterSetCollection::InsertCopy ( struct IAgVAThruster * Thruster );
__declspec(implementation_key(3884)) enum AgEVAThrusterDirection IAgVAThrusterSet::GetDirectionDefinition ( );
__declspec(implementation_key(3885)) void IAgVAThrusterSet::PutDirectionDefinition ( enum AgEVAThrusterDirection pVal );
__declspec(implementation_key(3886)) IAgVAThrusterSetCollectionPtr IAgVAThrusterSet::GetThrusters ( );
__declspec(implementation_key(3887)) enum AgEVAThrusterDirection _IAgVAThrusterSet::GetDirectionDefinition ( );
__declspec(implementation_key(3888)) void _IAgVAThrusterSet::PutDirectionDefinition ( enum AgEVAThrusterDirection pVal );
__declspec(implementation_key(3889)) IAgVAThrusterSetCollectionPtr _IAgVAThrusterSet::GetThrusters ( );
__declspec(implementation_key(3890)) _bstr_t _IAgVAThrusterSet::GetName ( );
__declspec(implementation_key(3891)) void _IAgVAThrusterSet::PutName ( _bstr_t pVal );
__declspec(implementation_key(3892)) _bstr_t _IAgVAThrusterSet::GetUserComment ( );
__declspec(implementation_key(3893)) void _IAgVAThrusterSet::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3894)) _bstr_t _IAgVAThrusterSet::GetDescription ( );
__declspec(implementation_key(3895)) VARIANT_BOOL _IAgVAThrusterSet::IsReadOnly ( );
__declspec(implementation_key(3896)) IUnknownPtr _IAgVAThrusterSet::CloneObject ( );
__declspec(implementation_key(3897)) enum AgEVACriteria IAgVAAsTriggerCondition::GetCriteria ( );
__declspec(implementation_key(3898)) void IAgVAAsTriggerCondition::PutCriteria ( enum AgEVACriteria pVal );
__declspec(implementation_key(3899)) STKObjects::IAgComponentInfoPtr IAgVAAsTriggerCondition::GetCalcObject ( );
__declspec(implementation_key(3900)) void IAgVAAsTriggerCondition::PutCalcObject ( struct STKObjects::IAgComponentInfo * ppComponent );
__declspec(implementation_key(3901)) _bstr_t IAgVAAsTriggerCondition::GetCalcObjectName ( );
__declspec(implementation_key(3902)) void IAgVAAsTriggerCondition::PutCalcObjectName ( _bstr_t pRetVal );
__declspec(implementation_key(3903)) _variant_t IAgVAAsTriggerCondition::GetValue ( );
__declspec(implementation_key(3904)) void IAgVAAsTriggerCondition::PutValue ( const _variant_t & pRetVal );
__declspec(implementation_key(3905)) _variant_t IAgVAAsTriggerCondition::GetTolerance ( );
__declspec(implementation_key(3906)) void IAgVAAsTriggerCondition::PutTolerance ( const _variant_t & pRetVal );
__declspec(implementation_key(3907)) VARIANT_BOOL IAgVAAsTriggerCondition::GetUseAbsoluteValue ( );
__declspec(implementation_key(3908)) void IAgVAAsTriggerCondition::PutUseAbsoluteValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(3909)) HRESULT IAgVAAsTriggerCondition::CopyCalcObjectToClipboard ( );
__declspec(implementation_key(3910)) HRESULT IAgVAAsTriggerCondition::PasteCalcObjectFromClipboard ( );
__declspec(implementation_key(3911)) IAgVAAsTriggerConditionPtr IAgVAConstraintCollection::Add ( _bstr_t ResultName );
__declspec(implementation_key(3912)) IAgVAAsTriggerConditionPtr IAgVAConstraintCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(3913)) HRESULT IAgVAConstraintCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(3914)) IUnknownPtr IAgVAConstraintCollection::Get_NewEnum ( );
__declspec(implementation_key(3915)) long IAgVAConstraintCollection::GetCount ( );
__declspec(implementation_key(3916)) HRESULT IAgVAConstraintCollection::Cut ( const _variant_t & IndexOrName );
__declspec(implementation_key(3917)) IAgVAAsTriggerConditionPtr IAgVAConstraintCollection::Paste ( );
__declspec(implementation_key(3918)) IAgVAAsTriggerConditionPtr IAgVAConstraintCollection::InsertCopy ( struct IAgVAAsTriggerCondition * Cond );
__declspec(implementation_key(3919)) enum AgEVACriteria _IAgVAAsTriggerCondition::GetCriteria ( );
__declspec(implementation_key(3920)) void _IAgVAAsTriggerCondition::PutCriteria ( enum AgEVACriteria pVal );
__declspec(implementation_key(3921)) STKObjects::IAgComponentInfoPtr _IAgVAAsTriggerCondition::GetCalcObject ( );
__declspec(implementation_key(3922)) void _IAgVAAsTriggerCondition::PutCalcObject ( struct STKObjects::IAgComponentInfo * ppComponent );
__declspec(implementation_key(3923)) _bstr_t _IAgVAAsTriggerCondition::GetCalcObjectName ( );
__declspec(implementation_key(3924)) void _IAgVAAsTriggerCondition::PutCalcObjectName ( _bstr_t pRetVal );
__declspec(implementation_key(3925)) _variant_t _IAgVAAsTriggerCondition::GetValue ( );
__declspec(implementation_key(3926)) void _IAgVAAsTriggerCondition::PutValue ( const _variant_t & pRetVal );
__declspec(implementation_key(3927)) _variant_t _IAgVAAsTriggerCondition::GetTolerance ( );
__declspec(implementation_key(3928)) void _IAgVAAsTriggerCondition::PutTolerance ( const _variant_t & pRetVal );
__declspec(implementation_key(3929)) VARIANT_BOOL _IAgVAAsTriggerCondition::GetUseAbsoluteValue ( );
__declspec(implementation_key(3930)) void _IAgVAAsTriggerCondition::PutUseAbsoluteValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(3931)) _bstr_t _IAgVAAsTriggerCondition::GetName ( );
__declspec(implementation_key(3932)) void _IAgVAAsTriggerCondition::PutName ( _bstr_t pVal );
__declspec(implementation_key(3933)) _bstr_t _IAgVAAsTriggerCondition::GetUserComment ( );
__declspec(implementation_key(3934)) void _IAgVAAsTriggerCondition::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3935)) _bstr_t _IAgVAAsTriggerCondition::GetDescription ( );
__declspec(implementation_key(3936)) VARIANT_BOOL _IAgVAAsTriggerCondition::IsReadOnly ( );
__declspec(implementation_key(3937)) IUnknownPtr _IAgVAAsTriggerCondition::CloneObject ( );
__declspec(implementation_key(3938)) HRESULT _IAgVAAsTriggerCondition::CopyCalcObjectToClipboard ( );
__declspec(implementation_key(3939)) HRESULT _IAgVAAsTriggerCondition::PasteCalcObjectFromClipboard ( );
__declspec(implementation_key(3940)) _bstr_t IAgVACustomFunctionScriptEngine::GetScriptFilename ( );
__declspec(implementation_key(3941)) void IAgVACustomFunctionScriptEngine::PutScriptFilename ( _bstr_t pVal );
__declspec(implementation_key(3942)) _bstr_t IAgVACustomFunctionScriptEngine::GetFileExtensionName ( );
__declspec(implementation_key(3943)) void IAgVACustomFunctionScriptEngine::PutFileExtensionName ( _bstr_t pVal );
__declspec(implementation_key(3944)) _bstr_t _IAgVACustomFunctionScriptEngine::GetScriptFilename ( );
__declspec(implementation_key(3945)) void _IAgVACustomFunctionScriptEngine::PutScriptFilename ( _bstr_t pVal );
__declspec(implementation_key(3946)) _bstr_t _IAgVACustomFunctionScriptEngine::GetFileExtensionName ( );
__declspec(implementation_key(3947)) void _IAgVACustomFunctionScriptEngine::PutFileExtensionName ( _bstr_t pVal );
__declspec(implementation_key(3948)) _bstr_t _IAgVACustomFunctionScriptEngine::GetName ( );
__declspec(implementation_key(3949)) void _IAgVACustomFunctionScriptEngine::PutName ( _bstr_t pVal );
__declspec(implementation_key(3950)) _bstr_t _IAgVACustomFunctionScriptEngine::GetUserComment ( );
__declspec(implementation_key(3951)) void _IAgVACustomFunctionScriptEngine::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3952)) _bstr_t _IAgVACustomFunctionScriptEngine::GetDescription ( );
__declspec(implementation_key(3953)) VARIANT_BOOL _IAgVACustomFunctionScriptEngine::IsReadOnly ( );
__declspec(implementation_key(3954)) IUnknownPtr _IAgVACustomFunctionScriptEngine::CloneObject ( );
__declspec(implementation_key(3955)) STKObjects::IAgComponentInfoPtr IAgVAPropagatorFunctionCollection::Add ( _bstr_t ResultName );
__declspec(implementation_key(3956)) STKObjects::IAgComponentInfoPtr IAgVAPropagatorFunctionCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(3957)) HRESULT IAgVAPropagatorFunctionCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(3958)) IUnknownPtr IAgVAPropagatorFunctionCollection::Get_NewEnum ( );
__declspec(implementation_key(3959)) long IAgVAPropagatorFunctionCollection::GetCount ( );
__declspec(implementation_key(3960)) HRESULT IAgVAPropagatorFunctionCollection::RemoveAll ( );
__declspec(implementation_key(3961)) HRESULT IAgVAPropagatorFunctionCollection::Cut ( const _variant_t & IndexOrName );
__declspec(implementation_key(3962)) STKObjects::IAgComponentInfoPtr IAgVAPropagatorFunctionCollection::Paste ( );
__declspec(implementation_key(3963)) STKObjects::IAgComponentInfoPtr IAgVAPropagatorFunctionCollection::InsertCopy ( struct STKObjects::IAgComponentInfo * PropFunc );
__declspec(implementation_key(3964)) _bstr_t IAgVANumericalPropagatorWrapper::GetCentralBodyName ( );
__declspec(implementation_key(3965)) void IAgVANumericalPropagatorWrapper::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(3966)) VARIANT_BOOL IAgVANumericalPropagatorWrapper::GetUseVariationOfParameters ( );
__declspec(implementation_key(3967)) void IAgVANumericalPropagatorWrapper::PutUseVariationOfParameters ( VARIANT_BOOL pVal );
__declspec(implementation_key(3968)) VARIANT_BOOL IAgVANumericalPropagatorWrapper::GetUseRegularizedTime ( );
__declspec(implementation_key(3969)) void IAgVANumericalPropagatorWrapper::PutUseRegularizedTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(3970)) double IAgVANumericalPropagatorWrapper::GetRegularizedTimeExponent ( );
__declspec(implementation_key(3971)) void IAgVANumericalPropagatorWrapper::PutRegularizedTimeExponent ( double pVal );
__declspec(implementation_key(3972)) long IAgVANumericalPropagatorWrapper::GetRegularizedTimeStepsPerOrbit ( );
__declspec(implementation_key(3973)) void IAgVANumericalPropagatorWrapper::PutRegularizedTimeStepsPerOrbit ( long pVal );
__declspec(implementation_key(3974)) IAgVAPropagatorFunctionCollectionPtr IAgVANumericalPropagatorWrapper::GetPropagatorFunctions ( );
__declspec(implementation_key(3975)) IAgVANumericalIntegratorPtr IAgVANumericalPropagatorWrapper::GetNumericalIntegrator ( );
__declspec(implementation_key(3976)) enum AgEVANumericalIntegrator IAgVANumericalPropagatorWrapper::GetNumericalIntegratorType ( );
__declspec(implementation_key(3977)) HRESULT IAgVANumericalPropagatorWrapper::SetNumericalIntegrator ( enum AgEVANumericalIntegrator Integrator );
__declspec(implementation_key(3978)) _bstr_t _IAgVANumericalPropagatorWrapper::GetCentralBodyName ( );
__declspec(implementation_key(3979)) void _IAgVANumericalPropagatorWrapper::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(3980)) VARIANT_BOOL _IAgVANumericalPropagatorWrapper::GetUseVariationOfParameters ( );
__declspec(implementation_key(3981)) void _IAgVANumericalPropagatorWrapper::PutUseVariationOfParameters ( VARIANT_BOOL pVal );
__declspec(implementation_key(3982)) VARIANT_BOOL _IAgVANumericalPropagatorWrapper::GetUseRegularizedTime ( );
__declspec(implementation_key(3983)) void _IAgVANumericalPropagatorWrapper::PutUseRegularizedTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(3984)) double _IAgVANumericalPropagatorWrapper::GetRegularizedTimeExponent ( );
__declspec(implementation_key(3985)) void _IAgVANumericalPropagatorWrapper::PutRegularizedTimeExponent ( double pVal );
__declspec(implementation_key(3986)) long _IAgVANumericalPropagatorWrapper::GetRegularizedTimeStepsPerOrbit ( );
__declspec(implementation_key(3987)) void _IAgVANumericalPropagatorWrapper::PutRegularizedTimeStepsPerOrbit ( long pVal );
__declspec(implementation_key(3988)) IAgVAPropagatorFunctionCollectionPtr _IAgVANumericalPropagatorWrapper::GetPropagatorFunctions ( );
__declspec(implementation_key(3989)) IAgVANumericalIntegratorPtr _IAgVANumericalPropagatorWrapper::GetNumericalIntegrator ( );
__declspec(implementation_key(3990)) enum AgEVANumericalIntegrator _IAgVANumericalPropagatorWrapper::GetNumericalIntegratorType ( );
__declspec(implementation_key(3991)) HRESULT _IAgVANumericalPropagatorWrapper::SetNumericalIntegrator ( enum AgEVANumericalIntegrator Integrator );
__declspec(implementation_key(3992)) _bstr_t _IAgVANumericalPropagatorWrapper::GetName ( );
__declspec(implementation_key(3993)) void _IAgVANumericalPropagatorWrapper::PutName ( _bstr_t pVal );
__declspec(implementation_key(3994)) _bstr_t _IAgVANumericalPropagatorWrapper::GetUserComment ( );
__declspec(implementation_key(3995)) void _IAgVANumericalPropagatorWrapper::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(3996)) _bstr_t _IAgVANumericalPropagatorWrapper::GetDescription ( );
__declspec(implementation_key(3997)) VARIANT_BOOL _IAgVANumericalPropagatorWrapper::IsReadOnly ( );
__declspec(implementation_key(3998)) IUnknownPtr _IAgVANumericalPropagatorWrapper::CloneObject ( );
__declspec(implementation_key(3999)) double IAgVABulirschStoerIntegrator::GetInitialStep ( );
__declspec(implementation_key(4000)) void IAgVABulirschStoerIntegrator::PutInitialStep ( double pVal );
__declspec(implementation_key(4001)) VARIANT_BOOL IAgVABulirschStoerIntegrator::GetUseFixedStep ( );
__declspec(implementation_key(4002)) void IAgVABulirschStoerIntegrator::PutUseFixedStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4003)) VARIANT_BOOL IAgVABulirschStoerIntegrator::GetUseMaxStep ( );
__declspec(implementation_key(4004)) void IAgVABulirschStoerIntegrator::PutUseMaxStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4005)) VARIANT_BOOL IAgVABulirschStoerIntegrator::GetUseMinStep ( );
__declspec(implementation_key(4006)) void IAgVABulirschStoerIntegrator::PutUseMinStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4007)) double IAgVABulirschStoerIntegrator::GetMaxStep ( );
__declspec(implementation_key(4008)) void IAgVABulirschStoerIntegrator::PutMaxStep ( double pVal );
__declspec(implementation_key(4009)) double IAgVABulirschStoerIntegrator::GetMinStep ( );
__declspec(implementation_key(4010)) void IAgVABulirschStoerIntegrator::PutMinStep ( double pVal );
__declspec(implementation_key(4011)) double IAgVABulirschStoerIntegrator::GetMaxRelErr ( );
__declspec(implementation_key(4012)) void IAgVABulirschStoerIntegrator::PutMaxRelErr ( double pVal );
__declspec(implementation_key(4013)) long IAgVABulirschStoerIntegrator::GetMaxSequences ( );
__declspec(implementation_key(4014)) void IAgVABulirschStoerIntegrator::PutMaxSequences ( long pVal );
__declspec(implementation_key(4015)) long IAgVABulirschStoerIntegrator::GetMaxIterations ( );
__declspec(implementation_key(4016)) void IAgVABulirschStoerIntegrator::PutMaxIterations ( long pVal );
__declspec(implementation_key(4017)) double IAgVABulirschStoerIntegrator::GetTolerance ( );
__declspec(implementation_key(4018)) void IAgVABulirschStoerIntegrator::PutTolerance ( double pVal );
__declspec(implementation_key(4019)) double IAgVABulirschStoerIntegrator::GetFirstSafetyCoefficient ( );
__declspec(implementation_key(4020)) void IAgVABulirschStoerIntegrator::PutFirstSafetyCoefficient ( double pVal );
__declspec(implementation_key(4021)) double IAgVABulirschStoerIntegrator::GetSecondSafetyCoefficient ( );
__declspec(implementation_key(4022)) void IAgVABulirschStoerIntegrator::PutSecondSafetyCoefficient ( double pVal );
__declspec(implementation_key(4023)) double _IAgVABulirschStoerIntegrator::GetInitialStep ( );
__declspec(implementation_key(4024)) void _IAgVABulirschStoerIntegrator::PutInitialStep ( double pVal );
__declspec(implementation_key(4025)) VARIANT_BOOL _IAgVABulirschStoerIntegrator::GetUseFixedStep ( );
__declspec(implementation_key(4026)) void _IAgVABulirschStoerIntegrator::PutUseFixedStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4027)) VARIANT_BOOL _IAgVABulirschStoerIntegrator::GetUseMaxStep ( );
__declspec(implementation_key(4028)) void _IAgVABulirschStoerIntegrator::PutUseMaxStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4029)) VARIANT_BOOL _IAgVABulirschStoerIntegrator::GetUseMinStep ( );
__declspec(implementation_key(4030)) void _IAgVABulirschStoerIntegrator::PutUseMinStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4031)) double _IAgVABulirschStoerIntegrator::GetMaxStep ( );
__declspec(implementation_key(4032)) void _IAgVABulirschStoerIntegrator::PutMaxStep ( double pVal );
__declspec(implementation_key(4033)) double _IAgVABulirschStoerIntegrator::GetMinStep ( );
__declspec(implementation_key(4034)) void _IAgVABulirschStoerIntegrator::PutMinStep ( double pVal );
__declspec(implementation_key(4035)) double _IAgVABulirschStoerIntegrator::GetMaxRelErr ( );
__declspec(implementation_key(4036)) void _IAgVABulirschStoerIntegrator::PutMaxRelErr ( double pVal );
__declspec(implementation_key(4037)) long _IAgVABulirschStoerIntegrator::GetMaxSequences ( );
__declspec(implementation_key(4038)) void _IAgVABulirschStoerIntegrator::PutMaxSequences ( long pVal );
__declspec(implementation_key(4039)) long _IAgVABulirschStoerIntegrator::GetMaxIterations ( );
__declspec(implementation_key(4040)) void _IAgVABulirschStoerIntegrator::PutMaxIterations ( long pVal );
__declspec(implementation_key(4041)) double _IAgVABulirschStoerIntegrator::GetTolerance ( );
__declspec(implementation_key(4042)) void _IAgVABulirschStoerIntegrator::PutTolerance ( double pVal );
__declspec(implementation_key(4043)) double _IAgVABulirschStoerIntegrator::GetFirstSafetyCoefficient ( );
__declspec(implementation_key(4044)) void _IAgVABulirschStoerIntegrator::PutFirstSafetyCoefficient ( double pVal );
__declspec(implementation_key(4045)) double _IAgVABulirschStoerIntegrator::GetSecondSafetyCoefficient ( );
__declspec(implementation_key(4046)) void _IAgVABulirschStoerIntegrator::PutSecondSafetyCoefficient ( double pVal );
__declspec(implementation_key(4047)) double IAgVAGaussJacksonIntegrator::GetInitialStep ( );
__declspec(implementation_key(4048)) void IAgVAGaussJacksonIntegrator::PutInitialStep ( double pVal );
__declspec(implementation_key(4049)) double IAgVAGaussJacksonIntegrator::GetMaxCorrectorRelErr ( );
__declspec(implementation_key(4050)) void IAgVAGaussJacksonIntegrator::PutMaxCorrectorRelErr ( double pVal );
__declspec(implementation_key(4051)) enum AgEVAPredictorCorrector IAgVAGaussJacksonIntegrator::GetCorrectorMode ( );
__declspec(implementation_key(4052)) void IAgVAGaussJacksonIntegrator::PutCorrectorMode ( enum AgEVAPredictorCorrector pVal );
__declspec(implementation_key(4053)) long IAgVAGaussJacksonIntegrator::GetMaxCorrectorIterations ( );
__declspec(implementation_key(4054)) void IAgVAGaussJacksonIntegrator::PutMaxCorrectorIterations ( long pVal );
__declspec(implementation_key(4055)) IAgVANumericalIntegratorPtr IAgVAGaussJacksonIntegrator::GetSingleStepIntegrator ( );
__declspec(implementation_key(4056)) enum AgEVANumericalIntegrator IAgVAGaussJacksonIntegrator::GetSingleStepIntegratorType ( );
__declspec(implementation_key(4057)) HRESULT IAgVAGaussJacksonIntegrator::SetSingleStepIntegrator ( enum AgEVANumericalIntegrator Integrator );
__declspec(implementation_key(4058)) double _IAgVAGaussJacksonIntegrator::GetInitialStep ( );
__declspec(implementation_key(4059)) void _IAgVAGaussJacksonIntegrator::PutInitialStep ( double pVal );
__declspec(implementation_key(4060)) double _IAgVAGaussJacksonIntegrator::GetMaxCorrectorRelErr ( );
__declspec(implementation_key(4061)) void _IAgVAGaussJacksonIntegrator::PutMaxCorrectorRelErr ( double pVal );
__declspec(implementation_key(4062)) enum AgEVAPredictorCorrector _IAgVAGaussJacksonIntegrator::GetCorrectorMode ( );
__declspec(implementation_key(4063)) void _IAgVAGaussJacksonIntegrator::PutCorrectorMode ( enum AgEVAPredictorCorrector pVal );
__declspec(implementation_key(4064)) long _IAgVAGaussJacksonIntegrator::GetMaxCorrectorIterations ( );
__declspec(implementation_key(4065)) void _IAgVAGaussJacksonIntegrator::PutMaxCorrectorIterations ( long pVal );
__declspec(implementation_key(4066)) IAgVANumericalIntegratorPtr _IAgVAGaussJacksonIntegrator::GetSingleStepIntegrator ( );
__declspec(implementation_key(4067)) enum AgEVANumericalIntegrator _IAgVAGaussJacksonIntegrator::GetSingleStepIntegratorType ( );
__declspec(implementation_key(4068)) HRESULT _IAgVAGaussJacksonIntegrator::SetSingleStepIntegrator ( enum AgEVANumericalIntegrator Integrator );
__declspec(implementation_key(4069)) double IAgVARK2nd3rd::GetInitialStep ( );
__declspec(implementation_key(4070)) void IAgVARK2nd3rd::PutInitialStep ( double pVal );
__declspec(implementation_key(4071)) VARIANT_BOOL IAgVARK2nd3rd::GetUseFixedStep ( );
__declspec(implementation_key(4072)) void IAgVARK2nd3rd::PutUseFixedStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4073)) VARIANT_BOOL IAgVARK2nd3rd::GetUseMaxStep ( );
__declspec(implementation_key(4074)) void IAgVARK2nd3rd::PutUseMaxStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4075)) VARIANT_BOOL IAgVARK2nd3rd::GetUseMinStep ( );
__declspec(implementation_key(4076)) void IAgVARK2nd3rd::PutUseMinStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4077)) double IAgVARK2nd3rd::GetMaxStep ( );
__declspec(implementation_key(4078)) void IAgVARK2nd3rd::PutMaxStep ( double pVal );
__declspec(implementation_key(4079)) double IAgVARK2nd3rd::GetMinStep ( );
__declspec(implementation_key(4080)) void IAgVARK2nd3rd::PutMinStep ( double pVal );
__declspec(implementation_key(4081)) double IAgVARK2nd3rd::GetMaxRelErr ( );
__declspec(implementation_key(4082)) void IAgVARK2nd3rd::PutMaxRelErr ( double pVal );
__declspec(implementation_key(4083)) double IAgVARK2nd3rd::GetMaxAbsErr ( );
__declspec(implementation_key(4084)) void IAgVARK2nd3rd::PutMaxAbsErr ( double pVal );
__declspec(implementation_key(4085)) double IAgVARK2nd3rd::GetHighSafetyCoefficient ( );
__declspec(implementation_key(4086)) void IAgVARK2nd3rd::PutHighSafetyCoefficient ( double pVal );
__declspec(implementation_key(4087)) double IAgVARK2nd3rd::GetLowSafetyCoefficient ( );
__declspec(implementation_key(4088)) void IAgVARK2nd3rd::PutLowSafetyCoefficient ( double pVal );
__declspec(implementation_key(4089)) enum AgEVAErrorControl IAgVARK2nd3rd::GetErrorControl ( );
__declspec(implementation_key(4090)) void IAgVARK2nd3rd::PutErrorControl ( enum AgEVAErrorControl pVal );
__declspec(implementation_key(4091)) long IAgVARK2nd3rd::GetMaxIterations ( );
__declspec(implementation_key(4092)) void IAgVARK2nd3rd::PutMaxIterations ( long pVal );
__declspec(implementation_key(4093)) double _IAgVARK2nd3rd::GetInitialStep ( );
__declspec(implementation_key(4094)) void _IAgVARK2nd3rd::PutInitialStep ( double pVal );
__declspec(implementation_key(4095)) VARIANT_BOOL _IAgVARK2nd3rd::GetUseFixedStep ( );
__declspec(implementation_key(4096)) void _IAgVARK2nd3rd::PutUseFixedStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4097)) VARIANT_BOOL _IAgVARK2nd3rd::GetUseMaxStep ( );
__declspec(implementation_key(4098)) void _IAgVARK2nd3rd::PutUseMaxStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4099)) VARIANT_BOOL _IAgVARK2nd3rd::GetUseMinStep ( );
__declspec(implementation_key(4100)) void _IAgVARK2nd3rd::PutUseMinStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4101)) double _IAgVARK2nd3rd::GetMaxStep ( );
__declspec(implementation_key(4102)) void _IAgVARK2nd3rd::PutMaxStep ( double pVal );
__declspec(implementation_key(4103)) double _IAgVARK2nd3rd::GetMinStep ( );
__declspec(implementation_key(4104)) void _IAgVARK2nd3rd::PutMinStep ( double pVal );
__declspec(implementation_key(4105)) double _IAgVARK2nd3rd::GetMaxRelErr ( );
__declspec(implementation_key(4106)) void _IAgVARK2nd3rd::PutMaxRelErr ( double pVal );
__declspec(implementation_key(4107)) double _IAgVARK2nd3rd::GetMaxAbsErr ( );
__declspec(implementation_key(4108)) void _IAgVARK2nd3rd::PutMaxAbsErr ( double pVal );
__declspec(implementation_key(4109)) double _IAgVARK2nd3rd::GetHighSafetyCoefficient ( );
__declspec(implementation_key(4110)) void _IAgVARK2nd3rd::PutHighSafetyCoefficient ( double pVal );
__declspec(implementation_key(4111)) double _IAgVARK2nd3rd::GetLowSafetyCoefficient ( );
__declspec(implementation_key(4112)) void _IAgVARK2nd3rd::PutLowSafetyCoefficient ( double pVal );
__declspec(implementation_key(4113)) enum AgEVAErrorControl _IAgVARK2nd3rd::GetErrorControl ( );
__declspec(implementation_key(4114)) void _IAgVARK2nd3rd::PutErrorControl ( enum AgEVAErrorControl pVal );
__declspec(implementation_key(4115)) long _IAgVARK2nd3rd::GetMaxIterations ( );
__declspec(implementation_key(4116)) void _IAgVARK2nd3rd::PutMaxIterations ( long pVal );
__declspec(implementation_key(4117)) double IAgVARK4th::GetInitialStep ( );
__declspec(implementation_key(4118)) void IAgVARK4th::PutInitialStep ( double pVal );
__declspec(implementation_key(4119)) double _IAgVARK4th::GetInitialStep ( );
__declspec(implementation_key(4120)) void _IAgVARK4th::PutInitialStep ( double pVal );
__declspec(implementation_key(4121)) double IAgVARK4th5th::GetInitialStep ( );
__declspec(implementation_key(4122)) void IAgVARK4th5th::PutInitialStep ( double pVal );
__declspec(implementation_key(4123)) VARIANT_BOOL IAgVARK4th5th::GetUseFixedStep ( );
__declspec(implementation_key(4124)) void IAgVARK4th5th::PutUseFixedStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4125)) VARIANT_BOOL IAgVARK4th5th::GetUseMaxStep ( );
__declspec(implementation_key(4126)) void IAgVARK4th5th::PutUseMaxStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4127)) VARIANT_BOOL IAgVARK4th5th::GetUseMinStep ( );
__declspec(implementation_key(4128)) void IAgVARK4th5th::PutUseMinStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4129)) double IAgVARK4th5th::GetMaxStep ( );
__declspec(implementation_key(4130)) void IAgVARK4th5th::PutMaxStep ( double pVal );
__declspec(implementation_key(4131)) double IAgVARK4th5th::GetMinStep ( );
__declspec(implementation_key(4132)) void IAgVARK4th5th::PutMinStep ( double pVal );
__declspec(implementation_key(4133)) double IAgVARK4th5th::GetMaxRelErr ( );
__declspec(implementation_key(4134)) void IAgVARK4th5th::PutMaxRelErr ( double pVal );
__declspec(implementation_key(4135)) double IAgVARK4th5th::GetMaxAbsErr ( );
__declspec(implementation_key(4136)) void IAgVARK4th5th::PutMaxAbsErr ( double pVal );
__declspec(implementation_key(4137)) double IAgVARK4th5th::GetHighSafetyCoefficient ( );
__declspec(implementation_key(4138)) void IAgVARK4th5th::PutHighSafetyCoefficient ( double pVal );
__declspec(implementation_key(4139)) double IAgVARK4th5th::GetLowSafetyCoefficient ( );
__declspec(implementation_key(4140)) void IAgVARK4th5th::PutLowSafetyCoefficient ( double pVal );
__declspec(implementation_key(4141)) enum AgEVAErrorControl IAgVARK4th5th::GetErrorControl ( );
__declspec(implementation_key(4142)) void IAgVARK4th5th::PutErrorControl ( enum AgEVAErrorControl pVal );
__declspec(implementation_key(4143)) long IAgVARK4th5th::GetMaxIterations ( );
__declspec(implementation_key(4144)) void IAgVARK4th5th::PutMaxIterations ( long pVal );
__declspec(implementation_key(4145)) double _IAgVARK4th5th::GetInitialStep ( );
__declspec(implementation_key(4146)) void _IAgVARK4th5th::PutInitialStep ( double pVal );
__declspec(implementation_key(4147)) VARIANT_BOOL _IAgVARK4th5th::GetUseFixedStep ( );
__declspec(implementation_key(4148)) void _IAgVARK4th5th::PutUseFixedStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4149)) VARIANT_BOOL _IAgVARK4th5th::GetUseMaxStep ( );
__declspec(implementation_key(4150)) void _IAgVARK4th5th::PutUseMaxStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4151)) VARIANT_BOOL _IAgVARK4th5th::GetUseMinStep ( );
__declspec(implementation_key(4152)) void _IAgVARK4th5th::PutUseMinStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4153)) double _IAgVARK4th5th::GetMaxStep ( );
__declspec(implementation_key(4154)) void _IAgVARK4th5th::PutMaxStep ( double pVal );
__declspec(implementation_key(4155)) double _IAgVARK4th5th::GetMinStep ( );
__declspec(implementation_key(4156)) void _IAgVARK4th5th::PutMinStep ( double pVal );
__declspec(implementation_key(4157)) double _IAgVARK4th5th::GetMaxRelErr ( );
__declspec(implementation_key(4158)) void _IAgVARK4th5th::PutMaxRelErr ( double pVal );
__declspec(implementation_key(4159)) double _IAgVARK4th5th::GetMaxAbsErr ( );
__declspec(implementation_key(4160)) void _IAgVARK4th5th::PutMaxAbsErr ( double pVal );
__declspec(implementation_key(4161)) double _IAgVARK4th5th::GetHighSafetyCoefficient ( );
__declspec(implementation_key(4162)) void _IAgVARK4th5th::PutHighSafetyCoefficient ( double pVal );
__declspec(implementation_key(4163)) double _IAgVARK4th5th::GetLowSafetyCoefficient ( );
__declspec(implementation_key(4164)) void _IAgVARK4th5th::PutLowSafetyCoefficient ( double pVal );
__declspec(implementation_key(4165)) enum AgEVAErrorControl _IAgVARK4th5th::GetErrorControl ( );
__declspec(implementation_key(4166)) void _IAgVARK4th5th::PutErrorControl ( enum AgEVAErrorControl pVal );
__declspec(implementation_key(4167)) long _IAgVARK4th5th::GetMaxIterations ( );
__declspec(implementation_key(4168)) void _IAgVARK4th5th::PutMaxIterations ( long pVal );
__declspec(implementation_key(4169)) double IAgVARK4thAdapt::GetInitialStep ( );
__declspec(implementation_key(4170)) void IAgVARK4thAdapt::PutInitialStep ( double pVal );
__declspec(implementation_key(4171)) VARIANT_BOOL IAgVARK4thAdapt::GetUseFixedStep ( );
__declspec(implementation_key(4172)) void IAgVARK4thAdapt::PutUseFixedStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4173)) VARIANT_BOOL IAgVARK4thAdapt::GetUseMaxStep ( );
__declspec(implementation_key(4174)) void IAgVARK4thAdapt::PutUseMaxStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4175)) VARIANT_BOOL IAgVARK4thAdapt::GetUseMinStep ( );
__declspec(implementation_key(4176)) void IAgVARK4thAdapt::PutUseMinStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4177)) double IAgVARK4thAdapt::GetMaxStep ( );
__declspec(implementation_key(4178)) void IAgVARK4thAdapt::PutMaxStep ( double pVal );
__declspec(implementation_key(4179)) double IAgVARK4thAdapt::GetMinStep ( );
__declspec(implementation_key(4180)) void IAgVARK4thAdapt::PutMinStep ( double pVal );
__declspec(implementation_key(4181)) double IAgVARK4thAdapt::GetMaxRelErr ( );
__declspec(implementation_key(4182)) void IAgVARK4thAdapt::PutMaxRelErr ( double pVal );
__declspec(implementation_key(4183)) double IAgVARK4thAdapt::GetMaxAbsErr ( );
__declspec(implementation_key(4184)) void IAgVARK4thAdapt::PutMaxAbsErr ( double pVal );
__declspec(implementation_key(4185)) double IAgVARK4thAdapt::GetHighSafetyCoefficient ( );
__declspec(implementation_key(4186)) void IAgVARK4thAdapt::PutHighSafetyCoefficient ( double pVal );
__declspec(implementation_key(4187)) double IAgVARK4thAdapt::GetLowSafetyCoefficient ( );
__declspec(implementation_key(4188)) void IAgVARK4thAdapt::PutLowSafetyCoefficient ( double pVal );
__declspec(implementation_key(4189)) enum AgEVAErrorControl IAgVARK4thAdapt::GetErrorControl ( );
__declspec(implementation_key(4190)) void IAgVARK4thAdapt::PutErrorControl ( enum AgEVAErrorControl pVal );
__declspec(implementation_key(4191)) long IAgVARK4thAdapt::GetMaxIterations ( );
__declspec(implementation_key(4192)) void IAgVARK4thAdapt::PutMaxIterations ( long pVal );
__declspec(implementation_key(4193)) double _IAgVARK4thAdapt::GetInitialStep ( );
__declspec(implementation_key(4194)) void _IAgVARK4thAdapt::PutInitialStep ( double pVal );
__declspec(implementation_key(4195)) VARIANT_BOOL _IAgVARK4thAdapt::GetUseFixedStep ( );
__declspec(implementation_key(4196)) void _IAgVARK4thAdapt::PutUseFixedStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4197)) VARIANT_BOOL _IAgVARK4thAdapt::GetUseMaxStep ( );
__declspec(implementation_key(4198)) void _IAgVARK4thAdapt::PutUseMaxStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4199)) VARIANT_BOOL _IAgVARK4thAdapt::GetUseMinStep ( );
__declspec(implementation_key(4200)) void _IAgVARK4thAdapt::PutUseMinStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4201)) double _IAgVARK4thAdapt::GetMaxStep ( );
__declspec(implementation_key(4202)) void _IAgVARK4thAdapt::PutMaxStep ( double pVal );
__declspec(implementation_key(4203)) double _IAgVARK4thAdapt::GetMinStep ( );
__declspec(implementation_key(4204)) void _IAgVARK4thAdapt::PutMinStep ( double pVal );
__declspec(implementation_key(4205)) double _IAgVARK4thAdapt::GetMaxRelErr ( );
__declspec(implementation_key(4206)) void _IAgVARK4thAdapt::PutMaxRelErr ( double pVal );
__declspec(implementation_key(4207)) double _IAgVARK4thAdapt::GetMaxAbsErr ( );
__declspec(implementation_key(4208)) void _IAgVARK4thAdapt::PutMaxAbsErr ( double pVal );
__declspec(implementation_key(4209)) double _IAgVARK4thAdapt::GetHighSafetyCoefficient ( );
__declspec(implementation_key(4210)) void _IAgVARK4thAdapt::PutHighSafetyCoefficient ( double pVal );
__declspec(implementation_key(4211)) double _IAgVARK4thAdapt::GetLowSafetyCoefficient ( );
__declspec(implementation_key(4212)) void _IAgVARK4thAdapt::PutLowSafetyCoefficient ( double pVal );
__declspec(implementation_key(4213)) enum AgEVAErrorControl _IAgVARK4thAdapt::GetErrorControl ( );
__declspec(implementation_key(4214)) void _IAgVARK4thAdapt::PutErrorControl ( enum AgEVAErrorControl pVal );
__declspec(implementation_key(4215)) long _IAgVARK4thAdapt::GetMaxIterations ( );
__declspec(implementation_key(4216)) void _IAgVARK4thAdapt::PutMaxIterations ( long pVal );
__declspec(implementation_key(4217)) double IAgVARKF7th8th::GetInitialStep ( );
__declspec(implementation_key(4218)) void IAgVARKF7th8th::PutInitialStep ( double pVal );
__declspec(implementation_key(4219)) VARIANT_BOOL IAgVARKF7th8th::GetUseFixedStep ( );
__declspec(implementation_key(4220)) void IAgVARKF7th8th::PutUseFixedStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4221)) VARIANT_BOOL IAgVARKF7th8th::GetUseMaxStep ( );
__declspec(implementation_key(4222)) void IAgVARKF7th8th::PutUseMaxStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4223)) VARIANT_BOOL IAgVARKF7th8th::GetUseMinStep ( );
__declspec(implementation_key(4224)) void IAgVARKF7th8th::PutUseMinStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4225)) double IAgVARKF7th8th::GetMaxStep ( );
__declspec(implementation_key(4226)) void IAgVARKF7th8th::PutMaxStep ( double pVal );
__declspec(implementation_key(4227)) double IAgVARKF7th8th::GetMinStep ( );
__declspec(implementation_key(4228)) void IAgVARKF7th8th::PutMinStep ( double pVal );
__declspec(implementation_key(4229)) double IAgVARKF7th8th::GetMaxRelErr ( );
__declspec(implementation_key(4230)) void IAgVARKF7th8th::PutMaxRelErr ( double pVal );
__declspec(implementation_key(4231)) double IAgVARKF7th8th::GetMaxAbsErr ( );
__declspec(implementation_key(4232)) void IAgVARKF7th8th::PutMaxAbsErr ( double pVal );
__declspec(implementation_key(4233)) double IAgVARKF7th8th::GetHighSafetyCoefficient ( );
__declspec(implementation_key(4234)) void IAgVARKF7th8th::PutHighSafetyCoefficient ( double pVal );
__declspec(implementation_key(4235)) double IAgVARKF7th8th::GetLowSafetyCoefficient ( );
__declspec(implementation_key(4236)) void IAgVARKF7th8th::PutLowSafetyCoefficient ( double pVal );
__declspec(implementation_key(4237)) enum AgEVAErrorControl IAgVARKF7th8th::GetErrorControl ( );
__declspec(implementation_key(4238)) void IAgVARKF7th8th::PutErrorControl ( enum AgEVAErrorControl pVal );
__declspec(implementation_key(4239)) long IAgVARKF7th8th::GetMaxIterations ( );
__declspec(implementation_key(4240)) void IAgVARKF7th8th::PutMaxIterations ( long pVal );
__declspec(implementation_key(4241)) double _IAgVARKF7th8th::GetInitialStep ( );
__declspec(implementation_key(4242)) void _IAgVARKF7th8th::PutInitialStep ( double pVal );
__declspec(implementation_key(4243)) VARIANT_BOOL _IAgVARKF7th8th::GetUseFixedStep ( );
__declspec(implementation_key(4244)) void _IAgVARKF7th8th::PutUseFixedStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4245)) VARIANT_BOOL _IAgVARKF7th8th::GetUseMaxStep ( );
__declspec(implementation_key(4246)) void _IAgVARKF7th8th::PutUseMaxStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4247)) VARIANT_BOOL _IAgVARKF7th8th::GetUseMinStep ( );
__declspec(implementation_key(4248)) void _IAgVARKF7th8th::PutUseMinStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4249)) double _IAgVARKF7th8th::GetMaxStep ( );
__declspec(implementation_key(4250)) void _IAgVARKF7th8th::PutMaxStep ( double pVal );
__declspec(implementation_key(4251)) double _IAgVARKF7th8th::GetMinStep ( );
__declspec(implementation_key(4252)) void _IAgVARKF7th8th::PutMinStep ( double pVal );
__declspec(implementation_key(4253)) double _IAgVARKF7th8th::GetMaxRelErr ( );
__declspec(implementation_key(4254)) void _IAgVARKF7th8th::PutMaxRelErr ( double pVal );
__declspec(implementation_key(4255)) double _IAgVARKF7th8th::GetMaxAbsErr ( );
__declspec(implementation_key(4256)) void _IAgVARKF7th8th::PutMaxAbsErr ( double pVal );
__declspec(implementation_key(4257)) double _IAgVARKF7th8th::GetHighSafetyCoefficient ( );
__declspec(implementation_key(4258)) void _IAgVARKF7th8th::PutHighSafetyCoefficient ( double pVal );
__declspec(implementation_key(4259)) double _IAgVARKF7th8th::GetLowSafetyCoefficient ( );
__declspec(implementation_key(4260)) void _IAgVARKF7th8th::PutLowSafetyCoefficient ( double pVal );
__declspec(implementation_key(4261)) enum AgEVAErrorControl _IAgVARKF7th8th::GetErrorControl ( );
__declspec(implementation_key(4262)) void _IAgVARKF7th8th::PutErrorControl ( enum AgEVAErrorControl pVal );
__declspec(implementation_key(4263)) long _IAgVARKF7th8th::GetMaxIterations ( );
__declspec(implementation_key(4264)) void _IAgVARKF7th8th::PutMaxIterations ( long pVal );
__declspec(implementation_key(4265)) double IAgVARKV8th9th::GetInitialStep ( );
__declspec(implementation_key(4266)) void IAgVARKV8th9th::PutInitialStep ( double pVal );
__declspec(implementation_key(4267)) VARIANT_BOOL IAgVARKV8th9th::GetUseFixedStep ( );
__declspec(implementation_key(4268)) void IAgVARKV8th9th::PutUseFixedStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4269)) VARIANT_BOOL IAgVARKV8th9th::GetUseMaxStep ( );
__declspec(implementation_key(4270)) void IAgVARKV8th9th::PutUseMaxStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4271)) VARIANT_BOOL IAgVARKV8th9th::GetUseMinStep ( );
__declspec(implementation_key(4272)) void IAgVARKV8th9th::PutUseMinStep ( VARIANT_BOOL pVal );
__declspec(implementation_key(4273)) double IAgVARKV8th9th::GetMaxStep ( );
__declspec(implementation_key(4274)) void IAgVARKV8th9th::PutMaxStep ( double pVal );
__declspec(implementation_key(4275)) double IAgVARKV8th9th::GetMinStep ( );
__declspec(implementation_key(4276)) void IAgVARKV8th9th::PutMinStep ( double pVal );
__declspec(implementation_key(4277)) double IAgVARKV8th9th::GetMaxRelErr ( );
__declspec(implementation_key(4278)) void IAgVARKV8th9th::PutMaxRelErr ( double pVal );
__declspec(implementation_key(4279)) double IAgVARKV8th9th::GetMaxAbsErr ( );
__declspec(implementation_key(4280)) void IAgVARKV8th9th::PutMaxAbsErr ( double pVal );
__declspec(implementation_key(4281)) double IAgVARKV8th9th::GetHighSafetyCoefficient ( );
__declspec(implementation_key(4282)) void IAgVARKV8th9th::PutHighSafetyCoefficient ( double pVal );
__declspec(implementation_key(4283)) double IAgVARKV8th9th::GetLowSafetyCoefficient ( );
__declspec(implementation_key(4284)) void IAgVARKV8th9th::PutLowSafetyCoefficient ( double pVal );
__declspec(implementation_key(4285)) enum AgEVAErrorControl IAgVARKV8th9th::GetErrorControl ( );
__declspec(implementation_key(4286)) void IAgVARKV8th9th::PutErrorControl ( enum AgEVAErrorControl pVal );
__declspec(implementation_key(4287)) long IAgVARKV8th9th::GetMaxIterations ( );
__declspec(implementation_key(4288)) void IAgVARKV8th9th::PutMaxIterations ( long pVal );
__declspec(implementation_key(4289)) enum AgEVACoeffRKV8th9th IAgVARKV8th9th::GetCoeffType ( );
__declspec(implementation_key(4290)) void IAgVARKV8th9th::PutCoeffType ( enum AgEVACoeffRKV8th9th pVal );
__declspec(implementation_key(4291)) double _IAgVARKV8th9th::GetInitialStep ( );
__declspec(implementation_key(4292)) void _IAgVARKV8th9th::PutInitialStep ( double pRetVal );
__declspec(implementation_key(4293)) VARIANT_BOOL _IAgVARKV8th9th::GetUseFixedStep ( );
__declspec(implementation_key(4294)) void _IAgVARKV8th9th::PutUseFixedStep ( VARIANT_BOOL pRetVal );
__declspec(implementation_key(4295)) VARIANT_BOOL _IAgVARKV8th9th::GetUseMaxStep ( );
__declspec(implementation_key(4296)) void _IAgVARKV8th9th::PutUseMaxStep ( VARIANT_BOOL pRetVal );
__declspec(implementation_key(4297)) VARIANT_BOOL _IAgVARKV8th9th::GetUseMinStep ( );
__declspec(implementation_key(4298)) void _IAgVARKV8th9th::PutUseMinStep ( VARIANT_BOOL pRetVal );
__declspec(implementation_key(4299)) double _IAgVARKV8th9th::GetMaxStep ( );
__declspec(implementation_key(4300)) void _IAgVARKV8th9th::PutMaxStep ( double pRetVal );
__declspec(implementation_key(4301)) double _IAgVARKV8th9th::GetMinStep ( );
__declspec(implementation_key(4302)) void _IAgVARKV8th9th::PutMinStep ( double pRetVal );
__declspec(implementation_key(4303)) double _IAgVARKV8th9th::GetMaxRelErr ( );
__declspec(implementation_key(4304)) void _IAgVARKV8th9th::PutMaxRelErr ( double pRetVal );
__declspec(implementation_key(4305)) double _IAgVARKV8th9th::GetMaxAbsErr ( );
__declspec(implementation_key(4306)) void _IAgVARKV8th9th::PutMaxAbsErr ( double pRetVal );
__declspec(implementation_key(4307)) double _IAgVARKV8th9th::GetHighSafetyCoefficient ( );
__declspec(implementation_key(4308)) void _IAgVARKV8th9th::PutHighSafetyCoefficient ( double pRetVal );
__declspec(implementation_key(4309)) double _IAgVARKV8th9th::GetLowSafetyCoefficient ( );
__declspec(implementation_key(4310)) void _IAgVARKV8th9th::PutLowSafetyCoefficient ( double pRetVal );
__declspec(implementation_key(4311)) enum AgEVAErrorControl _IAgVARKV8th9th::GetErrorControl ( );
__declspec(implementation_key(4312)) void _IAgVARKV8th9th::PutErrorControl ( enum AgEVAErrorControl pRetVal );
__declspec(implementation_key(4313)) long _IAgVARKV8th9th::GetMaxIterations ( );
__declspec(implementation_key(4314)) void _IAgVARKV8th9th::PutMaxIterations ( long pRetVal );
__declspec(implementation_key(4315)) enum AgEVACoeffRKV8th9th _IAgVARKV8th9th::GetCoeffType ( );
__declspec(implementation_key(4316)) void _IAgVARKV8th9th::PutCoeffType ( enum AgEVACoeffRKV8th9th pRetVal );
__declspec(implementation_key(4317)) HRESULT IAgVABPlaneCollection::Add ( _bstr_t BPlaneName );
__declspec(implementation_key(4318)) HRESULT IAgVABPlaneCollection::Remove ( _bstr_t BPlaneName );
__declspec(implementation_key(4319)) HRESULT IAgVABPlaneCollection::RemoveAll ( );
__declspec(implementation_key(4320)) _bstr_t IAgVABPlaneCollection::GetItem ( long Index );
__declspec(implementation_key(4321)) IUnknownPtr IAgVABPlaneCollection::Get_NewEnum ( );
__declspec(implementation_key(4322)) long IAgVABPlaneCollection::GetCount ( );
__declspec(implementation_key(4323)) _bstr_t IAgVAMCSSegmentProperties::GetDisplayCoordinateSystem ( );
__declspec(implementation_key(4324)) void IAgVAMCSSegmentProperties::PutDisplayCoordinateSystem ( _bstr_t pDisplayCoordinateSystem );
__declspec(implementation_key(4325)) OLE_COLOR IAgVAMCSSegmentProperties::GetColor ( );
__declspec(implementation_key(4326)) void IAgVAMCSSegmentProperties::PutColor ( OLE_COLOR pVal );
__declspec(implementation_key(4327)) VARIANT_BOOL IAgVAMCSSegmentProperties::GetUpdateAnimationTimeAfterRun ( );
__declspec(implementation_key(4328)) void IAgVAMCSSegmentProperties::PutUpdateAnimationTimeAfterRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(4329)) HRESULT IAgVAMCSSegmentProperties::ApplyFinalStateToBPlanes ( );
__declspec(implementation_key(4330)) IAgVABPlaneCollectionPtr IAgVAMCSSegmentProperties::GetBPlanes ( );
__declspec(implementation_key(4331)) enum AgEVARunCode IAgVAMCSSegmentProperties::GetLastRunCode ( );
__declspec(implementation_key(4332)) enum AgEVAElementType IAgVAState::GetElementType ( );
__declspec(implementation_key(4333)) HRESULT IAgVAState::SetElementType ( enum AgEVAElementType ElementType );
__declspec(implementation_key(4334)) IAgVAElementPtr IAgVAState::GetElement ( );
__declspec(implementation_key(4335)) _variant_t IAgVAState::GetEpoch ( );
__declspec(implementation_key(4336)) void IAgVAState::PutEpoch ( const _variant_t & pEpoch );
__declspec(implementation_key(4337)) _bstr_t IAgVAState::GetCoordSystemName ( );
__declspec(implementation_key(4338)) double IAgVAState::GetDryMass ( );
__declspec(implementation_key(4339)) void IAgVAState::PutDryMass ( double pDryMass );
__declspec(implementation_key(4340)) double IAgVAState::GetFuelMass ( );
__declspec(implementation_key(4341)) void IAgVAState::PutFuelMass ( double pFuelMass );
__declspec(implementation_key(4342)) double IAgVAState::GetDragArea ( );
__declspec(implementation_key(4343)) void IAgVAState::PutDragArea ( double pFuelMass );
__declspec(implementation_key(4344)) double IAgVAState::GetSRPArea ( );
__declspec(implementation_key(4345)) void IAgVAState::PutSRPArea ( double pSRPArea );
__declspec(implementation_key(4346)) double IAgVAState::GetTankPressure ( );
__declspec(implementation_key(4347)) void IAgVAState::PutTankPressure ( double pTankPressure );
__declspec(implementation_key(4348)) double IAgVAState::GetTankTemperature ( );
__declspec(implementation_key(4349)) void IAgVAState::PutTankTemperature ( double pTankTemperature );
__declspec(implementation_key(4350)) double IAgVAState::GetFuelDensity ( );
__declspec(implementation_key(4351)) void IAgVAState::PutFuelDensity ( double pFuelDensity );
__declspec(implementation_key(4352)) double IAgVAState::GetCr ( );
__declspec(implementation_key(4353)) void IAgVAState::PutCr ( double pCr );
__declspec(implementation_key(4354)) double IAgVAState::GetCd ( );
__declspec(implementation_key(4355)) void IAgVAState::PutCd ( double pCd );
__declspec(implementation_key(4356)) double IAgVAState::GetRadiationPressureCoeff ( );
__declspec(implementation_key(4357)) void IAgVAState::PutRadiationPressureCoeff ( double pRadiationPressureCoeff );
__declspec(implementation_key(4358)) double IAgVAState::GetRadiationPressureArea ( );
__declspec(implementation_key(4359)) void IAgVAState::PutRadiationPressureArea ( double pRadiationPressureArea );
__declspec(implementation_key(4360)) double IAgVAState::GetK1 ( );
__declspec(implementation_key(4361)) void IAgVAState::PutK1 ( double pK1 );
__declspec(implementation_key(4362)) double IAgVAState::GetK2 ( );
__declspec(implementation_key(4363)) void IAgVAState::PutK2 ( double pK2 );
__declspec(implementation_key(4364)) IAgVAStatePtr IAgVAState::GetInFrameName ( _bstr_t FrameName );
__declspec(implementation_key(4365)) enum AgEVASegmentType IAgVAMCSSegment::GetType ( );
__declspec(implementation_key(4366)) IAgVAMCSSegmentPropertiesPtr IAgVAMCSSegment::GetProperties ( );
__declspec(implementation_key(4367)) IAgVAStatePtr IAgVAMCSSegment::GetInitialState ( );
__declspec(implementation_key(4368)) IAgVAStatePtr IAgVAMCSSegment::GetFinalState ( );
__declspec(implementation_key(4369)) _variant_t IAgVAMCSSegment::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(4370)) IAgVAStatePtr IAgVAMCSSegment::Run ( );
__declspec(implementation_key(4371)) IAgVACalcObjectCollectionPtr IAgVAMCSSegment::GetResults ( );
__declspec(implementation_key(4372)) STKObjects::IAgDrResultPtr IAgVAMCSSegment::GetExecSummary ( );
__declspec(implementation_key(4373)) IAgVAMCSSegmentPtr IAgVAMCSSegmentCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(4374)) IAgVAMCSSegmentPtr IAgVAMCSSegmentCollection::Insert ( enum AgEVASegmentType SegmentType, _bstr_t SegmentName, _bstr_t SegmentToInsertBefore );
__declspec(implementation_key(4375)) HRESULT IAgVAMCSSegmentCollection::Remove ( _bstr_t SegmentNameToRemove );
__declspec(implementation_key(4376)) HRESULT IAgVAMCSSegmentCollection::RemoveAll ( );
__declspec(implementation_key(4377)) IUnknownPtr IAgVAMCSSegmentCollection::Get_NewEnum ( );
__declspec(implementation_key(4378)) long IAgVAMCSSegmentCollection::GetCount ( );
__declspec(implementation_key(4379)) HRESULT IAgVAMCSSegmentCollection::Cut ( _bstr_t SegmentNameToCut );
__declspec(implementation_key(4380)) IAgVAMCSSegmentPtr IAgVAMCSSegmentCollection::Paste ( _bstr_t SegmentToPasteBefore );
__declspec(implementation_key(4381)) IAgVAMCSSegmentPtr IAgVAMCSSegmentCollection::InsertCopy ( struct IAgVAMCSSegment * Segment, _bstr_t SegmentToInsertBefore );
__declspec(implementation_key(4382)) IAgVAMCSSegmentPtr IAgVAMCSSegmentCollection::InsertByName ( _bstr_t SegmentName, _bstr_t SegmentToInsertBefore );
__declspec(implementation_key(4383)) STKUtil::IAgRuntimeTypeInfoPtr IAgVAMCSSegmentCollection::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(4384)) _bstr_t IAgVAUserVariableDefinition::GetUnitDimension ( );
__declspec(implementation_key(4385)) void IAgVAUserVariableDefinition::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(4386)) _bstr_t IAgVAUserVariableDefinition::GetVariableName ( );
__declspec(implementation_key(4387)) void IAgVAUserVariableDefinition::PutVariableName ( _bstr_t pVal );
__declspec(implementation_key(4388)) IAgVAUserVariableDefinitionPtr IAgVAUserVariableDefinitionCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(4389)) IAgVAUserVariableDefinitionPtr IAgVAUserVariableDefinitionCollection::Add ( _bstr_t ParameterName );
__declspec(implementation_key(4390)) HRESULT IAgVAUserVariableDefinitionCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(4391)) HRESULT IAgVAUserVariableDefinitionCollection::RemoveAll ( );
__declspec(implementation_key(4392)) IUnknownPtr IAgVAUserVariableDefinitionCollection::Get_NewEnum ( );
__declspec(implementation_key(4393)) long IAgVAUserVariableDefinitionCollection::GetCount ( );
__declspec(implementation_key(4394)) VARIANT_BOOL IAgVAMCSOptions::GetDrawTrajectoryIn2D ( );
__declspec(implementation_key(4395)) void IAgVAMCSOptions::PutDrawTrajectoryIn2D ( VARIANT_BOOL pVal );
__declspec(implementation_key(4396)) VARIANT_BOOL IAgVAMCSOptions::GetDrawTrajectoryIn3D ( );
__declspec(implementation_key(4397)) void IAgVAMCSOptions::PutDrawTrajectoryIn3D ( VARIANT_BOOL pVal );
__declspec(implementation_key(4398)) VARIANT_BOOL IAgVAMCSOptions::GetUpdateAnimationTimeForAllObjects ( );
__declspec(implementation_key(4399)) void IAgVAMCSOptions::PutUpdateAnimationTimeForAllObjects ( VARIANT_BOOL pVal );
__declspec(implementation_key(4400)) VARIANT_BOOL IAgVAMCSOptions::GetClearDWCGraphicsBeforeEachRun ( );
__declspec(implementation_key(4401)) void IAgVAMCSOptions::PutClearDWCGraphicsBeforeEachRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(4402)) VARIANT_BOOL IAgVAMCSOptions::GetClearAdditionalBPlanePoints ( );
__declspec(implementation_key(4403)) void IAgVAMCSOptions::PutClearAdditionalBPlanePoints ( VARIANT_BOOL pVal );
__declspec(implementation_key(4404)) VARIANT_BOOL IAgVAMCSOptions::GetPropagateOnApply ( );
__declspec(implementation_key(4405)) void IAgVAMCSOptions::PutPropagateOnApply ( VARIANT_BOOL pVal );
__declspec(implementation_key(4406)) VARIANT_BOOL IAgVAMCSOptions::GetEnableTrajectorySegmentColors ( );
__declspec(implementation_key(4407)) void IAgVAMCSOptions::PutEnableTrajectorySegmentColors ( VARIANT_BOOL pVal );
__declspec(implementation_key(4408)) VARIANT_BOOL IAgVAMCSOptions::GetSaveNumbersInRawFormat ( );
__declspec(implementation_key(4409)) void IAgVAMCSOptions::PutSaveNumbersInRawFormat ( VARIANT_BOOL pVal );
__declspec(implementation_key(4410)) double IAgVAMCSOptions::GetStoppingConditionTimeTolerance ( );
__declspec(implementation_key(4411)) void IAgVAMCSOptions::PutStoppingConditionTimeTolerance ( double pVal );
__declspec(implementation_key(4412)) VARIANT_BOOL IAgVAMCSOptions::GetEnableSegmentControls ( );
__declspec(implementation_key(4413)) void IAgVAMCSOptions::PutEnableSegmentControls ( VARIANT_BOOL pVal );
__declspec(implementation_key(4414)) VARIANT_BOOL IAgVAMCSOptions::GetEnableSegmentResults ( );
__declspec(implementation_key(4415)) void IAgVAMCSOptions::PutEnableSegmentResults ( VARIANT_BOOL pVal );
__declspec(implementation_key(4416)) VARIANT_BOOL IAgVAMCSOptions::GetEnableLogging ( );
__declspec(implementation_key(4417)) void IAgVAMCSOptions::PutEnableLogging ( VARIANT_BOOL pVal );
__declspec(implementation_key(4418)) double IAgVAMCSOptions::GetGraphicsUpdateRate ( );
__declspec(implementation_key(4419)) void IAgVAMCSOptions::PutGraphicsUpdateRate ( double pVal );
__declspec(implementation_key(4420)) VARIANT_BOOL IAgVAMCSOptions::GetPromoteControls ( );
__declspec(implementation_key(4421)) void IAgVAMCSOptions::PutPromoteControls ( VARIANT_BOOL pVal );
__declspec(implementation_key(4422)) VARIANT_BOOL IAgVAMCSOptions::GetUseNominalSettings ( );
__declspec(implementation_key(4423)) void IAgVAMCSOptions::PutUseNominalSettings ( VARIANT_BOOL pVal );
__declspec(implementation_key(4424)) double IAgVAMCSOptions::GetMinEphemStep ( );
__declspec(implementation_key(4425)) void IAgVAMCSOptions::PutMinEphemStep ( double pVal );
__declspec(implementation_key(4426)) VARIANT_BOOL IAgVAMCSOptions::GetGenerateEphemeris ( );
__declspec(implementation_key(4427)) void IAgVAMCSOptions::PutGenerateEphemeris ( VARIANT_BOOL pVal );
__declspec(implementation_key(4428)) IAgVAUserVariableDefinitionCollectionPtr IAgVAMCSOptions::GetUserVariables ( );
__declspec(implementation_key(4429)) enum AgEVASmartRunMode IAgVAMCSOptions::GetSmartRunMode ( );
__declspec(implementation_key(4430)) void IAgVAMCSOptions::PutSmartRunMode ( enum AgEVASmartRunMode pVal );
__declspec(implementation_key(4431)) IAgVAAutomaticSequencePtr IAgVAAutomaticSequence::MakeCopy ( _bstr_t UniqueName );
__declspec(implementation_key(4432)) _bstr_t IAgVAAutomaticSequence::GetName ( );
__declspec(implementation_key(4433)) void IAgVAAutomaticSequence::PutName ( _bstr_t pVal );
__declspec(implementation_key(4434)) _bstr_t IAgVAAutomaticSequence::GetUserComment ( );
__declspec(implementation_key(4435)) void IAgVAAutomaticSequence::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(4436)) IAgVAMCSSegmentCollectionPtr IAgVAAutomaticSequence::GetSequence ( );
__declspec(implementation_key(4437)) IAgVAAutomaticSequencePtr IAgVAAutomaticSequenceCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(4438)) IAgVAAutomaticSequencePtr IAgVAAutomaticSequenceCollection::Add ( _bstr_t Name );
__declspec(implementation_key(4439)) HRESULT IAgVAAutomaticSequenceCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(4440)) IUnknownPtr IAgVAAutomaticSequenceCollection::Get_NewEnum ( );
__declspec(implementation_key(4441)) long IAgVAAutomaticSequenceCollection::GetCount ( );
__declspec(implementation_key(4442)) _bstr_t IAgVACalculationGraphCollection::GetItem ( long Index );
__declspec(implementation_key(4443)) IUnknownPtr IAgVACalculationGraphCollection::Get_NewEnum ( );
__declspec(implementation_key(4444)) HRESULT IAgVACalculationGraphCollection::Add ( _bstr_t GraphName );
__declspec(implementation_key(4445)) HRESULT IAgVACalculationGraphCollection::Remove ( _bstr_t GraphName );
__declspec(implementation_key(4446)) HRESULT IAgVACalculationGraphCollection::RemoveAll ( );
__declspec(implementation_key(4447)) long IAgVACalculationGraphCollection::GetCount ( );
__declspec(implementation_key(4448)) IAgVAMCSSegmentCollectionPtr _IAgVADriverMCS::GetMainSequence ( );
__declspec(implementation_key(4449)) IAgVAMCSOptionsPtr _IAgVADriverMCS::GetOptions ( );
__declspec(implementation_key(4450)) IAgVAAutomaticSequenceCollectionPtr _IAgVADriverMCS::GetAutoSequence ( );
__declspec(implementation_key(4451)) HRESULT _IAgVADriverMCS::RunMCS ( );
__declspec(implementation_key(4452)) HRESULT _IAgVADriverMCS::BeginRun ( );
__declspec(implementation_key(4453)) HRESULT _IAgVADriverMCS::EndRun ( );
__declspec(implementation_key(4454)) HRESULT _IAgVADriverMCS::ClearDWCGraphics ( );
__declspec(implementation_key(4455)) HRESULT _IAgVADriverMCS::ResetAllProfiles ( );
__declspec(implementation_key(4456)) HRESULT _IAgVADriverMCS::ApplyAllProfileChanges ( );
__declspec(implementation_key(4457)) HRESULT _IAgVADriverMCS::AppendRun ( );
__declspec(implementation_key(4458)) HRESULT _IAgVADriverMCS::AppendRunFromTime ( const _variant_t & Epoch, enum AgEVAClearEphemerisDirection ClearEphemerisDirection );
__declspec(implementation_key(4459)) HRESULT _IAgVADriverMCS::AppendRunFromState ( struct IAgVAState * AppendState, enum AgEVAClearEphemerisDirection ClearEphemerisDirection );
__declspec(implementation_key(4460)) enum AgEVARunCode _IAgVADriverMCS::RunMCS2 ( );
__declspec(implementation_key(4461)) IAgVACalculationGraphCollectionPtr _IAgVADriverMCS::GetCalculationGraphs ( );
__declspec(implementation_key(4462)) IAgVAMCSSegmentCollectionPtr IAgVADriverMCS::GetMainSequence ( );
__declspec(implementation_key(4463)) IAgVAMCSOptionsPtr IAgVADriverMCS::GetOptions ( );
__declspec(implementation_key(4464)) IAgVAAutomaticSequenceCollectionPtr IAgVADriverMCS::GetAutoSequence ( );
__declspec(implementation_key(4465)) HRESULT IAgVADriverMCS::RunMCS ( );
__declspec(implementation_key(4466)) HRESULT IAgVADriverMCS::BeginRun ( );
__declspec(implementation_key(4467)) HRESULT IAgVADriverMCS::EndRun ( );
__declspec(implementation_key(4468)) HRESULT IAgVADriverMCS::ClearDWCGraphics ( );
__declspec(implementation_key(4469)) HRESULT IAgVADriverMCS::ResetAllProfiles ( );
__declspec(implementation_key(4470)) HRESULT IAgVADriverMCS::ApplyAllProfileChanges ( );
__declspec(implementation_key(4471)) HRESULT IAgVADriverMCS::AppendRun ( );
__declspec(implementation_key(4472)) HRESULT IAgVADriverMCS::AppendRunFromTime ( const _variant_t & Epoch, enum AgEVAClearEphemerisDirection ClearEphemerisDirection );
__declspec(implementation_key(4473)) HRESULT IAgVADriverMCS::AppendRunFromState ( struct IAgVAState * AppendState, enum AgEVAClearEphemerisDirection ClearEphemerisDirection );
__declspec(implementation_key(4474)) enum AgEVARunCode IAgVADriverMCS::RunMCS2 ( );
__declspec(implementation_key(4475)) IAgVACalculationGraphCollectionPtr IAgVADriverMCS::GetCalculationGraphs ( );
__declspec(implementation_key(4476)) STKUtil::IAgRuntimeTypeInfoPtr IAgRuntimeTypeInfoProvider::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(4477)) enum AgEVASegmentType _IAgVAMCSEnd::GetType ( );
__declspec(implementation_key(4478)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSEnd::GetProperties ( );
__declspec(implementation_key(4479)) IAgVAStatePtr _IAgVAMCSEnd::GetInitialState ( );
__declspec(implementation_key(4480)) IAgVAStatePtr _IAgVAMCSEnd::GetFinalState ( );
__declspec(implementation_key(4481)) _variant_t _IAgVAMCSEnd::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(4482)) IAgVAStatePtr _IAgVAMCSEnd::Run ( );
__declspec(implementation_key(4483)) IAgVACalcObjectCollectionPtr _IAgVAMCSEnd::GetResults ( );
__declspec(implementation_key(4484)) STKObjects::IAgDrResultPtr _IAgVAMCSEnd::GetExecSummary ( );
__declspec(implementation_key(4485)) _bstr_t _IAgVAMCSEnd::GetName ( );
__declspec(implementation_key(4486)) void _IAgVAMCSEnd::PutName ( _bstr_t pVal );
__declspec(implementation_key(4487)) _bstr_t _IAgVAMCSEnd::GetUserComment ( );
__declspec(implementation_key(4488)) void _IAgVAMCSEnd::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(4489)) _bstr_t _IAgVAMCSEnd::GetDescription ( );
__declspec(implementation_key(4490)) VARIANT_BOOL _IAgVAMCSEnd::IsReadOnly ( );
__declspec(implementation_key(4491)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSEnd::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(4492)) double IAgVASpacecraftParameters::GetDryMass ( );
__declspec(implementation_key(4493)) void IAgVASpacecraftParameters::PutDryMass ( double pVal );
__declspec(implementation_key(4494)) double IAgVASpacecraftParameters::GetCd ( );
__declspec(implementation_key(4495)) void IAgVASpacecraftParameters::PutCd ( double pVal );
__declspec(implementation_key(4496)) double IAgVASpacecraftParameters::GetDragArea ( );
__declspec(implementation_key(4497)) void IAgVASpacecraftParameters::PutDragArea ( double pVal );
__declspec(implementation_key(4498)) double IAgVASpacecraftParameters::GetCr ( );
__declspec(implementation_key(4499)) void IAgVASpacecraftParameters::PutCr ( double pVal );
__declspec(implementation_key(4500)) double IAgVASpacecraftParameters::GetSolarRadiationPressureArea ( );
__declspec(implementation_key(4501)) void IAgVASpacecraftParameters::PutSolarRadiationPressureArea ( double pVal );
__declspec(implementation_key(4502)) double IAgVASpacecraftParameters::GetCk ( );
__declspec(implementation_key(4503)) void IAgVASpacecraftParameters::PutCk ( double pVal );
__declspec(implementation_key(4504)) double IAgVASpacecraftParameters::GetRadiationPressureArea ( );
__declspec(implementation_key(4505)) void IAgVASpacecraftParameters::PutRadiationPressureArea ( double pVal );
__declspec(implementation_key(4506)) double IAgVASpacecraftParameters::GetK1 ( );
__declspec(implementation_key(4507)) void IAgVASpacecraftParameters::PutK1 ( double pVal );
__declspec(implementation_key(4508)) double IAgVASpacecraftParameters::GetK2 ( );
__declspec(implementation_key(4509)) void IAgVASpacecraftParameters::PutK2 ( double pVal );
__declspec(implementation_key(4510)) double IAgVAFuelTank::GetTankPressure ( );
__declspec(implementation_key(4511)) void IAgVAFuelTank::PutTankPressure ( double pVal );
__declspec(implementation_key(4512)) double IAgVAFuelTank::GetTankVolume ( );
__declspec(implementation_key(4513)) void IAgVAFuelTank::PutTankVolume ( double pVal );
__declspec(implementation_key(4514)) double IAgVAFuelTank::GetTankTemperature ( );
__declspec(implementation_key(4515)) void IAgVAFuelTank::PutTankTemperature ( double pVal );
__declspec(implementation_key(4516)) double IAgVAFuelTank::GetFuelDensity ( );
__declspec(implementation_key(4517)) void IAgVAFuelTank::PutFuelDensity ( double pVal );
__declspec(implementation_key(4518)) double IAgVAFuelTank::GetFuelMass ( );
__declspec(implementation_key(4519)) void IAgVAFuelTank::PutFuelMass ( double pVal );
__declspec(implementation_key(4520)) double IAgVAFuelTank::GetMaximumFuelMass ( );
__declspec(implementation_key(4521)) void IAgVAFuelTank::PutMaximumFuelMass ( double pVal );
__declspec(implementation_key(4522)) _bstr_t IAgVAUserVariable::GetUnitDimension ( );
__declspec(implementation_key(4523)) _bstr_t IAgVAUserVariable::GetVariableName ( );
__declspec(implementation_key(4524)) _variant_t IAgVAUserVariable::GetVariableValue ( );
__declspec(implementation_key(4525)) void IAgVAUserVariable::PutVariableValue ( const _variant_t & pVal );
__declspec(implementation_key(4526)) HRESULT IAgVAUserVariable::EnableControlParameter ( );
__declspec(implementation_key(4527)) HRESULT IAgVAUserVariable::DisableControlParameter ( );
__declspec(implementation_key(4528)) VARIANT_BOOL IAgVAUserVariable::IsControlParameterEnabled ( );
__declspec(implementation_key(4529)) VARIANT_BOOL IAgVAUserVariable::GetControlParametersAvailable ( );
__declspec(implementation_key(4530)) IAgVAUserVariablePtr IAgVAUserVariableCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(4531)) IUnknownPtr IAgVAUserVariableCollection::Get_NewEnum ( );
__declspec(implementation_key(4532)) long IAgVAUserVariableCollection::GetCount ( );
__declspec(implementation_key(4533)) _bstr_t _IAgVAMCSInitialState::GetCoordSystemName ( );
__declspec(implementation_key(4534)) void _IAgVAMCSInitialState::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(4535)) _variant_t _IAgVAMCSInitialState::GetOrbitEpoch ( );
__declspec(implementation_key(4536)) void _IAgVAMCSInitialState::PutOrbitEpoch ( const _variant_t & pVal );
__declspec(implementation_key(4537)) IAgVASpacecraftParametersPtr _IAgVAMCSInitialState::GetSpacecraftParameters ( );
__declspec(implementation_key(4538)) IAgVAFuelTankPtr _IAgVAMCSInitialState::GetFuelTank ( );
__declspec(implementation_key(4539)) enum AgEVAElementType _IAgVAMCSInitialState::GetElementType ( );
__declspec(implementation_key(4540)) HRESULT _IAgVAMCSInitialState::SetElementType ( enum AgEVAElementType ElementType );
__declspec(implementation_key(4541)) IAgVAElementPtr _IAgVAMCSInitialState::GetElement ( );
__declspec(implementation_key(4542)) HRESULT _IAgVAMCSInitialState::EnableControlParameter ( enum AgEVAControlInitState Param );
__declspec(implementation_key(4543)) HRESULT _IAgVAMCSInitialState::DisableControlParameter ( enum AgEVAControlInitState Param );
__declspec(implementation_key(4544)) VARIANT_BOOL _IAgVAMCSInitialState::IsControlParameterEnabled ( enum AgEVAControlInitState Param );
__declspec(implementation_key(4545)) VARIANT_BOOL _IAgVAMCSInitialState::GetControlParametersAvailable ( );
__declspec(implementation_key(4546)) enum AgEVASegmentType _IAgVAMCSInitialState::GetType ( );
__declspec(implementation_key(4547)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSInitialState::GetProperties ( );
__declspec(implementation_key(4548)) IAgVAStatePtr _IAgVAMCSInitialState::GetInitialState ( );
__declspec(implementation_key(4549)) IAgVAStatePtr _IAgVAMCSInitialState::GetFinalState ( );
__declspec(implementation_key(4550)) _variant_t _IAgVAMCSInitialState::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(4551)) IAgVAStatePtr _IAgVAMCSInitialState::Run ( );
__declspec(implementation_key(4552)) IAgVACalcObjectCollectionPtr _IAgVAMCSInitialState::GetResults ( );
__declspec(implementation_key(4553)) STKObjects::IAgDrResultPtr _IAgVAMCSInitialState::GetExecSummary ( );
__declspec(implementation_key(4554)) _bstr_t _IAgVAMCSInitialState::GetName ( );
__declspec(implementation_key(4555)) void _IAgVAMCSInitialState::PutName ( _bstr_t pVal );
__declspec(implementation_key(4556)) _bstr_t _IAgVAMCSInitialState::GetUserComment ( );
__declspec(implementation_key(4557)) void _IAgVAMCSInitialState::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(4558)) _bstr_t _IAgVAMCSInitialState::GetDescription ( );
__declspec(implementation_key(4559)) VARIANT_BOOL _IAgVAMCSInitialState::IsReadOnly ( );
__declspec(implementation_key(4560)) IUnknownPtr _IAgVAMCSInitialState::CloneObject ( );
__declspec(implementation_key(4561)) IAgVAUserVariableCollectionPtr _IAgVAMCSInitialState::GetUserVariables ( );
__declspec(implementation_key(4562)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSInitialState::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(4563)) _bstr_t IAgVAMCSInitialState::GetCoordSystemName ( );
__declspec(implementation_key(4564)) void IAgVAMCSInitialState::PutCoordSystemName ( _bstr_t pVal );
__declspec(implementation_key(4565)) _variant_t IAgVAMCSInitialState::GetOrbitEpoch ( );
__declspec(implementation_key(4566)) void IAgVAMCSInitialState::PutOrbitEpoch ( const _variant_t & pVal );
__declspec(implementation_key(4567)) IAgVASpacecraftParametersPtr IAgVAMCSInitialState::GetSpacecraftParameters ( );
__declspec(implementation_key(4568)) IAgVAFuelTankPtr IAgVAMCSInitialState::GetFuelTank ( );
__declspec(implementation_key(4569)) enum AgEVAElementType IAgVAMCSInitialState::GetElementType ( );
__declspec(implementation_key(4570)) HRESULT IAgVAMCSInitialState::SetElementType ( enum AgEVAElementType ElementType );
__declspec(implementation_key(4571)) IAgVAElementPtr IAgVAMCSInitialState::GetElement ( );
__declspec(implementation_key(4572)) HRESULT IAgVAMCSInitialState::EnableControlParameter ( enum AgEVAControlInitState Param );
__declspec(implementation_key(4573)) HRESULT IAgVAMCSInitialState::DisableControlParameter ( enum AgEVAControlInitState Param );
__declspec(implementation_key(4574)) VARIANT_BOOL IAgVAMCSInitialState::IsControlParameterEnabled ( enum AgEVAControlInitState Param );
__declspec(implementation_key(4575)) VARIANT_BOOL IAgVAMCSInitialState::GetControlParametersAvailable ( );
__declspec(implementation_key(4576)) IAgVAUserVariableCollectionPtr IAgVAMCSInitialState::GetUserVariables ( );
__declspec(implementation_key(4577)) double _IAgVASpacecraftParameters::GetDryMass ( );
__declspec(implementation_key(4578)) void _IAgVASpacecraftParameters::PutDryMass ( double pVal );
__declspec(implementation_key(4579)) double _IAgVASpacecraftParameters::GetCd ( );
__declspec(implementation_key(4580)) void _IAgVASpacecraftParameters::PutCd ( double pVal );
__declspec(implementation_key(4581)) double _IAgVASpacecraftParameters::GetDragArea ( );
__declspec(implementation_key(4582)) void _IAgVASpacecraftParameters::PutDragArea ( double pVal );
__declspec(implementation_key(4583)) double _IAgVASpacecraftParameters::GetCr ( );
__declspec(implementation_key(4584)) void _IAgVASpacecraftParameters::PutCr ( double pVal );
__declspec(implementation_key(4585)) double _IAgVASpacecraftParameters::GetSolarRadiationPressureArea ( );
__declspec(implementation_key(4586)) void _IAgVASpacecraftParameters::PutSolarRadiationPressureArea ( double pVal );
__declspec(implementation_key(4587)) double _IAgVASpacecraftParameters::GetCk ( );
__declspec(implementation_key(4588)) void _IAgVASpacecraftParameters::PutCk ( double pVal );
__declspec(implementation_key(4589)) double _IAgVASpacecraftParameters::GetRadiationPressureArea ( );
__declspec(implementation_key(4590)) void _IAgVASpacecraftParameters::PutRadiationPressureArea ( double pVal );
__declspec(implementation_key(4591)) double _IAgVASpacecraftParameters::GetK1 ( );
__declspec(implementation_key(4592)) void _IAgVASpacecraftParameters::PutK1 ( double pVal );
__declspec(implementation_key(4593)) double _IAgVASpacecraftParameters::GetK2 ( );
__declspec(implementation_key(4594)) void _IAgVASpacecraftParameters::PutK2 ( double pVal );
__declspec(implementation_key(4595)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVASpacecraftParameters::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(4596)) double _IAgVAFuelTank::GetTankPressure ( );
__declspec(implementation_key(4597)) void _IAgVAFuelTank::PutTankPressure ( double pVal );
__declspec(implementation_key(4598)) double _IAgVAFuelTank::GetTankVolume ( );
__declspec(implementation_key(4599)) void _IAgVAFuelTank::PutTankVolume ( double pVal );
__declspec(implementation_key(4600)) double _IAgVAFuelTank::GetTankTemperature ( );
__declspec(implementation_key(4601)) void _IAgVAFuelTank::PutTankTemperature ( double pVal );
__declspec(implementation_key(4602)) double _IAgVAFuelTank::GetFuelDensity ( );
__declspec(implementation_key(4603)) void _IAgVAFuelTank::PutFuelDensity ( double pVal );
__declspec(implementation_key(4604)) double _IAgVAFuelTank::GetFuelMass ( );
__declspec(implementation_key(4605)) void _IAgVAFuelTank::PutFuelMass ( double pVal );
__declspec(implementation_key(4606)) double _IAgVAFuelTank::GetMaximumFuelMass ( );
__declspec(implementation_key(4607)) void _IAgVAFuelTank::PutMaximumFuelMass ( double pVal );
__declspec(implementation_key(4608)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAFuelTank::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(4609)) double _IAgVAElementCartesian::GetX ( );
__declspec(implementation_key(4610)) void _IAgVAElementCartesian::PutX ( double pVal );
__declspec(implementation_key(4611)) double _IAgVAElementCartesian::GetY ( );
__declspec(implementation_key(4612)) void _IAgVAElementCartesian::PutY ( double pVal );
__declspec(implementation_key(4613)) double _IAgVAElementCartesian::GetZ ( );
__declspec(implementation_key(4614)) void _IAgVAElementCartesian::PutZ ( double pVal );
__declspec(implementation_key(4615)) double _IAgVAElementCartesian::GetVx ( );
__declspec(implementation_key(4616)) void _IAgVAElementCartesian::PutVx ( double pVal );
__declspec(implementation_key(4617)) double _IAgVAElementCartesian::GetVy ( );
__declspec(implementation_key(4618)) void _IAgVAElementCartesian::PutVy ( double pVal );
__declspec(implementation_key(4619)) double _IAgVAElementCartesian::GetVz ( );
__declspec(implementation_key(4620)) void _IAgVAElementCartesian::PutVz ( double pVal );
__declspec(implementation_key(4621)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAElementCartesian::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(4622)) double IAgVAElementCartesian::GetX ( );
__declspec(implementation_key(4623)) void IAgVAElementCartesian::PutX ( double pVal );
__declspec(implementation_key(4624)) double IAgVAElementCartesian::GetY ( );
__declspec(implementation_key(4625)) void IAgVAElementCartesian::PutY ( double pVal );
__declspec(implementation_key(4626)) double IAgVAElementCartesian::GetZ ( );
__declspec(implementation_key(4627)) void IAgVAElementCartesian::PutZ ( double pVal );
__declspec(implementation_key(4628)) double IAgVAElementCartesian::GetVx ( );
__declspec(implementation_key(4629)) void IAgVAElementCartesian::PutVx ( double pVal );
__declspec(implementation_key(4630)) double IAgVAElementCartesian::GetVy ( );
__declspec(implementation_key(4631)) void IAgVAElementCartesian::PutVy ( double pVal );
__declspec(implementation_key(4632)) double IAgVAElementCartesian::GetVz ( );
__declspec(implementation_key(4633)) void IAgVAElementCartesian::PutVz ( double pVal );
__declspec(implementation_key(4634)) double _IAgVAElementKeplerian::GetSemiMajorAxis ( );
__declspec(implementation_key(4635)) void _IAgVAElementKeplerian::PutSemiMajorAxis ( double pVal );
__declspec(implementation_key(4636)) double _IAgVAElementKeplerian::GetEccentricity ( );
__declspec(implementation_key(4637)) void _IAgVAElementKeplerian::PutEccentricity ( double pVal );
__declspec(implementation_key(4638)) _variant_t _IAgVAElementKeplerian::GetInclination ( );
__declspec(implementation_key(4639)) void _IAgVAElementKeplerian::PutInclination ( const _variant_t & pVal );
__declspec(implementation_key(4640)) _variant_t _IAgVAElementKeplerian::GetRAAN ( );
__declspec(implementation_key(4641)) void _IAgVAElementKeplerian::PutRAAN ( const _variant_t & pVal );
__declspec(implementation_key(4642)) _variant_t _IAgVAElementKeplerian::GetArgOfPeriapsis ( );
__declspec(implementation_key(4643)) void _IAgVAElementKeplerian::PutArgOfPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(4644)) _variant_t _IAgVAElementKeplerian::GetTrueAnomaly ( );
__declspec(implementation_key(4645)) void _IAgVAElementKeplerian::PutTrueAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4646)) double _IAgVAElementKeplerian::GetApoapsisAltitudeSize ( );
__declspec(implementation_key(4647)) void _IAgVAElementKeplerian::PutApoapsisAltitudeSize ( double pVal );
__declspec(implementation_key(4648)) double _IAgVAElementKeplerian::GetApoapsisRadiusSize ( );
__declspec(implementation_key(4649)) void _IAgVAElementKeplerian::PutApoapsisRadiusSize ( double pVal );
__declspec(implementation_key(4650)) double _IAgVAElementKeplerian::GetMeanMotion ( );
__declspec(implementation_key(4651)) void _IAgVAElementKeplerian::PutMeanMotion ( double pVal );
__declspec(implementation_key(4652)) double _IAgVAElementKeplerian::GetPeriapsisAltitudeSize ( );
__declspec(implementation_key(4653)) void _IAgVAElementKeplerian::PutPeriapsisAltitudeSize ( double pVal );
__declspec(implementation_key(4654)) double _IAgVAElementKeplerian::GetPeriapsisRadiusSize ( );
__declspec(implementation_key(4655)) void _IAgVAElementKeplerian::PutPeriapsisRadiusSize ( double pVal );
__declspec(implementation_key(4656)) double _IAgVAElementKeplerian::GetPeriod ( );
__declspec(implementation_key(4657)) void _IAgVAElementKeplerian::PutPeriod ( double pVal );
__declspec(implementation_key(4658)) _variant_t _IAgVAElementKeplerian::GetLAN ( );
__declspec(implementation_key(4659)) void _IAgVAElementKeplerian::PutLAN ( const _variant_t & pVal );
__declspec(implementation_key(4660)) _variant_t _IAgVAElementKeplerian::GetArgOfLatitude ( );
__declspec(implementation_key(4661)) void _IAgVAElementKeplerian::PutArgOfLatitude ( const _variant_t & pVal );
__declspec(implementation_key(4662)) _variant_t _IAgVAElementKeplerian::GetEccentricAnomaly ( );
__declspec(implementation_key(4663)) void _IAgVAElementKeplerian::PutEccentricAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4664)) _variant_t _IAgVAElementKeplerian::GetMeanAnomaly ( );
__declspec(implementation_key(4665)) void _IAgVAElementKeplerian::PutMeanAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4666)) double _IAgVAElementKeplerian::GetTimePastAscNode ( );
__declspec(implementation_key(4667)) void _IAgVAElementKeplerian::PutTimePastAscNode ( double pVal );
__declspec(implementation_key(4668)) double _IAgVAElementKeplerian::GetTimePastPeriapsis ( );
__declspec(implementation_key(4669)) void _IAgVAElementKeplerian::PutTimePastPeriapsis ( double pVal );
__declspec(implementation_key(4670)) enum AgEVAElement _IAgVAElementKeplerian::GetElementType ( );
__declspec(implementation_key(4671)) void _IAgVAElementKeplerian::PutElementType ( enum AgEVAElement pVal );
__declspec(implementation_key(4672)) double _IAgVAElementKeplerian::GetApoapsisAltitudeShape ( );
__declspec(implementation_key(4673)) void _IAgVAElementKeplerian::PutApoapsisAltitudeShape ( double pVal );
__declspec(implementation_key(4674)) double _IAgVAElementKeplerian::GetApoapsisRadiusShape ( );
__declspec(implementation_key(4675)) void _IAgVAElementKeplerian::PutApoapsisRadiusShape ( double pVal );
__declspec(implementation_key(4676)) double _IAgVAElementKeplerian::GetPeriapsisAltitudeShape ( );
__declspec(implementation_key(4677)) void _IAgVAElementKeplerian::PutPeriapsisAltitudeShape ( double pVal );
__declspec(implementation_key(4678)) double _IAgVAElementKeplerian::GetPeriapsisRadiusShape ( );
__declspec(implementation_key(4679)) void _IAgVAElementKeplerian::PutPeriapsisRadiusShape ( double pVal );
__declspec(implementation_key(4680)) double IAgVAElementKeplerian::GetSemiMajorAxis ( );
__declspec(implementation_key(4681)) void IAgVAElementKeplerian::PutSemiMajorAxis ( double pVal );
__declspec(implementation_key(4682)) double IAgVAElementKeplerian::GetEccentricity ( );
__declspec(implementation_key(4683)) void IAgVAElementKeplerian::PutEccentricity ( double pVal );
__declspec(implementation_key(4684)) _variant_t IAgVAElementKeplerian::GetInclination ( );
__declspec(implementation_key(4685)) void IAgVAElementKeplerian::PutInclination ( const _variant_t & pVal );
__declspec(implementation_key(4686)) _variant_t IAgVAElementKeplerian::GetRAAN ( );
__declspec(implementation_key(4687)) void IAgVAElementKeplerian::PutRAAN ( const _variant_t & pVal );
__declspec(implementation_key(4688)) _variant_t IAgVAElementKeplerian::GetArgOfPeriapsis ( );
__declspec(implementation_key(4689)) void IAgVAElementKeplerian::PutArgOfPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(4690)) _variant_t IAgVAElementKeplerian::GetTrueAnomaly ( );
__declspec(implementation_key(4691)) void IAgVAElementKeplerian::PutTrueAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4692)) double IAgVAElementKeplerian::GetApoapsisAltitudeSize ( );
__declspec(implementation_key(4693)) void IAgVAElementKeplerian::PutApoapsisAltitudeSize ( double pVal );
__declspec(implementation_key(4694)) double IAgVAElementKeplerian::GetApoapsisRadiusSize ( );
__declspec(implementation_key(4695)) void IAgVAElementKeplerian::PutApoapsisRadiusSize ( double pVal );
__declspec(implementation_key(4696)) double IAgVAElementKeplerian::GetMeanMotion ( );
__declspec(implementation_key(4697)) void IAgVAElementKeplerian::PutMeanMotion ( double pVal );
__declspec(implementation_key(4698)) double IAgVAElementKeplerian::GetPeriapsisAltitudeSize ( );
__declspec(implementation_key(4699)) void IAgVAElementKeplerian::PutPeriapsisAltitudeSize ( double pVal );
__declspec(implementation_key(4700)) double IAgVAElementKeplerian::GetPeriapsisRadiusSize ( );
__declspec(implementation_key(4701)) void IAgVAElementKeplerian::PutPeriapsisRadiusSize ( double pVal );
__declspec(implementation_key(4702)) double IAgVAElementKeplerian::GetPeriod ( );
__declspec(implementation_key(4703)) void IAgVAElementKeplerian::PutPeriod ( double pVal );
__declspec(implementation_key(4704)) _variant_t IAgVAElementKeplerian::GetLAN ( );
__declspec(implementation_key(4705)) void IAgVAElementKeplerian::PutLAN ( const _variant_t & pVal );
__declspec(implementation_key(4706)) _variant_t IAgVAElementKeplerian::GetArgOfLatitude ( );
__declspec(implementation_key(4707)) void IAgVAElementKeplerian::PutArgOfLatitude ( const _variant_t & pVal );
__declspec(implementation_key(4708)) _variant_t IAgVAElementKeplerian::GetEccentricAnomaly ( );
__declspec(implementation_key(4709)) void IAgVAElementKeplerian::PutEccentricAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4710)) _variant_t IAgVAElementKeplerian::GetMeanAnomaly ( );
__declspec(implementation_key(4711)) void IAgVAElementKeplerian::PutMeanAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4712)) double IAgVAElementKeplerian::GetTimePastAscNode ( );
__declspec(implementation_key(4713)) void IAgVAElementKeplerian::PutTimePastAscNode ( double pVal );
__declspec(implementation_key(4714)) double IAgVAElementKeplerian::GetTimePastPeriapsis ( );
__declspec(implementation_key(4715)) void IAgVAElementKeplerian::PutTimePastPeriapsis ( double pVal );
__declspec(implementation_key(4716)) enum AgEVAElement IAgVAElementKeplerian::GetElementType ( );
__declspec(implementation_key(4717)) void IAgVAElementKeplerian::PutElementType ( enum AgEVAElement pVal );
__declspec(implementation_key(4718)) double IAgVAElementKeplerian::GetApoapsisAltitudeShape ( );
__declspec(implementation_key(4719)) void IAgVAElementKeplerian::PutApoapsisAltitudeShape ( double pVal );
__declspec(implementation_key(4720)) double IAgVAElementKeplerian::GetApoapsisRadiusShape ( );
__declspec(implementation_key(4721)) void IAgVAElementKeplerian::PutApoapsisRadiusShape ( double pVal );
__declspec(implementation_key(4722)) double IAgVAElementKeplerian::GetPeriapsisAltitudeShape ( );
__declspec(implementation_key(4723)) void IAgVAElementKeplerian::PutPeriapsisAltitudeShape ( double pVal );
__declspec(implementation_key(4724)) double IAgVAElementKeplerian::GetPeriapsisRadiusShape ( );
__declspec(implementation_key(4725)) void IAgVAElementKeplerian::PutPeriapsisRadiusShape ( double pVal );
__declspec(implementation_key(4726)) double _IAgVAElementModifiedKeplerian::GetRadiusOfPeriapsis ( );
__declspec(implementation_key(4727)) void _IAgVAElementModifiedKeplerian::PutRadiusOfPeriapsis ( double pVal );
__declspec(implementation_key(4728)) double _IAgVAElementModifiedKeplerian::GetEccentricity ( );
__declspec(implementation_key(4729)) void _IAgVAElementModifiedKeplerian::PutEccentricity ( double pVal );
__declspec(implementation_key(4730)) _variant_t _IAgVAElementModifiedKeplerian::GetInclination ( );
__declspec(implementation_key(4731)) void _IAgVAElementModifiedKeplerian::PutInclination ( const _variant_t & pVal );
__declspec(implementation_key(4732)) _variant_t _IAgVAElementModifiedKeplerian::GetRAAN ( );
__declspec(implementation_key(4733)) void _IAgVAElementModifiedKeplerian::PutRAAN ( const _variant_t & pVal );
__declspec(implementation_key(4734)) _variant_t _IAgVAElementModifiedKeplerian::GetArgOfPeriapsis ( );
__declspec(implementation_key(4735)) void _IAgVAElementModifiedKeplerian::PutArgOfPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(4736)) _variant_t _IAgVAElementModifiedKeplerian::GetTrueAnomaly ( );
__declspec(implementation_key(4737)) void _IAgVAElementModifiedKeplerian::PutTrueAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4738)) double IAgVAElementModifiedKeplerian::GetRadiusOfPeriapsis ( );
__declspec(implementation_key(4739)) void IAgVAElementModifiedKeplerian::PutRadiusOfPeriapsis ( double pVal );
__declspec(implementation_key(4740)) double IAgVAElementModifiedKeplerian::GetEccentricity ( );
__declspec(implementation_key(4741)) void IAgVAElementModifiedKeplerian::PutEccentricity ( double pVal );
__declspec(implementation_key(4742)) _variant_t IAgVAElementModifiedKeplerian::GetInclination ( );
__declspec(implementation_key(4743)) void IAgVAElementModifiedKeplerian::PutInclination ( const _variant_t & pVal );
__declspec(implementation_key(4744)) _variant_t IAgVAElementModifiedKeplerian::GetRAAN ( );
__declspec(implementation_key(4745)) void IAgVAElementModifiedKeplerian::PutRAAN ( const _variant_t & pVal );
__declspec(implementation_key(4746)) _variant_t IAgVAElementModifiedKeplerian::GetArgOfPeriapsis ( );
__declspec(implementation_key(4747)) void IAgVAElementModifiedKeplerian::PutArgOfPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(4748)) _variant_t IAgVAElementModifiedKeplerian::GetTrueAnomaly ( );
__declspec(implementation_key(4749)) void IAgVAElementModifiedKeplerian::PutTrueAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4750)) double _IAgVAElementEquinoctial::GetSemiMajorAxis ( );
__declspec(implementation_key(4751)) void _IAgVAElementEquinoctial::PutSemiMajorAxis ( double pVal );
__declspec(implementation_key(4752)) double _IAgVAElementEquinoctial::GetMeanMotion ( );
__declspec(implementation_key(4753)) void _IAgVAElementEquinoctial::PutMeanMotion ( double pVal );
__declspec(implementation_key(4754)) double _IAgVAElementEquinoctial::Geth ( );
__declspec(implementation_key(4755)) void _IAgVAElementEquinoctial::Puth ( double pVal );
__declspec(implementation_key(4756)) double _IAgVAElementEquinoctial::Getk ( );
__declspec(implementation_key(4757)) void _IAgVAElementEquinoctial::Putk ( double pVal );
__declspec(implementation_key(4758)) double _IAgVAElementEquinoctial::Getp ( );
__declspec(implementation_key(4759)) void _IAgVAElementEquinoctial::Putp ( double pVal );
__declspec(implementation_key(4760)) double _IAgVAElementEquinoctial::Getq ( );
__declspec(implementation_key(4761)) void _IAgVAElementEquinoctial::Putq ( double pVal );
__declspec(implementation_key(4762)) _variant_t _IAgVAElementEquinoctial::GetMeanLongitude ( );
__declspec(implementation_key(4763)) void _IAgVAElementEquinoctial::PutMeanLongitude ( const _variant_t & pVal );
__declspec(implementation_key(4764)) enum AgEVAFormulation _IAgVAElementEquinoctial::GetFormulation ( );
__declspec(implementation_key(4765)) void _IAgVAElementEquinoctial::PutFormulation ( enum AgEVAFormulation pVal );
__declspec(implementation_key(4766)) double IAgVAElementEquinoctial::GetSemiMajorAxis ( );
__declspec(implementation_key(4767)) void IAgVAElementEquinoctial::PutSemiMajorAxis ( double pVal );
__declspec(implementation_key(4768)) double IAgVAElementEquinoctial::GetMeanMotion ( );
__declspec(implementation_key(4769)) void IAgVAElementEquinoctial::PutMeanMotion ( double pVal );
__declspec(implementation_key(4770)) double IAgVAElementEquinoctial::Geth ( );
__declspec(implementation_key(4771)) void IAgVAElementEquinoctial::Puth ( double pVal );
__declspec(implementation_key(4772)) double IAgVAElementEquinoctial::Getk ( );
__declspec(implementation_key(4773)) void IAgVAElementEquinoctial::Putk ( double pVal );
__declspec(implementation_key(4774)) double IAgVAElementEquinoctial::Getp ( );
__declspec(implementation_key(4775)) void IAgVAElementEquinoctial::Putp ( double pVal );
__declspec(implementation_key(4776)) double IAgVAElementEquinoctial::Getq ( );
__declspec(implementation_key(4777)) void IAgVAElementEquinoctial::Putq ( double pVal );
__declspec(implementation_key(4778)) _variant_t IAgVAElementEquinoctial::GetMeanLongitude ( );
__declspec(implementation_key(4779)) void IAgVAElementEquinoctial::PutMeanLongitude ( const _variant_t & pVal );
__declspec(implementation_key(4780)) enum AgEVAFormulation IAgVAElementEquinoctial::GetFormulation ( );
__declspec(implementation_key(4781)) void IAgVAElementEquinoctial::PutFormulation ( enum AgEVAFormulation pVal );
__declspec(implementation_key(4782)) _variant_t _IAgVAElementDelaunay::GetMeanAnomaly ( );
__declspec(implementation_key(4783)) void _IAgVAElementDelaunay::PutMeanAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4784)) _variant_t _IAgVAElementDelaunay::GetArgOfPeriapsis ( );
__declspec(implementation_key(4785)) void _IAgVAElementDelaunay::PutArgOfPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(4786)) _variant_t _IAgVAElementDelaunay::GetRAAN ( );
__declspec(implementation_key(4787)) void _IAgVAElementDelaunay::PutRAAN ( const _variant_t & pVal );
__declspec(implementation_key(4788)) double _IAgVAElementDelaunay::GetDelaunayL ( );
__declspec(implementation_key(4789)) void _IAgVAElementDelaunay::PutDelaunayL ( double pVal );
__declspec(implementation_key(4790)) double _IAgVAElementDelaunay::GetSemiMajorAxis ( );
__declspec(implementation_key(4791)) void _IAgVAElementDelaunay::PutSemiMajorAxis ( double pVal );
__declspec(implementation_key(4792)) double _IAgVAElementDelaunay::GetDelaunayG ( );
__declspec(implementation_key(4793)) void _IAgVAElementDelaunay::PutDelaunayG ( double pVal );
__declspec(implementation_key(4794)) double _IAgVAElementDelaunay::GetSemilatusRectum ( );
__declspec(implementation_key(4795)) void _IAgVAElementDelaunay::PutSemilatusRectum ( double pVal );
__declspec(implementation_key(4796)) double _IAgVAElementDelaunay::GetDelaunayH ( );
__declspec(implementation_key(4797)) void _IAgVAElementDelaunay::PutDelaunayH ( double pVal );
__declspec(implementation_key(4798)) _variant_t _IAgVAElementDelaunay::GetInclination ( );
__declspec(implementation_key(4799)) void _IAgVAElementDelaunay::PutInclination ( const _variant_t & pVal );
__declspec(implementation_key(4800)) _variant_t IAgVAElementDelaunay::GetMeanAnomaly ( );
__declspec(implementation_key(4801)) void IAgVAElementDelaunay::PutMeanAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4802)) _variant_t IAgVAElementDelaunay::GetArgOfPeriapsis ( );
__declspec(implementation_key(4803)) void IAgVAElementDelaunay::PutArgOfPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(4804)) _variant_t IAgVAElementDelaunay::GetRAAN ( );
__declspec(implementation_key(4805)) void IAgVAElementDelaunay::PutRAAN ( const _variant_t & pVal );
__declspec(implementation_key(4806)) double IAgVAElementDelaunay::GetDelaunayL ( );
__declspec(implementation_key(4807)) void IAgVAElementDelaunay::PutDelaunayL ( double pVal );
__declspec(implementation_key(4808)) double IAgVAElementDelaunay::GetSemiMajorAxis ( );
__declspec(implementation_key(4809)) void IAgVAElementDelaunay::PutSemiMajorAxis ( double pVal );
__declspec(implementation_key(4810)) double IAgVAElementDelaunay::GetDelaunayG ( );
__declspec(implementation_key(4811)) void IAgVAElementDelaunay::PutDelaunayG ( double pVal );
__declspec(implementation_key(4812)) double IAgVAElementDelaunay::GetSemilatusRectum ( );
__declspec(implementation_key(4813)) void IAgVAElementDelaunay::PutSemilatusRectum ( double pVal );
__declspec(implementation_key(4814)) double IAgVAElementDelaunay::GetDelaunayH ( );
__declspec(implementation_key(4815)) void IAgVAElementDelaunay::PutDelaunayH ( double pVal );
__declspec(implementation_key(4816)) _variant_t IAgVAElementDelaunay::GetInclination ( );
__declspec(implementation_key(4817)) void IAgVAElementDelaunay::PutInclination ( const _variant_t & pVal );
__declspec(implementation_key(4818)) _variant_t _IAgVAElementMixedSpherical::GetLongitude ( );
__declspec(implementation_key(4819)) void _IAgVAElementMixedSpherical::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(4820)) _variant_t _IAgVAElementMixedSpherical::GetLatitude ( );
__declspec(implementation_key(4821)) void _IAgVAElementMixedSpherical::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(4822)) double _IAgVAElementMixedSpherical::GetAltitude ( );
__declspec(implementation_key(4823)) void _IAgVAElementMixedSpherical::PutAltitude ( double pVal );
__declspec(implementation_key(4824)) _variant_t _IAgVAElementMixedSpherical::GetHorizontalFlightPathAngle ( );
__declspec(implementation_key(4825)) void _IAgVAElementMixedSpherical::PutHorizontalFlightPathAngle ( const _variant_t & pVal );
__declspec(implementation_key(4826)) _variant_t _IAgVAElementMixedSpherical::GetVelocityAzimuth ( );
__declspec(implementation_key(4827)) void _IAgVAElementMixedSpherical::PutVelocityAzimuth ( const _variant_t & pVal );
__declspec(implementation_key(4828)) double _IAgVAElementMixedSpherical::GetVelocityMagnitude ( );
__declspec(implementation_key(4829)) void _IAgVAElementMixedSpherical::PutVelocityMagnitude ( double pVal );
__declspec(implementation_key(4830)) _variant_t _IAgVAElementMixedSpherical::GetVerticalFlightPathAngle ( );
__declspec(implementation_key(4831)) void _IAgVAElementMixedSpherical::PutVerticalFlightPathAngle ( const _variant_t & pVal );
__declspec(implementation_key(4832)) _variant_t IAgVAElementMixedSpherical::GetLongitude ( );
__declspec(implementation_key(4833)) void IAgVAElementMixedSpherical::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(4834)) _variant_t IAgVAElementMixedSpherical::GetLatitude ( );
__declspec(implementation_key(4835)) void IAgVAElementMixedSpherical::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(4836)) double IAgVAElementMixedSpherical::GetAltitude ( );
__declspec(implementation_key(4837)) void IAgVAElementMixedSpherical::PutAltitude ( double pVal );
__declspec(implementation_key(4838)) _variant_t IAgVAElementMixedSpherical::GetHorizontalFlightPathAngle ( );
__declspec(implementation_key(4839)) void IAgVAElementMixedSpherical::PutHorizontalFlightPathAngle ( const _variant_t & pVal );
__declspec(implementation_key(4840)) _variant_t IAgVAElementMixedSpherical::GetVelocityAzimuth ( );
__declspec(implementation_key(4841)) void IAgVAElementMixedSpherical::PutVelocityAzimuth ( const _variant_t & pVal );
__declspec(implementation_key(4842)) double IAgVAElementMixedSpherical::GetVelocityMagnitude ( );
__declspec(implementation_key(4843)) void IAgVAElementMixedSpherical::PutVelocityMagnitude ( double pVal );
__declspec(implementation_key(4844)) _variant_t IAgVAElementMixedSpherical::GetVerticalFlightPathAngle ( );
__declspec(implementation_key(4845)) void IAgVAElementMixedSpherical::PutVerticalFlightPathAngle ( const _variant_t & pVal );
__declspec(implementation_key(4846)) _variant_t _IAgVAElementSpherical::GetRightAscension ( );
__declspec(implementation_key(4847)) void _IAgVAElementSpherical::PutRightAscension ( const _variant_t & pVal );
__declspec(implementation_key(4848)) _variant_t _IAgVAElementSpherical::GetDeclination ( );
__declspec(implementation_key(4849)) void _IAgVAElementSpherical::PutDeclination ( const _variant_t & pVal );
__declspec(implementation_key(4850)) double _IAgVAElementSpherical::GetRadiusMagnitude ( );
__declspec(implementation_key(4851)) void _IAgVAElementSpherical::PutRadiusMagnitude ( double pVal );
__declspec(implementation_key(4852)) _variant_t _IAgVAElementSpherical::GetHorizontalFlightPathAngle ( );
__declspec(implementation_key(4853)) void _IAgVAElementSpherical::PutHorizontalFlightPathAngle ( const _variant_t & pVal );
__declspec(implementation_key(4854)) _variant_t _IAgVAElementSpherical::GetVelocityAzimuth ( );
__declspec(implementation_key(4855)) void _IAgVAElementSpherical::PutVelocityAzimuth ( const _variant_t & pVal );
__declspec(implementation_key(4856)) double _IAgVAElementSpherical::GetVelocityMagnitude ( );
__declspec(implementation_key(4857)) void _IAgVAElementSpherical::PutVelocityMagnitude ( double pVal );
__declspec(implementation_key(4858)) _variant_t _IAgVAElementSpherical::GetVerticalFlightPathAngle ( );
__declspec(implementation_key(4859)) void _IAgVAElementSpherical::PutVerticalFlightPathAngle ( const _variant_t & pVal );
__declspec(implementation_key(4860)) _variant_t IAgVAElementSpherical::GetRightAscension ( );
__declspec(implementation_key(4861)) void IAgVAElementSpherical::PutRightAscension ( const _variant_t & pVal );
__declspec(implementation_key(4862)) _variant_t IAgVAElementSpherical::GetDeclination ( );
__declspec(implementation_key(4863)) void IAgVAElementSpherical::PutDeclination ( const _variant_t & pVal );
__declspec(implementation_key(4864)) double IAgVAElementSpherical::GetRadiusMagnitude ( );
__declspec(implementation_key(4865)) void IAgVAElementSpherical::PutRadiusMagnitude ( double pVal );
__declspec(implementation_key(4866)) _variant_t IAgVAElementSpherical::GetHorizontalFlightPathAngle ( );
__declspec(implementation_key(4867)) void IAgVAElementSpherical::PutHorizontalFlightPathAngle ( const _variant_t & pVal );
__declspec(implementation_key(4868)) _variant_t IAgVAElementSpherical::GetVelocityAzimuth ( );
__declspec(implementation_key(4869)) void IAgVAElementSpherical::PutVelocityAzimuth ( const _variant_t & pVal );
__declspec(implementation_key(4870)) double IAgVAElementSpherical::GetVelocityMagnitude ( );
__declspec(implementation_key(4871)) void IAgVAElementSpherical::PutVelocityMagnitude ( double pVal );
__declspec(implementation_key(4872)) _variant_t IAgVAElementSpherical::GetVerticalFlightPathAngle ( );
__declspec(implementation_key(4873)) void IAgVAElementSpherical::PutVerticalFlightPathAngle ( const _variant_t & pVal );
__declspec(implementation_key(4874)) double _IAgVAElementTargetVectorIncomingAsymptote::GetRadiusOfPeriapsis ( );
__declspec(implementation_key(4875)) void _IAgVAElementTargetVectorIncomingAsymptote::PutRadiusOfPeriapsis ( double pVal );
__declspec(implementation_key(4876)) double _IAgVAElementTargetVectorIncomingAsymptote::GetC3Energy ( );
__declspec(implementation_key(4877)) void _IAgVAElementTargetVectorIncomingAsymptote::PutC3Energy ( double pVal );
__declspec(implementation_key(4878)) _variant_t _IAgVAElementTargetVectorIncomingAsymptote::GetRAIncomingAsymptote ( );
__declspec(implementation_key(4879)) void _IAgVAElementTargetVectorIncomingAsymptote::PutRAIncomingAsymptote ( const _variant_t & pVal );
__declspec(implementation_key(4880)) _variant_t _IAgVAElementTargetVectorIncomingAsymptote::GetDeclinationIncomingAsymptote ( );
__declspec(implementation_key(4881)) void _IAgVAElementTargetVectorIncomingAsymptote::PutDeclinationIncomingAsymptote ( const _variant_t & pVal );
__declspec(implementation_key(4882)) _variant_t _IAgVAElementTargetVectorIncomingAsymptote::GetVelocityAzimuthPeriapsis ( );
__declspec(implementation_key(4883)) void _IAgVAElementTargetVectorIncomingAsymptote::PutVelocityAzimuthPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(4884)) _variant_t _IAgVAElementTargetVectorIncomingAsymptote::GetTrueAnomaly ( );
__declspec(implementation_key(4885)) void _IAgVAElementTargetVectorIncomingAsymptote::PutTrueAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4886)) double IAgVAElementTargetVectorIncomingAsymptote::GetRadiusOfPeriapsis ( );
__declspec(implementation_key(4887)) void IAgVAElementTargetVectorIncomingAsymptote::PutRadiusOfPeriapsis ( double pVal );
__declspec(implementation_key(4888)) double IAgVAElementTargetVectorIncomingAsymptote::GetC3Energy ( );
__declspec(implementation_key(4889)) void IAgVAElementTargetVectorIncomingAsymptote::PutC3Energy ( double pVal );
__declspec(implementation_key(4890)) _variant_t IAgVAElementTargetVectorIncomingAsymptote::GetRAIncomingAsymptote ( );
__declspec(implementation_key(4891)) void IAgVAElementTargetVectorIncomingAsymptote::PutRAIncomingAsymptote ( const _variant_t & pVal );
__declspec(implementation_key(4892)) _variant_t IAgVAElementTargetVectorIncomingAsymptote::GetDeclinationIncomingAsymptote ( );
__declspec(implementation_key(4893)) void IAgVAElementTargetVectorIncomingAsymptote::PutDeclinationIncomingAsymptote ( const _variant_t & pVal );
__declspec(implementation_key(4894)) _variant_t IAgVAElementTargetVectorIncomingAsymptote::GetVelocityAzimuthPeriapsis ( );
__declspec(implementation_key(4895)) void IAgVAElementTargetVectorIncomingAsymptote::PutVelocityAzimuthPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(4896)) _variant_t IAgVAElementTargetVectorIncomingAsymptote::GetTrueAnomaly ( );
__declspec(implementation_key(4897)) void IAgVAElementTargetVectorIncomingAsymptote::PutTrueAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4898)) double _IAgVAElementTargetVectorOutgoingAsymptote::GetRadiusOfPeriapsis ( );
__declspec(implementation_key(4899)) void _IAgVAElementTargetVectorOutgoingAsymptote::PutRadiusOfPeriapsis ( double pVal );
__declspec(implementation_key(4900)) double _IAgVAElementTargetVectorOutgoingAsymptote::GetC3Energy ( );
__declspec(implementation_key(4901)) void _IAgVAElementTargetVectorOutgoingAsymptote::PutC3Energy ( double pVal );
__declspec(implementation_key(4902)) _variant_t _IAgVAElementTargetVectorOutgoingAsymptote::GetRAOutgoingAsymptote ( );
__declspec(implementation_key(4903)) void _IAgVAElementTargetVectorOutgoingAsymptote::PutRAOutgoingAsymptote ( const _variant_t & pVal );
__declspec(implementation_key(4904)) _variant_t _IAgVAElementTargetVectorOutgoingAsymptote::GetDeclinationOutgoingAsymptote ( );
__declspec(implementation_key(4905)) void _IAgVAElementTargetVectorOutgoingAsymptote::PutDeclinationOutgoingAsymptote ( const _variant_t & pVal );
__declspec(implementation_key(4906)) _variant_t _IAgVAElementTargetVectorOutgoingAsymptote::GetVelocityAzimuthPeriapsis ( );
__declspec(implementation_key(4907)) void _IAgVAElementTargetVectorOutgoingAsymptote::PutVelocityAzimuthPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(4908)) _variant_t _IAgVAElementTargetVectorOutgoingAsymptote::GetTrueAnomaly ( );
__declspec(implementation_key(4909)) void _IAgVAElementTargetVectorOutgoingAsymptote::PutTrueAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4910)) double IAgVAElementTargetVectorOutgoingAsymptote::GetRadiusOfPeriapsis ( );
__declspec(implementation_key(4911)) void IAgVAElementTargetVectorOutgoingAsymptote::PutRadiusOfPeriapsis ( double pVal );
__declspec(implementation_key(4912)) double IAgVAElementTargetVectorOutgoingAsymptote::GetC3Energy ( );
__declspec(implementation_key(4913)) void IAgVAElementTargetVectorOutgoingAsymptote::PutC3Energy ( double pVal );
__declspec(implementation_key(4914)) _variant_t IAgVAElementTargetVectorOutgoingAsymptote::GetRAOutgoingAsymptote ( );
__declspec(implementation_key(4915)) void IAgVAElementTargetVectorOutgoingAsymptote::PutRAOutgoingAsymptote ( const _variant_t & pVal );
__declspec(implementation_key(4916)) _variant_t IAgVAElementTargetVectorOutgoingAsymptote::GetDeclinationOutgoingAsymptote ( );
__declspec(implementation_key(4917)) void IAgVAElementTargetVectorOutgoingAsymptote::PutDeclinationOutgoingAsymptote ( const _variant_t & pVal );
__declspec(implementation_key(4918)) _variant_t IAgVAElementTargetVectorOutgoingAsymptote::GetVelocityAzimuthPeriapsis ( );
__declspec(implementation_key(4919)) void IAgVAElementTargetVectorOutgoingAsymptote::PutVelocityAzimuthPeriapsis ( const _variant_t & pVal );
__declspec(implementation_key(4920)) _variant_t IAgVAElementTargetVectorOutgoingAsymptote::GetTrueAnomaly ( );
__declspec(implementation_key(4921)) void IAgVAElementTargetVectorOutgoingAsymptote::PutTrueAnomaly ( const _variant_t & pVal );
__declspec(implementation_key(4922)) _variant_t _IAgVAElementGeodetic::GetLatitude ( );
__declspec(implementation_key(4923)) void _IAgVAElementGeodetic::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(4924)) _variant_t _IAgVAElementGeodetic::GetLongitude ( );
__declspec(implementation_key(4925)) void _IAgVAElementGeodetic::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(4926)) double _IAgVAElementGeodetic::GetAltitude ( );
__declspec(implementation_key(4927)) void _IAgVAElementGeodetic::PutAltitude ( double pVal );
__declspec(implementation_key(4928)) double _IAgVAElementGeodetic::GetRadiusMagnitude ( );
__declspec(implementation_key(4929)) void _IAgVAElementGeodetic::PutRadiusMagnitude ( double pVal );
__declspec(implementation_key(4930)) double _IAgVAElementGeodetic::GetLatitudeRate ( );
__declspec(implementation_key(4931)) void _IAgVAElementGeodetic::PutLatitudeRate ( double pVal );
__declspec(implementation_key(4932)) double _IAgVAElementGeodetic::GetLongitudeRate ( );
__declspec(implementation_key(4933)) void _IAgVAElementGeodetic::PutLongitudeRate ( double pVal );
__declspec(implementation_key(4934)) double _IAgVAElementGeodetic::GetAltitudeRate ( );
__declspec(implementation_key(4935)) void _IAgVAElementGeodetic::PutAltitudeRate ( double pVal );
__declspec(implementation_key(4936)) double _IAgVAElementGeodetic::GetRadiusRate ( );
__declspec(implementation_key(4937)) void _IAgVAElementGeodetic::PutRadiusRate ( double pVal );
__declspec(implementation_key(4938)) _variant_t IAgVAElementGeodetic::GetLatitude ( );
__declspec(implementation_key(4939)) void IAgVAElementGeodetic::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(4940)) _variant_t IAgVAElementGeodetic::GetLongitude ( );
__declspec(implementation_key(4941)) void IAgVAElementGeodetic::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(4942)) double IAgVAElementGeodetic::GetAltitude ( );
__declspec(implementation_key(4943)) void IAgVAElementGeodetic::PutAltitude ( double pVal );
__declspec(implementation_key(4944)) double IAgVAElementGeodetic::GetRadiusMagnitude ( );
__declspec(implementation_key(4945)) void IAgVAElementGeodetic::PutRadiusMagnitude ( double pVal );
__declspec(implementation_key(4946)) double IAgVAElementGeodetic::GetLatitudeRate ( );
__declspec(implementation_key(4947)) void IAgVAElementGeodetic::PutLatitudeRate ( double pVal );
__declspec(implementation_key(4948)) double IAgVAElementGeodetic::GetLongitudeRate ( );
__declspec(implementation_key(4949)) void IAgVAElementGeodetic::PutLongitudeRate ( double pVal );
__declspec(implementation_key(4950)) double IAgVAElementGeodetic::GetAltitudeRate ( );
__declspec(implementation_key(4951)) void IAgVAElementGeodetic::PutAltitudeRate ( double pVal );
__declspec(implementation_key(4952)) double IAgVAElementGeodetic::GetRadiusRate ( );
__declspec(implementation_key(4953)) void IAgVAElementGeodetic::PutRadiusRate ( double pVal );
__declspec(implementation_key(4954)) enum AgEVAStoppingCondition IAgVAStoppingConditionComponent::GetStoppingConditionType ( );
__declspec(implementation_key(4955)) VARIANT_BOOL IAgVAStoppingConditionElement::GetActive ( );
__declspec(implementation_key(4956)) void IAgVAStoppingConditionElement::PutActive ( VARIANT_BOOL pVal );
__declspec(implementation_key(4957)) HRESULT IAgVAStoppingConditionElement::EnableControlParameter ( enum AgEVAControlStoppingCondition Param );
__declspec(implementation_key(4958)) HRESULT IAgVAStoppingConditionElement::DisableControlParameter ( enum AgEVAControlStoppingCondition Param );
__declspec(implementation_key(4959)) VARIANT_BOOL IAgVAStoppingConditionElement::IsControlParameterEnabled ( enum AgEVAControlStoppingCondition Param );
__declspec(implementation_key(4960)) VARIANT_BOOL IAgVAStoppingConditionElement::GetControlParametersAvailable ( );
__declspec(implementation_key(4961)) IAgVAStoppingConditionComponentPtr IAgVAStoppingConditionElement::GetProperties ( );
__declspec(implementation_key(4962)) IAgVAStoppingConditionElementPtr IAgVAStoppingConditionCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(4963)) IAgVAStoppingConditionElementPtr IAgVAStoppingConditionCollection::Add ( _bstr_t ConditionName );
__declspec(implementation_key(4964)) HRESULT IAgVAStoppingConditionCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(4965)) IUnknownPtr IAgVAStoppingConditionCollection::Get_NewEnum ( );
__declspec(implementation_key(4966)) long IAgVAStoppingConditionCollection::GetCount ( );
__declspec(implementation_key(4967)) HRESULT IAgVAStoppingConditionCollection::Cut ( const _variant_t & IndexOrName );
__declspec(implementation_key(4968)) IAgVAStoppingConditionElementPtr IAgVAStoppingConditionCollection::Paste ( );
__declspec(implementation_key(4969)) IAgVAStoppingConditionElementPtr IAgVAStoppingConditionCollection::InsertCopy ( struct IAgVAStoppingConditionElement * StopCond );
__declspec(implementation_key(4970)) enum AgEVASegmentType _IAgVAMCSPropagate::GetType ( );
__declspec(implementation_key(4971)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSPropagate::GetProperties ( );
__declspec(implementation_key(4972)) IAgVAStatePtr _IAgVAMCSPropagate::GetInitialState ( );
__declspec(implementation_key(4973)) IAgVAStatePtr _IAgVAMCSPropagate::GetFinalState ( );
__declspec(implementation_key(4974)) _variant_t _IAgVAMCSPropagate::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(4975)) IAgVAStatePtr _IAgVAMCSPropagate::Run ( );
__declspec(implementation_key(4976)) IAgVACalcObjectCollectionPtr _IAgVAMCSPropagate::GetResults ( );
__declspec(implementation_key(4977)) STKObjects::IAgDrResultPtr _IAgVAMCSPropagate::GetExecSummary ( );
__declspec(implementation_key(4978)) _bstr_t _IAgVAMCSPropagate::GetPropagatorName ( );
__declspec(implementation_key(4979)) void _IAgVAMCSPropagate::PutPropagatorName ( _bstr_t pVal );
__declspec(implementation_key(4980)) IAgVAStoppingConditionCollectionPtr _IAgVAMCSPropagate::GetStoppingConditions ( );
__declspec(implementation_key(4981)) double _IAgVAMCSPropagate::GetMinPropagationTime ( );
__declspec(implementation_key(4982)) void _IAgVAMCSPropagate::PutMinPropagationTime ( double pVal );
__declspec(implementation_key(4983)) double _IAgVAMCSPropagate::GetMaxPropagationTime ( );
__declspec(implementation_key(4984)) void _IAgVAMCSPropagate::PutMaxPropagationTime ( double pVal );
__declspec(implementation_key(4985)) VARIANT_BOOL _IAgVAMCSPropagate::GetEnableMaxPropagationTime ( );
__declspec(implementation_key(4986)) void _IAgVAMCSPropagate::PutEnableMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(4987)) VARIANT_BOOL _IAgVAMCSPropagate::GetEnableWarningMessage ( );
__declspec(implementation_key(4988)) void _IAgVAMCSPropagate::PutEnableWarningMessage ( VARIANT_BOOL pVal );
__declspec(implementation_key(4989)) HRESULT _IAgVAMCSPropagate::EnableControlParameter ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(4990)) HRESULT _IAgVAMCSPropagate::DisableControlParameter ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(4991)) VARIANT_BOOL _IAgVAMCSPropagate::IsControlParameterEnabled ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(4992)) VARIANT_BOOL _IAgVAMCSPropagate::GetControlParametersAvailable ( );
__declspec(implementation_key(4993)) _bstr_t _IAgVAMCSPropagate::GetName ( );
__declspec(implementation_key(4994)) void _IAgVAMCSPropagate::PutName ( _bstr_t pVal );
__declspec(implementation_key(4995)) _bstr_t _IAgVAMCSPropagate::GetUserComment ( );
__declspec(implementation_key(4996)) void _IAgVAMCSPropagate::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(4997)) _bstr_t _IAgVAMCSPropagate::GetDescription ( );
__declspec(implementation_key(4998)) VARIANT_BOOL _IAgVAMCSPropagate::IsReadOnly ( );
__declspec(implementation_key(4999)) IUnknownPtr _IAgVAMCSPropagate::CloneObject ( );
__declspec(implementation_key(5000)) VARIANT_BOOL _IAgVAMCSPropagate::GetOverrideMaxPropagationTime ( );
__declspec(implementation_key(5001)) void _IAgVAMCSPropagate::PutOverrideMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(5002)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSPropagate::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5003)) _bstr_t IAgVAMCSPropagate::GetPropagatorName ( );
__declspec(implementation_key(5004)) void IAgVAMCSPropagate::PutPropagatorName ( _bstr_t pVal );
__declspec(implementation_key(5005)) IAgVAStoppingConditionCollectionPtr IAgVAMCSPropagate::GetStoppingConditions ( );
__declspec(implementation_key(5006)) double IAgVAMCSPropagate::GetMinPropagationTime ( );
__declspec(implementation_key(5007)) void IAgVAMCSPropagate::PutMinPropagationTime ( double pVal );
__declspec(implementation_key(5008)) double IAgVAMCSPropagate::GetMaxPropagationTime ( );
__declspec(implementation_key(5009)) void IAgVAMCSPropagate::PutMaxPropagationTime ( double pVal );
__declspec(implementation_key(5010)) VARIANT_BOOL IAgVAMCSPropagate::GetEnableMaxPropagationTime ( );
__declspec(implementation_key(5011)) void IAgVAMCSPropagate::PutEnableMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(5012)) VARIANT_BOOL IAgVAMCSPropagate::GetEnableWarningMessage ( );
__declspec(implementation_key(5013)) void IAgVAMCSPropagate::PutEnableWarningMessage ( VARIANT_BOOL pVal );
__declspec(implementation_key(5014)) HRESULT IAgVAMCSPropagate::EnableControlParameter ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(5015)) HRESULT IAgVAMCSPropagate::DisableControlParameter ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(5016)) VARIANT_BOOL IAgVAMCSPropagate::IsControlParameterEnabled ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(5017)) VARIANT_BOOL IAgVAMCSPropagate::GetControlParametersAvailable ( );
__declspec(implementation_key(5018)) VARIANT_BOOL IAgVAMCSPropagate::GetOverrideMaxPropagationTime ( );
__declspec(implementation_key(5019)) void IAgVAMCSPropagate::PutOverrideMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(5020)) enum AgEVAElementType _IAgVAState::GetElementType ( );
__declspec(implementation_key(5021)) HRESULT _IAgVAState::SetElementType ( enum AgEVAElementType ElementType );
__declspec(implementation_key(5022)) IAgVAElementPtr _IAgVAState::GetElement ( );
__declspec(implementation_key(5023)) _variant_t _IAgVAState::GetEpoch ( );
__declspec(implementation_key(5024)) void _IAgVAState::PutEpoch ( const _variant_t & pEpoch );
__declspec(implementation_key(5025)) _bstr_t _IAgVAState::GetCoordSystemName ( );
__declspec(implementation_key(5026)) double _IAgVAState::GetDryMass ( );
__declspec(implementation_key(5027)) void _IAgVAState::PutDryMass ( double pDryMass );
__declspec(implementation_key(5028)) double _IAgVAState::GetFuelMass ( );
__declspec(implementation_key(5029)) void _IAgVAState::PutFuelMass ( double pFuelMass );
__declspec(implementation_key(5030)) double _IAgVAState::GetDragArea ( );
__declspec(implementation_key(5031)) void _IAgVAState::PutDragArea ( double pFuelMass );
__declspec(implementation_key(5032)) double _IAgVAState::GetSRPArea ( );
__declspec(implementation_key(5033)) void _IAgVAState::PutSRPArea ( double pSRPArea );
__declspec(implementation_key(5034)) double _IAgVAState::GetTankPressure ( );
__declspec(implementation_key(5035)) void _IAgVAState::PutTankPressure ( double pTankPressure );
__declspec(implementation_key(5036)) double _IAgVAState::GetTankTemperature ( );
__declspec(implementation_key(5037)) void _IAgVAState::PutTankTemperature ( double pTankTemperature );
__declspec(implementation_key(5038)) double _IAgVAState::GetFuelDensity ( );
__declspec(implementation_key(5039)) void _IAgVAState::PutFuelDensity ( double pFuelDensity );
__declspec(implementation_key(5040)) double _IAgVAState::GetCr ( );
__declspec(implementation_key(5041)) void _IAgVAState::PutCr ( double pCr );
__declspec(implementation_key(5042)) double _IAgVAState::GetCd ( );
__declspec(implementation_key(5043)) void _IAgVAState::PutCd ( double pCd );
__declspec(implementation_key(5044)) double _IAgVAState::GetRadiationPressureCoeff ( );
__declspec(implementation_key(5045)) void _IAgVAState::PutRadiationPressureCoeff ( double pRadiationPressureCoeff );
__declspec(implementation_key(5046)) double _IAgVAState::GetRadiationPressureArea ( );
__declspec(implementation_key(5047)) void _IAgVAState::PutRadiationPressureArea ( double pRadiationPressureArea );
__declspec(implementation_key(5048)) double _IAgVAState::GetK1 ( );
__declspec(implementation_key(5049)) void _IAgVAState::PutK1 ( double pK1 );
__declspec(implementation_key(5050)) double _IAgVAState::GetK2 ( );
__declspec(implementation_key(5051)) void _IAgVAState::PutK2 ( double pK2 );
__declspec(implementation_key(5052)) IAgVAStatePtr _IAgVAState::GetInFrameName ( _bstr_t FrameName );
__declspec(implementation_key(5053)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAState::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5054)) _bstr_t _IAgVAAccessStoppingCondition::GetName ( );
__declspec(implementation_key(5055)) void _IAgVAAccessStoppingCondition::PutName ( _bstr_t pVal );
__declspec(implementation_key(5056)) _bstr_t _IAgVAAccessStoppingCondition::GetUserComment ( );
__declspec(implementation_key(5057)) void _IAgVAAccessStoppingCondition::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(5058)) _bstr_t _IAgVAAccessStoppingCondition::GetDescription ( );
__declspec(implementation_key(5059)) VARIANT_BOOL _IAgVAAccessStoppingCondition::IsReadOnly ( );
__declspec(implementation_key(5060)) IUnknownPtr _IAgVAAccessStoppingCondition::CloneObject ( );
__declspec(implementation_key(5061)) enum AgEVAStoppingCondition _IAgVAAccessStoppingCondition::GetStoppingConditionType ( );
__declspec(implementation_key(5062)) double _IAgVAAccessStoppingCondition::GetTimeConvergence ( );
__declspec(implementation_key(5063)) void _IAgVAAccessStoppingCondition::PutTimeConvergence ( double pVal );
__declspec(implementation_key(5064)) double _IAgVAAccessStoppingCondition::GetRepeatCount ( );
__declspec(implementation_key(5065)) void _IAgVAAccessStoppingCondition::PutRepeatCount ( double pVal );
__declspec(implementation_key(5066)) VARIANT_BOOL _IAgVAAccessStoppingCondition::GetInherited ( );
__declspec(implementation_key(5067)) void _IAgVAAccessStoppingCondition::PutInherited ( VARIANT_BOOL pVal );
__declspec(implementation_key(5068)) double _IAgVAAccessStoppingCondition::GetMaxTripTimes ( );
__declspec(implementation_key(5069)) void _IAgVAAccessStoppingCondition::PutMaxTripTimes ( double pVal );
__declspec(implementation_key(5070)) _bstr_t _IAgVAAccessStoppingCondition::GetSequence ( );
__declspec(implementation_key(5071)) void _IAgVAAccessStoppingCondition::PutSequence ( _bstr_t pVal );
__declspec(implementation_key(5072)) IAgVAConstraintCollectionPtr _IAgVAAccessStoppingCondition::GetConstraints ( );
__declspec(implementation_key(5073)) enum AgEVAAccessCriterion _IAgVAAccessStoppingCondition::GetCriterion ( );
__declspec(implementation_key(5074)) void _IAgVAAccessStoppingCondition::PutCriterion ( enum AgEVAAccessCriterion pVal );
__declspec(implementation_key(5075)) IAgVAStoppingConditionCollectionPtr _IAgVAAccessStoppingCondition::GetBeforeConditions ( );
__declspec(implementation_key(5076)) enum STKObjects::AgEAberrationType _IAgVAAccessStoppingCondition::GetAberrationType ( );
__declspec(implementation_key(5077)) void _IAgVAAccessStoppingCondition::PutAberrationType ( enum STKObjects::AgEAberrationType pVal );
__declspec(implementation_key(5078)) HRESULT _IAgVAAccessStoppingCondition::SetBaseSelection ( enum AgEVABaseSelection Selection );
__declspec(implementation_key(5079)) enum AgEVABaseSelection _IAgVAAccessStoppingCondition::GetBaseSelectionType ( );
__declspec(implementation_key(5080)) STKObjects::IAgLinkToObjectPtr _IAgVAAccessStoppingCondition::GetBaseSelection ( );
__declspec(implementation_key(5081)) enum STKObjects::AgEIvClockHost _IAgVAAccessStoppingCondition::GetClockHost ( );
__declspec(implementation_key(5082)) void _IAgVAAccessStoppingCondition::PutClockHost ( enum STKObjects::AgEIvClockHost pVal );
__declspec(implementation_key(5083)) enum STKObjects::AgEIvTimeSense _IAgVAAccessStoppingCondition::GetSignalSense ( );
__declspec(implementation_key(5084)) void _IAgVAAccessStoppingCondition::PutSignalSense ( enum STKObjects::AgEIvTimeSense pVal );
__declspec(implementation_key(5085)) STKObjects::IAgLinkToObjectPtr _IAgVAAccessStoppingCondition::GetTargetObject ( );
__declspec(implementation_key(5086)) double _IAgVAAccessStoppingCondition::GetTimeDelayConvergenceTolerance ( );
__declspec(implementation_key(5087)) void _IAgVAAccessStoppingCondition::PutTimeDelayConvergenceTolerance ( double pVal );
__declspec(implementation_key(5088)) VARIANT_BOOL _IAgVAAccessStoppingCondition::GetUseLightTimeDelay ( );
__declspec(implementation_key(5089)) void _IAgVAAccessStoppingCondition::PutUseLightTimeDelay ( VARIANT_BOOL pVal );
__declspec(implementation_key(5090)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAccessStoppingCondition::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5091)) double IAgVAAccessStoppingCondition::GetTimeConvergence ( );
__declspec(implementation_key(5092)) void IAgVAAccessStoppingCondition::PutTimeConvergence ( double pVal );
__declspec(implementation_key(5093)) double IAgVAAccessStoppingCondition::GetRepeatCount ( );
__declspec(implementation_key(5094)) void IAgVAAccessStoppingCondition::PutRepeatCount ( double pVal );
__declspec(implementation_key(5095)) VARIANT_BOOL IAgVAAccessStoppingCondition::GetInherited ( );
__declspec(implementation_key(5096)) void IAgVAAccessStoppingCondition::PutInherited ( VARIANT_BOOL pVal );
__declspec(implementation_key(5097)) double IAgVAAccessStoppingCondition::GetMaxTripTimes ( );
__declspec(implementation_key(5098)) void IAgVAAccessStoppingCondition::PutMaxTripTimes ( double pVal );
__declspec(implementation_key(5099)) _bstr_t IAgVAAccessStoppingCondition::GetSequence ( );
__declspec(implementation_key(5100)) void IAgVAAccessStoppingCondition::PutSequence ( _bstr_t pVal );
__declspec(implementation_key(5101)) IAgVAConstraintCollectionPtr IAgVAAccessStoppingCondition::GetConstraints ( );
__declspec(implementation_key(5102)) enum AgEVAAccessCriterion IAgVAAccessStoppingCondition::GetCriterion ( );
__declspec(implementation_key(5103)) void IAgVAAccessStoppingCondition::PutCriterion ( enum AgEVAAccessCriterion pVal );
__declspec(implementation_key(5104)) IAgVAStoppingConditionCollectionPtr IAgVAAccessStoppingCondition::GetBeforeConditions ( );
__declspec(implementation_key(5105)) enum STKObjects::AgEAberrationType IAgVAAccessStoppingCondition::GetAberrationType ( );
__declspec(implementation_key(5106)) void IAgVAAccessStoppingCondition::PutAberrationType ( enum STKObjects::AgEAberrationType pVal );
__declspec(implementation_key(5107)) HRESULT IAgVAAccessStoppingCondition::SetBaseSelection ( enum AgEVABaseSelection Selection );
__declspec(implementation_key(5108)) enum AgEVABaseSelection IAgVAAccessStoppingCondition::GetBaseSelectionType ( );
__declspec(implementation_key(5109)) STKObjects::IAgLinkToObjectPtr IAgVAAccessStoppingCondition::GetBaseSelection ( );
__declspec(implementation_key(5110)) enum STKObjects::AgEIvClockHost IAgVAAccessStoppingCondition::GetClockHost ( );
__declspec(implementation_key(5111)) void IAgVAAccessStoppingCondition::PutClockHost ( enum STKObjects::AgEIvClockHost pVal );
__declspec(implementation_key(5112)) enum STKObjects::AgEIvTimeSense IAgVAAccessStoppingCondition::GetSignalSense ( );
__declspec(implementation_key(5113)) void IAgVAAccessStoppingCondition::PutSignalSense ( enum STKObjects::AgEIvTimeSense pVal );
__declspec(implementation_key(5114)) STKObjects::IAgLinkToObjectPtr IAgVAAccessStoppingCondition::GetTargetObject ( );
__declspec(implementation_key(5115)) double IAgVAAccessStoppingCondition::GetTimeDelayConvergenceTolerance ( );
__declspec(implementation_key(5116)) void IAgVAAccessStoppingCondition::PutTimeDelayConvergenceTolerance ( double pVal );
__declspec(implementation_key(5117)) VARIANT_BOOL IAgVAAccessStoppingCondition::GetUseLightTimeDelay ( );
__declspec(implementation_key(5118)) void IAgVAAccessStoppingCondition::PutUseLightTimeDelay ( VARIANT_BOOL pVal );
__declspec(implementation_key(5119)) _bstr_t _IAgVALightingStoppingCondition::GetName ( );
__declspec(implementation_key(5120)) void _IAgVALightingStoppingCondition::PutName ( _bstr_t pVal );
__declspec(implementation_key(5121)) _bstr_t _IAgVALightingStoppingCondition::GetUserComment ( );
__declspec(implementation_key(5122)) void _IAgVALightingStoppingCondition::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(5123)) _bstr_t _IAgVALightingStoppingCondition::GetDescription ( );
__declspec(implementation_key(5124)) VARIANT_BOOL _IAgVALightingStoppingCondition::IsReadOnly ( );
__declspec(implementation_key(5125)) IUnknownPtr _IAgVALightingStoppingCondition::CloneObject ( );
__declspec(implementation_key(5126)) enum AgEVAStoppingCondition _IAgVALightingStoppingCondition::GetStoppingConditionType ( );
__declspec(implementation_key(5127)) double _IAgVALightingStoppingCondition::GetMaxTripTimes ( );
__declspec(implementation_key(5128)) void _IAgVALightingStoppingCondition::PutMaxTripTimes ( double pVal );
__declspec(implementation_key(5129)) double _IAgVALightingStoppingCondition::GetRepeatCount ( );
__declspec(implementation_key(5130)) void _IAgVALightingStoppingCondition::PutRepeatCount ( double pVal );
__declspec(implementation_key(5131)) IAgVAConstraintCollectionPtr _IAgVALightingStoppingCondition::GetConstraints ( );
__declspec(implementation_key(5132)) IAgVAStoppingConditionCollectionPtr _IAgVALightingStoppingCondition::GetBeforeConditions ( );
__declspec(implementation_key(5133)) VARIANT_BOOL _IAgVALightingStoppingCondition::GetInherited ( );
__declspec(implementation_key(5134)) void _IAgVALightingStoppingCondition::PutInherited ( VARIANT_BOOL pVal );
__declspec(implementation_key(5135)) _bstr_t _IAgVALightingStoppingCondition::GetSequence ( );
__declspec(implementation_key(5136)) void _IAgVALightingStoppingCondition::PutSequence ( _bstr_t pVal );
__declspec(implementation_key(5137)) enum AgEVALightingCondition _IAgVALightingStoppingCondition::GetCondition ( );
__declspec(implementation_key(5138)) void _IAgVALightingStoppingCondition::PutCondition ( enum AgEVALightingCondition pVal );
__declspec(implementation_key(5139)) enum AgEVAEclipsingBodiesSource _IAgVALightingStoppingCondition::GetEclipsingBodiesListSource ( );
__declspec(implementation_key(5140)) void _IAgVALightingStoppingCondition::PutEclipsingBodiesListSource ( enum AgEVAEclipsingBodiesSource pVal );
__declspec(implementation_key(5141)) HRESULT _IAgVALightingStoppingCondition::AddEclipsingBody ( _bstr_t EclipsingBody );
__declspec(implementation_key(5142)) HRESULT _IAgVALightingStoppingCondition::RemoveEclipsingBody ( _bstr_t EclipsingBody );
__declspec(implementation_key(5143)) SAFEARRAY * _IAgVALightingStoppingCondition::GetEclipsingBodies ( );
__declspec(implementation_key(5144)) SAFEARRAY * _IAgVALightingStoppingCondition::GetAvailableEclipsingBodies ( );
__declspec(implementation_key(5145)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVALightingStoppingCondition::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5146)) double IAgVALightingStoppingCondition::GetMaxTripTimes ( );
__declspec(implementation_key(5147)) void IAgVALightingStoppingCondition::PutMaxTripTimes ( double pVal );
__declspec(implementation_key(5148)) double IAgVALightingStoppingCondition::GetRepeatCount ( );
__declspec(implementation_key(5149)) void IAgVALightingStoppingCondition::PutRepeatCount ( double pVal );
__declspec(implementation_key(5150)) IAgVAConstraintCollectionPtr IAgVALightingStoppingCondition::GetConstraints ( );
__declspec(implementation_key(5151)) IAgVAStoppingConditionCollectionPtr IAgVALightingStoppingCondition::GetBeforeConditions ( );
__declspec(implementation_key(5152)) VARIANT_BOOL IAgVALightingStoppingCondition::GetInherited ( );
__declspec(implementation_key(5153)) void IAgVALightingStoppingCondition::PutInherited ( VARIANT_BOOL pVal );
__declspec(implementation_key(5154)) _bstr_t IAgVALightingStoppingCondition::GetSequence ( );
__declspec(implementation_key(5155)) void IAgVALightingStoppingCondition::PutSequence ( _bstr_t pVal );
__declspec(implementation_key(5156)) enum AgEVALightingCondition IAgVALightingStoppingCondition::GetCondition ( );
__declspec(implementation_key(5157)) void IAgVALightingStoppingCondition::PutCondition ( enum AgEVALightingCondition pVal );
__declspec(implementation_key(5158)) enum AgEVAEclipsingBodiesSource IAgVALightingStoppingCondition::GetEclipsingBodiesListSource ( );
__declspec(implementation_key(5159)) void IAgVALightingStoppingCondition::PutEclipsingBodiesListSource ( enum AgEVAEclipsingBodiesSource pVal );
__declspec(implementation_key(5160)) HRESULT IAgVALightingStoppingCondition::AddEclipsingBody ( _bstr_t EclipsingBody );
__declspec(implementation_key(5161)) HRESULT IAgVALightingStoppingCondition::RemoveEclipsingBody ( _bstr_t EclipsingBody );
__declspec(implementation_key(5162)) SAFEARRAY * IAgVALightingStoppingCondition::GetEclipsingBodies ( );
__declspec(implementation_key(5163)) SAFEARRAY * IAgVALightingStoppingCondition::GetAvailableEclipsingBodies ( );
__declspec(implementation_key(5164)) _bstr_t _IAgVAStoppingCondition::GetName ( );
__declspec(implementation_key(5165)) void _IAgVAStoppingCondition::PutName ( _bstr_t pVal );
__declspec(implementation_key(5166)) _bstr_t _IAgVAStoppingCondition::GetUserComment ( );
__declspec(implementation_key(5167)) void _IAgVAStoppingCondition::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(5168)) _bstr_t _IAgVAStoppingCondition::GetDescription ( );
__declspec(implementation_key(5169)) VARIANT_BOOL _IAgVAStoppingCondition::IsReadOnly ( );
__declspec(implementation_key(5170)) IUnknownPtr _IAgVAStoppingCondition::CloneObject ( );
__declspec(implementation_key(5171)) enum AgEVAStoppingCondition _IAgVAStoppingCondition::GetStoppingConditionType ( );
__declspec(implementation_key(5172)) _variant_t _IAgVAStoppingCondition::GetTrip ( );
__declspec(implementation_key(5173)) void _IAgVAStoppingCondition::PutTrip ( const _variant_t & pVal );
__declspec(implementation_key(5174)) double _IAgVAStoppingCondition::GetTolerance ( );
__declspec(implementation_key(5175)) void _IAgVAStoppingCondition::PutTolerance ( double pVal );
__declspec(implementation_key(5176)) double _IAgVAStoppingCondition::GetRepeatCount ( );
__declspec(implementation_key(5177)) void _IAgVAStoppingCondition::PutRepeatCount ( double pVal );
__declspec(implementation_key(5178)) VARIANT_BOOL _IAgVAStoppingCondition::GetInherited ( );
__declspec(implementation_key(5179)) void _IAgVAStoppingCondition::PutInherited ( VARIANT_BOOL pVal );
__declspec(implementation_key(5180)) double _IAgVAStoppingCondition::GetMaxTripTimes ( );
__declspec(implementation_key(5181)) void _IAgVAStoppingCondition::PutMaxTripTimes ( double pVal );
__declspec(implementation_key(5182)) _bstr_t _IAgVAStoppingCondition::GetCoordSystem ( );
__declspec(implementation_key(5183)) void _IAgVAStoppingCondition::PutCoordSystem ( _bstr_t pVal );
__declspec(implementation_key(5184)) _bstr_t _IAgVAStoppingCondition::GetSequence ( );
__declspec(implementation_key(5185)) void _IAgVAStoppingCondition::PutSequence ( _bstr_t pVal );
__declspec(implementation_key(5186)) IAgVAConstraintCollectionPtr _IAgVAStoppingCondition::GetConstraints ( );
__declspec(implementation_key(5187)) _bstr_t _IAgVAStoppingCondition::GetUserCalcObjectName ( );
__declspec(implementation_key(5188)) void _IAgVAStoppingCondition::PutUserCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(5189)) STKObjects::IAgComponentInfoPtr _IAgVAStoppingCondition::GetUserCalcObject ( );
__declspec(implementation_key(5190)) void _IAgVAStoppingCondition::PutUserCalcObject ( struct STKObjects::IAgComponentInfo * ppComponentInfo );
__declspec(implementation_key(5191)) _bstr_t _IAgVAStoppingCondition::GetCentralBodyName ( );
__declspec(implementation_key(5192)) void _IAgVAStoppingCondition::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(5193)) enum AgEVACriterion _IAgVAStoppingCondition::GetCriterion ( );
__declspec(implementation_key(5194)) void _IAgVAStoppingCondition::PutCriterion ( enum AgEVACriterion pVal );
__declspec(implementation_key(5195)) IAgVAStoppingConditionCollectionPtr _IAgVAStoppingCondition::GetBeforeConditions ( );
__declspec(implementation_key(5196)) _bstr_t _IAgVAStoppingCondition::GetDimension ( );
__declspec(implementation_key(5197)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAStoppingCondition::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5198)) _bstr_t _IAgVAStoppingCondition::GetReferencePoint ( );
__declspec(implementation_key(5199)) void _IAgVAStoppingCondition::PutReferencePoint ( _bstr_t pRetVal );
__declspec(implementation_key(5200)) HRESULT _IAgVAStoppingCondition::CopyUserCalcObjectToClipboard ( );
__declspec(implementation_key(5201)) HRESULT _IAgVAStoppingCondition::PasteUserCalcObjectFromClipboard ( );
__declspec(implementation_key(5202)) _variant_t IAgVAStoppingCondition::GetTrip ( );
__declspec(implementation_key(5203)) void IAgVAStoppingCondition::PutTrip ( const _variant_t & pVal );
__declspec(implementation_key(5204)) double IAgVAStoppingCondition::GetTolerance ( );
__declspec(implementation_key(5205)) void IAgVAStoppingCondition::PutTolerance ( double pVal );
__declspec(implementation_key(5206)) double IAgVAStoppingCondition::GetRepeatCount ( );
__declspec(implementation_key(5207)) void IAgVAStoppingCondition::PutRepeatCount ( double pVal );
__declspec(implementation_key(5208)) VARIANT_BOOL IAgVAStoppingCondition::GetInherited ( );
__declspec(implementation_key(5209)) void IAgVAStoppingCondition::PutInherited ( VARIANT_BOOL pVal );
__declspec(implementation_key(5210)) double IAgVAStoppingCondition::GetMaxTripTimes ( );
__declspec(implementation_key(5211)) void IAgVAStoppingCondition::PutMaxTripTimes ( double pVal );
__declspec(implementation_key(5212)) _bstr_t IAgVAStoppingCondition::GetCoordSystem ( );
__declspec(implementation_key(5213)) void IAgVAStoppingCondition::PutCoordSystem ( _bstr_t pVal );
__declspec(implementation_key(5214)) _bstr_t IAgVAStoppingCondition::GetSequence ( );
__declspec(implementation_key(5215)) void IAgVAStoppingCondition::PutSequence ( _bstr_t pVal );
__declspec(implementation_key(5216)) IAgVAConstraintCollectionPtr IAgVAStoppingCondition::GetConstraints ( );
__declspec(implementation_key(5217)) _bstr_t IAgVAStoppingCondition::GetUserCalcObjectName ( );
__declspec(implementation_key(5218)) void IAgVAStoppingCondition::PutUserCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(5219)) STKObjects::IAgComponentInfoPtr IAgVAStoppingCondition::GetUserCalcObject ( );
__declspec(implementation_key(5220)) void IAgVAStoppingCondition::PutUserCalcObject ( struct STKObjects::IAgComponentInfo * ppComponentInfo );
__declspec(implementation_key(5221)) _bstr_t IAgVAStoppingCondition::GetCentralBodyName ( );
__declspec(implementation_key(5222)) void IAgVAStoppingCondition::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(5223)) enum AgEVACriterion IAgVAStoppingCondition::GetCriterion ( );
__declspec(implementation_key(5224)) void IAgVAStoppingCondition::PutCriterion ( enum AgEVACriterion pVal );
__declspec(implementation_key(5225)) IAgVAStoppingConditionCollectionPtr IAgVAStoppingCondition::GetBeforeConditions ( );
__declspec(implementation_key(5226)) _bstr_t IAgVAStoppingCondition::GetDimension ( );
__declspec(implementation_key(5227)) _bstr_t IAgVAStoppingCondition::GetReferencePoint ( );
__declspec(implementation_key(5228)) void IAgVAStoppingCondition::PutReferencePoint ( _bstr_t pRetVal );
__declspec(implementation_key(5229)) HRESULT IAgVAStoppingCondition::CopyUserCalcObjectToClipboard ( );
__declspec(implementation_key(5230)) HRESULT IAgVAStoppingCondition::PasteUserCalcObjectFromClipboard ( );
__declspec(implementation_key(5231)) VARIANT_BOOL _IAgVAStoppingConditionElement::GetActive ( );
__declspec(implementation_key(5232)) void _IAgVAStoppingConditionElement::PutActive ( VARIANT_BOOL pVal );
__declspec(implementation_key(5233)) HRESULT _IAgVAStoppingConditionElement::EnableControlParameter ( enum AgEVAControlStoppingCondition Param );
__declspec(implementation_key(5234)) HRESULT _IAgVAStoppingConditionElement::DisableControlParameter ( enum AgEVAControlStoppingCondition Param );
__declspec(implementation_key(5235)) VARIANT_BOOL _IAgVAStoppingConditionElement::IsControlParameterEnabled ( enum AgEVAControlStoppingCondition Param );
__declspec(implementation_key(5236)) VARIANT_BOOL _IAgVAStoppingConditionElement::GetControlParametersAvailable ( );
__declspec(implementation_key(5237)) IAgVAStoppingConditionComponentPtr _IAgVAStoppingConditionElement::GetProperties ( );
__declspec(implementation_key(5238)) _bstr_t _IAgVAStoppingConditionElement::GetName ( );
__declspec(implementation_key(5239)) void _IAgVAStoppingConditionElement::PutName ( _bstr_t pVal );
__declspec(implementation_key(5240)) _bstr_t _IAgVAStoppingConditionElement::GetUserComment ( );
__declspec(implementation_key(5241)) void _IAgVAStoppingConditionElement::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(5242)) _bstr_t _IAgVAStoppingConditionElement::GetDescription ( );
__declspec(implementation_key(5243)) VARIANT_BOOL _IAgVAStoppingConditionElement::IsReadOnly ( );
__declspec(implementation_key(5244)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAStoppingConditionElement::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5245)) _bstr_t IAgVAScriptingSegment::GetSegmentName ( );
__declspec(implementation_key(5246)) void IAgVAScriptingSegment::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(5247)) _bstr_t IAgVAScriptingSegment::GetComponentName ( );
__declspec(implementation_key(5248)) void IAgVAScriptingSegment::PutComponentName ( _bstr_t pVal );
__declspec(implementation_key(5249)) _bstr_t IAgVAScriptingSegment::GetAttribute ( );
__declspec(implementation_key(5250)) void IAgVAScriptingSegment::PutAttribute ( _bstr_t pVal );
__declspec(implementation_key(5251)) _bstr_t IAgVAScriptingSegment::GetUnit ( );
__declspec(implementation_key(5252)) void IAgVAScriptingSegment::PutUnit ( _bstr_t pVal );
__declspec(implementation_key(5253)) SAFEARRAY * IAgVAScriptingSegment::GetAvailableSegmentNames ( );
__declspec(implementation_key(5254)) SAFEARRAY * IAgVAScriptingSegment::GetAvailableAttributeValues ( );
__declspec(implementation_key(5255)) VARIANT_BOOL IAgVAScriptingSegment::GetReadOnlyProperty ( );
__declspec(implementation_key(5256)) void IAgVAScriptingSegment::PutReadOnlyProperty ( VARIANT_BOOL pVal );
__declspec(implementation_key(5257)) _bstr_t IAgVAScriptingSegment::GetObjectName ( );
__declspec(implementation_key(5258)) void IAgVAScriptingSegment::PutObjectName ( _bstr_t pVal );
__declspec(implementation_key(5259)) SAFEARRAY * IAgVAScriptingSegment::GetAvailableObjectNames ( );
__declspec(implementation_key(5260)) IAgVAScriptingSegmentPtr IAgVAScriptingSegmentCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(5261)) IAgVAScriptingSegmentPtr IAgVAScriptingSegmentCollection::Add ( _bstr_t ComponentName );
__declspec(implementation_key(5262)) HRESULT IAgVAScriptingSegmentCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(5263)) HRESULT IAgVAScriptingSegmentCollection::RemoveAll ( );
__declspec(implementation_key(5264)) IUnknownPtr IAgVAScriptingSegmentCollection::Get_NewEnum ( );
__declspec(implementation_key(5265)) long IAgVAScriptingSegmentCollection::GetCount ( );
__declspec(implementation_key(5266)) STKUtil::IAgRuntimeTypeInfoPtr IAgVAScriptingSegmentCollection::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5267)) HRESULT IAgVAScriptingSegmentCollection::Cut ( const _variant_t & IndexOrName );
__declspec(implementation_key(5268)) IAgVAScriptingSegmentPtr IAgVAScriptingSegmentCollection::Paste ( );
__declspec(implementation_key(5269)) IAgVAScriptingSegmentPtr IAgVAScriptingSegmentCollection::InsertCopy ( struct IAgVAScriptingSegment * ObjProperty );
__declspec(implementation_key(5270)) _bstr_t IAgVAScriptingCalcObject::GetComponentName ( );
__declspec(implementation_key(5271)) void IAgVAScriptingCalcObject::PutComponentName ( _bstr_t pVal );
__declspec(implementation_key(5272)) _bstr_t IAgVAScriptingCalcObject::GetCalcObjectName ( );
__declspec(implementation_key(5273)) void IAgVAScriptingCalcObject::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(5274)) STKObjects::IAgComponentInfoPtr IAgVAScriptingCalcObject::GetCalcObject ( );
__declspec(implementation_key(5275)) void IAgVAScriptingCalcObject::PutCalcObject ( struct STKObjects::IAgComponentInfo * ppRetVal );
__declspec(implementation_key(5276)) _bstr_t IAgVAScriptingCalcObject::GetUnit ( );
__declspec(implementation_key(5277)) void IAgVAScriptingCalcObject::PutUnit ( _bstr_t pVal );
__declspec(implementation_key(5278)) HRESULT IAgVAScriptingCalcObject::CopyCalcObjectToClipboard ( );
__declspec(implementation_key(5279)) HRESULT IAgVAScriptingCalcObject::PasteCalcObjectFromClipboard ( );
__declspec(implementation_key(5280)) IAgVAScriptingCalcObjectPtr IAgVAScriptingCalcObjectCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(5281)) IAgVAScriptingCalcObjectPtr IAgVAScriptingCalcObjectCollection::Add ( _bstr_t ComponentName );
__declspec(implementation_key(5282)) HRESULT IAgVAScriptingCalcObjectCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(5283)) HRESULT IAgVAScriptingCalcObjectCollection::RemoveAll ( );
__declspec(implementation_key(5284)) IUnknownPtr IAgVAScriptingCalcObjectCollection::Get_NewEnum ( );
__declspec(implementation_key(5285)) long IAgVAScriptingCalcObjectCollection::GetCount ( );
__declspec(implementation_key(5286)) HRESULT IAgVAScriptingCalcObjectCollection::Cut ( const _variant_t & IndexOrName );
__declspec(implementation_key(5287)) IAgVAScriptingCalcObjectPtr IAgVAScriptingCalcObjectCollection::Paste ( );
__declspec(implementation_key(5288)) IAgVAScriptingCalcObjectPtr IAgVAScriptingCalcObjectCollection::InsertCopy ( struct IAgVAScriptingCalcObject * CalcObj );
__declspec(implementation_key(5289)) _bstr_t IAgVAScriptingParameterEnumerationChoice::GetName ( );
__declspec(implementation_key(5290)) void IAgVAScriptingParameterEnumerationChoice::PutName ( _bstr_t pVal );
__declspec(implementation_key(5291)) long IAgVAScriptingParameterEnumerationChoice::GetValue ( );
__declspec(implementation_key(5292)) void IAgVAScriptingParameterEnumerationChoice::PutValue ( long pVal );
__declspec(implementation_key(5293)) IAgVAScriptingParameterEnumerationChoicePtr IAgVAScriptingParameterEnumerationChoiceCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(5294)) IAgVAScriptingParameterEnumerationChoicePtr IAgVAScriptingParameterEnumerationChoiceCollection::Add ( _bstr_t ChoiceName );
__declspec(implementation_key(5295)) HRESULT IAgVAScriptingParameterEnumerationChoiceCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(5296)) IUnknownPtr IAgVAScriptingParameterEnumerationChoiceCollection::Get_NewEnum ( );
__declspec(implementation_key(5297)) long IAgVAScriptingParameterEnumerationChoiceCollection::GetCount ( );
__declspec(implementation_key(5298)) HRESULT IAgVAScriptingParameterEnumerationChoiceCollection::Cut ( const _variant_t & IndexOrName );
__declspec(implementation_key(5299)) IAgVAScriptingParameterEnumerationChoicePtr IAgVAScriptingParameterEnumerationChoiceCollection::Paste ( );
__declspec(implementation_key(5300)) IAgVAScriptingParameterEnumerationChoicePtr IAgVAScriptingParameterEnumerationChoiceCollection::InsertCopy ( struct IAgVAScriptingParameterEnumerationChoice * Choice );
__declspec(implementation_key(5301)) STKUtil::IAgRuntimeTypeInfoPtr IAgVAScriptingParameterEnumerationChoiceCollection::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5302)) _bstr_t IAgVAScriptingParameter::GetName ( );
__declspec(implementation_key(5303)) void IAgVAScriptingParameter::PutName ( _bstr_t pVal );
__declspec(implementation_key(5304)) double IAgVAScriptingParameter::GetValue ( );
__declspec(implementation_key(5305)) void IAgVAScriptingParameter::PutValue ( double pVal );
__declspec(implementation_key(5306)) _variant_t IAgVAScriptingParameter::GetParamValue ( );
__declspec(implementation_key(5307)) void IAgVAScriptingParameter::PutParamValue ( const _variant_t & pVal );
__declspec(implementation_key(5308)) _bstr_t IAgVAScriptingParameter::GetUnit ( );
__declspec(implementation_key(5309)) void IAgVAScriptingParameter::PutUnit ( _bstr_t pVal );
__declspec(implementation_key(5310)) enum AgEVAScriptingParameterType IAgVAScriptingParameter::GetType ( );
__declspec(implementation_key(5311)) void IAgVAScriptingParameter::PutType ( enum AgEVAScriptingParameterType pVal );
__declspec(implementation_key(5312)) VARIANT_BOOL IAgVAScriptingParameter::GetInheritValue ( );
__declspec(implementation_key(5313)) void IAgVAScriptingParameter::PutInheritValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(5314)) _bstr_t IAgVAScriptingParameter::GetUserComment ( );
__declspec(implementation_key(5315)) void IAgVAScriptingParameter::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(5316)) _bstr_t IAgVAScriptingParameter::GetDimension ( );
__declspec(implementation_key(5317)) void IAgVAScriptingParameter::PutDimension ( _bstr_t pVal );
__declspec(implementation_key(5318)) IAgVAScriptingParameterEnumerationChoiceCollectionPtr IAgVAScriptingParameter::GetEnumerationChoices ( );
__declspec(implementation_key(5319)) VARIANT_BOOL IAgVAScriptingParameter::GetUseMinValue ( );
__declspec(implementation_key(5320)) void IAgVAScriptingParameter::PutUseMinValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(5321)) _variant_t IAgVAScriptingParameter::GetMinValue ( );
__declspec(implementation_key(5322)) void IAgVAScriptingParameter::PutMinValue ( const _variant_t & pVal );
__declspec(implementation_key(5323)) VARIANT_BOOL IAgVAScriptingParameter::GetUseMaxValue ( );
__declspec(implementation_key(5324)) void IAgVAScriptingParameter::PutUseMaxValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(5325)) _variant_t IAgVAScriptingParameter::GetMaxValue ( );
__declspec(implementation_key(5326)) void IAgVAScriptingParameter::PutMaxValue ( const _variant_t & pVal );
__declspec(implementation_key(5327)) IAgVAScriptingParameterPtr IAgVAScriptingParameterCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(5328)) IAgVAScriptingParameterPtr IAgVAScriptingParameterCollection::Add ( _bstr_t ParameterName );
__declspec(implementation_key(5329)) HRESULT IAgVAScriptingParameterCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(5330)) HRESULT IAgVAScriptingParameterCollection::RemoveAll ( );
__declspec(implementation_key(5331)) IUnknownPtr IAgVAScriptingParameterCollection::Get_NewEnum ( );
__declspec(implementation_key(5332)) long IAgVAScriptingParameterCollection::GetCount ( );
__declspec(implementation_key(5333)) STKUtil::IAgRuntimeTypeInfoPtr IAgVAScriptingParameterCollection::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5334)) HRESULT IAgVAScriptingParameterCollection::Cut ( const _variant_t & IndexOrName );
__declspec(implementation_key(5335)) IAgVAScriptingParameterPtr IAgVAScriptingParameterCollection::Paste ( );
__declspec(implementation_key(5336)) IAgVAScriptingParameterPtr IAgVAScriptingParameterCollection::InsertCopy ( struct IAgVAScriptingParameter * Parameter );
__declspec(implementation_key(5337)) VARIANT_BOOL IAgVAScriptingTool::GetEnable ( );
__declspec(implementation_key(5338)) void IAgVAScriptingTool::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(5339)) IAgVAScriptingSegmentCollectionPtr IAgVAScriptingTool::GetSegmentProperties ( );
__declspec(implementation_key(5340)) IAgVAScriptingCalcObjectCollectionPtr IAgVAScriptingTool::GetCalcObjects ( );
__declspec(implementation_key(5341)) IAgVAScriptingParameterCollectionPtr IAgVAScriptingTool::GetParameters ( );
__declspec(implementation_key(5342)) enum AgEVALanguage IAgVAScriptingTool::GetLanguageType ( );
__declspec(implementation_key(5343)) void IAgVAScriptingTool::PutLanguageType ( enum AgEVALanguage pVal );
__declspec(implementation_key(5344)) HRESULT IAgVAScriptingTool::ScriptText ( _bstr_t Script );
__declspec(implementation_key(5345)) HRESULT IAgVAScriptingTool::CopyToClipboard ( );
__declspec(implementation_key(5346)) HRESULT IAgVAScriptingTool::PasteFromClipboard ( );
__declspec(implementation_key(5347)) VARIANT_BOOL IAgVAScriptingTool::GetPreIterate ( );
__declspec(implementation_key(5348)) void IAgVAScriptingTool::PutPreIterate ( VARIANT_BOOL pVal );
__declspec(implementation_key(5349)) enum AgEVASegmentType _IAgVAMCSSequence::GetType ( );
__declspec(implementation_key(5350)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSSequence::GetProperties ( );
__declspec(implementation_key(5351)) IAgVAStatePtr _IAgVAMCSSequence::GetInitialState ( );
__declspec(implementation_key(5352)) IAgVAStatePtr _IAgVAMCSSequence::GetFinalState ( );
__declspec(implementation_key(5353)) _variant_t _IAgVAMCSSequence::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(5354)) IAgVAStatePtr _IAgVAMCSSequence::Run ( );
__declspec(implementation_key(5355)) IAgVACalcObjectCollectionPtr _IAgVAMCSSequence::GetResults ( );
__declspec(implementation_key(5356)) STKObjects::IAgDrResultPtr _IAgVAMCSSequence::GetExecSummary ( );
__declspec(implementation_key(5357)) long _IAgVAMCSSequence::GetRepeatCount ( );
__declspec(implementation_key(5358)) void _IAgVAMCSSequence::PutRepeatCount ( long pVal );
__declspec(implementation_key(5359)) VARIANT_BOOL _IAgVAMCSSequence::GetGenerateEphemeris ( );
__declspec(implementation_key(5360)) void _IAgVAMCSSequence::PutGenerateEphemeris ( VARIANT_BOOL pVal );
__declspec(implementation_key(5361)) IAgVAMCSSegmentCollectionPtr _IAgVAMCSSequence::GetSegments ( );
__declspec(implementation_key(5362)) enum AgEVASequenceStateToPass _IAgVAMCSSequence::GetSequenceStateToPass ( );
__declspec(implementation_key(5363)) void _IAgVAMCSSequence::PutSequenceStateToPass ( enum AgEVASequenceStateToPass pVal );
__declspec(implementation_key(5364)) IAgVAScriptingToolPtr _IAgVAMCSSequence::GetScriptingTool ( );
__declspec(implementation_key(5365)) HRESULT _IAgVAMCSSequence::ApplyScript ( );
__declspec(implementation_key(5366)) _bstr_t _IAgVAMCSSequence::GetName ( );
__declspec(implementation_key(5367)) void _IAgVAMCSSequence::PutName ( _bstr_t pVal );
__declspec(implementation_key(5368)) _bstr_t _IAgVAMCSSequence::GetUserComment ( );
__declspec(implementation_key(5369)) void _IAgVAMCSSequence::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(5370)) _bstr_t _IAgVAMCSSequence::GetDescription ( );
__declspec(implementation_key(5371)) VARIANT_BOOL _IAgVAMCSSequence::IsReadOnly ( );
__declspec(implementation_key(5372)) IUnknownPtr _IAgVAMCSSequence::CloneObject ( );
__declspec(implementation_key(5373)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSSequence::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5374)) long IAgVAMCSSequence::GetRepeatCount ( );
__declspec(implementation_key(5375)) void IAgVAMCSSequence::PutRepeatCount ( long pVal );
__declspec(implementation_key(5376)) VARIANT_BOOL IAgVAMCSSequence::GetGenerateEphemeris ( );
__declspec(implementation_key(5377)) void IAgVAMCSSequence::PutGenerateEphemeris ( VARIANT_BOOL pVal );
__declspec(implementation_key(5378)) IAgVAMCSSegmentCollectionPtr IAgVAMCSSequence::GetSegments ( );
__declspec(implementation_key(5379)) enum AgEVASequenceStateToPass IAgVAMCSSequence::GetSequenceStateToPass ( );
__declspec(implementation_key(5380)) void IAgVAMCSSequence::PutSequenceStateToPass ( enum AgEVASequenceStateToPass pVal );
__declspec(implementation_key(5381)) IAgVAScriptingToolPtr IAgVAMCSSequence::GetScriptingTool ( );
__declspec(implementation_key(5382)) HRESULT IAgVAMCSSequence::ApplyScript ( );
__declspec(implementation_key(5383)) enum AgEVASegmentType _IAgVAMCSBackwardSequence::GetType ( );
__declspec(implementation_key(5384)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSBackwardSequence::GetProperties ( );
__declspec(implementation_key(5385)) IAgVAStatePtr _IAgVAMCSBackwardSequence::GetInitialState ( );
__declspec(implementation_key(5386)) IAgVAStatePtr _IAgVAMCSBackwardSequence::GetFinalState ( );
__declspec(implementation_key(5387)) _variant_t _IAgVAMCSBackwardSequence::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(5388)) IAgVAStatePtr _IAgVAMCSBackwardSequence::Run ( );
__declspec(implementation_key(5389)) IAgVACalcObjectCollectionPtr _IAgVAMCSBackwardSequence::GetResults ( );
__declspec(implementation_key(5390)) STKObjects::IAgDrResultPtr _IAgVAMCSBackwardSequence::GetExecSummary ( );
__declspec(implementation_key(5391)) long _IAgVAMCSBackwardSequence::GetRepeatCount ( );
__declspec(implementation_key(5392)) void _IAgVAMCSBackwardSequence::PutRepeatCount ( long pVal );
__declspec(implementation_key(5393)) VARIANT_BOOL _IAgVAMCSBackwardSequence::GetGenerateEphemeris ( );
__declspec(implementation_key(5394)) void _IAgVAMCSBackwardSequence::PutGenerateEphemeris ( VARIANT_BOOL pVal );
__declspec(implementation_key(5395)) IAgVAMCSSegmentCollectionPtr _IAgVAMCSBackwardSequence::GetSegments ( );
__declspec(implementation_key(5396)) enum AgEVASequenceStateToPass _IAgVAMCSBackwardSequence::GetSequenceStateToPass ( );
__declspec(implementation_key(5397)) void _IAgVAMCSBackwardSequence::PutSequenceStateToPass ( enum AgEVASequenceStateToPass pVal );
__declspec(implementation_key(5398)) IAgVAScriptingToolPtr _IAgVAMCSBackwardSequence::GetScriptingTool ( );
__declspec(implementation_key(5399)) HRESULT _IAgVAMCSBackwardSequence::ApplyScript ( );
__declspec(implementation_key(5400)) _bstr_t _IAgVAMCSBackwardSequence::GetName ( );
__declspec(implementation_key(5401)) void _IAgVAMCSBackwardSequence::PutName ( _bstr_t pVal );
__declspec(implementation_key(5402)) _bstr_t _IAgVAMCSBackwardSequence::GetUserComment ( );
__declspec(implementation_key(5403)) void _IAgVAMCSBackwardSequence::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(5404)) _bstr_t _IAgVAMCSBackwardSequence::GetDescription ( );
__declspec(implementation_key(5405)) VARIANT_BOOL _IAgVAMCSBackwardSequence::IsReadOnly ( );
__declspec(implementation_key(5406)) IUnknownPtr _IAgVAMCSBackwardSequence::CloneObject ( );
__declspec(implementation_key(5407)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSBackwardSequence::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5408)) enum AgEVABurnoutOptions IAgVABurnoutVelocity::GetBurnoutOption ( );
__declspec(implementation_key(5409)) void IAgVABurnoutVelocity::PutBurnoutOption ( enum AgEVABurnoutOptions pVal );
__declspec(implementation_key(5410)) double IAgVABurnoutVelocity::GetFixedVelocity ( );
__declspec(implementation_key(5411)) void IAgVABurnoutVelocity::PutFixedVelocity ( double pVal );
__declspec(implementation_key(5412)) double IAgVABurnoutVelocity::GetInertialVelocity ( );
__declspec(implementation_key(5413)) void IAgVABurnoutVelocity::PutInertialVelocity ( double pVal );
__declspec(implementation_key(5414)) _variant_t IAgVABurnoutVelocity::GetInertialVelocityAzimuth ( );
__declspec(implementation_key(5415)) void IAgVABurnoutVelocity::PutInertialVelocityAzimuth ( const _variant_t & pVal );
__declspec(implementation_key(5416)) _variant_t IAgVABurnoutVelocity::GetInertialHorizontalFPA ( );
__declspec(implementation_key(5417)) void IAgVABurnoutVelocity::PutInertialHorizontalFPA ( const _variant_t & pVal );
__declspec(implementation_key(5418)) enum AgEVASegmentType _IAgVAMCSLaunch::GetType ( );
__declspec(implementation_key(5419)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSLaunch::GetProperties ( );
__declspec(implementation_key(5420)) IAgVAStatePtr _IAgVAMCSLaunch::GetInitialState ( );
__declspec(implementation_key(5421)) IAgVAStatePtr _IAgVAMCSLaunch::GetFinalState ( );
__declspec(implementation_key(5422)) _variant_t _IAgVAMCSLaunch::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(5423)) IAgVAStatePtr _IAgVAMCSLaunch::Run ( );
__declspec(implementation_key(5424)) IAgVACalcObjectCollectionPtr _IAgVAMCSLaunch::GetResults ( );
__declspec(implementation_key(5425)) STKObjects::IAgDrResultPtr _IAgVAMCSLaunch::GetExecSummary ( );
__declspec(implementation_key(5426)) _bstr_t _IAgVAMCSLaunch::GetCentralBodyName ( );
__declspec(implementation_key(5427)) void _IAgVAMCSLaunch::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(5428)) double _IAgVAMCSLaunch::GetStepSize ( );
__declspec(implementation_key(5429)) void _IAgVAMCSLaunch::PutStepSize ( double pVal );
__declspec(implementation_key(5430)) double _IAgVAMCSLaunch::GetPreLaunchTime ( );
__declspec(implementation_key(5431)) void _IAgVAMCSLaunch::PutPreLaunchTime ( double pVal );
__declspec(implementation_key(5432)) _variant_t _IAgVAMCSLaunch::GetEpoch ( );
__declspec(implementation_key(5433)) void _IAgVAMCSLaunch::PutEpoch ( const _variant_t & pVal );
__declspec(implementation_key(5434)) HRESULT _IAgVAMCSLaunch::EnableControlParameter ( enum AgEVAControlLaunch Param );
__declspec(implementation_key(5435)) HRESULT _IAgVAMCSLaunch::DisableControlParameter ( enum AgEVAControlLaunch Param );
__declspec(implementation_key(5436)) VARIANT_BOOL _IAgVAMCSLaunch::IsControlParameterEnabled ( enum AgEVAControlLaunch Param );
__declspec(implementation_key(5437)) VARIANT_BOOL _IAgVAMCSLaunch::GetControlParametersAvailable ( );
__declspec(implementation_key(5438)) double _IAgVAMCSLaunch::GetInitialAcceleration ( );
__declspec(implementation_key(5439)) void _IAgVAMCSLaunch::PutInitialAcceleration ( double pVal );
__declspec(implementation_key(5440)) IAgVASpacecraftParametersPtr _IAgVAMCSLaunch::GetSpacecraftParameters ( );
__declspec(implementation_key(5441)) IAgVAFuelTankPtr _IAgVAMCSLaunch::GetFuelTank ( );
__declspec(implementation_key(5442)) enum AgEVALaunchDisplaySystem _IAgVAMCSLaunch::GetDisplaySystemType ( );
__declspec(implementation_key(5443)) HRESULT _IAgVAMCSLaunch::SetDisplaySystemType ( enum AgEVALaunchDisplaySystem DisplaySystemType );
__declspec(implementation_key(5444)) IAgVADisplaySystemPtr _IAgVAMCSLaunch::GetDisplaySystem ( );
__declspec(implementation_key(5445)) enum AgEVAAscentType _IAgVAMCSLaunch::GetAscentType ( );
__declspec(implementation_key(5446)) void _IAgVAMCSLaunch::PutAscentType ( enum AgEVAAscentType pVal );
__declspec(implementation_key(5447)) double _IAgVAMCSLaunch::GetTimeOfFlight ( );
__declspec(implementation_key(5448)) void _IAgVAMCSLaunch::PutTimeOfFlight ( double pVal );
__declspec(implementation_key(5449)) enum AgEVABurnoutType _IAgVAMCSLaunch::GetBurnoutType ( );
__declspec(implementation_key(5450)) HRESULT _IAgVAMCSLaunch::SetBurnoutType ( enum AgEVABurnoutType BurnoutType );
__declspec(implementation_key(5451)) IAgVABurnoutPtr _IAgVAMCSLaunch::GetBurnout ( );
__declspec(implementation_key(5452)) IAgVABurnoutVelocityPtr _IAgVAMCSLaunch::GetBurnoutVelocity ( );
__declspec(implementation_key(5453)) VARIANT_BOOL _IAgVAMCSLaunch::GetUsePreviousSegmentState ( );
__declspec(implementation_key(5454)) void _IAgVAMCSLaunch::PutUsePreviousSegmentState ( VARIANT_BOOL pVal );
__declspec(implementation_key(5455)) _bstr_t _IAgVAMCSLaunch::GetName ( );
__declspec(implementation_key(5456)) void _IAgVAMCSLaunch::PutName ( _bstr_t pVal );
__declspec(implementation_key(5457)) _bstr_t _IAgVAMCSLaunch::GetUserComment ( );
__declspec(implementation_key(5458)) void _IAgVAMCSLaunch::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(5459)) _bstr_t _IAgVAMCSLaunch::GetDescription ( );
__declspec(implementation_key(5460)) VARIANT_BOOL _IAgVAMCSLaunch::IsReadOnly ( );
__declspec(implementation_key(5461)) IUnknownPtr _IAgVAMCSLaunch::CloneObject ( );
__declspec(implementation_key(5462)) VARIANT_BOOL _IAgVAMCSLaunch::GetSetMetEpoch ( );
__declspec(implementation_key(5463)) void _IAgVAMCSLaunch::PutSetMetEpoch ( VARIANT_BOOL pVal );
__declspec(implementation_key(5464)) IAgVAUserVariableCollectionPtr _IAgVAMCSLaunch::GetUserVariables ( );
__declspec(implementation_key(5465)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSLaunch::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5466)) _bstr_t IAgVAMCSLaunch::GetCentralBodyName ( );
__declspec(implementation_key(5467)) void IAgVAMCSLaunch::PutCentralBodyName ( _bstr_t pVal );
__declspec(implementation_key(5468)) double IAgVAMCSLaunch::GetStepSize ( );
__declspec(implementation_key(5469)) void IAgVAMCSLaunch::PutStepSize ( double pVal );
__declspec(implementation_key(5470)) double IAgVAMCSLaunch::GetPreLaunchTime ( );
__declspec(implementation_key(5471)) void IAgVAMCSLaunch::PutPreLaunchTime ( double pVal );
__declspec(implementation_key(5472)) _variant_t IAgVAMCSLaunch::GetEpoch ( );
__declspec(implementation_key(5473)) void IAgVAMCSLaunch::PutEpoch ( const _variant_t & pVal );
__declspec(implementation_key(5474)) HRESULT IAgVAMCSLaunch::EnableControlParameter ( enum AgEVAControlLaunch Param );
__declspec(implementation_key(5475)) HRESULT IAgVAMCSLaunch::DisableControlParameter ( enum AgEVAControlLaunch Param );
__declspec(implementation_key(5476)) VARIANT_BOOL IAgVAMCSLaunch::IsControlParameterEnabled ( enum AgEVAControlLaunch Param );
__declspec(implementation_key(5477)) VARIANT_BOOL IAgVAMCSLaunch::GetControlParametersAvailable ( );
__declspec(implementation_key(5478)) double IAgVAMCSLaunch::GetInitialAcceleration ( );
__declspec(implementation_key(5479)) void IAgVAMCSLaunch::PutInitialAcceleration ( double pVal );
__declspec(implementation_key(5480)) IAgVASpacecraftParametersPtr IAgVAMCSLaunch::GetSpacecraftParameters ( );
__declspec(implementation_key(5481)) IAgVAFuelTankPtr IAgVAMCSLaunch::GetFuelTank ( );
__declspec(implementation_key(5482)) enum AgEVALaunchDisplaySystem IAgVAMCSLaunch::GetDisplaySystemType ( );
__declspec(implementation_key(5483)) HRESULT IAgVAMCSLaunch::SetDisplaySystemType ( enum AgEVALaunchDisplaySystem DisplaySystemType );
__declspec(implementation_key(5484)) IAgVADisplaySystemPtr IAgVAMCSLaunch::GetDisplaySystem ( );
__declspec(implementation_key(5485)) enum AgEVAAscentType IAgVAMCSLaunch::GetAscentType ( );
__declspec(implementation_key(5486)) void IAgVAMCSLaunch::PutAscentType ( enum AgEVAAscentType pVal );
__declspec(implementation_key(5487)) double IAgVAMCSLaunch::GetTimeOfFlight ( );
__declspec(implementation_key(5488)) void IAgVAMCSLaunch::PutTimeOfFlight ( double pVal );
__declspec(implementation_key(5489)) enum AgEVABurnoutType IAgVAMCSLaunch::GetBurnoutType ( );
__declspec(implementation_key(5490)) HRESULT IAgVAMCSLaunch::SetBurnoutType ( enum AgEVABurnoutType BurnoutType );
__declspec(implementation_key(5491)) IAgVABurnoutPtr IAgVAMCSLaunch::GetBurnout ( );
__declspec(implementation_key(5492)) IAgVABurnoutVelocityPtr IAgVAMCSLaunch::GetBurnoutVelocity ( );
__declspec(implementation_key(5493)) VARIANT_BOOL IAgVAMCSLaunch::GetUsePreviousSegmentState ( );
__declspec(implementation_key(5494)) void IAgVAMCSLaunch::PutUsePreviousSegmentState ( VARIANT_BOOL pVal );
__declspec(implementation_key(5495)) VARIANT_BOOL IAgVAMCSLaunch::GetSetMetEpoch ( );
__declspec(implementation_key(5496)) void IAgVAMCSLaunch::PutSetMetEpoch ( VARIANT_BOOL pVal );
__declspec(implementation_key(5497)) IAgVAUserVariableCollectionPtr IAgVAMCSLaunch::GetUserVariables ( );
__declspec(implementation_key(5498)) _variant_t _IAgVADisplaySystemGeodetic::GetLatitude ( );
__declspec(implementation_key(5499)) void _IAgVADisplaySystemGeodetic::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(5500)) _variant_t _IAgVADisplaySystemGeodetic::GetLongitude ( );
__declspec(implementation_key(5501)) void _IAgVADisplaySystemGeodetic::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(5502)) double _IAgVADisplaySystemGeodetic::GetAltitude ( );
__declspec(implementation_key(5503)) void _IAgVADisplaySystemGeodetic::PutAltitude ( double pVal );
__declspec(implementation_key(5504)) _variant_t IAgVADisplaySystemGeodetic::GetLatitude ( );
__declspec(implementation_key(5505)) void IAgVADisplaySystemGeodetic::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(5506)) _variant_t IAgVADisplaySystemGeodetic::GetLongitude ( );
__declspec(implementation_key(5507)) void IAgVADisplaySystemGeodetic::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(5508)) double IAgVADisplaySystemGeodetic::GetAltitude ( );
__declspec(implementation_key(5509)) void IAgVADisplaySystemGeodetic::PutAltitude ( double pVal );
__declspec(implementation_key(5510)) _variant_t _IAgVADisplaySystemGeocentric::GetLatitude ( );
__declspec(implementation_key(5511)) void _IAgVADisplaySystemGeocentric::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(5512)) _variant_t _IAgVADisplaySystemGeocentric::GetLongitude ( );
__declspec(implementation_key(5513)) void _IAgVADisplaySystemGeocentric::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(5514)) double _IAgVADisplaySystemGeocentric::GetRadius ( );
__declspec(implementation_key(5515)) void _IAgVADisplaySystemGeocentric::PutRadius ( double pVal );
__declspec(implementation_key(5516)) _variant_t IAgVADisplaySystemGeocentric::GetLatitude ( );
__declspec(implementation_key(5517)) void IAgVADisplaySystemGeocentric::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(5518)) _variant_t IAgVADisplaySystemGeocentric::GetLongitude ( );
__declspec(implementation_key(5519)) void IAgVADisplaySystemGeocentric::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(5520)) double IAgVADisplaySystemGeocentric::GetRadius ( );
__declspec(implementation_key(5521)) void IAgVADisplaySystemGeocentric::PutRadius ( double pVal );
__declspec(implementation_key(5522)) _variant_t _IAgVABurnoutGeodetic::GetLatitude ( );
__declspec(implementation_key(5523)) void _IAgVABurnoutGeodetic::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(5524)) _variant_t _IAgVABurnoutGeodetic::GetLongitude ( );
__declspec(implementation_key(5525)) void _IAgVABurnoutGeodetic::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(5526)) double _IAgVABurnoutGeodetic::GetAltitude ( );
__declspec(implementation_key(5527)) void _IAgVABurnoutGeodetic::PutAltitude ( double pVal );
__declspec(implementation_key(5528)) _variant_t IAgVABurnoutGeodetic::GetLatitude ( );
__declspec(implementation_key(5529)) void IAgVABurnoutGeodetic::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(5530)) _variant_t IAgVABurnoutGeodetic::GetLongitude ( );
__declspec(implementation_key(5531)) void IAgVABurnoutGeodetic::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(5532)) double IAgVABurnoutGeodetic::GetAltitude ( );
__declspec(implementation_key(5533)) void IAgVABurnoutGeodetic::PutAltitude ( double pVal );
__declspec(implementation_key(5534)) _variant_t _IAgVABurnoutGeocentric::GetLatitude ( );
__declspec(implementation_key(5535)) void _IAgVABurnoutGeocentric::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(5536)) _variant_t _IAgVABurnoutGeocentric::GetLongitude ( );
__declspec(implementation_key(5537)) void _IAgVABurnoutGeocentric::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(5538)) double _IAgVABurnoutGeocentric::GetRadius ( );
__declspec(implementation_key(5539)) void _IAgVABurnoutGeocentric::PutRadius ( double pVal );
__declspec(implementation_key(5540)) _variant_t IAgVABurnoutGeocentric::GetLatitude ( );
__declspec(implementation_key(5541)) void IAgVABurnoutGeocentric::PutLatitude ( const _variant_t & pVal );
__declspec(implementation_key(5542)) _variant_t IAgVABurnoutGeocentric::GetLongitude ( );
__declspec(implementation_key(5543)) void IAgVABurnoutGeocentric::PutLongitude ( const _variant_t & pVal );
__declspec(implementation_key(5544)) double IAgVABurnoutGeocentric::GetRadius ( );
__declspec(implementation_key(5545)) void IAgVABurnoutGeocentric::PutRadius ( double pVal );
__declspec(implementation_key(5546)) _variant_t _IAgVABurnoutLaunchAzAlt::GetAzimuth ( );
__declspec(implementation_key(5547)) void _IAgVABurnoutLaunchAzAlt::PutAzimuth ( const _variant_t & pVal );
__declspec(implementation_key(5548)) double _IAgVABurnoutLaunchAzAlt::GetDownRangeDist ( );
__declspec(implementation_key(5549)) void _IAgVABurnoutLaunchAzAlt::PutDownRangeDist ( double pVal );
__declspec(implementation_key(5550)) double _IAgVABurnoutLaunchAzAlt::GetAltitudeRadius ( );
__declspec(implementation_key(5551)) void _IAgVABurnoutLaunchAzAlt::PutAltitudeRadius ( double pVal );
__declspec(implementation_key(5552)) _variant_t IAgVABurnoutLaunchAzAlt::GetAzimuth ( );
__declspec(implementation_key(5553)) void IAgVABurnoutLaunchAzAlt::PutAzimuth ( const _variant_t & pVal );
__declspec(implementation_key(5554)) double IAgVABurnoutLaunchAzAlt::GetDownRangeDist ( );
__declspec(implementation_key(5555)) void IAgVABurnoutLaunchAzAlt::PutDownRangeDist ( double pVal );
__declspec(implementation_key(5556)) double IAgVABurnoutLaunchAzAlt::GetAltitudeRadius ( );
__declspec(implementation_key(5557)) void IAgVABurnoutLaunchAzAlt::PutAltitudeRadius ( double pVal );
__declspec(implementation_key(5558)) _variant_t _IAgVABurnoutLaunchAzRadius::GetAzimuth ( );
__declspec(implementation_key(5559)) void _IAgVABurnoutLaunchAzRadius::PutAzimuth ( const _variant_t & pVal );
__declspec(implementation_key(5560)) double _IAgVABurnoutLaunchAzRadius::GetDownRangeDist ( );
__declspec(implementation_key(5561)) void _IAgVABurnoutLaunchAzRadius::PutDownRangeDist ( double pVal );
__declspec(implementation_key(5562)) double _IAgVABurnoutLaunchAzRadius::GetRadius ( );
__declspec(implementation_key(5563)) void _IAgVABurnoutLaunchAzRadius::PutRadius ( double pVal );
__declspec(implementation_key(5564)) _variant_t IAgVABurnoutLaunchAzRadius::GetAzimuth ( );
__declspec(implementation_key(5565)) void IAgVABurnoutLaunchAzRadius::PutAzimuth ( const _variant_t & pVal );
__declspec(implementation_key(5566)) double IAgVABurnoutLaunchAzRadius::GetDownRangeDist ( );
__declspec(implementation_key(5567)) void IAgVABurnoutLaunchAzRadius::PutDownRangeDist ( double pVal );
__declspec(implementation_key(5568)) double IAgVABurnoutLaunchAzRadius::GetRadius ( );
__declspec(implementation_key(5569)) void IAgVABurnoutLaunchAzRadius::PutRadius ( double pVal );
__declspec(implementation_key(5570)) enum AgEVABurnoutOptions _IAgVABurnoutVelocity::GetBurnoutOption ( );
__declspec(implementation_key(5571)) void _IAgVABurnoutVelocity::PutBurnoutOption ( enum AgEVABurnoutOptions pVal );
__declspec(implementation_key(5572)) double _IAgVABurnoutVelocity::GetFixedVelocity ( );
__declspec(implementation_key(5573)) void _IAgVABurnoutVelocity::PutFixedVelocity ( double pVal );
__declspec(implementation_key(5574)) double _IAgVABurnoutVelocity::GetInertialVelocity ( );
__declspec(implementation_key(5575)) void _IAgVABurnoutVelocity::PutInertialVelocity ( double pVal );
__declspec(implementation_key(5576)) _variant_t _IAgVABurnoutVelocity::GetInertialVelocityAzimuth ( );
__declspec(implementation_key(5577)) void _IAgVABurnoutVelocity::PutInertialVelocityAzimuth ( const _variant_t & pVal );
__declspec(implementation_key(5578)) _variant_t _IAgVABurnoutVelocity::GetInertialHorizontalFPA ( );
__declspec(implementation_key(5579)) void _IAgVABurnoutVelocity::PutInertialHorizontalFPA ( const _variant_t & pVal );
__declspec(implementation_key(5580)) enum AgEVASegmentType _IAgVAMCSFollow::GetType ( );
__declspec(implementation_key(5581)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSFollow::GetProperties ( );
__declspec(implementation_key(5582)) IAgVAStatePtr _IAgVAMCSFollow::GetInitialState ( );
__declspec(implementation_key(5583)) IAgVAStatePtr _IAgVAMCSFollow::GetFinalState ( );
__declspec(implementation_key(5584)) _variant_t _IAgVAMCSFollow::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(5585)) IAgVAStatePtr _IAgVAMCSFollow::Run ( );
__declspec(implementation_key(5586)) IAgVACalcObjectCollectionPtr _IAgVAMCSFollow::GetResults ( );
__declspec(implementation_key(5587)) STKObjects::IAgDrResultPtr _IAgVAMCSFollow::GetExecSummary ( );
__declspec(implementation_key(5588)) STKObjects::IAgLinkToObjectPtr _IAgVAMCSFollow::GetLeader ( );
__declspec(implementation_key(5589)) double _IAgVAMCSFollow::GetXOffset ( );
__declspec(implementation_key(5590)) void _IAgVAMCSFollow::PutXOffset ( double pVal );
__declspec(implementation_key(5591)) double _IAgVAMCSFollow::GetYOffset ( );
__declspec(implementation_key(5592)) void _IAgVAMCSFollow::PutYOffset ( double pVal );
__declspec(implementation_key(5593)) double _IAgVAMCSFollow::GetZOffset ( );
__declspec(implementation_key(5594)) void _IAgVAMCSFollow::PutZOffset ( double pVal );
__declspec(implementation_key(5595)) IAgVAStoppingConditionCollectionPtr _IAgVAMCSFollow::GetSeparationConditions ( );
__declspec(implementation_key(5596)) IAgVASpacecraftParametersPtr _IAgVAMCSFollow::GetSpacecraftParameters ( );
__declspec(implementation_key(5597)) IAgVAFuelTankPtr _IAgVAMCSFollow::GetFuelTank ( );
__declspec(implementation_key(5598)) enum AgEVAFollowJoin _IAgVAMCSFollow::GetJoiningType ( );
__declspec(implementation_key(5599)) void _IAgVAMCSFollow::PutJoiningType ( enum AgEVAFollowJoin pVal );
__declspec(implementation_key(5600)) enum AgEVAFollowSeparation _IAgVAMCSFollow::GetSeparationType ( );
__declspec(implementation_key(5601)) void _IAgVAMCSFollow::PutSeparationType ( enum AgEVAFollowSeparation pVal );
__declspec(implementation_key(5602)) enum AgEVAFollowSpacecraftAndFuelTank _IAgVAMCSFollow::GetSpacecraftAndFuelTankType ( );
__declspec(implementation_key(5603)) void _IAgVAMCSFollow::PutSpacecraftAndFuelTankType ( enum AgEVAFollowSpacecraftAndFuelTank pVal );
__declspec(implementation_key(5604)) IAgVAStoppingConditionCollectionPtr _IAgVAMCSFollow::GetJoiningConditions ( );
__declspec(implementation_key(5605)) HRESULT _IAgVAMCSFollow::EnableControlParameter ( enum AgEVAControlFollow Param );
__declspec(implementation_key(5606)) HRESULT _IAgVAMCSFollow::DisableControlParameter ( enum AgEVAControlFollow Param );
__declspec(implementation_key(5607)) VARIANT_BOOL _IAgVAMCSFollow::IsControlParameterEnabled ( enum AgEVAControlFollow Param );
__declspec(implementation_key(5608)) VARIANT_BOOL _IAgVAMCSFollow::GetControlParametersAvailable ( );
__declspec(implementation_key(5609)) _bstr_t _IAgVAMCSFollow::GetName ( );
__declspec(implementation_key(5610)) void _IAgVAMCSFollow::PutName ( _bstr_t pVal );
__declspec(implementation_key(5611)) _bstr_t _IAgVAMCSFollow::GetUserComment ( );
__declspec(implementation_key(5612)) void _IAgVAMCSFollow::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(5613)) _bstr_t _IAgVAMCSFollow::GetDescription ( );
__declspec(implementation_key(5614)) VARIANT_BOOL _IAgVAMCSFollow::IsReadOnly ( );
__declspec(implementation_key(5615)) IUnknownPtr _IAgVAMCSFollow::CloneObject ( );
__declspec(implementation_key(5616)) IAgVAUserVariableCollectionPtr _IAgVAMCSFollow::GetUserVariables ( );
__declspec(implementation_key(5617)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSFollow::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5618)) STKObjects::IAgLinkToObjectPtr IAgVAMCSFollow::GetLeader ( );
__declspec(implementation_key(5619)) double IAgVAMCSFollow::GetXOffset ( );
__declspec(implementation_key(5620)) void IAgVAMCSFollow::PutXOffset ( double pVal );
__declspec(implementation_key(5621)) double IAgVAMCSFollow::GetYOffset ( );
__declspec(implementation_key(5622)) void IAgVAMCSFollow::PutYOffset ( double pVal );
__declspec(implementation_key(5623)) double IAgVAMCSFollow::GetZOffset ( );
__declspec(implementation_key(5624)) void IAgVAMCSFollow::PutZOffset ( double pVal );
__declspec(implementation_key(5625)) IAgVAStoppingConditionCollectionPtr IAgVAMCSFollow::GetSeparationConditions ( );
__declspec(implementation_key(5626)) IAgVASpacecraftParametersPtr IAgVAMCSFollow::GetSpacecraftParameters ( );
__declspec(implementation_key(5627)) IAgVAFuelTankPtr IAgVAMCSFollow::GetFuelTank ( );
__declspec(implementation_key(5628)) enum AgEVAFollowJoin IAgVAMCSFollow::GetJoiningType ( );
__declspec(implementation_key(5629)) void IAgVAMCSFollow::PutJoiningType ( enum AgEVAFollowJoin pVal );
__declspec(implementation_key(5630)) enum AgEVAFollowSeparation IAgVAMCSFollow::GetSeparationType ( );
__declspec(implementation_key(5631)) void IAgVAMCSFollow::PutSeparationType ( enum AgEVAFollowSeparation pVal );
__declspec(implementation_key(5632)) enum AgEVAFollowSpacecraftAndFuelTank IAgVAMCSFollow::GetSpacecraftAndFuelTankType ( );
__declspec(implementation_key(5633)) void IAgVAMCSFollow::PutSpacecraftAndFuelTankType ( enum AgEVAFollowSpacecraftAndFuelTank pVal );
__declspec(implementation_key(5634)) IAgVAStoppingConditionCollectionPtr IAgVAMCSFollow::GetJoiningConditions ( );
__declspec(implementation_key(5635)) HRESULT IAgVAMCSFollow::EnableControlParameter ( enum AgEVAControlFollow Param );
__declspec(implementation_key(5636)) HRESULT IAgVAMCSFollow::DisableControlParameter ( enum AgEVAControlFollow Param );
__declspec(implementation_key(5637)) VARIANT_BOOL IAgVAMCSFollow::IsControlParameterEnabled ( enum AgEVAControlFollow Param );
__declspec(implementation_key(5638)) VARIANT_BOOL IAgVAMCSFollow::GetControlParametersAvailable ( );
__declspec(implementation_key(5639)) IAgVAUserVariableCollectionPtr IAgVAMCSFollow::GetUserVariables ( );
__declspec(implementation_key(5640)) double IAgVAAttitudeControl::GetLeadDuration ( );
__declspec(implementation_key(5641)) void IAgVAAttitudeControl::PutLeadDuration ( double pVal );
__declspec(implementation_key(5642)) double IAgVAAttitudeControl::GetTrailDuration ( );
__declspec(implementation_key(5643)) void IAgVAAttitudeControl::PutTrailDuration ( double pVal );
__declspec(implementation_key(5644)) enum AgEVABodyAxis IAgVAAttitudeControl::GetBodyAxis ( );
__declspec(implementation_key(5645)) void IAgVAAttitudeControl::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(5646)) enum AgEVAConstraintSign IAgVAAttitudeControl::GetConstraintSign ( );
__declspec(implementation_key(5647)) void IAgVAAttitudeControl::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(5648)) _bstr_t IAgVAAttitudeControl::GetConstraintVectorName ( );
__declspec(implementation_key(5649)) void IAgVAAttitudeControl::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(5650)) enum AgEVACustomFunction IAgVAAttitudeControl::GetCustomFunction ( );
__declspec(implementation_key(5651)) void IAgVAAttitudeControl::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(5652)) enum AgEVAAttitudeControl IAgVAManeuver::GetAttitudeControlType ( );
__declspec(implementation_key(5653)) HRESULT IAgVAManeuver::SetAttitudeControlType ( enum AgEVAAttitudeControl AttitudeControlType );
__declspec(implementation_key(5654)) IAgVAAttitudeControlPtr IAgVAManeuver::GetAttitudeControl ( );
__declspec(implementation_key(5655)) VARIANT_BOOL IAgVAManeuver::GetUpdateMass ( );
__declspec(implementation_key(5656)) void IAgVAManeuver::PutUpdateMass ( VARIANT_BOOL pVal );
__declspec(implementation_key(5657)) enum AgEVAPropulsionMethod IAgVAManeuver::GetPropulsionMethod ( );
__declspec(implementation_key(5658)) HRESULT IAgVAManeuver::SetPropulsionMethod ( enum AgEVAPropulsionMethod PropulsionMethod, _bstr_t Value );
__declspec(implementation_key(5659)) _bstr_t IAgVAManeuver::GetPropulsionMethodValue ( );
__declspec(implementation_key(5660)) enum AgEVASegmentType _IAgVAMCSManeuver::GetType ( );
__declspec(implementation_key(5661)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSManeuver::GetProperties ( );
__declspec(implementation_key(5662)) IAgVAStatePtr _IAgVAMCSManeuver::GetInitialState ( );
__declspec(implementation_key(5663)) IAgVAStatePtr _IAgVAMCSManeuver::GetFinalState ( );
__declspec(implementation_key(5664)) _variant_t _IAgVAMCSManeuver::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(5665)) IAgVAStatePtr _IAgVAMCSManeuver::Run ( );
__declspec(implementation_key(5666)) IAgVACalcObjectCollectionPtr _IAgVAMCSManeuver::GetResults ( );
__declspec(implementation_key(5667)) STKObjects::IAgDrResultPtr _IAgVAMCSManeuver::GetExecSummary ( );
__declspec(implementation_key(5668)) enum AgEVAManeuverType _IAgVAMCSManeuver::GetManeuverType ( );
__declspec(implementation_key(5669)) HRESULT _IAgVAMCSManeuver::SetManeuverType ( enum AgEVAManeuverType ManeuverType );
__declspec(implementation_key(5670)) IAgVAManeuverPtr _IAgVAMCSManeuver::GetManeuver ( );
__declspec(implementation_key(5671)) HRESULT _IAgVAMCSManeuver::EnableControlParameter ( enum AgEVAControlManeuver Param );
__declspec(implementation_key(5672)) HRESULT _IAgVAMCSManeuver::DisableControlParameter ( enum AgEVAControlManeuver Param );
__declspec(implementation_key(5673)) VARIANT_BOOL _IAgVAMCSManeuver::IsControlParameterEnabled ( enum AgEVAControlManeuver Param );
__declspec(implementation_key(5674)) VARIANT_BOOL _IAgVAMCSManeuver::GetControlParametersAvailable ( );
__declspec(implementation_key(5675)) _bstr_t _IAgVAMCSManeuver::GetName ( );
__declspec(implementation_key(5676)) void _IAgVAMCSManeuver::PutName ( _bstr_t pVal );
__declspec(implementation_key(5677)) _bstr_t _IAgVAMCSManeuver::GetUserComment ( );
__declspec(implementation_key(5678)) void _IAgVAMCSManeuver::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(5679)) _bstr_t _IAgVAMCSManeuver::GetDescription ( );
__declspec(implementation_key(5680)) VARIANT_BOOL _IAgVAMCSManeuver::IsReadOnly ( );
__declspec(implementation_key(5681)) IUnknownPtr _IAgVAMCSManeuver::CloneObject ( );
__declspec(implementation_key(5682)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSManeuver::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5683)) enum AgEVAManeuverType IAgVAMCSManeuver::GetManeuverType ( );
__declspec(implementation_key(5684)) HRESULT IAgVAMCSManeuver::SetManeuverType ( enum AgEVAManeuverType ManeuverType );
__declspec(implementation_key(5685)) IAgVAManeuverPtr IAgVAMCSManeuver::GetManeuver ( );
__declspec(implementation_key(5686)) HRESULT IAgVAMCSManeuver::EnableControlParameter ( enum AgEVAControlManeuver Param );
__declspec(implementation_key(5687)) HRESULT IAgVAMCSManeuver::DisableControlParameter ( enum AgEVAControlManeuver Param );
__declspec(implementation_key(5688)) VARIANT_BOOL IAgVAMCSManeuver::IsControlParameterEnabled ( enum AgEVAControlManeuver Param );
__declspec(implementation_key(5689)) VARIANT_BOOL IAgVAMCSManeuver::GetControlParametersAvailable ( );
__declspec(implementation_key(5690)) _bstr_t IAgVAManeuverFinitePropagator::GetPropagatorName ( );
__declspec(implementation_key(5691)) void IAgVAManeuverFinitePropagator::PutPropagatorName ( _bstr_t pVal );
__declspec(implementation_key(5692)) IAgVAStoppingConditionCollectionPtr IAgVAManeuverFinitePropagator::GetStoppingConditions ( );
__declspec(implementation_key(5693)) double IAgVAManeuverFinitePropagator::GetMinPropagationTime ( );
__declspec(implementation_key(5694)) void IAgVAManeuverFinitePropagator::PutMinPropagationTime ( double pVal );
__declspec(implementation_key(5695)) double IAgVAManeuverFinitePropagator::GetMaxPropagationTime ( );
__declspec(implementation_key(5696)) void IAgVAManeuverFinitePropagator::PutMaxPropagationTime ( double pVal );
__declspec(implementation_key(5697)) VARIANT_BOOL IAgVAManeuverFinitePropagator::GetEnableMaxPropagationTime ( );
__declspec(implementation_key(5698)) void IAgVAManeuverFinitePropagator::PutEnableMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(5699)) VARIANT_BOOL IAgVAManeuverFinitePropagator::GetEnableWarningMessage ( );
__declspec(implementation_key(5700)) void IAgVAManeuverFinitePropagator::PutEnableWarningMessage ( VARIANT_BOOL pVal );
__declspec(implementation_key(5701)) VARIANT_BOOL IAgVAManeuverFinitePropagator::GetEnableCenterBurn ( );
__declspec(implementation_key(5702)) void IAgVAManeuverFinitePropagator::PutEnableCenterBurn ( VARIANT_BOOL pVal );
__declspec(implementation_key(5703)) double IAgVAManeuverFinitePropagator::GetBias ( );
__declspec(implementation_key(5704)) void IAgVAManeuverFinitePropagator::PutBias ( double pVal );
__declspec(implementation_key(5705)) VARIANT_BOOL IAgVAManeuverFinitePropagator::GetOverrideMaxPropagationTime ( );
__declspec(implementation_key(5706)) void IAgVAManeuverFinitePropagator::PutOverrideMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(5707)) enum AgEVAAttitudeControl _IAgVAManeuverFinite::GetAttitudeControlType ( );
__declspec(implementation_key(5708)) HRESULT _IAgVAManeuverFinite::SetAttitudeControlType ( enum AgEVAAttitudeControl AttitudeControlType );
__declspec(implementation_key(5709)) IAgVAAttitudeControlPtr _IAgVAManeuverFinite::GetAttitudeControl ( );
__declspec(implementation_key(5710)) VARIANT_BOOL _IAgVAManeuverFinite::GetUpdateMass ( );
__declspec(implementation_key(5711)) void _IAgVAManeuverFinite::PutUpdateMass ( VARIANT_BOOL pVal );
__declspec(implementation_key(5712)) enum AgEVAPropulsionMethod _IAgVAManeuverFinite::GetPropulsionMethod ( );
__declspec(implementation_key(5713)) HRESULT _IAgVAManeuverFinite::SetPropulsionMethod ( enum AgEVAPropulsionMethod PropulsionMethod, _bstr_t Value );
__declspec(implementation_key(5714)) _bstr_t _IAgVAManeuverFinite::GetPropulsionMethodValue ( );
__declspec(implementation_key(5715)) enum AgEVAPressureMode _IAgVAManeuverFinite::GetPressureMode ( );
__declspec(implementation_key(5716)) void _IAgVAManeuverFinite::PutPressureMode ( enum AgEVAPressureMode pVal );
__declspec(implementation_key(5717)) double _IAgVAManeuverFinite::GetThrustEfficiency ( );
__declspec(implementation_key(5718)) void _IAgVAManeuverFinite::PutThrustEfficiency ( double pVal );
__declspec(implementation_key(5719)) enum AgEVAThrustType _IAgVAManeuverFinite::GetThrustEfficiencyMode ( );
__declspec(implementation_key(5720)) void _IAgVAManeuverFinite::PutThrustEfficiencyMode ( enum AgEVAThrustType pVal );
__declspec(implementation_key(5721)) IAgVAManeuverFinitePropagatorPtr _IAgVAManeuverFinite::GetPropagator ( );
__declspec(implementation_key(5722)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAManeuverFinite::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5723)) enum AgEVAPressureMode IAgVAManeuverFinite::GetPressureMode ( );
__declspec(implementation_key(5724)) void IAgVAManeuverFinite::PutPressureMode ( enum AgEVAPressureMode pVal );
__declspec(implementation_key(5725)) double IAgVAManeuverFinite::GetThrustEfficiency ( );
__declspec(implementation_key(5726)) void IAgVAManeuverFinite::PutThrustEfficiency ( double pVal );
__declspec(implementation_key(5727)) enum AgEVAThrustType IAgVAManeuverFinite::GetThrustEfficiencyMode ( );
__declspec(implementation_key(5728)) void IAgVAManeuverFinite::PutThrustEfficiencyMode ( enum AgEVAThrustType pVal );
__declspec(implementation_key(5729)) IAgVAManeuverFinitePropagatorPtr IAgVAManeuverFinite::GetPropagator ( );
__declspec(implementation_key(5730)) enum AgEVAAttitudeControl _IAgVAManeuverImpulsive::GetAttitudeControlType ( );
__declspec(implementation_key(5731)) HRESULT _IAgVAManeuverImpulsive::SetAttitudeControlType ( enum AgEVAAttitudeControl AttitudeControlType );
__declspec(implementation_key(5732)) IAgVAAttitudeControlPtr _IAgVAManeuverImpulsive::GetAttitudeControl ( );
__declspec(implementation_key(5733)) VARIANT_BOOL _IAgVAManeuverImpulsive::GetUpdateMass ( );
__declspec(implementation_key(5734)) void _IAgVAManeuverImpulsive::PutUpdateMass ( VARIANT_BOOL pVal );
__declspec(implementation_key(5735)) enum AgEVAPropulsionMethod _IAgVAManeuverImpulsive::GetPropulsionMethod ( );
__declspec(implementation_key(5736)) HRESULT _IAgVAManeuverImpulsive::SetPropulsionMethod ( enum AgEVAPropulsionMethod PropulsionMethod, _bstr_t Value );
__declspec(implementation_key(5737)) _bstr_t _IAgVAManeuverImpulsive::GetPropulsionMethodValue ( );
__declspec(implementation_key(5738)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAManeuverImpulsive::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5739)) double _IAgVAAttitudeControlImpulsiveVelocityVector::GetLeadDuration ( );
__declspec(implementation_key(5740)) void _IAgVAAttitudeControlImpulsiveVelocityVector::PutLeadDuration ( double pVal );
__declspec(implementation_key(5741)) double _IAgVAAttitudeControlImpulsiveVelocityVector::GetTrailDuration ( );
__declspec(implementation_key(5742)) void _IAgVAAttitudeControlImpulsiveVelocityVector::PutTrailDuration ( double pVal );
__declspec(implementation_key(5743)) enum AgEVABodyAxis _IAgVAAttitudeControlImpulsiveVelocityVector::GetBodyAxis ( );
__declspec(implementation_key(5744)) void _IAgVAAttitudeControlImpulsiveVelocityVector::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(5745)) enum AgEVAConstraintSign _IAgVAAttitudeControlImpulsiveVelocityVector::GetConstraintSign ( );
__declspec(implementation_key(5746)) void _IAgVAAttitudeControlImpulsiveVelocityVector::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(5747)) _bstr_t _IAgVAAttitudeControlImpulsiveVelocityVector::GetConstraintVectorName ( );
__declspec(implementation_key(5748)) void _IAgVAAttitudeControlImpulsiveVelocityVector::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(5749)) enum AgEVACustomFunction _IAgVAAttitudeControlImpulsiveVelocityVector::GetCustomFunction ( );
__declspec(implementation_key(5750)) void _IAgVAAttitudeControlImpulsiveVelocityVector::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(5751)) double _IAgVAAttitudeControlImpulsiveVelocityVector::GetDeltaVMagnitude ( );
__declspec(implementation_key(5752)) void _IAgVAAttitudeControlImpulsiveVelocityVector::PutDeltaVMagnitude ( double pVal );
__declspec(implementation_key(5753)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlImpulsiveVelocityVector::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5754)) STKUtil::IAgDirectionPtr _IAgVAAttitudeControlImpulsiveVelocityVector::GetBodyConstraintVector ( );
__declspec(implementation_key(5755)) double IAgVAAttitudeControlImpulsiveVelocityVector::GetDeltaVMagnitude ( );
__declspec(implementation_key(5756)) void IAgVAAttitudeControlImpulsiveVelocityVector::PutDeltaVMagnitude ( double pVal );
__declspec(implementation_key(5757)) STKUtil::IAgDirectionPtr IAgVAAttitudeControlImpulsiveVelocityVector::GetBodyConstraintVector ( );
__declspec(implementation_key(5758)) double _IAgVAAttitudeControlImpulsiveAntiVelocityVector::GetLeadDuration ( );
__declspec(implementation_key(5759)) void _IAgVAAttitudeControlImpulsiveAntiVelocityVector::PutLeadDuration ( double pVal );
__declspec(implementation_key(5760)) double _IAgVAAttitudeControlImpulsiveAntiVelocityVector::GetTrailDuration ( );
__declspec(implementation_key(5761)) void _IAgVAAttitudeControlImpulsiveAntiVelocityVector::PutTrailDuration ( double pVal );
__declspec(implementation_key(5762)) enum AgEVABodyAxis _IAgVAAttitudeControlImpulsiveAntiVelocityVector::GetBodyAxis ( );
__declspec(implementation_key(5763)) void _IAgVAAttitudeControlImpulsiveAntiVelocityVector::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(5764)) enum AgEVAConstraintSign _IAgVAAttitudeControlImpulsiveAntiVelocityVector::GetConstraintSign ( );
__declspec(implementation_key(5765)) void _IAgVAAttitudeControlImpulsiveAntiVelocityVector::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(5766)) _bstr_t _IAgVAAttitudeControlImpulsiveAntiVelocityVector::GetConstraintVectorName ( );
__declspec(implementation_key(5767)) void _IAgVAAttitudeControlImpulsiveAntiVelocityVector::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(5768)) enum AgEVACustomFunction _IAgVAAttitudeControlImpulsiveAntiVelocityVector::GetCustomFunction ( );
__declspec(implementation_key(5769)) void _IAgVAAttitudeControlImpulsiveAntiVelocityVector::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(5770)) double _IAgVAAttitudeControlImpulsiveAntiVelocityVector::GetDeltaVMagnitude ( );
__declspec(implementation_key(5771)) void _IAgVAAttitudeControlImpulsiveAntiVelocityVector::PutDeltaVMagnitude ( double pVal );
__declspec(implementation_key(5772)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlImpulsiveAntiVelocityVector::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5773)) STKUtil::IAgDirectionPtr _IAgVAAttitudeControlImpulsiveAntiVelocityVector::GetBodyConstraintVector ( );
__declspec(implementation_key(5774)) double IAgVAAttitudeControlImpulsiveAntiVelocityVector::GetDeltaVMagnitude ( );
__declspec(implementation_key(5775)) void IAgVAAttitudeControlImpulsiveAntiVelocityVector::PutDeltaVMagnitude ( double pVal );
__declspec(implementation_key(5776)) STKUtil::IAgDirectionPtr IAgVAAttitudeControlImpulsiveAntiVelocityVector::GetBodyConstraintVector ( );
__declspec(implementation_key(5777)) double _IAgVAAttitudeControlImpulsiveAttitude::GetLeadDuration ( );
__declspec(implementation_key(5778)) void _IAgVAAttitudeControlImpulsiveAttitude::PutLeadDuration ( double pVal );
__declspec(implementation_key(5779)) double _IAgVAAttitudeControlImpulsiveAttitude::GetTrailDuration ( );
__declspec(implementation_key(5780)) void _IAgVAAttitudeControlImpulsiveAttitude::PutTrailDuration ( double pVal );
__declspec(implementation_key(5781)) enum AgEVABodyAxis _IAgVAAttitudeControlImpulsiveAttitude::GetBodyAxis ( );
__declspec(implementation_key(5782)) void _IAgVAAttitudeControlImpulsiveAttitude::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(5783)) enum AgEVAConstraintSign _IAgVAAttitudeControlImpulsiveAttitude::GetConstraintSign ( );
__declspec(implementation_key(5784)) void _IAgVAAttitudeControlImpulsiveAttitude::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(5785)) _bstr_t _IAgVAAttitudeControlImpulsiveAttitude::GetConstraintVectorName ( );
__declspec(implementation_key(5786)) void _IAgVAAttitudeControlImpulsiveAttitude::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(5787)) enum AgEVACustomFunction _IAgVAAttitudeControlImpulsiveAttitude::GetCustomFunction ( );
__declspec(implementation_key(5788)) void _IAgVAAttitudeControlImpulsiveAttitude::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(5789)) double _IAgVAAttitudeControlImpulsiveAttitude::GetDeltaVMagnitude ( );
__declspec(implementation_key(5790)) void _IAgVAAttitudeControlImpulsiveAttitude::PutDeltaVMagnitude ( double pVal );
__declspec(implementation_key(5791)) _bstr_t _IAgVAAttitudeControlImpulsiveAttitude::GetRefAxesName ( );
__declspec(implementation_key(5792)) void _IAgVAAttitudeControlImpulsiveAttitude::PutRefAxesName ( _bstr_t pVal );
__declspec(implementation_key(5793)) STKUtil::IAgOrientationPtr _IAgVAAttitudeControlImpulsiveAttitude::GetOrientation ( );
__declspec(implementation_key(5794)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlImpulsiveAttitude::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5795)) double IAgVAAttitudeControlImpulsiveAttitude::GetDeltaVMagnitude ( );
__declspec(implementation_key(5796)) void IAgVAAttitudeControlImpulsiveAttitude::PutDeltaVMagnitude ( double pVal );
__declspec(implementation_key(5797)) _bstr_t IAgVAAttitudeControlImpulsiveAttitude::GetRefAxesName ( );
__declspec(implementation_key(5798)) void IAgVAAttitudeControlImpulsiveAttitude::PutRefAxesName ( _bstr_t pVal );
__declspec(implementation_key(5799)) STKUtil::IAgOrientationPtr IAgVAAttitudeControlImpulsiveAttitude::GetOrientation ( );
__declspec(implementation_key(5800)) double _IAgVAAttitudeControlImpulsiveFile::GetLeadDuration ( );
__declspec(implementation_key(5801)) void _IAgVAAttitudeControlImpulsiveFile::PutLeadDuration ( double pVal );
__declspec(implementation_key(5802)) double _IAgVAAttitudeControlImpulsiveFile::GetTrailDuration ( );
__declspec(implementation_key(5803)) void _IAgVAAttitudeControlImpulsiveFile::PutTrailDuration ( double pVal );
__declspec(implementation_key(5804)) enum AgEVABodyAxis _IAgVAAttitudeControlImpulsiveFile::GetBodyAxis ( );
__declspec(implementation_key(5805)) void _IAgVAAttitudeControlImpulsiveFile::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(5806)) enum AgEVAConstraintSign _IAgVAAttitudeControlImpulsiveFile::GetConstraintSign ( );
__declspec(implementation_key(5807)) void _IAgVAAttitudeControlImpulsiveFile::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(5808)) _bstr_t _IAgVAAttitudeControlImpulsiveFile::GetConstraintVectorName ( );
__declspec(implementation_key(5809)) void _IAgVAAttitudeControlImpulsiveFile::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(5810)) enum AgEVACustomFunction _IAgVAAttitudeControlImpulsiveFile::GetCustomFunction ( );
__declspec(implementation_key(5811)) void _IAgVAAttitudeControlImpulsiveFile::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(5812)) double _IAgVAAttitudeControlImpulsiveFile::GetDeltaVMagnitude ( );
__declspec(implementation_key(5813)) void _IAgVAAttitudeControlImpulsiveFile::PutDeltaVMagnitude ( double pVal );
__declspec(implementation_key(5814)) _bstr_t _IAgVAAttitudeControlImpulsiveFile::GetFilename ( );
__declspec(implementation_key(5815)) void _IAgVAAttitudeControlImpulsiveFile::PutFilename ( _bstr_t pVal );
__declspec(implementation_key(5816)) double _IAgVAAttitudeControlImpulsiveFile::GetFileTimeOffset ( );
__declspec(implementation_key(5817)) void _IAgVAAttitudeControlImpulsiveFile::PutFileTimeOffset ( double pVal );
__declspec(implementation_key(5818)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlImpulsiveFile::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5819)) _bstr_t _IAgVAAttitudeControlImpulsiveFile::GetFullFilename ( );
__declspec(implementation_key(5820)) double IAgVAAttitudeControlImpulsiveFile::GetDeltaVMagnitude ( );
__declspec(implementation_key(5821)) void IAgVAAttitudeControlImpulsiveFile::PutDeltaVMagnitude ( double pVal );
__declspec(implementation_key(5822)) _bstr_t IAgVAAttitudeControlImpulsiveFile::GetFilename ( );
__declspec(implementation_key(5823)) void IAgVAAttitudeControlImpulsiveFile::PutFilename ( _bstr_t pVal );
__declspec(implementation_key(5824)) double IAgVAAttitudeControlImpulsiveFile::GetFileTimeOffset ( );
__declspec(implementation_key(5825)) void IAgVAAttitudeControlImpulsiveFile::PutFileTimeOffset ( double pVal );
__declspec(implementation_key(5826)) _bstr_t IAgVAAttitudeControlImpulsiveFile::GetFullFilename ( );
__declspec(implementation_key(5827)) double _IAgVAAttitudeControlImpulsiveThrustVector::GetLeadDuration ( );
__declspec(implementation_key(5828)) void _IAgVAAttitudeControlImpulsiveThrustVector::PutLeadDuration ( double pVal );
__declspec(implementation_key(5829)) double _IAgVAAttitudeControlImpulsiveThrustVector::GetTrailDuration ( );
__declspec(implementation_key(5830)) void _IAgVAAttitudeControlImpulsiveThrustVector::PutTrailDuration ( double pVal );
__declspec(implementation_key(5831)) enum AgEVABodyAxis _IAgVAAttitudeControlImpulsiveThrustVector::GetBodyAxis ( );
__declspec(implementation_key(5832)) void _IAgVAAttitudeControlImpulsiveThrustVector::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(5833)) enum AgEVAConstraintSign _IAgVAAttitudeControlImpulsiveThrustVector::GetConstraintSign ( );
__declspec(implementation_key(5834)) void _IAgVAAttitudeControlImpulsiveThrustVector::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(5835)) _bstr_t _IAgVAAttitudeControlImpulsiveThrustVector::GetConstraintVectorName ( );
__declspec(implementation_key(5836)) void _IAgVAAttitudeControlImpulsiveThrustVector::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(5837)) enum AgEVACustomFunction _IAgVAAttitudeControlImpulsiveThrustVector::GetCustomFunction ( );
__declspec(implementation_key(5838)) void _IAgVAAttitudeControlImpulsiveThrustVector::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(5839)) _bstr_t _IAgVAAttitudeControlImpulsiveThrustVector::GetThrustAxesName ( );
__declspec(implementation_key(5840)) void _IAgVAAttitudeControlImpulsiveThrustVector::PutThrustAxesName ( _bstr_t pVal );
__declspec(implementation_key(5841)) STKUtil::IAgPositionPtr _IAgVAAttitudeControlImpulsiveThrustVector::GetPosition ( );
__declspec(implementation_key(5842)) STKUtil::IAgPositionPtr _IAgVAAttitudeControlImpulsiveThrustVector::GetDeltaVVector ( );
__declspec(implementation_key(5843)) STKUtil::IAgDirectionPtr _IAgVAAttitudeControlImpulsiveThrustVector::GetBodyConstraintVector ( );
__declspec(implementation_key(5844)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlImpulsiveThrustVector::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5845)) VARIANT_BOOL _IAgVAAttitudeControlImpulsiveThrustVector::GetAllowNegativeSphericalMagnitude ( );
__declspec(implementation_key(5846)) void _IAgVAAttitudeControlImpulsiveThrustVector::PutAllowNegativeSphericalMagnitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(5847)) _bstr_t IAgVAAttitudeControlImpulsiveThrustVector::GetThrustAxesName ( );
__declspec(implementation_key(5848)) void IAgVAAttitudeControlImpulsiveThrustVector::PutThrustAxesName ( _bstr_t pVal );
__declspec(implementation_key(5849)) STKUtil::IAgPositionPtr IAgVAAttitudeControlImpulsiveThrustVector::GetPosition ( );
__declspec(implementation_key(5850)) STKUtil::IAgPositionPtr IAgVAAttitudeControlImpulsiveThrustVector::GetDeltaVVector ( );
__declspec(implementation_key(5851)) STKUtil::IAgDirectionPtr IAgVAAttitudeControlImpulsiveThrustVector::GetBodyConstraintVector ( );
__declspec(implementation_key(5852)) VARIANT_BOOL IAgVAAttitudeControlImpulsiveThrustVector::GetAllowNegativeSphericalMagnitude ( );
__declspec(implementation_key(5853)) void IAgVAAttitudeControlImpulsiveThrustVector::PutAllowNegativeSphericalMagnitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(5854)) double _IAgVAAttitudeControlFiniteAntiVelocityVector::GetLeadDuration ( );
__declspec(implementation_key(5855)) void _IAgVAAttitudeControlFiniteAntiVelocityVector::PutLeadDuration ( double pVal );
__declspec(implementation_key(5856)) double _IAgVAAttitudeControlFiniteAntiVelocityVector::GetTrailDuration ( );
__declspec(implementation_key(5857)) void _IAgVAAttitudeControlFiniteAntiVelocityVector::PutTrailDuration ( double pVal );
__declspec(implementation_key(5858)) enum AgEVABodyAxis _IAgVAAttitudeControlFiniteAntiVelocityVector::GetBodyAxis ( );
__declspec(implementation_key(5859)) void _IAgVAAttitudeControlFiniteAntiVelocityVector::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(5860)) enum AgEVAConstraintSign _IAgVAAttitudeControlFiniteAntiVelocityVector::GetConstraintSign ( );
__declspec(implementation_key(5861)) void _IAgVAAttitudeControlFiniteAntiVelocityVector::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(5862)) _bstr_t _IAgVAAttitudeControlFiniteAntiVelocityVector::GetConstraintVectorName ( );
__declspec(implementation_key(5863)) void _IAgVAAttitudeControlFiniteAntiVelocityVector::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(5864)) enum AgEVACustomFunction _IAgVAAttitudeControlFiniteAntiVelocityVector::GetCustomFunction ( );
__declspec(implementation_key(5865)) void _IAgVAAttitudeControlFiniteAntiVelocityVector::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(5866)) enum AgEVAAttitudeUpdate _IAgVAAttitudeControlFiniteAntiVelocityVector::GetAttitudeUpdate ( );
__declspec(implementation_key(5867)) void _IAgVAAttitudeControlFiniteAntiVelocityVector::PutAttitudeUpdate ( enum AgEVAAttitudeUpdate pVal );
__declspec(implementation_key(5868)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlFiniteAntiVelocityVector::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5869)) STKUtil::IAgDirectionPtr _IAgVAAttitudeControlFiniteAntiVelocityVector::GetBodyConstraintVector ( );
__declspec(implementation_key(5870)) enum AgEVAAttitudeUpdate IAgVAAttitudeControlFiniteAntiVelocityVector::GetAttitudeUpdate ( );
__declspec(implementation_key(5871)) void IAgVAAttitudeControlFiniteAntiVelocityVector::PutAttitudeUpdate ( enum AgEVAAttitudeUpdate pVal );
__declspec(implementation_key(5872)) STKUtil::IAgDirectionPtr IAgVAAttitudeControlFiniteAntiVelocityVector::GetBodyConstraintVector ( );
__declspec(implementation_key(5873)) double _IAgVAAttitudeControlFiniteAttitude::GetLeadDuration ( );
__declspec(implementation_key(5874)) void _IAgVAAttitudeControlFiniteAttitude::PutLeadDuration ( double pVal );
__declspec(implementation_key(5875)) double _IAgVAAttitudeControlFiniteAttitude::GetTrailDuration ( );
__declspec(implementation_key(5876)) void _IAgVAAttitudeControlFiniteAttitude::PutTrailDuration ( double pVal );
__declspec(implementation_key(5877)) enum AgEVABodyAxis _IAgVAAttitudeControlFiniteAttitude::GetBodyAxis ( );
__declspec(implementation_key(5878)) void _IAgVAAttitudeControlFiniteAttitude::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(5879)) enum AgEVAConstraintSign _IAgVAAttitudeControlFiniteAttitude::GetConstraintSign ( );
__declspec(implementation_key(5880)) void _IAgVAAttitudeControlFiniteAttitude::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(5881)) _bstr_t _IAgVAAttitudeControlFiniteAttitude::GetConstraintVectorName ( );
__declspec(implementation_key(5882)) void _IAgVAAttitudeControlFiniteAttitude::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(5883)) enum AgEVACustomFunction _IAgVAAttitudeControlFiniteAttitude::GetCustomFunction ( );
__declspec(implementation_key(5884)) void _IAgVAAttitudeControlFiniteAttitude::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(5885)) enum AgEVAAttitudeUpdate _IAgVAAttitudeControlFiniteAttitude::GetAttitudeUpdate ( );
__declspec(implementation_key(5886)) void _IAgVAAttitudeControlFiniteAttitude::PutAttitudeUpdate ( enum AgEVAAttitudeUpdate pVal );
__declspec(implementation_key(5887)) _bstr_t _IAgVAAttitudeControlFiniteAttitude::GetRefAxesName ( );
__declspec(implementation_key(5888)) void _IAgVAAttitudeControlFiniteAttitude::PutRefAxesName ( _bstr_t pVal );
__declspec(implementation_key(5889)) STKUtil::IAgOrientationPtr _IAgVAAttitudeControlFiniteAttitude::GetOrientation ( );
__declspec(implementation_key(5890)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlFiniteAttitude::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5891)) enum AgEVAAttitudeUpdate IAgVAAttitudeControlFiniteAttitude::GetAttitudeUpdate ( );
__declspec(implementation_key(5892)) void IAgVAAttitudeControlFiniteAttitude::PutAttitudeUpdate ( enum AgEVAAttitudeUpdate pVal );
__declspec(implementation_key(5893)) _bstr_t IAgVAAttitudeControlFiniteAttitude::GetRefAxesName ( );
__declspec(implementation_key(5894)) void IAgVAAttitudeControlFiniteAttitude::PutRefAxesName ( _bstr_t pVal );
__declspec(implementation_key(5895)) STKUtil::IAgOrientationPtr IAgVAAttitudeControlFiniteAttitude::GetOrientation ( );
__declspec(implementation_key(5896)) double _IAgVAAttitudeControlFiniteFile::GetLeadDuration ( );
__declspec(implementation_key(5897)) void _IAgVAAttitudeControlFiniteFile::PutLeadDuration ( double pVal );
__declspec(implementation_key(5898)) double _IAgVAAttitudeControlFiniteFile::GetTrailDuration ( );
__declspec(implementation_key(5899)) void _IAgVAAttitudeControlFiniteFile::PutTrailDuration ( double pVal );
__declspec(implementation_key(5900)) enum AgEVABodyAxis _IAgVAAttitudeControlFiniteFile::GetBodyAxis ( );
__declspec(implementation_key(5901)) void _IAgVAAttitudeControlFiniteFile::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(5902)) enum AgEVAConstraintSign _IAgVAAttitudeControlFiniteFile::GetConstraintSign ( );
__declspec(implementation_key(5903)) void _IAgVAAttitudeControlFiniteFile::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(5904)) _bstr_t _IAgVAAttitudeControlFiniteFile::GetConstraintVectorName ( );
__declspec(implementation_key(5905)) void _IAgVAAttitudeControlFiniteFile::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(5906)) enum AgEVACustomFunction _IAgVAAttitudeControlFiniteFile::GetCustomFunction ( );
__declspec(implementation_key(5907)) void _IAgVAAttitudeControlFiniteFile::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(5908)) _bstr_t _IAgVAAttitudeControlFiniteFile::GetFilename ( );
__declspec(implementation_key(5909)) void _IAgVAAttitudeControlFiniteFile::PutFilename ( _bstr_t pVal );
__declspec(implementation_key(5910)) double _IAgVAAttitudeControlFiniteFile::GetFileTimeOffset ( );
__declspec(implementation_key(5911)) void _IAgVAAttitudeControlFiniteFile::PutFileTimeOffset ( double pVal );
__declspec(implementation_key(5912)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlFiniteFile::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5913)) _bstr_t _IAgVAAttitudeControlFiniteFile::GetFullFilename ( );
__declspec(implementation_key(5914)) _bstr_t IAgVAAttitudeControlFiniteFile::GetFilename ( );
__declspec(implementation_key(5915)) void IAgVAAttitudeControlFiniteFile::PutFilename ( _bstr_t pVal );
__declspec(implementation_key(5916)) double IAgVAAttitudeControlFiniteFile::GetFileTimeOffset ( );
__declspec(implementation_key(5917)) void IAgVAAttitudeControlFiniteFile::PutFileTimeOffset ( double pVal );
__declspec(implementation_key(5918)) _bstr_t IAgVAAttitudeControlFiniteFile::GetFullFilename ( );
__declspec(implementation_key(5919)) double _IAgVAAttitudeControlFiniteThrustVector::GetLeadDuration ( );
__declspec(implementation_key(5920)) void _IAgVAAttitudeControlFiniteThrustVector::PutLeadDuration ( double pVal );
__declspec(implementation_key(5921)) double _IAgVAAttitudeControlFiniteThrustVector::GetTrailDuration ( );
__declspec(implementation_key(5922)) void _IAgVAAttitudeControlFiniteThrustVector::PutTrailDuration ( double pVal );
__declspec(implementation_key(5923)) enum AgEVABodyAxis _IAgVAAttitudeControlFiniteThrustVector::GetBodyAxis ( );
__declspec(implementation_key(5924)) void _IAgVAAttitudeControlFiniteThrustVector::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(5925)) enum AgEVAConstraintSign _IAgVAAttitudeControlFiniteThrustVector::GetConstraintSign ( );
__declspec(implementation_key(5926)) void _IAgVAAttitudeControlFiniteThrustVector::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(5927)) _bstr_t _IAgVAAttitudeControlFiniteThrustVector::GetConstraintVectorName ( );
__declspec(implementation_key(5928)) void _IAgVAAttitudeControlFiniteThrustVector::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(5929)) enum AgEVACustomFunction _IAgVAAttitudeControlFiniteThrustVector::GetCustomFunction ( );
__declspec(implementation_key(5930)) void _IAgVAAttitudeControlFiniteThrustVector::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(5931)) enum AgEVAAttitudeUpdate _IAgVAAttitudeControlFiniteThrustVector::GetAttitudeUpdate ( );
__declspec(implementation_key(5932)) void _IAgVAAttitudeControlFiniteThrustVector::PutAttitudeUpdate ( enum AgEVAAttitudeUpdate pVal );
__declspec(implementation_key(5933)) _bstr_t _IAgVAAttitudeControlFiniteThrustVector::GetThrustAxesName ( );
__declspec(implementation_key(5934)) void _IAgVAAttitudeControlFiniteThrustVector::PutThrustAxesName ( _bstr_t pVal );
__declspec(implementation_key(5935)) STKUtil::IAgDirectionPtr _IAgVAAttitudeControlFiniteThrustVector::GetBodyConstraintVector ( );
__declspec(implementation_key(5936)) STKUtil::IAgDirectionPtr _IAgVAAttitudeControlFiniteThrustVector::GetThrustVector ( );
__declspec(implementation_key(5937)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlFiniteThrustVector::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5938)) enum AgEVAAttitudeUpdate IAgVAAttitudeControlFiniteThrustVector::GetAttitudeUpdate ( );
__declspec(implementation_key(5939)) void IAgVAAttitudeControlFiniteThrustVector::PutAttitudeUpdate ( enum AgEVAAttitudeUpdate pVal );
__declspec(implementation_key(5940)) _bstr_t IAgVAAttitudeControlFiniteThrustVector::GetThrustAxesName ( );
__declspec(implementation_key(5941)) void IAgVAAttitudeControlFiniteThrustVector::PutThrustAxesName ( _bstr_t pVal );
__declspec(implementation_key(5942)) STKUtil::IAgDirectionPtr IAgVAAttitudeControlFiniteThrustVector::GetBodyConstraintVector ( );
__declspec(implementation_key(5943)) STKUtil::IAgDirectionPtr IAgVAAttitudeControlFiniteThrustVector::GetThrustVector ( );
__declspec(implementation_key(5944)) double _IAgVAAttitudeControlFiniteTimeVarying::GetLeadDuration ( );
__declspec(implementation_key(5945)) void _IAgVAAttitudeControlFiniteTimeVarying::PutLeadDuration ( double pVal );
__declspec(implementation_key(5946)) double _IAgVAAttitudeControlFiniteTimeVarying::GetTrailDuration ( );
__declspec(implementation_key(5947)) void _IAgVAAttitudeControlFiniteTimeVarying::PutTrailDuration ( double pVal );
__declspec(implementation_key(5948)) enum AgEVABodyAxis _IAgVAAttitudeControlFiniteTimeVarying::GetBodyAxis ( );
__declspec(implementation_key(5949)) void _IAgVAAttitudeControlFiniteTimeVarying::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(5950)) enum AgEVAConstraintSign _IAgVAAttitudeControlFiniteTimeVarying::GetConstraintSign ( );
__declspec(implementation_key(5951)) void _IAgVAAttitudeControlFiniteTimeVarying::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(5952)) _bstr_t _IAgVAAttitudeControlFiniteTimeVarying::GetConstraintVectorName ( );
__declspec(implementation_key(5953)) void _IAgVAAttitudeControlFiniteTimeVarying::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(5954)) enum AgEVACustomFunction _IAgVAAttitudeControlFiniteTimeVarying::GetCustomFunction ( );
__declspec(implementation_key(5955)) void _IAgVAAttitudeControlFiniteTimeVarying::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(5956)) _bstr_t _IAgVAAttitudeControlFiniteTimeVarying::GetThrustAxesName ( );
__declspec(implementation_key(5957)) void _IAgVAAttitudeControlFiniteTimeVarying::PutThrustAxesName ( _bstr_t pVal );
__declspec(implementation_key(5958)) STKUtil::IAgDirectionPtr _IAgVAAttitudeControlFiniteTimeVarying::GetBodyConstraintVector ( );
__declspec(implementation_key(5959)) double _IAgVAAttitudeControlFiniteTimeVarying::GetAz0 ( );
__declspec(implementation_key(5960)) void _IAgVAAttitudeControlFiniteTimeVarying::PutAz0 ( double pVal );
__declspec(implementation_key(5961)) double _IAgVAAttitudeControlFiniteTimeVarying::GetAz1 ( );
__declspec(implementation_key(5962)) void _IAgVAAttitudeControlFiniteTimeVarying::PutAz1 ( double pVal );
__declspec(implementation_key(5963)) double _IAgVAAttitudeControlFiniteTimeVarying::GetAz2 ( );
__declspec(implementation_key(5964)) void _IAgVAAttitudeControlFiniteTimeVarying::PutAz2 ( double pVal );
__declspec(implementation_key(5965)) double _IAgVAAttitudeControlFiniteTimeVarying::GetAz3 ( );
__declspec(implementation_key(5966)) void _IAgVAAttitudeControlFiniteTimeVarying::PutAz3 ( double pVal );
__declspec(implementation_key(5967)) double _IAgVAAttitudeControlFiniteTimeVarying::GetAz4 ( );
__declspec(implementation_key(5968)) void _IAgVAAttitudeControlFiniteTimeVarying::PutAz4 ( double pVal );
__declspec(implementation_key(5969)) double _IAgVAAttitudeControlFiniteTimeVarying::GetAzA ( );
__declspec(implementation_key(5970)) void _IAgVAAttitudeControlFiniteTimeVarying::PutAzA ( double pVal );
__declspec(implementation_key(5971)) double _IAgVAAttitudeControlFiniteTimeVarying::GetAzF ( );
__declspec(implementation_key(5972)) void _IAgVAAttitudeControlFiniteTimeVarying::PutAzF ( double pVal );
__declspec(implementation_key(5973)) double _IAgVAAttitudeControlFiniteTimeVarying::GetAzP ( );
__declspec(implementation_key(5974)) void _IAgVAAttitudeControlFiniteTimeVarying::PutAzP ( double pVal );
__declspec(implementation_key(5975)) double _IAgVAAttitudeControlFiniteTimeVarying::GetEl0 ( );
__declspec(implementation_key(5976)) void _IAgVAAttitudeControlFiniteTimeVarying::PutEl0 ( double pVal );
__declspec(implementation_key(5977)) double _IAgVAAttitudeControlFiniteTimeVarying::GetEl1 ( );
__declspec(implementation_key(5978)) void _IAgVAAttitudeControlFiniteTimeVarying::PutEl1 ( double pVal );
__declspec(implementation_key(5979)) double _IAgVAAttitudeControlFiniteTimeVarying::GetEl2 ( );
__declspec(implementation_key(5980)) void _IAgVAAttitudeControlFiniteTimeVarying::PutEl2 ( double pVal );
__declspec(implementation_key(5981)) double _IAgVAAttitudeControlFiniteTimeVarying::GetEl3 ( );
__declspec(implementation_key(5982)) void _IAgVAAttitudeControlFiniteTimeVarying::PutEl3 ( double pVal );
__declspec(implementation_key(5983)) double _IAgVAAttitudeControlFiniteTimeVarying::GetEl4 ( );
__declspec(implementation_key(5984)) void _IAgVAAttitudeControlFiniteTimeVarying::PutEl4 ( double pVal );
__declspec(implementation_key(5985)) double _IAgVAAttitudeControlFiniteTimeVarying::GetElA ( );
__declspec(implementation_key(5986)) void _IAgVAAttitudeControlFiniteTimeVarying::PutElA ( double pVal );
__declspec(implementation_key(5987)) double _IAgVAAttitudeControlFiniteTimeVarying::GetElF ( );
__declspec(implementation_key(5988)) void _IAgVAAttitudeControlFiniteTimeVarying::PutElF ( double pVal );
__declspec(implementation_key(5989)) double _IAgVAAttitudeControlFiniteTimeVarying::GetElP ( );
__declspec(implementation_key(5990)) void _IAgVAAttitudeControlFiniteTimeVarying::PutElP ( double pVal );
__declspec(implementation_key(5991)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlFiniteTimeVarying::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(5992)) _bstr_t IAgVAAttitudeControlFiniteTimeVarying::GetThrustAxesName ( );
__declspec(implementation_key(5993)) void IAgVAAttitudeControlFiniteTimeVarying::PutThrustAxesName ( _bstr_t pVal );
__declspec(implementation_key(5994)) STKUtil::IAgDirectionPtr IAgVAAttitudeControlFiniteTimeVarying::GetBodyConstraintVector ( );
__declspec(implementation_key(5995)) double IAgVAAttitudeControlFiniteTimeVarying::GetAz0 ( );
__declspec(implementation_key(5996)) void IAgVAAttitudeControlFiniteTimeVarying::PutAz0 ( double pVal );
__declspec(implementation_key(5997)) double IAgVAAttitudeControlFiniteTimeVarying::GetAz1 ( );
__declspec(implementation_key(5998)) void IAgVAAttitudeControlFiniteTimeVarying::PutAz1 ( double pVal );
__declspec(implementation_key(5999)) double IAgVAAttitudeControlFiniteTimeVarying::GetAz2 ( );
__declspec(implementation_key(6000)) void IAgVAAttitudeControlFiniteTimeVarying::PutAz2 ( double pVal );
__declspec(implementation_key(6001)) double IAgVAAttitudeControlFiniteTimeVarying::GetAz3 ( );
__declspec(implementation_key(6002)) void IAgVAAttitudeControlFiniteTimeVarying::PutAz3 ( double pVal );
__declspec(implementation_key(6003)) double IAgVAAttitudeControlFiniteTimeVarying::GetAz4 ( );
__declspec(implementation_key(6004)) void IAgVAAttitudeControlFiniteTimeVarying::PutAz4 ( double pVal );
__declspec(implementation_key(6005)) double IAgVAAttitudeControlFiniteTimeVarying::GetAzA ( );
__declspec(implementation_key(6006)) void IAgVAAttitudeControlFiniteTimeVarying::PutAzA ( double pVal );
__declspec(implementation_key(6007)) double IAgVAAttitudeControlFiniteTimeVarying::GetAzF ( );
__declspec(implementation_key(6008)) void IAgVAAttitudeControlFiniteTimeVarying::PutAzF ( double pVal );
__declspec(implementation_key(6009)) double IAgVAAttitudeControlFiniteTimeVarying::GetAzP ( );
__declspec(implementation_key(6010)) void IAgVAAttitudeControlFiniteTimeVarying::PutAzP ( double pVal );
__declspec(implementation_key(6011)) double IAgVAAttitudeControlFiniteTimeVarying::GetEl0 ( );
__declspec(implementation_key(6012)) void IAgVAAttitudeControlFiniteTimeVarying::PutEl0 ( double pVal );
__declspec(implementation_key(6013)) double IAgVAAttitudeControlFiniteTimeVarying::GetEl1 ( );
__declspec(implementation_key(6014)) void IAgVAAttitudeControlFiniteTimeVarying::PutEl1 ( double pVal );
__declspec(implementation_key(6015)) double IAgVAAttitudeControlFiniteTimeVarying::GetEl2 ( );
__declspec(implementation_key(6016)) void IAgVAAttitudeControlFiniteTimeVarying::PutEl2 ( double pVal );
__declspec(implementation_key(6017)) double IAgVAAttitudeControlFiniteTimeVarying::GetEl3 ( );
__declspec(implementation_key(6018)) void IAgVAAttitudeControlFiniteTimeVarying::PutEl3 ( double pVal );
__declspec(implementation_key(6019)) double IAgVAAttitudeControlFiniteTimeVarying::GetEl4 ( );
__declspec(implementation_key(6020)) void IAgVAAttitudeControlFiniteTimeVarying::PutEl4 ( double pVal );
__declspec(implementation_key(6021)) double IAgVAAttitudeControlFiniteTimeVarying::GetElA ( );
__declspec(implementation_key(6022)) void IAgVAAttitudeControlFiniteTimeVarying::PutElA ( double pVal );
__declspec(implementation_key(6023)) double IAgVAAttitudeControlFiniteTimeVarying::GetElF ( );
__declspec(implementation_key(6024)) void IAgVAAttitudeControlFiniteTimeVarying::PutElF ( double pVal );
__declspec(implementation_key(6025)) double IAgVAAttitudeControlFiniteTimeVarying::GetElP ( );
__declspec(implementation_key(6026)) void IAgVAAttitudeControlFiniteTimeVarying::PutElP ( double pVal );
__declspec(implementation_key(6027)) double _IAgVAAttitudeControlFiniteVelocityVector::GetLeadDuration ( );
__declspec(implementation_key(6028)) void _IAgVAAttitudeControlFiniteVelocityVector::PutLeadDuration ( double pVal );
__declspec(implementation_key(6029)) double _IAgVAAttitudeControlFiniteVelocityVector::GetTrailDuration ( );
__declspec(implementation_key(6030)) void _IAgVAAttitudeControlFiniteVelocityVector::PutTrailDuration ( double pVal );
__declspec(implementation_key(6031)) enum AgEVABodyAxis _IAgVAAttitudeControlFiniteVelocityVector::GetBodyAxis ( );
__declspec(implementation_key(6032)) void _IAgVAAttitudeControlFiniteVelocityVector::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(6033)) enum AgEVAConstraintSign _IAgVAAttitudeControlFiniteVelocityVector::GetConstraintSign ( );
__declspec(implementation_key(6034)) void _IAgVAAttitudeControlFiniteVelocityVector::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(6035)) _bstr_t _IAgVAAttitudeControlFiniteVelocityVector::GetConstraintVectorName ( );
__declspec(implementation_key(6036)) void _IAgVAAttitudeControlFiniteVelocityVector::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(6037)) enum AgEVACustomFunction _IAgVAAttitudeControlFiniteVelocityVector::GetCustomFunction ( );
__declspec(implementation_key(6038)) void _IAgVAAttitudeControlFiniteVelocityVector::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(6039)) enum AgEVAAttitudeUpdate _IAgVAAttitudeControlFiniteVelocityVector::GetAttitudeUpdate ( );
__declspec(implementation_key(6040)) void _IAgVAAttitudeControlFiniteVelocityVector::PutAttitudeUpdate ( enum AgEVAAttitudeUpdate pVal );
__declspec(implementation_key(6041)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlFiniteVelocityVector::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6042)) STKUtil::IAgDirectionPtr _IAgVAAttitudeControlFiniteVelocityVector::GetBodyConstraintVector ( );
__declspec(implementation_key(6043)) enum AgEVAAttitudeUpdate IAgVAAttitudeControlFiniteVelocityVector::GetAttitudeUpdate ( );
__declspec(implementation_key(6044)) void IAgVAAttitudeControlFiniteVelocityVector::PutAttitudeUpdate ( enum AgEVAAttitudeUpdate pVal );
__declspec(implementation_key(6045)) STKUtil::IAgDirectionPtr IAgVAAttitudeControlFiniteVelocityVector::GetBodyConstraintVector ( );
__declspec(implementation_key(6046)) double _IAgVAAttitudeControlFinitePlugin::GetLeadDuration ( );
__declspec(implementation_key(6047)) void _IAgVAAttitudeControlFinitePlugin::PutLeadDuration ( double pVal );
__declspec(implementation_key(6048)) double _IAgVAAttitudeControlFinitePlugin::GetTrailDuration ( );
__declspec(implementation_key(6049)) void _IAgVAAttitudeControlFinitePlugin::PutTrailDuration ( double pVal );
__declspec(implementation_key(6050)) enum AgEVABodyAxis _IAgVAAttitudeControlFinitePlugin::GetBodyAxis ( );
__declspec(implementation_key(6051)) void _IAgVAAttitudeControlFinitePlugin::PutBodyAxis ( enum AgEVABodyAxis pVal );
__declspec(implementation_key(6052)) enum AgEVAConstraintSign _IAgVAAttitudeControlFinitePlugin::GetConstraintSign ( );
__declspec(implementation_key(6053)) void _IAgVAAttitudeControlFinitePlugin::PutConstraintSign ( enum AgEVAConstraintSign pVal );
__declspec(implementation_key(6054)) _bstr_t _IAgVAAttitudeControlFinitePlugin::GetConstraintVectorName ( );
__declspec(implementation_key(6055)) void _IAgVAAttitudeControlFinitePlugin::PutConstraintVectorName ( _bstr_t pVal );
__declspec(implementation_key(6056)) enum AgEVACustomFunction _IAgVAAttitudeControlFinitePlugin::GetCustomFunction ( );
__declspec(implementation_key(6057)) void _IAgVAAttitudeControlFinitePlugin::PutCustomFunction ( enum AgEVACustomFunction pVal );
__declspec(implementation_key(6058)) HRESULT _IAgVAAttitudeControlFinitePlugin::SelectPluginByName ( _bstr_t Name );
__declspec(implementation_key(6059)) _bstr_t _IAgVAAttitudeControlFinitePlugin::GetPluginName ( );
__declspec(implementation_key(6060)) IAgVAPluginPropertiesPtr _IAgVAAttitudeControlFinitePlugin::GetPluginConfig ( );
__declspec(implementation_key(6061)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAAttitudeControlFinitePlugin::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6062)) HRESULT IAgVAAttitudeControlFinitePlugin::SelectPluginByName ( _bstr_t Name );
__declspec(implementation_key(6063)) _bstr_t IAgVAAttitudeControlFinitePlugin::GetPluginName ( );
__declspec(implementation_key(6064)) IAgVAPluginPropertiesPtr IAgVAAttitudeControlFinitePlugin::GetPluginConfig ( );
__declspec(implementation_key(6065)) _bstr_t _IAgVAManeuverFinitePropagator::GetPropagatorName ( );
__declspec(implementation_key(6066)) void _IAgVAManeuverFinitePropagator::PutPropagatorName ( _bstr_t pVal );
__declspec(implementation_key(6067)) IAgVAStoppingConditionCollectionPtr _IAgVAManeuverFinitePropagator::GetStoppingConditions ( );
__declspec(implementation_key(6068)) double _IAgVAManeuverFinitePropagator::GetMinPropagationTime ( );
__declspec(implementation_key(6069)) void _IAgVAManeuverFinitePropagator::PutMinPropagationTime ( double pVal );
__declspec(implementation_key(6070)) double _IAgVAManeuverFinitePropagator::GetMaxPropagationTime ( );
__declspec(implementation_key(6071)) void _IAgVAManeuverFinitePropagator::PutMaxPropagationTime ( double pVal );
__declspec(implementation_key(6072)) VARIANT_BOOL _IAgVAManeuverFinitePropagator::GetEnableMaxPropagationTime ( );
__declspec(implementation_key(6073)) void _IAgVAManeuverFinitePropagator::PutEnableMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(6074)) VARIANT_BOOL _IAgVAManeuverFinitePropagator::GetEnableWarningMessage ( );
__declspec(implementation_key(6075)) void _IAgVAManeuverFinitePropagator::PutEnableWarningMessage ( VARIANT_BOOL pVal );
__declspec(implementation_key(6076)) VARIANT_BOOL _IAgVAManeuverFinitePropagator::GetEnableCenterBurn ( );
__declspec(implementation_key(6077)) void _IAgVAManeuverFinitePropagator::PutEnableCenterBurn ( VARIANT_BOOL pVal );
__declspec(implementation_key(6078)) double _IAgVAManeuverFinitePropagator::GetBias ( );
__declspec(implementation_key(6079)) void _IAgVAManeuverFinitePropagator::PutBias ( double pVal );
__declspec(implementation_key(6080)) VARIANT_BOOL _IAgVAManeuverFinitePropagator::GetOverrideMaxPropagationTime ( );
__declspec(implementation_key(6081)) void _IAgVAManeuverFinitePropagator::PutOverrideMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(6082)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAManeuverFinitePropagator::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6083)) enum AgEVASegmentType _IAgVAMCSHold::GetType ( );
__declspec(implementation_key(6084)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSHold::GetProperties ( );
__declspec(implementation_key(6085)) IAgVAStatePtr _IAgVAMCSHold::GetInitialState ( );
__declspec(implementation_key(6086)) IAgVAStatePtr _IAgVAMCSHold::GetFinalState ( );
__declspec(implementation_key(6087)) _variant_t _IAgVAMCSHold::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(6088)) IAgVAStatePtr _IAgVAMCSHold::Run ( );
__declspec(implementation_key(6089)) IAgVACalcObjectCollectionPtr _IAgVAMCSHold::GetResults ( );
__declspec(implementation_key(6090)) STKObjects::IAgDrResultPtr _IAgVAMCSHold::GetExecSummary ( );
__declspec(implementation_key(6091)) double _IAgVAMCSHold::GetStepSize ( );
__declspec(implementation_key(6092)) void _IAgVAMCSHold::PutStepSize ( double pVal );
__declspec(implementation_key(6093)) _bstr_t _IAgVAMCSHold::GetHoldFrameName ( );
__declspec(implementation_key(6094)) void _IAgVAMCSHold::PutHoldFrameName ( _bstr_t pVal );
__declspec(implementation_key(6095)) VARIANT_BOOL _IAgVAMCSHold::GetEnableHoldAttitude ( );
__declspec(implementation_key(6096)) void _IAgVAMCSHold::PutEnableHoldAttitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(6097)) IAgVAStoppingConditionCollectionPtr _IAgVAMCSHold::GetStoppingConditions ( );
__declspec(implementation_key(6098)) double _IAgVAMCSHold::GetMinPropagationTime ( );
__declspec(implementation_key(6099)) void _IAgVAMCSHold::PutMinPropagationTime ( double pVal );
__declspec(implementation_key(6100)) double _IAgVAMCSHold::GetMaxPropagationTime ( );
__declspec(implementation_key(6101)) void _IAgVAMCSHold::PutMaxPropagationTime ( double pVal );
__declspec(implementation_key(6102)) VARIANT_BOOL _IAgVAMCSHold::GetEnableMaxPropagationTime ( );
__declspec(implementation_key(6103)) void _IAgVAMCSHold::PutEnableMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(6104)) VARIANT_BOOL _IAgVAMCSHold::GetEnableWarningMessage ( );
__declspec(implementation_key(6105)) void _IAgVAMCSHold::PutEnableWarningMessage ( VARIANT_BOOL pVal );
__declspec(implementation_key(6106)) HRESULT _IAgVAMCSHold::EnableControlParameter ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(6107)) HRESULT _IAgVAMCSHold::DisableControlParameter ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(6108)) VARIANT_BOOL _IAgVAMCSHold::IsControlParameterEnabled ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(6109)) VARIANT_BOOL _IAgVAMCSHold::GetControlParametersAvailable ( );
__declspec(implementation_key(6110)) _bstr_t _IAgVAMCSHold::GetName ( );
__declspec(implementation_key(6111)) void _IAgVAMCSHold::PutName ( _bstr_t pVal );
__declspec(implementation_key(6112)) _bstr_t _IAgVAMCSHold::GetUserComment ( );
__declspec(implementation_key(6113)) void _IAgVAMCSHold::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6114)) _bstr_t _IAgVAMCSHold::GetDescription ( );
__declspec(implementation_key(6115)) VARIANT_BOOL _IAgVAMCSHold::IsReadOnly ( );
__declspec(implementation_key(6116)) IUnknownPtr _IAgVAMCSHold::CloneObject ( );
__declspec(implementation_key(6117)) VARIANT_BOOL _IAgVAMCSHold::GetOverrideMaxPropagationTime ( );
__declspec(implementation_key(6118)) void _IAgVAMCSHold::PutOverrideMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(6119)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSHold::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6120)) double IAgVAMCSHold::GetStepSize ( );
__declspec(implementation_key(6121)) void IAgVAMCSHold::PutStepSize ( double pVal );
__declspec(implementation_key(6122)) _bstr_t IAgVAMCSHold::GetHoldFrameName ( );
__declspec(implementation_key(6123)) void IAgVAMCSHold::PutHoldFrameName ( _bstr_t pVal );
__declspec(implementation_key(6124)) VARIANT_BOOL IAgVAMCSHold::GetEnableHoldAttitude ( );
__declspec(implementation_key(6125)) void IAgVAMCSHold::PutEnableHoldAttitude ( VARIANT_BOOL pVal );
__declspec(implementation_key(6126)) IAgVAStoppingConditionCollectionPtr IAgVAMCSHold::GetStoppingConditions ( );
__declspec(implementation_key(6127)) double IAgVAMCSHold::GetMinPropagationTime ( );
__declspec(implementation_key(6128)) void IAgVAMCSHold::PutMinPropagationTime ( double pVal );
__declspec(implementation_key(6129)) double IAgVAMCSHold::GetMaxPropagationTime ( );
__declspec(implementation_key(6130)) void IAgVAMCSHold::PutMaxPropagationTime ( double pVal );
__declspec(implementation_key(6131)) VARIANT_BOOL IAgVAMCSHold::GetEnableMaxPropagationTime ( );
__declspec(implementation_key(6132)) void IAgVAMCSHold::PutEnableMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(6133)) VARIANT_BOOL IAgVAMCSHold::GetEnableWarningMessage ( );
__declspec(implementation_key(6134)) void IAgVAMCSHold::PutEnableWarningMessage ( VARIANT_BOOL pVal );
__declspec(implementation_key(6135)) HRESULT IAgVAMCSHold::EnableControlParameter ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(6136)) HRESULT IAgVAMCSHold::DisableControlParameter ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(6137)) VARIANT_BOOL IAgVAMCSHold::IsControlParameterEnabled ( enum AgEVAControlAdvanced Param );
__declspec(implementation_key(6138)) VARIANT_BOOL IAgVAMCSHold::GetControlParametersAvailable ( );
__declspec(implementation_key(6139)) VARIANT_BOOL IAgVAMCSHold::GetOverrideMaxPropagationTime ( );
__declspec(implementation_key(6140)) void IAgVAMCSHold::PutOverrideMaxPropagationTime ( VARIANT_BOOL pVal );
__declspec(implementation_key(6141)) _bstr_t IAgVAUserVariableUpdate::GetUnitDimension ( );
__declspec(implementation_key(6142)) _bstr_t IAgVAUserVariableUpdate::GetVariableName ( );
__declspec(implementation_key(6143)) _variant_t IAgVAUserVariableUpdate::GetVariableValue ( );
__declspec(implementation_key(6144)) void IAgVAUserVariableUpdate::PutVariableValue ( const _variant_t & pVal );
__declspec(implementation_key(6145)) enum AgEVAUpdateAction IAgVAUserVariableUpdate::GetVariableAction ( );
__declspec(implementation_key(6146)) void IAgVAUserVariableUpdate::PutVariableAction ( enum AgEVAUpdateAction pVal );
__declspec(implementation_key(6147)) HRESULT IAgVAUserVariableUpdate::EnableControlParameter ( );
__declspec(implementation_key(6148)) HRESULT IAgVAUserVariableUpdate::DisableControlParameter ( );
__declspec(implementation_key(6149)) VARIANT_BOOL IAgVAUserVariableUpdate::IsControlParameterEnabled ( );
__declspec(implementation_key(6150)) VARIANT_BOOL IAgVAUserVariableUpdate::GetControlParametersAvailable ( );
__declspec(implementation_key(6151)) IAgVAUserVariableUpdatePtr IAgVAUserVariableUpdateCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(6152)) IUnknownPtr IAgVAUserVariableUpdateCollection::Get_NewEnum ( );
__declspec(implementation_key(6153)) long IAgVAUserVariableUpdateCollection::GetCount ( );
__declspec(implementation_key(6154)) enum AgEVASegmentType _IAgVAMCSUpdate::GetType ( );
__declspec(implementation_key(6155)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSUpdate::GetProperties ( );
__declspec(implementation_key(6156)) IAgVAStatePtr _IAgVAMCSUpdate::GetInitialState ( );
__declspec(implementation_key(6157)) IAgVAStatePtr _IAgVAMCSUpdate::GetFinalState ( );
__declspec(implementation_key(6158)) _variant_t _IAgVAMCSUpdate::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(6159)) IAgVAStatePtr _IAgVAMCSUpdate::Run ( );
__declspec(implementation_key(6160)) IAgVACalcObjectCollectionPtr _IAgVAMCSUpdate::GetResults ( );
__declspec(implementation_key(6161)) STKObjects::IAgDrResultPtr _IAgVAMCSUpdate::GetExecSummary ( );
__declspec(implementation_key(6162)) HRESULT _IAgVAMCSUpdate::SetActionAndValue ( enum AgEVAUpdateParam ParameterType, enum AgEVAUpdateAction ActionType, double Value );
__declspec(implementation_key(6163)) enum AgEVAUpdateAction _IAgVAMCSUpdate::GetAction ( enum AgEVAUpdateParam ParameterType );
__declspec(implementation_key(6164)) double _IAgVAMCSUpdate::GetValue ( enum AgEVAUpdateParam ParameterType );
__declspec(implementation_key(6165)) HRESULT _IAgVAMCSUpdate::SetAction ( enum AgEVAUpdateParam ParameterName, enum AgEVAUpdateAction ActionType );
__declspec(implementation_key(6166)) HRESULT _IAgVAMCSUpdate::SetValue ( enum AgEVAUpdateParam ParameterName, double Value );
__declspec(implementation_key(6167)) HRESULT _IAgVAMCSUpdate::DisableControlParameter ( enum AgEVAControlUpdate Param );
__declspec(implementation_key(6168)) HRESULT _IAgVAMCSUpdate::EnableControlParameter ( enum AgEVAControlUpdate Param );
__declspec(implementation_key(6169)) VARIANT_BOOL _IAgVAMCSUpdate::IsControlParameterEnabled ( enum AgEVAControlUpdate Param );
__declspec(implementation_key(6170)) VARIANT_BOOL _IAgVAMCSUpdate::GetControlParametersAvailable ( );
__declspec(implementation_key(6171)) _bstr_t _IAgVAMCSUpdate::GetName ( );
__declspec(implementation_key(6172)) void _IAgVAMCSUpdate::PutName ( _bstr_t pVal );
__declspec(implementation_key(6173)) _bstr_t _IAgVAMCSUpdate::GetUserComment ( );
__declspec(implementation_key(6174)) void _IAgVAMCSUpdate::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6175)) _bstr_t _IAgVAMCSUpdate::GetDescription ( );
__declspec(implementation_key(6176)) VARIANT_BOOL _IAgVAMCSUpdate::IsReadOnly ( );
__declspec(implementation_key(6177)) IUnknownPtr _IAgVAMCSUpdate::CloneObject ( );
__declspec(implementation_key(6178)) IAgVAUserVariableUpdateCollectionPtr _IAgVAMCSUpdate::GetUserVariables ( );
__declspec(implementation_key(6179)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSUpdate::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6180)) HRESULT IAgVAMCSUpdate::SetActionAndValue ( enum AgEVAUpdateParam ParameterType, enum AgEVAUpdateAction ActionType, double Value );
__declspec(implementation_key(6181)) enum AgEVAUpdateAction IAgVAMCSUpdate::GetAction ( enum AgEVAUpdateParam ParameterType );
__declspec(implementation_key(6182)) double IAgVAMCSUpdate::GetValue ( enum AgEVAUpdateParam ParameterType );
__declspec(implementation_key(6183)) HRESULT IAgVAMCSUpdate::SetAction ( enum AgEVAUpdateParam ParameterName, enum AgEVAUpdateAction ActionType );
__declspec(implementation_key(6184)) HRESULT IAgVAMCSUpdate::SetValue ( enum AgEVAUpdateParam ParameterName, double Value );
__declspec(implementation_key(6185)) HRESULT IAgVAMCSUpdate::DisableControlParameter ( enum AgEVAControlUpdate Param );
__declspec(implementation_key(6186)) HRESULT IAgVAMCSUpdate::EnableControlParameter ( enum AgEVAControlUpdate Param );
__declspec(implementation_key(6187)) VARIANT_BOOL IAgVAMCSUpdate::IsControlParameterEnabled ( enum AgEVAControlUpdate Param );
__declspec(implementation_key(6188)) VARIANT_BOOL IAgVAMCSUpdate::GetControlParametersAvailable ( );
__declspec(implementation_key(6189)) IAgVAUserVariableUpdateCollectionPtr IAgVAMCSUpdate::GetUserVariables ( );
__declspec(implementation_key(6190)) enum AgEVASegmentType _IAgVAMCSReturn::GetType ( );
__declspec(implementation_key(6191)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSReturn::GetProperties ( );
__declspec(implementation_key(6192)) IAgVAStatePtr _IAgVAMCSReturn::GetInitialState ( );
__declspec(implementation_key(6193)) IAgVAStatePtr _IAgVAMCSReturn::GetFinalState ( );
__declspec(implementation_key(6194)) _variant_t _IAgVAMCSReturn::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(6195)) IAgVAStatePtr _IAgVAMCSReturn::Run ( );
__declspec(implementation_key(6196)) IAgVACalcObjectCollectionPtr _IAgVAMCSReturn::GetResults ( );
__declspec(implementation_key(6197)) STKObjects::IAgDrResultPtr _IAgVAMCSReturn::GetExecSummary ( );
__declspec(implementation_key(6198)) enum AgEVAReturnControl _IAgVAMCSReturn::GetReturnControlToParentSequence ( );
__declspec(implementation_key(6199)) void _IAgVAMCSReturn::PutReturnControlToParentSequence ( enum AgEVAReturnControl pVal );
__declspec(implementation_key(6200)) _bstr_t _IAgVAMCSReturn::GetName ( );
__declspec(implementation_key(6201)) void _IAgVAMCSReturn::PutName ( _bstr_t pVal );
__declspec(implementation_key(6202)) _bstr_t _IAgVAMCSReturn::GetUserComment ( );
__declspec(implementation_key(6203)) void _IAgVAMCSReturn::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6204)) _bstr_t _IAgVAMCSReturn::GetDescription ( );
__declspec(implementation_key(6205)) VARIANT_BOOL _IAgVAMCSReturn::IsReadOnly ( );
__declspec(implementation_key(6206)) IUnknownPtr _IAgVAMCSReturn::CloneObject ( );
__declspec(implementation_key(6207)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSReturn::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6208)) enum AgEVAReturnControl IAgVAMCSReturn::GetReturnControlToParentSequence ( );
__declspec(implementation_key(6209)) void IAgVAMCSReturn::PutReturnControlToParentSequence ( enum AgEVAReturnControl pVal );
__declspec(implementation_key(6210)) enum AgEVASegmentType _IAgVAMCSStop::GetType ( );
__declspec(implementation_key(6211)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSStop::GetProperties ( );
__declspec(implementation_key(6212)) IAgVAStatePtr _IAgVAMCSStop::GetInitialState ( );
__declspec(implementation_key(6213)) IAgVAStatePtr _IAgVAMCSStop::GetFinalState ( );
__declspec(implementation_key(6214)) _variant_t _IAgVAMCSStop::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(6215)) IAgVAStatePtr _IAgVAMCSStop::Run ( );
__declspec(implementation_key(6216)) IAgVACalcObjectCollectionPtr _IAgVAMCSStop::GetResults ( );
__declspec(implementation_key(6217)) STKObjects::IAgDrResultPtr _IAgVAMCSStop::GetExecSummary ( );
__declspec(implementation_key(6218)) VARIANT_BOOL _IAgVAMCSStop::GetEnabled ( );
__declspec(implementation_key(6219)) void _IAgVAMCSStop::PutEnabled ( VARIANT_BOOL pVal );
__declspec(implementation_key(6220)) _bstr_t _IAgVAMCSStop::GetName ( );
__declspec(implementation_key(6221)) void _IAgVAMCSStop::PutName ( _bstr_t pVal );
__declspec(implementation_key(6222)) _bstr_t _IAgVAMCSStop::GetUserComment ( );
__declspec(implementation_key(6223)) void _IAgVAMCSStop::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6224)) _bstr_t _IAgVAMCSStop::GetDescription ( );
__declspec(implementation_key(6225)) VARIANT_BOOL _IAgVAMCSStop::IsReadOnly ( );
__declspec(implementation_key(6226)) IUnknownPtr _IAgVAMCSStop::CloneObject ( );
__declspec(implementation_key(6227)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSStop::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6228)) VARIANT_BOOL IAgVAMCSStop::GetEnabled ( );
__declspec(implementation_key(6229)) void IAgVAMCSStop::PutEnabled ( VARIANT_BOOL pVal );
__declspec(implementation_key(6230)) IAgVAProfilePtr IAgVAProfile::Copy ( );
__declspec(implementation_key(6231)) _bstr_t IAgVAProfile::GetName ( );
__declspec(implementation_key(6232)) void IAgVAProfile::PutName ( _bstr_t pVal );
__declspec(implementation_key(6233)) _bstr_t IAgVAProfile::GetStatus ( );
__declspec(implementation_key(6234)) _bstr_t IAgVAProfile::GetUserComment ( );
__declspec(implementation_key(6235)) void IAgVAProfile::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6236)) enum AgEVAProfileMode IAgVAProfile::GetMode ( );
__declspec(implementation_key(6237)) void IAgVAProfile::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(6238)) enum AgEVAProfile IAgVAProfile::GetType ( );
__declspec(implementation_key(6239)) IAgVAProfilePtr IAgVAProfileCollection::Add ( _bstr_t ProfileName );
__declspec(implementation_key(6240)) IAgVAProfilePtr IAgVAProfileCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(6241)) IUnknownPtr IAgVAProfileCollection::Get_NewEnum ( );
__declspec(implementation_key(6242)) long IAgVAProfileCollection::GetCount ( );
__declspec(implementation_key(6243)) SAFEARRAY * IAgVAProfileCollection::GetAvailableProfiles ( );
__declspec(implementation_key(6244)) HRESULT IAgVAProfileCollection::Remove ( const _variant_t & IndexOrProfileName );
__declspec(implementation_key(6245)) HRESULT IAgVAProfileCollection::RemoveAll ( );
__declspec(implementation_key(6246)) STKUtil::IAgRuntimeTypeInfoPtr IAgVAProfileCollection::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6247)) HRESULT IAgVAProfileCollection::Cut ( const _variant_t & IndexOrName );
__declspec(implementation_key(6248)) IAgVAProfilePtr IAgVAProfileCollection::Paste ( const _variant_t & IndexOrName, enum AgEVAProfileInsertDirection Direction );
__declspec(implementation_key(6249)) IAgVAProfilePtr IAgVAProfileCollection::InsertCopy ( struct IAgVAProfile * Profile, const _variant_t & IndexOrName, enum AgEVAProfileInsertDirection Direction );
__declspec(implementation_key(6250)) IAgVAProfilePtr IAgVAProfileCollection::Add2 ( _bstr_t ProfileName, const _variant_t & IndexOrName, enum AgEVAProfileInsertDirection Direction );
__declspec(implementation_key(6251)) enum AgEVASegmentType _IAgVAMCSTargetSequence::GetType ( );
__declspec(implementation_key(6252)) IAgVAMCSSegmentPropertiesPtr _IAgVAMCSTargetSequence::GetProperties ( );
__declspec(implementation_key(6253)) IAgVAStatePtr _IAgVAMCSTargetSequence::GetInitialState ( );
__declspec(implementation_key(6254)) IAgVAStatePtr _IAgVAMCSTargetSequence::GetFinalState ( );
__declspec(implementation_key(6255)) _variant_t _IAgVAMCSTargetSequence::GetResultValue ( _bstr_t ResultName );
__declspec(implementation_key(6256)) IAgVAStatePtr _IAgVAMCSTargetSequence::Run ( );
__declspec(implementation_key(6257)) IAgVACalcObjectCollectionPtr _IAgVAMCSTargetSequence::GetResults ( );
__declspec(implementation_key(6258)) STKObjects::IAgDrResultPtr _IAgVAMCSTargetSequence::GetExecSummary ( );
__declspec(implementation_key(6259)) enum AgEVATargetSeqAction _IAgVAMCSTargetSequence::GetAction ( );
__declspec(implementation_key(6260)) void _IAgVAMCSTargetSequence::PutAction ( enum AgEVATargetSeqAction pVal );
__declspec(implementation_key(6261)) enum AgEVAProfilesFinish _IAgVAMCSTargetSequence::GetWhenProfilesFinish ( );
__declspec(implementation_key(6262)) void _IAgVAMCSTargetSequence::PutWhenProfilesFinish ( enum AgEVAProfilesFinish pVal );
__declspec(implementation_key(6263)) VARIANT_BOOL _IAgVAMCSTargetSequence::GetContinueOnFailure ( );
__declspec(implementation_key(6264)) void _IAgVAMCSTargetSequence::PutContinueOnFailure ( VARIANT_BOOL pVal );
__declspec(implementation_key(6265)) IAgVAMCSSegmentCollectionPtr _IAgVAMCSTargetSequence::GetSegments ( );
__declspec(implementation_key(6266)) IAgVAProfileCollectionPtr _IAgVAMCSTargetSequence::GetProfiles ( );
__declspec(implementation_key(6267)) HRESULT _IAgVAMCSTargetSequence::ApplyProfiles ( );
__declspec(implementation_key(6268)) HRESULT _IAgVAMCSTargetSequence::ResetProfiles ( );
__declspec(implementation_key(6269)) HRESULT _IAgVAMCSTargetSequence::ApplyProfile ( struct IAgVAProfile * Profile );
__declspec(implementation_key(6270)) HRESULT _IAgVAMCSTargetSequence::ResetProfile ( struct IAgVAProfile * Profile );
__declspec(implementation_key(6271)) HRESULT _IAgVAMCSTargetSequence::ApplyProfileByName ( _bstr_t Profile );
__declspec(implementation_key(6272)) HRESULT _IAgVAMCSTargetSequence::ResetProfileByName ( _bstr_t Profile );
__declspec(implementation_key(6273)) _bstr_t _IAgVAMCSTargetSequence::GetName ( );
__declspec(implementation_key(6274)) void _IAgVAMCSTargetSequence::PutName ( _bstr_t pVal );
__declspec(implementation_key(6275)) _bstr_t _IAgVAMCSTargetSequence::GetUserComment ( );
__declspec(implementation_key(6276)) void _IAgVAMCSTargetSequence::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6277)) _bstr_t _IAgVAMCSTargetSequence::GetDescription ( );
__declspec(implementation_key(6278)) VARIANT_BOOL _IAgVAMCSTargetSequence::IsReadOnly ( );
__declspec(implementation_key(6279)) IUnknownPtr _IAgVAMCSTargetSequence::CloneObject ( );
__declspec(implementation_key(6280)) VARIANT_BOOL _IAgVAMCSTargetSequence::GetResetInnerTargeters ( );
__declspec(implementation_key(6281)) void _IAgVAMCSTargetSequence::PutResetInnerTargeters ( VARIANT_BOOL pVal );
__declspec(implementation_key(6282)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSTargetSequence::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6283)) enum AgEVATargetSeqAction IAgVAMCSTargetSequence::GetAction ( );
__declspec(implementation_key(6284)) void IAgVAMCSTargetSequence::PutAction ( enum AgEVATargetSeqAction pVal );
__declspec(implementation_key(6285)) enum AgEVAProfilesFinish IAgVAMCSTargetSequence::GetWhenProfilesFinish ( );
__declspec(implementation_key(6286)) void IAgVAMCSTargetSequence::PutWhenProfilesFinish ( enum AgEVAProfilesFinish pVal );
__declspec(implementation_key(6287)) VARIANT_BOOL IAgVAMCSTargetSequence::GetContinueOnFailure ( );
__declspec(implementation_key(6288)) void IAgVAMCSTargetSequence::PutContinueOnFailure ( VARIANT_BOOL pVal );
__declspec(implementation_key(6289)) IAgVAMCSSegmentCollectionPtr IAgVAMCSTargetSequence::GetSegments ( );
__declspec(implementation_key(6290)) IAgVAProfileCollectionPtr IAgVAMCSTargetSequence::GetProfiles ( );
__declspec(implementation_key(6291)) HRESULT IAgVAMCSTargetSequence::ApplyProfiles ( );
__declspec(implementation_key(6292)) HRESULT IAgVAMCSTargetSequence::ResetProfiles ( );
__declspec(implementation_key(6293)) HRESULT IAgVAMCSTargetSequence::ApplyProfile ( struct IAgVAProfile * Profile );
__declspec(implementation_key(6294)) HRESULT IAgVAMCSTargetSequence::ResetProfile ( struct IAgVAProfile * Profile );
__declspec(implementation_key(6295)) HRESULT IAgVAMCSTargetSequence::ApplyProfileByName ( _bstr_t Profile );
__declspec(implementation_key(6296)) HRESULT IAgVAMCSTargetSequence::ResetProfileByName ( _bstr_t Profile );
__declspec(implementation_key(6297)) VARIANT_BOOL IAgVAMCSTargetSequence::GetResetInnerTargeters ( );
__declspec(implementation_key(6298)) void IAgVAMCSTargetSequence::PutResetInnerTargeters ( VARIANT_BOOL pVal );
__declspec(implementation_key(6299)) VARIANT_BOOL _IAgVAMCSOptions::GetDrawTrajectoryIn2D ( );
__declspec(implementation_key(6300)) void _IAgVAMCSOptions::PutDrawTrajectoryIn2D ( VARIANT_BOOL pVal );
__declspec(implementation_key(6301)) VARIANT_BOOL _IAgVAMCSOptions::GetDrawTrajectoryIn3D ( );
__declspec(implementation_key(6302)) void _IAgVAMCSOptions::PutDrawTrajectoryIn3D ( VARIANT_BOOL pVal );
__declspec(implementation_key(6303)) VARIANT_BOOL _IAgVAMCSOptions::GetUpdateAnimationTimeForAllObjects ( );
__declspec(implementation_key(6304)) void _IAgVAMCSOptions::PutUpdateAnimationTimeForAllObjects ( VARIANT_BOOL pVal );
__declspec(implementation_key(6305)) VARIANT_BOOL _IAgVAMCSOptions::GetClearDWCGraphicsBeforeEachRun ( );
__declspec(implementation_key(6306)) void _IAgVAMCSOptions::PutClearDWCGraphicsBeforeEachRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(6307)) VARIANT_BOOL _IAgVAMCSOptions::GetClearAdditionalBPlanePoints ( );
__declspec(implementation_key(6308)) void _IAgVAMCSOptions::PutClearAdditionalBPlanePoints ( VARIANT_BOOL pVal );
__declspec(implementation_key(6309)) VARIANT_BOOL _IAgVAMCSOptions::GetPropagateOnApply ( );
__declspec(implementation_key(6310)) void _IAgVAMCSOptions::PutPropagateOnApply ( VARIANT_BOOL pVal );
__declspec(implementation_key(6311)) VARIANT_BOOL _IAgVAMCSOptions::GetEnableTrajectorySegmentColors ( );
__declspec(implementation_key(6312)) void _IAgVAMCSOptions::PutEnableTrajectorySegmentColors ( VARIANT_BOOL pVal );
__declspec(implementation_key(6313)) VARIANT_BOOL _IAgVAMCSOptions::GetSaveNumbersInRawFormat ( );
__declspec(implementation_key(6314)) void _IAgVAMCSOptions::PutSaveNumbersInRawFormat ( VARIANT_BOOL pVal );
__declspec(implementation_key(6315)) double _IAgVAMCSOptions::GetStoppingConditionTimeTolerance ( );
__declspec(implementation_key(6316)) void _IAgVAMCSOptions::PutStoppingConditionTimeTolerance ( double pVal );
__declspec(implementation_key(6317)) VARIANT_BOOL _IAgVAMCSOptions::GetEnableSegmentControls ( );
__declspec(implementation_key(6318)) void _IAgVAMCSOptions::PutEnableSegmentControls ( VARIANT_BOOL pVal );
__declspec(implementation_key(6319)) VARIANT_BOOL _IAgVAMCSOptions::GetEnableSegmentResults ( );
__declspec(implementation_key(6320)) void _IAgVAMCSOptions::PutEnableSegmentResults ( VARIANT_BOOL pVal );
__declspec(implementation_key(6321)) VARIANT_BOOL _IAgVAMCSOptions::GetEnableLogging ( );
__declspec(implementation_key(6322)) void _IAgVAMCSOptions::PutEnableLogging ( VARIANT_BOOL pVal );
__declspec(implementation_key(6323)) double _IAgVAMCSOptions::GetGraphicsUpdateRate ( );
__declspec(implementation_key(6324)) void _IAgVAMCSOptions::PutGraphicsUpdateRate ( double pVal );
__declspec(implementation_key(6325)) VARIANT_BOOL _IAgVAMCSOptions::GetPromoteControls ( );
__declspec(implementation_key(6326)) void _IAgVAMCSOptions::PutPromoteControls ( VARIANT_BOOL pVal );
__declspec(implementation_key(6327)) VARIANT_BOOL _IAgVAMCSOptions::GetUseNominalSettings ( );
__declspec(implementation_key(6328)) void _IAgVAMCSOptions::PutUseNominalSettings ( VARIANT_BOOL pVal );
__declspec(implementation_key(6329)) double _IAgVAMCSOptions::GetMinEphemStep ( );
__declspec(implementation_key(6330)) void _IAgVAMCSOptions::PutMinEphemStep ( double pVal );
__declspec(implementation_key(6331)) VARIANT_BOOL _IAgVAMCSOptions::GetGenerateEphemeris ( );
__declspec(implementation_key(6332)) void _IAgVAMCSOptions::PutGenerateEphemeris ( VARIANT_BOOL pVal );
__declspec(implementation_key(6333)) IAgVAUserVariableDefinitionCollectionPtr _IAgVAMCSOptions::GetUserVariables ( );
__declspec(implementation_key(6334)) enum AgEVASmartRunMode _IAgVAMCSOptions::GetSmartRunMode ( );
__declspec(implementation_key(6335)) void _IAgVAMCSOptions::PutSmartRunMode ( enum AgEVASmartRunMode pVal );
__declspec(implementation_key(6336)) _variant_t _IAgVAPluginProperties::GetProperty ( _bstr_t Path );
__declspec(implementation_key(6337)) HRESULT _IAgVAPluginProperties::SetProperty ( _bstr_t Path, const _variant_t & PropertyValue );
__declspec(implementation_key(6338)) SAFEARRAY * _IAgVAPluginProperties::GetAvailableProperties ( );
__declspec(implementation_key(6339)) _bstr_t IAgVASearchPluginControl::GetControlName ( );
__declspec(implementation_key(6340)) _variant_t IAgVASearchPluginControl::GetCurrentValue ( );
__declspec(implementation_key(6341)) _bstr_t IAgVASearchPluginControl::GetParentSegmentName ( );
__declspec(implementation_key(6342)) _variant_t IAgVASearchPluginControl::GetInitialValue ( );
__declspec(implementation_key(6343)) _bstr_t IAgVASearchPluginControl::GetPluginIdentifier ( );
__declspec(implementation_key(6344)) IAgVAPluginPropertiesPtr IAgVASearchPluginControl::GetPluginConfig ( );
__declspec(implementation_key(6345)) _bstr_t IAgVASearchPluginControl::GetDimension ( );
__declspec(implementation_key(6346)) VARIANT_BOOL IAgVASearchPluginControl::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6347)) void IAgVASearchPluginControl::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6348)) _bstr_t IAgVASearchPluginControl::GetCustomDisplayUnit ( );
__declspec(implementation_key(6349)) void IAgVASearchPluginControl::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6350)) SAFEARRAY * IAgVASearchPluginControl::GetValues ( );
__declspec(implementation_key(6351)) void IAgVASearchPluginControl::PutCurrentValue ( const _variant_t & pVal );
__declspec(implementation_key(6352)) IAgVASearchPluginControlPtr IAgVASearchPluginControlCollection::GetItem ( long Index );
__declspec(implementation_key(6353)) IUnknownPtr IAgVASearchPluginControlCollection::Get_NewEnum ( );
__declspec(implementation_key(6354)) long IAgVASearchPluginControlCollection::GetCount ( );
__declspec(implementation_key(6355)) IAgVASearchPluginControlPtr IAgVASearchPluginControlCollection::GetControlByPaths ( _bstr_t ObjectPath, _bstr_t ControlPath );
__declspec(implementation_key(6356)) _bstr_t IAgVASearchPluginResult::GetResultName ( );
__declspec(implementation_key(6357)) _variant_t IAgVASearchPluginResult::GetCurrentValue ( );
__declspec(implementation_key(6358)) _bstr_t IAgVASearchPluginResult::GetParentSegmentName ( );
__declspec(implementation_key(6359)) _bstr_t IAgVASearchPluginResult::GetPluginIdentifier ( );
__declspec(implementation_key(6360)) IAgVAPluginPropertiesPtr IAgVASearchPluginResult::GetPluginConfig ( );
__declspec(implementation_key(6361)) _bstr_t IAgVASearchPluginResult::GetDimension ( );
__declspec(implementation_key(6362)) VARIANT_BOOL IAgVASearchPluginResult::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6363)) void IAgVASearchPluginResult::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6364)) _bstr_t IAgVASearchPluginResult::GetCustomDisplayUnit ( );
__declspec(implementation_key(6365)) void IAgVASearchPluginResult::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6366)) SAFEARRAY * IAgVASearchPluginResult::GetValues ( );
__declspec(implementation_key(6367)) IAgVASearchPluginResultPtr IAgVASearchPluginResultCollection::GetItem ( long Index );
__declspec(implementation_key(6368)) IUnknownPtr IAgVASearchPluginResultCollection::Get_NewEnum ( );
__declspec(implementation_key(6369)) long IAgVASearchPluginResultCollection::GetCount ( );
__declspec(implementation_key(6370)) IAgVASearchPluginResultPtr IAgVASearchPluginResultCollection::GetResultByPaths ( _bstr_t ObjectPath, _bstr_t ResultPath );
__declspec(implementation_key(6371)) _bstr_t IAgVATargeterGraphActiveControl::GetName ( );
__declspec(implementation_key(6372)) _bstr_t IAgVATargeterGraphActiveControl::GetParentName ( );
__declspec(implementation_key(6373)) VARIANT_BOOL IAgVATargeterGraphActiveControl::GetShowGraphValue ( );
__declspec(implementation_key(6374)) void IAgVATargeterGraphActiveControl::PutShowGraphValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(6375)) OLE_COLOR IAgVATargeterGraphActiveControl::GetLineColor ( );
__declspec(implementation_key(6376)) void IAgVATargeterGraphActiveControl::PutLineColor ( OLE_COLOR pValue );
__declspec(implementation_key(6377)) _bstr_t IAgVATargeterGraphActiveControl::GetPointStyle ( );
__declspec(implementation_key(6378)) void IAgVATargeterGraphActiveControl::PutPointStyle ( _bstr_t pRetVal );
__declspec(implementation_key(6379)) _bstr_t IAgVATargeterGraphActiveControl::GetYAxis ( );
__declspec(implementation_key(6380)) void IAgVATargeterGraphActiveControl::PutYAxis ( _bstr_t pRetVal );
__declspec(implementation_key(6381)) IAgVATargeterGraphActiveControlPtr IAgVATargeterGraphActiveControlCollection::GetItem ( long Index );
__declspec(implementation_key(6382)) IUnknownPtr IAgVATargeterGraphActiveControlCollection::Get_NewEnum ( );
__declspec(implementation_key(6383)) long IAgVATargeterGraphActiveControlCollection::GetCount ( );
__declspec(implementation_key(6384)) STKUtil::IAgRuntimeTypeInfoPtr IAgVATargeterGraphActiveControlCollection::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6385)) _bstr_t IAgVATargeterGraphResult::GetName ( );
__declspec(implementation_key(6386)) _bstr_t IAgVATargeterGraphResult::GetParentName ( );
__declspec(implementation_key(6387)) VARIANT_BOOL IAgVATargeterGraphResult::GetShowDesiredValue ( );
__declspec(implementation_key(6388)) void IAgVATargeterGraphResult::PutShowDesiredValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(6389)) OLE_COLOR IAgVATargeterGraphResult::GetLineColor ( );
__declspec(implementation_key(6390)) void IAgVATargeterGraphResult::PutLineColor ( OLE_COLOR pValue );
__declspec(implementation_key(6391)) _bstr_t IAgVATargeterGraphResult::GetPointStyle ( );
__declspec(implementation_key(6392)) void IAgVATargeterGraphResult::PutPointStyle ( _bstr_t pRetVal );
__declspec(implementation_key(6393)) _bstr_t IAgVATargeterGraphResult::GetYAxis ( );
__declspec(implementation_key(6394)) void IAgVATargeterGraphResult::PutYAxis ( _bstr_t pRetVal );
__declspec(implementation_key(6395)) enum AgEVAGraphOption IAgVATargeterGraphResult::GetGraphOption ( );
__declspec(implementation_key(6396)) void IAgVATargeterGraphResult::PutGraphOption ( enum AgEVAGraphOption pRetVal );
__declspec(implementation_key(6397)) VARIANT_BOOL IAgVATargeterGraphResult::GetShowToleranceBand ( );
__declspec(implementation_key(6398)) void IAgVATargeterGraphResult::PutShowToleranceBand ( VARIANT_BOOL pVal );
__declspec(implementation_key(6399)) IAgVATargeterGraphResultPtr IAgVATargeterGraphResultCollection::GetItem ( long Index );
__declspec(implementation_key(6400)) IUnknownPtr IAgVATargeterGraphResultCollection::Get_NewEnum ( );
__declspec(implementation_key(6401)) long IAgVATargeterGraphResultCollection::GetCount ( );
__declspec(implementation_key(6402)) STKUtil::IAgRuntimeTypeInfoPtr IAgVATargeterGraphResultCollection::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6403)) _bstr_t IAgVATargeterGraph::GetName ( );
__declspec(implementation_key(6404)) void IAgVATargeterGraph::PutName ( _bstr_t pRetVal );
__declspec(implementation_key(6405)) VARIANT_BOOL IAgVATargeterGraph::GetGenerateOnRun ( );
__declspec(implementation_key(6406)) void IAgVATargeterGraph::PutGenerateOnRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(6407)) _bstr_t IAgVATargeterGraph::GetUserComment ( );
__declspec(implementation_key(6408)) void IAgVATargeterGraph::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6409)) VARIANT_BOOL IAgVATargeterGraph::GetShowLabelIterations ( );
__declspec(implementation_key(6410)) void IAgVATargeterGraph::PutShowLabelIterations ( VARIANT_BOOL pVal );
__declspec(implementation_key(6411)) VARIANT_BOOL IAgVATargeterGraph::GetShowDesiredValue ( );
__declspec(implementation_key(6412)) void IAgVATargeterGraph::PutShowDesiredValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(6413)) VARIANT_BOOL IAgVATargeterGraph::GetShowToleranceBand ( );
__declspec(implementation_key(6414)) void IAgVATargeterGraph::PutShowToleranceBand ( VARIANT_BOOL pVal );
__declspec(implementation_key(6415)) _bstr_t IAgVATargeterGraph::GetIndependentVariable ( );
__declspec(implementation_key(6416)) void IAgVATargeterGraph::PutIndependentVariable ( _bstr_t pRetVal );
__declspec(implementation_key(6417)) IAgVATargeterGraphActiveControlCollectionPtr IAgVATargeterGraph::GetActiveControls ( );
__declspec(implementation_key(6418)) IAgVATargeterGraphResultCollectionPtr IAgVATargeterGraph::GetResults ( );
__declspec(implementation_key(6419)) IAgVATargeterGraphPtr IAgVATargeterGraphCollection::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(6420)) IUnknownPtr IAgVATargeterGraphCollection::Get_NewEnum ( );
__declspec(implementation_key(6421)) long IAgVATargeterGraphCollection::GetCount ( );
__declspec(implementation_key(6422)) IAgVATargeterGraphPtr IAgVATargeterGraphCollection::AddGraph ( );
__declspec(implementation_key(6423)) HRESULT IAgVATargeterGraphCollection::RemoveGraph ( const _variant_t & IndexOrName );
__declspec(implementation_key(6424)) STKUtil::IAgRuntimeTypeInfoPtr IAgVATargeterGraphCollection::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6425)) HRESULT IAgVATargeterGraphCollection::Cut ( const _variant_t & IndexOrName );
__declspec(implementation_key(6426)) IAgVATargeterGraphPtr IAgVATargeterGraphCollection::Paste ( );
__declspec(implementation_key(6427)) IAgVATargeterGraphPtr IAgVATargeterGraphCollection::InsertCopy ( struct IAgVATargeterGraph * Graph );
__declspec(implementation_key(6428)) IAgVAProfilePtr _IAgVAProfileSearchPlugin::Copy ( );
__declspec(implementation_key(6429)) _bstr_t _IAgVAProfileSearchPlugin::GetName ( );
__declspec(implementation_key(6430)) void _IAgVAProfileSearchPlugin::PutName ( _bstr_t pVal );
__declspec(implementation_key(6431)) _bstr_t _IAgVAProfileSearchPlugin::GetStatus ( );
__declspec(implementation_key(6432)) _bstr_t _IAgVAProfileSearchPlugin::GetUserComment ( );
__declspec(implementation_key(6433)) void _IAgVAProfileSearchPlugin::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6434)) enum AgEVAProfileMode _IAgVAProfileSearchPlugin::GetMode ( );
__declspec(implementation_key(6435)) void _IAgVAProfileSearchPlugin::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(6436)) IAgVASearchPluginControlCollectionPtr _IAgVAProfileSearchPlugin::GetControls ( );
__declspec(implementation_key(6437)) IAgVASearchPluginResultCollectionPtr _IAgVAProfileSearchPlugin::GetResults ( );
__declspec(implementation_key(6438)) IAgVAPluginPropertiesPtr _IAgVAProfileSearchPlugin::GetPluginConfig ( );
__declspec(implementation_key(6439)) _bstr_t _IAgVAProfileSearchPlugin::GetPluginIdentifier ( );
__declspec(implementation_key(6440)) IAgVAScriptingToolPtr _IAgVAProfileSearchPlugin::GetScriptingTool ( );
__declspec(implementation_key(6441)) VARIANT_BOOL _IAgVAProfileSearchPlugin::GetResetControlsBeforeRun ( );
__declspec(implementation_key(6442)) void _IAgVAProfileSearchPlugin::PutResetControlsBeforeRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(6443)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAProfileSearchPlugin::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6444)) IAgVATargeterGraphCollectionPtr _IAgVAProfileSearchPlugin::GetTargeterGraphs ( );
__declspec(implementation_key(6445)) enum AgEVAProfile _IAgVAProfileSearchPlugin::GetType ( );
__declspec(implementation_key(6446)) IAgVASearchPluginControlCollectionPtr IAgVAProfileSearchPlugin::GetControls ( );
__declspec(implementation_key(6447)) IAgVASearchPluginResultCollectionPtr IAgVAProfileSearchPlugin::GetResults ( );
__declspec(implementation_key(6448)) IAgVAPluginPropertiesPtr IAgVAProfileSearchPlugin::GetPluginConfig ( );
__declspec(implementation_key(6449)) _bstr_t IAgVAProfileSearchPlugin::GetPluginIdentifier ( );
__declspec(implementation_key(6450)) IAgVAScriptingToolPtr IAgVAProfileSearchPlugin::GetScriptingTool ( );
__declspec(implementation_key(6451)) VARIANT_BOOL IAgVAProfileSearchPlugin::GetResetControlsBeforeRun ( );
__declspec(implementation_key(6452)) void IAgVAProfileSearchPlugin::PutResetControlsBeforeRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(6453)) IAgVATargeterGraphCollectionPtr IAgVAProfileSearchPlugin::GetTargeterGraphs ( );
__declspec(implementation_key(6454)) VARIANT_BOOL IAgVADEControl::GetEnable ( );
__declspec(implementation_key(6455)) void IAgVADEControl::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(6456)) _bstr_t IAgVADEControl::GetName ( );
__declspec(implementation_key(6457)) _variant_t IAgVADEControl::GetCurrentValue ( );
__declspec(implementation_key(6458)) _bstr_t IAgVADEControl::GetParentName ( );
__declspec(implementation_key(6459)) _variant_t IAgVADEControl::GetInitialValue ( );
__declspec(implementation_key(6460)) _variant_t IAgVADEControl::GetPerturbation ( );
__declspec(implementation_key(6461)) void IAgVADEControl::PutPerturbation ( const _variant_t & pVal );
__declspec(implementation_key(6462)) _variant_t IAgVADEControl::GetLowerBound ( );
__declspec(implementation_key(6463)) void IAgVADEControl::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(6464)) _variant_t IAgVADEControl::GetUpperBound ( );
__declspec(implementation_key(6465)) void IAgVADEControl::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(6466)) enum AgEVADEScalingMethod IAgVADEControl::GetScalingMethod ( );
__declspec(implementation_key(6467)) void IAgVADEControl::PutScalingMethod ( enum AgEVADEScalingMethod pVal );
__declspec(implementation_key(6468)) _variant_t IAgVADEControl::GetScalingValue ( );
__declspec(implementation_key(6469)) void IAgVADEControl::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(6470)) _bstr_t IAgVADEControl::GetDimension ( );
__declspec(implementation_key(6471)) VARIANT_BOOL IAgVADEControl::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6472)) void IAgVADEControl::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6473)) _bstr_t IAgVADEControl::GetCustomDisplayUnit ( );
__declspec(implementation_key(6474)) void IAgVADEControl::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6475)) SAFEARRAY * IAgVADEControl::GetValues ( );
__declspec(implementation_key(6476)) IAgVADEControlPtr IAgVADEControlCollection::GetItem ( long Index );
__declspec(implementation_key(6477)) IUnknownPtr IAgVADEControlCollection::Get_NewEnum ( );
__declspec(implementation_key(6478)) long IAgVADEControlCollection::GetCount ( );
__declspec(implementation_key(6479)) IAgVADEControlPtr IAgVADEControlCollection::GetControlByPaths ( _bstr_t ObjectPath, _bstr_t ControlPath );
__declspec(implementation_key(6480)) VARIANT_BOOL IAgVADEResult::GetEnable ( );
__declspec(implementation_key(6481)) void IAgVADEResult::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(6482)) _bstr_t IAgVADEResult::GetName ( );
__declspec(implementation_key(6483)) _variant_t IAgVADEResult::GetCurrentValue ( );
__declspec(implementation_key(6484)) _bstr_t IAgVADEResult::GetParentName ( );
__declspec(implementation_key(6485)) _variant_t IAgVADEResult::GetLowerBound ( );
__declspec(implementation_key(6486)) void IAgVADEResult::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(6487)) _variant_t IAgVADEResult::GetUpperBound ( );
__declspec(implementation_key(6488)) void IAgVADEResult::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(6489)) enum AgEVADEScalingMethod IAgVADEResult::GetScalingMethod ( );
__declspec(implementation_key(6490)) void IAgVADEResult::PutScalingMethod ( enum AgEVADEScalingMethod pVal );
__declspec(implementation_key(6491)) _variant_t IAgVADEResult::GetScalingValue ( );
__declspec(implementation_key(6492)) void IAgVADEResult::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(6493)) double IAgVADEResult::GetWeight ( );
__declspec(implementation_key(6494)) void IAgVADEResult::PutWeight ( double pVal );
__declspec(implementation_key(6495)) enum AgEVADEGoal IAgVADEResult::GetGoal ( );
__declspec(implementation_key(6496)) void IAgVADEResult::PutGoal ( enum AgEVADEGoal pVal );
__declspec(implementation_key(6497)) _bstr_t IAgVADEResult::GetDimension ( );
__declspec(implementation_key(6498)) VARIANT_BOOL IAgVADEResult::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6499)) void IAgVADEResult::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6500)) _bstr_t IAgVADEResult::GetCustomDisplayUnit ( );
__declspec(implementation_key(6501)) void IAgVADEResult::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6502)) SAFEARRAY * IAgVADEResult::GetValues ( );
__declspec(implementation_key(6503)) IAgVADEResultPtr IAgVADEResultCollection::GetItem ( long Index );
__declspec(implementation_key(6504)) IUnknownPtr IAgVADEResultCollection::Get_NewEnum ( );
__declspec(implementation_key(6505)) long IAgVADEResultCollection::GetCount ( );
__declspec(implementation_key(6506)) IAgVADEResultPtr IAgVADEResultCollection::GetResultByPaths ( _bstr_t ObjectPath, _bstr_t ResultPath );
__declspec(implementation_key(6507)) IAgVAProfilePtr _IAgVAProfileDEOptimizer::Copy ( );
__declspec(implementation_key(6508)) _bstr_t _IAgVAProfileDEOptimizer::GetName ( );
__declspec(implementation_key(6509)) void _IAgVAProfileDEOptimizer::PutName ( _bstr_t pVal );
__declspec(implementation_key(6510)) _bstr_t _IAgVAProfileDEOptimizer::GetStatus ( );
__declspec(implementation_key(6511)) _bstr_t _IAgVAProfileDEOptimizer::GetUserComment ( );
__declspec(implementation_key(6512)) void _IAgVAProfileDEOptimizer::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6513)) enum AgEVAProfileMode _IAgVAProfileDEOptimizer::GetMode ( );
__declspec(implementation_key(6514)) void _IAgVAProfileDEOptimizer::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(6515)) IAgVADEControlCollectionPtr _IAgVAProfileDEOptimizer::GetControlParameters ( );
__declspec(implementation_key(6516)) IAgVADEResultCollectionPtr _IAgVAProfileDEOptimizer::GetResults ( );
__declspec(implementation_key(6517)) long _IAgVAProfileDEOptimizer::GetMaxIterations ( );
__declspec(implementation_key(6518)) void _IAgVAProfileDEOptimizer::PutMaxIterations ( long pVal );
__declspec(implementation_key(6519)) VARIANT_BOOL _IAgVAProfileDEOptimizer::GetEnableDisplayStatus ( );
__declspec(implementation_key(6520)) void _IAgVAProfileDEOptimizer::PutEnableDisplayStatus ( VARIANT_BOOL pVal );
__declspec(implementation_key(6521)) VARIANT_BOOL _IAgVAProfileDEOptimizer::GetResetControlsBeforeRun ( );
__declspec(implementation_key(6522)) void _IAgVAProfileDEOptimizer::PutResetControlsBeforeRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(6523)) VARIANT_BOOL _IAgVAProfileDEOptimizer::GetGenerateResultsFile ( );
__declspec(implementation_key(6524)) void _IAgVAProfileDEOptimizer::PutGenerateResultsFile ( VARIANT_BOOL pVal );
__declspec(implementation_key(6525)) VARIANT_BOOL _IAgVAProfileDEOptimizer::GetUseDefaults ( );
__declspec(implementation_key(6526)) void _IAgVAProfileDEOptimizer::PutUseDefaults ( VARIANT_BOOL pVal );
__declspec(implementation_key(6527)) VARIANT_BOOL _IAgVAProfileDEOptimizer::GetUseAdvancedDefaults ( );
__declspec(implementation_key(6528)) void _IAgVAProfileDEOptimizer::PutUseAdvancedDefaults ( VARIANT_BOOL pVal );
__declspec(implementation_key(6529)) VARIANT_BOOL _IAgVAProfileDEOptimizer::GetUseGlobalPerturbationSize ( );
__declspec(implementation_key(6530)) void _IAgVAProfileDEOptimizer::PutUseGlobalPerturbationSize ( VARIANT_BOOL pVal );
__declspec(implementation_key(6531)) double _IAgVAProfileDEOptimizer::GetToleranceOnObjectiveFunction ( );
__declspec(implementation_key(6532)) void _IAgVAProfileDEOptimizer::PutToleranceOnObjectiveFunction ( double pVal );
__declspec(implementation_key(6533)) double _IAgVAProfileDEOptimizer::GetToleranceOnConstraintFeasibility ( );
__declspec(implementation_key(6534)) void _IAgVAProfileDEOptimizer::PutToleranceOnConstraintFeasibility ( double pVal );
__declspec(implementation_key(6535)) double _IAgVAProfileDEOptimizer::GetToleranceOnProjectedGradient ( );
__declspec(implementation_key(6536)) void _IAgVAProfileDEOptimizer::PutToleranceOnProjectedGradient ( double pVal );
__declspec(implementation_key(6537)) _bstr_t _IAgVAProfileDEOptimizer::GetSummaryLog ( );
__declspec(implementation_key(6538)) _bstr_t _IAgVAProfileDEOptimizer::GetDetailLog ( );
__declspec(implementation_key(6539)) _bstr_t _IAgVAProfileDEOptimizer::GetEngineLog ( );
__declspec(implementation_key(6540)) double _IAgVAProfileDEOptimizer::GetPerturbationSize ( );
__declspec(implementation_key(6541)) void _IAgVAProfileDEOptimizer::PutPerturbationSize ( double pVal );
__declspec(implementation_key(6542)) IAgVAScriptingToolPtr _IAgVAProfileDEOptimizer::GetScriptingTool ( );
__declspec(implementation_key(6543)) VARIANT_BOOL _IAgVAProfileDEOptimizer::GetEnforceDesignVariableBounds ( );
__declspec(implementation_key(6544)) void _IAgVAProfileDEOptimizer::PutEnforceDesignVariableBounds ( VARIANT_BOOL pVal );
__declspec(implementation_key(6545)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAProfileDEOptimizer::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6546)) IAgVATargeterGraphCollectionPtr _IAgVAProfileDEOptimizer::GetTargeterGraphs ( );
__declspec(implementation_key(6547)) long _IAgVAProfileDEOptimizer::GetMaxEvaluations ( );
__declspec(implementation_key(6548)) void _IAgVAProfileDEOptimizer::PutMaxEvaluations ( long pVal );
__declspec(implementation_key(6549)) enum AgEVAProfile _IAgVAProfileDEOptimizer::GetType ( );
__declspec(implementation_key(6550)) IAgVADEControlCollectionPtr IAgVAProfileDEOptimizer::GetControlParameters ( );
__declspec(implementation_key(6551)) IAgVADEResultCollectionPtr IAgVAProfileDEOptimizer::GetResults ( );
__declspec(implementation_key(6552)) long IAgVAProfileDEOptimizer::GetMaxIterations ( );
__declspec(implementation_key(6553)) void IAgVAProfileDEOptimizer::PutMaxIterations ( long pVal );
__declspec(implementation_key(6554)) VARIANT_BOOL IAgVAProfileDEOptimizer::GetEnableDisplayStatus ( );
__declspec(implementation_key(6555)) void IAgVAProfileDEOptimizer::PutEnableDisplayStatus ( VARIANT_BOOL pVal );
__declspec(implementation_key(6556)) VARIANT_BOOL IAgVAProfileDEOptimizer::GetResetControlsBeforeRun ( );
__declspec(implementation_key(6557)) void IAgVAProfileDEOptimizer::PutResetControlsBeforeRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(6558)) VARIANT_BOOL IAgVAProfileDEOptimizer::GetGenerateResultsFile ( );
__declspec(implementation_key(6559)) void IAgVAProfileDEOptimizer::PutGenerateResultsFile ( VARIANT_BOOL pVal );
__declspec(implementation_key(6560)) VARIANT_BOOL IAgVAProfileDEOptimizer::GetUseDefaults ( );
__declspec(implementation_key(6561)) void IAgVAProfileDEOptimizer::PutUseDefaults ( VARIANT_BOOL pVal );
__declspec(implementation_key(6562)) VARIANT_BOOL IAgVAProfileDEOptimizer::GetUseAdvancedDefaults ( );
__declspec(implementation_key(6563)) void IAgVAProfileDEOptimizer::PutUseAdvancedDefaults ( VARIANT_BOOL pVal );
__declspec(implementation_key(6564)) VARIANT_BOOL IAgVAProfileDEOptimizer::GetUseGlobalPerturbationSize ( );
__declspec(implementation_key(6565)) void IAgVAProfileDEOptimizer::PutUseGlobalPerturbationSize ( VARIANT_BOOL pVal );
__declspec(implementation_key(6566)) double IAgVAProfileDEOptimizer::GetToleranceOnObjectiveFunction ( );
__declspec(implementation_key(6567)) void IAgVAProfileDEOptimizer::PutToleranceOnObjectiveFunction ( double pVal );
__declspec(implementation_key(6568)) double IAgVAProfileDEOptimizer::GetToleranceOnConstraintFeasibility ( );
__declspec(implementation_key(6569)) void IAgVAProfileDEOptimizer::PutToleranceOnConstraintFeasibility ( double pVal );
__declspec(implementation_key(6570)) double IAgVAProfileDEOptimizer::GetToleranceOnProjectedGradient ( );
__declspec(implementation_key(6571)) void IAgVAProfileDEOptimizer::PutToleranceOnProjectedGradient ( double pVal );
__declspec(implementation_key(6572)) _bstr_t IAgVAProfileDEOptimizer::GetSummaryLog ( );
__declspec(implementation_key(6573)) _bstr_t IAgVAProfileDEOptimizer::GetDetailLog ( );
__declspec(implementation_key(6574)) _bstr_t IAgVAProfileDEOptimizer::GetEngineLog ( );
__declspec(implementation_key(6575)) double IAgVAProfileDEOptimizer::GetPerturbationSize ( );
__declspec(implementation_key(6576)) void IAgVAProfileDEOptimizer::PutPerturbationSize ( double pVal );
__declspec(implementation_key(6577)) IAgVAScriptingToolPtr IAgVAProfileDEOptimizer::GetScriptingTool ( );
__declspec(implementation_key(6578)) VARIANT_BOOL IAgVAProfileDEOptimizer::GetEnforceDesignVariableBounds ( );
__declspec(implementation_key(6579)) void IAgVAProfileDEOptimizer::PutEnforceDesignVariableBounds ( VARIANT_BOOL pVal );
__declspec(implementation_key(6580)) IAgVATargeterGraphCollectionPtr IAgVAProfileDEOptimizer::GetTargeterGraphs ( );
__declspec(implementation_key(6581)) long IAgVAProfileDEOptimizer::GetMaxEvaluations ( );
__declspec(implementation_key(6582)) void IAgVAProfileDEOptimizer::PutMaxEvaluations ( long pVal );
__declspec(implementation_key(6583)) _bstr_t _IAgVATargeterGraph::GetName ( );
__declspec(implementation_key(6584)) void _IAgVATargeterGraph::PutName ( _bstr_t pRetVal );
__declspec(implementation_key(6585)) VARIANT_BOOL _IAgVATargeterGraph::GetGenerateOnRun ( );
__declspec(implementation_key(6586)) void _IAgVATargeterGraph::PutGenerateOnRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(6587)) _bstr_t _IAgVATargeterGraph::GetUserComment ( );
__declspec(implementation_key(6588)) void _IAgVATargeterGraph::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6589)) VARIANT_BOOL _IAgVATargeterGraph::GetShowLabelIterations ( );
__declspec(implementation_key(6590)) void _IAgVATargeterGraph::PutShowLabelIterations ( VARIANT_BOOL pVal );
__declspec(implementation_key(6591)) VARIANT_BOOL _IAgVATargeterGraph::GetShowDesiredValue ( );
__declspec(implementation_key(6592)) void _IAgVATargeterGraph::PutShowDesiredValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(6593)) VARIANT_BOOL _IAgVATargeterGraph::GetShowToleranceBand ( );
__declspec(implementation_key(6594)) void _IAgVATargeterGraph::PutShowToleranceBand ( VARIANT_BOOL pVal );
__declspec(implementation_key(6595)) _bstr_t _IAgVATargeterGraph::GetIndependentVariable ( );
__declspec(implementation_key(6596)) void _IAgVATargeterGraph::PutIndependentVariable ( _bstr_t pRetVal );
__declspec(implementation_key(6597)) IAgVATargeterGraphActiveControlCollectionPtr _IAgVATargeterGraph::GetActiveControls ( );
__declspec(implementation_key(6598)) IAgVATargeterGraphResultCollectionPtr _IAgVATargeterGraph::GetResults ( );
__declspec(implementation_key(6599)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVATargeterGraph::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6600)) _bstr_t _IAgVATargeterGraphActiveControl::GetName ( );
__declspec(implementation_key(6601)) _bstr_t _IAgVATargeterGraphActiveControl::GetParentName ( );
__declspec(implementation_key(6602)) VARIANT_BOOL _IAgVATargeterGraphActiveControl::GetShowGraphValue ( );
__declspec(implementation_key(6603)) void _IAgVATargeterGraphActiveControl::PutShowGraphValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(6604)) OLE_COLOR _IAgVATargeterGraphActiveControl::GetLineColor ( );
__declspec(implementation_key(6605)) void _IAgVATargeterGraphActiveControl::PutLineColor ( OLE_COLOR pValue );
__declspec(implementation_key(6606)) _bstr_t _IAgVATargeterGraphActiveControl::GetPointStyle ( );
__declspec(implementation_key(6607)) void _IAgVATargeterGraphActiveControl::PutPointStyle ( _bstr_t pRetVal );
__declspec(implementation_key(6608)) _bstr_t _IAgVATargeterGraphActiveControl::GetYAxis ( );
__declspec(implementation_key(6609)) void _IAgVATargeterGraphActiveControl::PutYAxis ( _bstr_t pRetVal );
__declspec(implementation_key(6610)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVATargeterGraphActiveControl::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6611)) _bstr_t _IAgVATargeterGraphResult::GetName ( );
__declspec(implementation_key(6612)) _bstr_t _IAgVATargeterGraphResult::GetParentName ( );
__declspec(implementation_key(6613)) VARIANT_BOOL _IAgVATargeterGraphResult::GetShowDesiredValue ( );
__declspec(implementation_key(6614)) void _IAgVATargeterGraphResult::PutShowDesiredValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(6615)) OLE_COLOR _IAgVATargeterGraphResult::GetLineColor ( );
__declspec(implementation_key(6616)) void _IAgVATargeterGraphResult::PutLineColor ( OLE_COLOR pValue );
__declspec(implementation_key(6617)) _bstr_t _IAgVATargeterGraphResult::GetPointStyle ( );
__declspec(implementation_key(6618)) void _IAgVATargeterGraphResult::PutPointStyle ( _bstr_t pRetVal );
__declspec(implementation_key(6619)) _bstr_t _IAgVATargeterGraphResult::GetYAxis ( );
__declspec(implementation_key(6620)) void _IAgVATargeterGraphResult::PutYAxis ( _bstr_t pRetVal );
__declspec(implementation_key(6621)) enum AgEVAGraphOption _IAgVATargeterGraphResult::GetGraphOption ( );
__declspec(implementation_key(6622)) void _IAgVATargeterGraphResult::PutGraphOption ( enum AgEVAGraphOption pRetVal );
__declspec(implementation_key(6623)) VARIANT_BOOL _IAgVATargeterGraphResult::GetShowToleranceBand ( );
__declspec(implementation_key(6624)) void _IAgVATargeterGraphResult::PutShowToleranceBand ( VARIANT_BOOL pVal );
__declspec(implementation_key(6625)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVATargeterGraphResult::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6626)) VARIANT_BOOL IAgVADCControl::GetEnable ( );
__declspec(implementation_key(6627)) void IAgVADCControl::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(6628)) _bstr_t IAgVADCControl::GetName ( );
__declspec(implementation_key(6629)) _variant_t IAgVADCControl::GetFinalValue ( );
__declspec(implementation_key(6630)) _variant_t IAgVADCControl::GetLastUpdate ( );
__declspec(implementation_key(6631)) _bstr_t IAgVADCControl::GetParentName ( );
__declspec(implementation_key(6632)) _variant_t IAgVADCControl::GetInitialValue ( );
__declspec(implementation_key(6633)) _variant_t IAgVADCControl::GetPerturbation ( );
__declspec(implementation_key(6634)) void IAgVADCControl::PutPerturbation ( const _variant_t & pVal );
__declspec(implementation_key(6635)) _variant_t IAgVADCControl::GetCorrection ( );
__declspec(implementation_key(6636)) void IAgVADCControl::PutCorrection ( const _variant_t & pVal );
__declspec(implementation_key(6637)) _variant_t IAgVADCControl::GetTolerance ( );
__declspec(implementation_key(6638)) void IAgVADCControl::PutTolerance ( const _variant_t & pVal );
__declspec(implementation_key(6639)) _variant_t IAgVADCControl::GetMaxStep ( );
__declspec(implementation_key(6640)) void IAgVADCControl::PutMaxStep ( const _variant_t & pVal );
__declspec(implementation_key(6641)) enum AgEVADCScalingMethod IAgVADCControl::GetScalingMethod ( );
__declspec(implementation_key(6642)) void IAgVADCControl::PutScalingMethod ( enum AgEVADCScalingMethod pVal );
__declspec(implementation_key(6643)) _variant_t IAgVADCControl::GetScalingValue ( );
__declspec(implementation_key(6644)) void IAgVADCControl::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(6645)) _bstr_t IAgVADCControl::GetDimension ( );
__declspec(implementation_key(6646)) VARIANT_BOOL IAgVADCControl::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6647)) void IAgVADCControl::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6648)) _bstr_t IAgVADCControl::GetCustomDisplayUnit ( );
__declspec(implementation_key(6649)) void IAgVADCControl::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6650)) SAFEARRAY * IAgVADCControl::GetValues ( );
__declspec(implementation_key(6651)) IAgVADCControlPtr IAgVADCControlCollection::GetItem ( long Index );
__declspec(implementation_key(6652)) IUnknownPtr IAgVADCControlCollection::Get_NewEnum ( );
__declspec(implementation_key(6653)) long IAgVADCControlCollection::GetCount ( );
__declspec(implementation_key(6654)) IAgVADCControlPtr IAgVADCControlCollection::GetControlByPaths ( _bstr_t ObjectPath, _bstr_t ControlPath );
__declspec(implementation_key(6655)) STKUtil::IAgRuntimeTypeInfoPtr IAgVADCControlCollection::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6656)) VARIANT_BOOL IAgVADCResult::GetEnable ( );
__declspec(implementation_key(6657)) void IAgVADCResult::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(6658)) _bstr_t IAgVADCResult::GetName ( );
__declspec(implementation_key(6659)) _variant_t IAgVADCResult::GetDesiredValue ( );
__declspec(implementation_key(6660)) void IAgVADCResult::PutDesiredValue ( const _variant_t & pVal );
__declspec(implementation_key(6661)) _variant_t IAgVADCResult::GetCurrentValue ( );
__declspec(implementation_key(6662)) _bstr_t IAgVADCResult::GetParentName ( );
__declspec(implementation_key(6663)) _variant_t IAgVADCResult::GetDifference ( );
__declspec(implementation_key(6664)) _variant_t IAgVADCResult::GetTolerance ( );
__declspec(implementation_key(6665)) void IAgVADCResult::PutTolerance ( const _variant_t & pVal );
__declspec(implementation_key(6666)) enum AgEVADCScalingMethod IAgVADCResult::GetScalingMethod ( );
__declspec(implementation_key(6667)) void IAgVADCResult::PutScalingMethod ( enum AgEVADCScalingMethod pVal );
__declspec(implementation_key(6668)) _variant_t IAgVADCResult::GetScalingValue ( );
__declspec(implementation_key(6669)) void IAgVADCResult::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(6670)) double IAgVADCResult::GetWeight ( );
__declspec(implementation_key(6671)) void IAgVADCResult::PutWeight ( double pVal );
__declspec(implementation_key(6672)) _bstr_t IAgVADCResult::GetDimension ( );
__declspec(implementation_key(6673)) VARIANT_BOOL IAgVADCResult::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6674)) void IAgVADCResult::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6675)) _bstr_t IAgVADCResult::GetCustomDisplayUnit ( );
__declspec(implementation_key(6676)) void IAgVADCResult::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6677)) SAFEARRAY * IAgVADCResult::GetValues ( );
__declspec(implementation_key(6678)) IAgVADCResultPtr IAgVADCResultCollection::GetItem ( long Index );
__declspec(implementation_key(6679)) IUnknownPtr IAgVADCResultCollection::Get_NewEnum ( );
__declspec(implementation_key(6680)) long IAgVADCResultCollection::GetCount ( );
__declspec(implementation_key(6681)) IAgVADCResultPtr IAgVADCResultCollection::GetResultByPaths ( _bstr_t ObjectPath, _bstr_t ResultPath );
__declspec(implementation_key(6682)) STKUtil::IAgRuntimeTypeInfoPtr IAgVADCResultCollection::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6683)) IAgVAProfilePtr _IAgVAProfileDifferentialCorrector::Copy ( );
__declspec(implementation_key(6684)) _bstr_t _IAgVAProfileDifferentialCorrector::GetName ( );
__declspec(implementation_key(6685)) void _IAgVAProfileDifferentialCorrector::PutName ( _bstr_t pVal );
__declspec(implementation_key(6686)) _bstr_t _IAgVAProfileDifferentialCorrector::GetStatus ( );
__declspec(implementation_key(6687)) _bstr_t _IAgVAProfileDifferentialCorrector::GetUserComment ( );
__declspec(implementation_key(6688)) void _IAgVAProfileDifferentialCorrector::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6689)) enum AgEVAProfileMode _IAgVAProfileDifferentialCorrector::GetMode ( );
__declspec(implementation_key(6690)) void _IAgVAProfileDifferentialCorrector::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(6691)) IAgVADCControlCollectionPtr _IAgVAProfileDifferentialCorrector::GetControlParameters ( );
__declspec(implementation_key(6692)) IAgVADCResultCollectionPtr _IAgVAProfileDifferentialCorrector::GetResults ( );
__declspec(implementation_key(6693)) long _IAgVAProfileDifferentialCorrector::GetMaxIterations ( );
__declspec(implementation_key(6694)) void _IAgVAProfileDifferentialCorrector::PutMaxIterations ( long pVal );
__declspec(implementation_key(6695)) VARIANT_BOOL _IAgVAProfileDifferentialCorrector::GetEnableDisplayStatus ( );
__declspec(implementation_key(6696)) void _IAgVAProfileDifferentialCorrector::PutEnableDisplayStatus ( VARIANT_BOOL pVal );
__declspec(implementation_key(6697)) enum AgEVAConvergenceCriteria _IAgVAProfileDifferentialCorrector::GetConvergenceCriteria ( );
__declspec(implementation_key(6698)) void _IAgVAProfileDifferentialCorrector::PutConvergenceCriteria ( enum AgEVAConvergenceCriteria pVal );
__declspec(implementation_key(6699)) VARIANT_BOOL _IAgVAProfileDifferentialCorrector::GetEnableLineSearch ( );
__declspec(implementation_key(6700)) void _IAgVAProfileDifferentialCorrector::PutEnableLineSearch ( VARIANT_BOOL pVal );
__declspec(implementation_key(6701)) long _IAgVAProfileDifferentialCorrector::GetMaxLineSearchIterations ( );
__declspec(implementation_key(6702)) void _IAgVAProfileDifferentialCorrector::PutMaxLineSearchIterations ( long pVal );
__declspec(implementation_key(6703)) double _IAgVAProfileDifferentialCorrector::GetLineSearchLowerBound ( );
__declspec(implementation_key(6704)) void _IAgVAProfileDifferentialCorrector::PutLineSearchLowerBound ( double pVal );
__declspec(implementation_key(6705)) double _IAgVAProfileDifferentialCorrector::GetLineSearchUpperBound ( );
__declspec(implementation_key(6706)) void _IAgVAProfileDifferentialCorrector::PutLineSearchUpperBound ( double pVal );
__declspec(implementation_key(6707)) double _IAgVAProfileDifferentialCorrector::GetLineSearchTolerance ( );
__declspec(implementation_key(6708)) void _IAgVAProfileDifferentialCorrector::PutLineSearchTolerance ( double pVal );
__declspec(implementation_key(6709)) VARIANT_BOOL _IAgVAProfileDifferentialCorrector::GetEnableHomotopy ( );
__declspec(implementation_key(6710)) void _IAgVAProfileDifferentialCorrector::PutEnableHomotopy ( VARIANT_BOOL pVal );
__declspec(implementation_key(6711)) long _IAgVAProfileDifferentialCorrector::GetHomotopySteps ( );
__declspec(implementation_key(6712)) void _IAgVAProfileDifferentialCorrector::PutHomotopySteps ( long pVal );
__declspec(implementation_key(6713)) enum AgEVADeriveCalcMethod _IAgVAProfileDifferentialCorrector::GetDerivativeCalcMethod ( );
__declspec(implementation_key(6714)) void _IAgVAProfileDifferentialCorrector::PutDerivativeCalcMethod ( enum AgEVADeriveCalcMethod pVal );
__declspec(implementation_key(6715)) VARIANT_BOOL _IAgVAProfileDifferentialCorrector::GetClearCorrectionsBeforeRun ( );
__declspec(implementation_key(6716)) void _IAgVAProfileDifferentialCorrector::PutClearCorrectionsBeforeRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(6717)) VARIANT_BOOL _IAgVAProfileDifferentialCorrector::GetEnableBPlaneNominal ( );
__declspec(implementation_key(6718)) void _IAgVAProfileDifferentialCorrector::PutEnableBPlaneNominal ( VARIANT_BOOL pVal );
__declspec(implementation_key(6719)) VARIANT_BOOL _IAgVAProfileDifferentialCorrector::GetEnableBPlanePerturbations ( );
__declspec(implementation_key(6720)) void _IAgVAProfileDifferentialCorrector::PutEnableBPlanePerturbations ( VARIANT_BOOL pVal );
__declspec(implementation_key(6721)) enum AgEVADrawPerturbation _IAgVAProfileDifferentialCorrector::GetDrawPerturbation ( );
__declspec(implementation_key(6722)) void _IAgVAProfileDifferentialCorrector::PutDrawPerturbation ( enum AgEVADrawPerturbation pVal );
__declspec(implementation_key(6723)) IAgVAScriptingToolPtr _IAgVAProfileDifferentialCorrector::GetScriptingTool ( );
__declspec(implementation_key(6724)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAProfileDifferentialCorrector::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6725)) enum AgEVARootFindingAlgorithm _IAgVAProfileDifferentialCorrector::GetRootFindingAlgorithm ( );
__declspec(implementation_key(6726)) void _IAgVAProfileDifferentialCorrector::PutRootFindingAlgorithm ( enum AgEVARootFindingAlgorithm pVal );
__declspec(implementation_key(6727)) long _IAgVAProfileDifferentialCorrector::GetNumIterations ( );
__declspec(implementation_key(6728)) IAgVATargeterGraphCollectionPtr _IAgVAProfileDifferentialCorrector::GetTargeterGraphs ( );
__declspec(implementation_key(6729)) VARIANT_BOOL _IAgVAProfileDifferentialCorrector::GetStopOnLimitCycleDetection ( );
__declspec(implementation_key(6730)) void _IAgVAProfileDifferentialCorrector::PutStopOnLimitCycleDetection ( VARIANT_BOOL pVal );
__declspec(implementation_key(6731)) enum AgEVAProfile _IAgVAProfileDifferentialCorrector::GetType ( );
__declspec(implementation_key(6732)) IAgVADCControlCollectionPtr IAgVAProfileDifferentialCorrector::GetControlParameters ( );
__declspec(implementation_key(6733)) IAgVADCResultCollectionPtr IAgVAProfileDifferentialCorrector::GetResults ( );
__declspec(implementation_key(6734)) long IAgVAProfileDifferentialCorrector::GetMaxIterations ( );
__declspec(implementation_key(6735)) void IAgVAProfileDifferentialCorrector::PutMaxIterations ( long pVal );
__declspec(implementation_key(6736)) VARIANT_BOOL IAgVAProfileDifferentialCorrector::GetEnableDisplayStatus ( );
__declspec(implementation_key(6737)) void IAgVAProfileDifferentialCorrector::PutEnableDisplayStatus ( VARIANT_BOOL pVal );
__declspec(implementation_key(6738)) enum AgEVAConvergenceCriteria IAgVAProfileDifferentialCorrector::GetConvergenceCriteria ( );
__declspec(implementation_key(6739)) void IAgVAProfileDifferentialCorrector::PutConvergenceCriteria ( enum AgEVAConvergenceCriteria pVal );
__declspec(implementation_key(6740)) VARIANT_BOOL IAgVAProfileDifferentialCorrector::GetEnableLineSearch ( );
__declspec(implementation_key(6741)) void IAgVAProfileDifferentialCorrector::PutEnableLineSearch ( VARIANT_BOOL pVal );
__declspec(implementation_key(6742)) long IAgVAProfileDifferentialCorrector::GetMaxLineSearchIterations ( );
__declspec(implementation_key(6743)) void IAgVAProfileDifferentialCorrector::PutMaxLineSearchIterations ( long pVal );
__declspec(implementation_key(6744)) double IAgVAProfileDifferentialCorrector::GetLineSearchLowerBound ( );
__declspec(implementation_key(6745)) void IAgVAProfileDifferentialCorrector::PutLineSearchLowerBound ( double pVal );
__declspec(implementation_key(6746)) double IAgVAProfileDifferentialCorrector::GetLineSearchUpperBound ( );
__declspec(implementation_key(6747)) void IAgVAProfileDifferentialCorrector::PutLineSearchUpperBound ( double pVal );
__declspec(implementation_key(6748)) double IAgVAProfileDifferentialCorrector::GetLineSearchTolerance ( );
__declspec(implementation_key(6749)) void IAgVAProfileDifferentialCorrector::PutLineSearchTolerance ( double pVal );
__declspec(implementation_key(6750)) VARIANT_BOOL IAgVAProfileDifferentialCorrector::GetEnableHomotopy ( );
__declspec(implementation_key(6751)) void IAgVAProfileDifferentialCorrector::PutEnableHomotopy ( VARIANT_BOOL pVal );
__declspec(implementation_key(6752)) long IAgVAProfileDifferentialCorrector::GetHomotopySteps ( );
__declspec(implementation_key(6753)) void IAgVAProfileDifferentialCorrector::PutHomotopySteps ( long pVal );
__declspec(implementation_key(6754)) enum AgEVADeriveCalcMethod IAgVAProfileDifferentialCorrector::GetDerivativeCalcMethod ( );
__declspec(implementation_key(6755)) void IAgVAProfileDifferentialCorrector::PutDerivativeCalcMethod ( enum AgEVADeriveCalcMethod pVal );
__declspec(implementation_key(6756)) VARIANT_BOOL IAgVAProfileDifferentialCorrector::GetClearCorrectionsBeforeRun ( );
__declspec(implementation_key(6757)) void IAgVAProfileDifferentialCorrector::PutClearCorrectionsBeforeRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(6758)) VARIANT_BOOL IAgVAProfileDifferentialCorrector::GetEnableBPlaneNominal ( );
__declspec(implementation_key(6759)) void IAgVAProfileDifferentialCorrector::PutEnableBPlaneNominal ( VARIANT_BOOL pVal );
__declspec(implementation_key(6760)) VARIANT_BOOL IAgVAProfileDifferentialCorrector::GetEnableBPlanePerturbations ( );
__declspec(implementation_key(6761)) void IAgVAProfileDifferentialCorrector::PutEnableBPlanePerturbations ( VARIANT_BOOL pVal );
__declspec(implementation_key(6762)) enum AgEVADrawPerturbation IAgVAProfileDifferentialCorrector::GetDrawPerturbation ( );
__declspec(implementation_key(6763)) void IAgVAProfileDifferentialCorrector::PutDrawPerturbation ( enum AgEVADrawPerturbation pVal );
__declspec(implementation_key(6764)) IAgVAScriptingToolPtr IAgVAProfileDifferentialCorrector::GetScriptingTool ( );
__declspec(implementation_key(6765)) enum AgEVARootFindingAlgorithm IAgVAProfileDifferentialCorrector::GetRootFindingAlgorithm ( );
__declspec(implementation_key(6766)) void IAgVAProfileDifferentialCorrector::PutRootFindingAlgorithm ( enum AgEVARootFindingAlgorithm pVal );
__declspec(implementation_key(6767)) long IAgVAProfileDifferentialCorrector::GetNumIterations ( );
__declspec(implementation_key(6768)) IAgVATargeterGraphCollectionPtr IAgVAProfileDifferentialCorrector::GetTargeterGraphs ( );
__declspec(implementation_key(6769)) VARIANT_BOOL IAgVAProfileDifferentialCorrector::GetStopOnLimitCycleDetection ( );
__declspec(implementation_key(6770)) void IAgVAProfileDifferentialCorrector::PutStopOnLimitCycleDetection ( VARIANT_BOOL pVal );
__declspec(implementation_key(6771)) IAgVAProfilePtr _IAgVAProfileScriptingTool::Copy ( );
__declspec(implementation_key(6772)) _bstr_t _IAgVAProfileScriptingTool::GetName ( );
__declspec(implementation_key(6773)) void _IAgVAProfileScriptingTool::PutName ( _bstr_t pVal );
__declspec(implementation_key(6774)) _bstr_t _IAgVAProfileScriptingTool::GetStatus ( );
__declspec(implementation_key(6775)) _bstr_t _IAgVAProfileScriptingTool::GetUserComment ( );
__declspec(implementation_key(6776)) void _IAgVAProfileScriptingTool::PutUserComment ( _bstr_t pbstrVal );
__declspec(implementation_key(6777)) enum AgEVAProfileMode _IAgVAProfileScriptingTool::GetMode ( );
__declspec(implementation_key(6778)) void _IAgVAProfileScriptingTool::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(6779)) VARIANT_BOOL _IAgVAProfileScriptingTool::GetEnable ( );
__declspec(implementation_key(6780)) void _IAgVAProfileScriptingTool::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(6781)) IAgVAScriptingSegmentCollectionPtr _IAgVAProfileScriptingTool::GetSegmentProperties ( );
__declspec(implementation_key(6782)) IAgVAScriptingCalcObjectCollectionPtr _IAgVAProfileScriptingTool::GetCalcObjects ( );
__declspec(implementation_key(6783)) IAgVAScriptingParameterCollectionPtr _IAgVAProfileScriptingTool::GetParameters ( );
__declspec(implementation_key(6784)) enum AgEVALanguage _IAgVAProfileScriptingTool::GetLanguageType ( );
__declspec(implementation_key(6785)) void _IAgVAProfileScriptingTool::PutLanguageType ( enum AgEVALanguage pVal );
__declspec(implementation_key(6786)) HRESULT _IAgVAProfileScriptingTool::ScriptText ( _bstr_t Script );
__declspec(implementation_key(6787)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAProfileScriptingTool::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6788)) HRESULT _IAgVAProfileScriptingTool::CopyToClipboard ( );
__declspec(implementation_key(6789)) HRESULT _IAgVAProfileScriptingTool::PasteFromClipboard ( );
__declspec(implementation_key(6790)) enum AgEVAProfile _IAgVAProfileScriptingTool::GetType ( );
__declspec(implementation_key(6791)) VARIANT_BOOL IAgVAProfileScriptingTool::GetEnable ( );
__declspec(implementation_key(6792)) void IAgVAProfileScriptingTool::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(6793)) IAgVAScriptingSegmentCollectionPtr IAgVAProfileScriptingTool::GetSegmentProperties ( );
__declspec(implementation_key(6794)) IAgVAScriptingCalcObjectCollectionPtr IAgVAProfileScriptingTool::GetCalcObjects ( );
__declspec(implementation_key(6795)) IAgVAScriptingParameterCollectionPtr IAgVAProfileScriptingTool::GetParameters ( );
__declspec(implementation_key(6796)) enum AgEVALanguage IAgVAProfileScriptingTool::GetLanguageType ( );
__declspec(implementation_key(6797)) void IAgVAProfileScriptingTool::PutLanguageType ( enum AgEVALanguage pVal );
__declspec(implementation_key(6798)) HRESULT IAgVAProfileScriptingTool::ScriptText ( _bstr_t Script );
__declspec(implementation_key(6799)) HRESULT IAgVAProfileScriptingTool::CopyToClipboard ( );
__declspec(implementation_key(6800)) HRESULT IAgVAProfileScriptingTool::PasteFromClipboard ( );
__declspec(implementation_key(6801)) VARIANT_BOOL _IAgVADCControl::GetEnable ( );
__declspec(implementation_key(6802)) void _IAgVADCControl::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(6803)) _bstr_t _IAgVADCControl::GetName ( );
__declspec(implementation_key(6804)) _variant_t _IAgVADCControl::GetFinalValue ( );
__declspec(implementation_key(6805)) _variant_t _IAgVADCControl::GetLastUpdate ( );
__declspec(implementation_key(6806)) _bstr_t _IAgVADCControl::GetParentName ( );
__declspec(implementation_key(6807)) _variant_t _IAgVADCControl::GetInitialValue ( );
__declspec(implementation_key(6808)) _variant_t _IAgVADCControl::GetPerturbation ( );
__declspec(implementation_key(6809)) void _IAgVADCControl::PutPerturbation ( const _variant_t & pVal );
__declspec(implementation_key(6810)) _variant_t _IAgVADCControl::GetCorrection ( );
__declspec(implementation_key(6811)) void _IAgVADCControl::PutCorrection ( const _variant_t & pVal );
__declspec(implementation_key(6812)) _variant_t _IAgVADCControl::GetTolerance ( );
__declspec(implementation_key(6813)) void _IAgVADCControl::PutTolerance ( const _variant_t & pVal );
__declspec(implementation_key(6814)) _variant_t _IAgVADCControl::GetMaxStep ( );
__declspec(implementation_key(6815)) void _IAgVADCControl::PutMaxStep ( const _variant_t & pVal );
__declspec(implementation_key(6816)) enum AgEVADCScalingMethod _IAgVADCControl::GetScalingMethod ( );
__declspec(implementation_key(6817)) void _IAgVADCControl::PutScalingMethod ( enum AgEVADCScalingMethod pVal );
__declspec(implementation_key(6818)) _variant_t _IAgVADCControl::GetScalingValue ( );
__declspec(implementation_key(6819)) void _IAgVADCControl::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(6820)) _bstr_t _IAgVADCControl::GetDimension ( );
__declspec(implementation_key(6821)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVADCControl::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6822)) VARIANT_BOOL _IAgVADCControl::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6823)) void _IAgVADCControl::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6824)) _bstr_t _IAgVADCControl::GetCustomDisplayUnit ( );
__declspec(implementation_key(6825)) void _IAgVADCControl::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6826)) SAFEARRAY * _IAgVADCControl::GetValues ( );
__declspec(implementation_key(6827)) VARIANT_BOOL _IAgVADCResult::GetEnable ( );
__declspec(implementation_key(6828)) void _IAgVADCResult::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(6829)) _bstr_t _IAgVADCResult::GetName ( );
__declspec(implementation_key(6830)) _variant_t _IAgVADCResult::GetDesiredValue ( );
__declspec(implementation_key(6831)) void _IAgVADCResult::PutDesiredValue ( const _variant_t & pVal );
__declspec(implementation_key(6832)) _variant_t _IAgVADCResult::GetCurrentValue ( );
__declspec(implementation_key(6833)) _bstr_t _IAgVADCResult::GetParentName ( );
__declspec(implementation_key(6834)) _variant_t _IAgVADCResult::GetDifference ( );
__declspec(implementation_key(6835)) _variant_t _IAgVADCResult::GetTolerance ( );
__declspec(implementation_key(6836)) void _IAgVADCResult::PutTolerance ( const _variant_t & pVal );
__declspec(implementation_key(6837)) enum AgEVADCScalingMethod _IAgVADCResult::GetScalingMethod ( );
__declspec(implementation_key(6838)) void _IAgVADCResult::PutScalingMethod ( enum AgEVADCScalingMethod pVal );
__declspec(implementation_key(6839)) _variant_t _IAgVADCResult::GetScalingValue ( );
__declspec(implementation_key(6840)) void _IAgVADCResult::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(6841)) double _IAgVADCResult::GetWeight ( );
__declspec(implementation_key(6842)) void _IAgVADCResult::PutWeight ( double pVal );
__declspec(implementation_key(6843)) _bstr_t _IAgVADCResult::GetDimension ( );
__declspec(implementation_key(6844)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVADCResult::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6845)) VARIANT_BOOL _IAgVADCResult::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6846)) void _IAgVADCResult::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6847)) _bstr_t _IAgVADCResult::GetCustomDisplayUnit ( );
__declspec(implementation_key(6848)) void _IAgVADCResult::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6849)) SAFEARRAY * _IAgVADCResult::GetValues ( );
__declspec(implementation_key(6850)) VARIANT_BOOL _IAgVADEControl::GetEnable ( );
__declspec(implementation_key(6851)) void _IAgVADEControl::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(6852)) _bstr_t _IAgVADEControl::GetName ( );
__declspec(implementation_key(6853)) _variant_t _IAgVADEControl::GetCurrentValue ( );
__declspec(implementation_key(6854)) _bstr_t _IAgVADEControl::GetParentName ( );
__declspec(implementation_key(6855)) _variant_t _IAgVADEControl::GetInitialValue ( );
__declspec(implementation_key(6856)) _variant_t _IAgVADEControl::GetPerturbation ( );
__declspec(implementation_key(6857)) void _IAgVADEControl::PutPerturbation ( const _variant_t & pVal );
__declspec(implementation_key(6858)) _variant_t _IAgVADEControl::GetLowerBound ( );
__declspec(implementation_key(6859)) void _IAgVADEControl::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(6860)) _variant_t _IAgVADEControl::GetUpperBound ( );
__declspec(implementation_key(6861)) void _IAgVADEControl::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(6862)) enum AgEVADEScalingMethod _IAgVADEControl::GetScalingMethod ( );
__declspec(implementation_key(6863)) void _IAgVADEControl::PutScalingMethod ( enum AgEVADEScalingMethod pVal );
__declspec(implementation_key(6864)) _variant_t _IAgVADEControl::GetScalingValue ( );
__declspec(implementation_key(6865)) void _IAgVADEControl::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(6866)) _bstr_t _IAgVADEControl::GetDimension ( );
__declspec(implementation_key(6867)) VARIANT_BOOL _IAgVADEControl::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6868)) void _IAgVADEControl::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6869)) _bstr_t _IAgVADEControl::GetCustomDisplayUnit ( );
__declspec(implementation_key(6870)) void _IAgVADEControl::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6871)) SAFEARRAY * _IAgVADEControl::GetValues ( );
__declspec(implementation_key(6872)) VARIANT_BOOL _IAgVADEResult::GetEnable ( );
__declspec(implementation_key(6873)) void _IAgVADEResult::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(6874)) _bstr_t _IAgVADEResult::GetName ( );
__declspec(implementation_key(6875)) _variant_t _IAgVADEResult::GetCurrentValue ( );
__declspec(implementation_key(6876)) _bstr_t _IAgVADEResult::GetParentName ( );
__declspec(implementation_key(6877)) _variant_t _IAgVADEResult::GetLowerBound ( );
__declspec(implementation_key(6878)) void _IAgVADEResult::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(6879)) _variant_t _IAgVADEResult::GetUpperBound ( );
__declspec(implementation_key(6880)) void _IAgVADEResult::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(6881)) enum AgEVADEScalingMethod _IAgVADEResult::GetScalingMethod ( );
__declspec(implementation_key(6882)) void _IAgVADEResult::PutScalingMethod ( enum AgEVADEScalingMethod pVal );
__declspec(implementation_key(6883)) _variant_t _IAgVADEResult::GetScalingValue ( );
__declspec(implementation_key(6884)) void _IAgVADEResult::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(6885)) double _IAgVADEResult::GetWeight ( );
__declspec(implementation_key(6886)) void _IAgVADEResult::PutWeight ( double pVal );
__declspec(implementation_key(6887)) enum AgEVADEGoal _IAgVADEResult::GetGoal ( );
__declspec(implementation_key(6888)) void _IAgVADEResult::PutGoal ( enum AgEVADEGoal pVal );
__declspec(implementation_key(6889)) _bstr_t _IAgVADEResult::GetDimension ( );
__declspec(implementation_key(6890)) VARIANT_BOOL _IAgVADEResult::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6891)) void _IAgVADEResult::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6892)) _bstr_t _IAgVADEResult::GetCustomDisplayUnit ( );
__declspec(implementation_key(6893)) void _IAgVADEResult::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6894)) SAFEARRAY * _IAgVADEResult::GetValues ( );
__declspec(implementation_key(6895)) _bstr_t _IAgVASearchPluginControl::GetControlName ( );
__declspec(implementation_key(6896)) _variant_t _IAgVASearchPluginControl::GetCurrentValue ( );
__declspec(implementation_key(6897)) _bstr_t _IAgVASearchPluginControl::GetParentSegmentName ( );
__declspec(implementation_key(6898)) _variant_t _IAgVASearchPluginControl::GetInitialValue ( );
__declspec(implementation_key(6899)) _bstr_t _IAgVASearchPluginControl::GetPluginIdentifier ( );
__declspec(implementation_key(6900)) IAgVAPluginPropertiesPtr _IAgVASearchPluginControl::GetPluginConfig ( );
__declspec(implementation_key(6901)) _bstr_t _IAgVASearchPluginControl::GetDimension ( );
__declspec(implementation_key(6902)) VARIANT_BOOL _IAgVASearchPluginControl::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6903)) void _IAgVASearchPluginControl::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6904)) _bstr_t _IAgVASearchPluginControl::GetCustomDisplayUnit ( );
__declspec(implementation_key(6905)) void _IAgVASearchPluginControl::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6906)) SAFEARRAY * _IAgVASearchPluginControl::GetValues ( );
__declspec(implementation_key(6907)) void _IAgVASearchPluginControl::PutCurrentValue ( const _variant_t & pVal );
__declspec(implementation_key(6908)) _bstr_t _IAgVASearchPluginResult::GetResultName ( );
__declspec(implementation_key(6909)) _variant_t _IAgVASearchPluginResult::GetCurrentValue ( );
__declspec(implementation_key(6910)) _bstr_t _IAgVASearchPluginResult::GetParentSegmentName ( );
__declspec(implementation_key(6911)) _bstr_t _IAgVASearchPluginResult::GetPluginIdentifier ( );
__declspec(implementation_key(6912)) IAgVAPluginPropertiesPtr _IAgVASearchPluginResult::GetPluginConfig ( );
__declspec(implementation_key(6913)) _bstr_t _IAgVASearchPluginResult::GetDimension ( );
__declspec(implementation_key(6914)) VARIANT_BOOL _IAgVASearchPluginResult::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(6915)) void _IAgVASearchPluginResult::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(6916)) _bstr_t _IAgVASearchPluginResult::GetCustomDisplayUnit ( );
__declspec(implementation_key(6917)) void _IAgVASearchPluginResult::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(6918)) SAFEARRAY * _IAgVASearchPluginResult::GetValues ( );
__declspec(implementation_key(6919)) IAgVAProfilePtr _IAgVAProfileChangeManeuverType::Copy ( );
__declspec(implementation_key(6920)) _bstr_t _IAgVAProfileChangeManeuverType::GetName ( );
__declspec(implementation_key(6921)) void _IAgVAProfileChangeManeuverType::PutName ( _bstr_t pVal );
__declspec(implementation_key(6922)) _bstr_t _IAgVAProfileChangeManeuverType::GetStatus ( );
__declspec(implementation_key(6923)) _bstr_t _IAgVAProfileChangeManeuverType::GetUserComment ( );
__declspec(implementation_key(6924)) void _IAgVAProfileChangeManeuverType::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6925)) enum AgEVAProfileMode _IAgVAProfileChangeManeuverType::GetMode ( );
__declspec(implementation_key(6926)) void _IAgVAProfileChangeManeuverType::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(6927)) IAgVAMCSManeuverPtr _IAgVAProfileChangeManeuverType::GetSegment ( );
__declspec(implementation_key(6928)) void _IAgVAProfileChangeManeuverType::PutSegment ( struct IAgVAMCSManeuver * ppVAMCSManeuver );
__declspec(implementation_key(6929)) enum AgEVAManeuverType _IAgVAProfileChangeManeuverType::GetManeuverType ( );
__declspec(implementation_key(6930)) void _IAgVAProfileChangeManeuverType::PutManeuverType ( enum AgEVAManeuverType pVal );
__declspec(implementation_key(6931)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAProfileChangeManeuverType::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6932)) enum AgEVAProfile _IAgVAProfileChangeManeuverType::GetType ( );
__declspec(implementation_key(6933)) IAgVAMCSManeuverPtr IAgVAProfileChangeManeuverType::GetSegment ( );
__declspec(implementation_key(6934)) void IAgVAProfileChangeManeuverType::PutSegment ( struct IAgVAMCSManeuver * ppVAMCSManeuver );
__declspec(implementation_key(6935)) enum AgEVAManeuverType IAgVAProfileChangeManeuverType::GetManeuverType ( );
__declspec(implementation_key(6936)) void IAgVAProfileChangeManeuverType::PutManeuverType ( enum AgEVAManeuverType pVal );
__declspec(implementation_key(6937)) IAgVAProfilePtr _IAgVAProfileChangeReturnSegment::Copy ( );
__declspec(implementation_key(6938)) _bstr_t _IAgVAProfileChangeReturnSegment::GetName ( );
__declspec(implementation_key(6939)) void _IAgVAProfileChangeReturnSegment::PutName ( _bstr_t pVal );
__declspec(implementation_key(6940)) _bstr_t _IAgVAProfileChangeReturnSegment::GetStatus ( );
__declspec(implementation_key(6941)) _bstr_t _IAgVAProfileChangeReturnSegment::GetUserComment ( );
__declspec(implementation_key(6942)) void _IAgVAProfileChangeReturnSegment::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6943)) enum AgEVAProfileMode _IAgVAProfileChangeReturnSegment::GetMode ( );
__declspec(implementation_key(6944)) void _IAgVAProfileChangeReturnSegment::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(6945)) _bstr_t _IAgVAProfileChangeReturnSegment::GetSegmentName ( );
__declspec(implementation_key(6946)) void _IAgVAProfileChangeReturnSegment::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(6947)) HRESULT _IAgVAProfileChangeReturnSegment::SetSegment ( struct IAgVAMCSReturn * ppVAMCSReturn );
__declspec(implementation_key(6948)) enum AgEVAReturnControl _IAgVAProfileChangeReturnSegment::GetState ( );
__declspec(implementation_key(6949)) void _IAgVAProfileChangeReturnSegment::PutState ( enum AgEVAReturnControl pVal );
__declspec(implementation_key(6950)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAProfileChangeReturnSegment::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6951)) enum AgEVAProfile _IAgVAProfileChangeReturnSegment::GetType ( );
__declspec(implementation_key(6952)) _bstr_t IAgVAProfileChangeReturnSegment::GetSegmentName ( );
__declspec(implementation_key(6953)) void IAgVAProfileChangeReturnSegment::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(6954)) HRESULT IAgVAProfileChangeReturnSegment::SetSegment ( struct IAgVAMCSReturn * pVAMCSReturn );
__declspec(implementation_key(6955)) enum AgEVAReturnControl IAgVAProfileChangeReturnSegment::GetState ( );
__declspec(implementation_key(6956)) void IAgVAProfileChangeReturnSegment::PutState ( enum AgEVAReturnControl pVal );
__declspec(implementation_key(6957)) IAgVAProfilePtr _IAgVAProfileChangePropagator::Copy ( );
__declspec(implementation_key(6958)) _bstr_t _IAgVAProfileChangePropagator::GetName ( );
__declspec(implementation_key(6959)) void _IAgVAProfileChangePropagator::PutName ( _bstr_t pVal );
__declspec(implementation_key(6960)) _bstr_t _IAgVAProfileChangePropagator::GetStatus ( );
__declspec(implementation_key(6961)) _bstr_t _IAgVAProfileChangePropagator::GetUserComment ( );
__declspec(implementation_key(6962)) void _IAgVAProfileChangePropagator::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6963)) enum AgEVAProfileMode _IAgVAProfileChangePropagator::GetMode ( );
__declspec(implementation_key(6964)) void _IAgVAProfileChangePropagator::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(6965)) _bstr_t _IAgVAProfileChangePropagator::GetSegmentName ( );
__declspec(implementation_key(6966)) void _IAgVAProfileChangePropagator::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(6967)) HRESULT _IAgVAProfileChangePropagator::SetSegment ( struct IAgVAMCSSegment * pVAMCSSegment );
__declspec(implementation_key(6968)) _bstr_t _IAgVAProfileChangePropagator::GetPropagatorName ( );
__declspec(implementation_key(6969)) void _IAgVAProfileChangePropagator::PutPropagatorName ( _bstr_t pVal );
__declspec(implementation_key(6970)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAProfileChangePropagator::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6971)) enum AgEVAProfile _IAgVAProfileChangePropagator::GetType ( );
__declspec(implementation_key(6972)) _bstr_t IAgVAProfileChangePropagator::GetSegmentName ( );
__declspec(implementation_key(6973)) void IAgVAProfileChangePropagator::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(6974)) HRESULT IAgVAProfileChangePropagator::SetSegment ( struct IAgVAMCSSegment * pVAMCSSegment );
__declspec(implementation_key(6975)) _bstr_t IAgVAProfileChangePropagator::GetPropagatorName ( );
__declspec(implementation_key(6976)) void IAgVAProfileChangePropagator::PutPropagatorName ( _bstr_t pVal );
__declspec(implementation_key(6977)) IAgVAProfilePtr _IAgVAProfileChangeStopSegment::Copy ( );
__declspec(implementation_key(6978)) _bstr_t _IAgVAProfileChangeStopSegment::GetName ( );
__declspec(implementation_key(6979)) void _IAgVAProfileChangeStopSegment::PutName ( _bstr_t pVal );
__declspec(implementation_key(6980)) _bstr_t _IAgVAProfileChangeStopSegment::GetStatus ( );
__declspec(implementation_key(6981)) _bstr_t _IAgVAProfileChangeStopSegment::GetUserComment ( );
__declspec(implementation_key(6982)) void _IAgVAProfileChangeStopSegment::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(6983)) enum AgEVAProfileMode _IAgVAProfileChangeStopSegment::GetMode ( );
__declspec(implementation_key(6984)) void _IAgVAProfileChangeStopSegment::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(6985)) _bstr_t _IAgVAProfileChangeStopSegment::GetSegmentName ( );
__declspec(implementation_key(6986)) void _IAgVAProfileChangeStopSegment::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(6987)) HRESULT _IAgVAProfileChangeStopSegment::SetSegment ( struct IAgVAMCSStop * pVAMCSStop );
__declspec(implementation_key(6988)) enum AgEVAState _IAgVAProfileChangeStopSegment::GetState ( );
__declspec(implementation_key(6989)) void _IAgVAProfileChangeStopSegment::PutState ( enum AgEVAState pVal );
__declspec(implementation_key(6990)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAProfileChangeStopSegment::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(6991)) enum AgEVAProfile _IAgVAProfileChangeStopSegment::GetType ( );
__declspec(implementation_key(6992)) _bstr_t IAgVAProfileChangeStopSegment::GetSegmentName ( );
__declspec(implementation_key(6993)) void IAgVAProfileChangeStopSegment::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(6994)) HRESULT IAgVAProfileChangeStopSegment::SetSegment ( struct IAgVAMCSStop * pVAMCSStop );
__declspec(implementation_key(6995)) enum AgEVAState IAgVAProfileChangeStopSegment::GetState ( );
__declspec(implementation_key(6996)) void IAgVAProfileChangeStopSegment::PutState ( enum AgEVAState pVal );
__declspec(implementation_key(6997)) IAgVAProfilePtr _IAgVAProfileChangeStoppingConditionState::Copy ( );
__declspec(implementation_key(6998)) _bstr_t _IAgVAProfileChangeStoppingConditionState::GetName ( );
__declspec(implementation_key(6999)) void _IAgVAProfileChangeStoppingConditionState::PutName ( _bstr_t pVal );
__declspec(implementation_key(7000)) _bstr_t _IAgVAProfileChangeStoppingConditionState::GetStatus ( );
__declspec(implementation_key(7001)) _bstr_t _IAgVAProfileChangeStoppingConditionState::GetUserComment ( );
__declspec(implementation_key(7002)) void _IAgVAProfileChangeStoppingConditionState::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7003)) enum AgEVAProfileMode _IAgVAProfileChangeStoppingConditionState::GetMode ( );
__declspec(implementation_key(7004)) void _IAgVAProfileChangeStoppingConditionState::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(7005)) _bstr_t _IAgVAProfileChangeStoppingConditionState::GetSegmentName ( );
__declspec(implementation_key(7006)) void _IAgVAProfileChangeStoppingConditionState::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(7007)) HRESULT _IAgVAProfileChangeStoppingConditionState::SetSegment ( struct IAgVAMCSSegment * MCSSegment );
__declspec(implementation_key(7008)) enum AgEVAState _IAgVAProfileChangeStoppingConditionState::GetState ( );
__declspec(implementation_key(7009)) void _IAgVAProfileChangeStoppingConditionState::PutState ( enum AgEVAState pVal );
__declspec(implementation_key(7010)) HRESULT _IAgVAProfileChangeStoppingConditionState::SetTrigger ( struct IAgVAStoppingCondition * StoppingCondition );
__declspec(implementation_key(7011)) _bstr_t _IAgVAProfileChangeStoppingConditionState::GetTriggerName ( );
__declspec(implementation_key(7012)) void _IAgVAProfileChangeStoppingConditionState::PutTriggerName ( _bstr_t pVal );
__declspec(implementation_key(7013)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAProfileChangeStoppingConditionState::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(7014)) enum AgEVAProfile _IAgVAProfileChangeStoppingConditionState::GetType ( );
__declspec(implementation_key(7015)) _bstr_t IAgVAProfileChangeStoppingConditionState::GetSegmentName ( );
__declspec(implementation_key(7016)) void IAgVAProfileChangeStoppingConditionState::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(7017)) HRESULT IAgVAProfileChangeStoppingConditionState::SetSegment ( struct IAgVAMCSSegment * MCSSegment );
__declspec(implementation_key(7018)) enum AgEVAState IAgVAProfileChangeStoppingConditionState::GetState ( );
__declspec(implementation_key(7019)) void IAgVAProfileChangeStoppingConditionState::PutState ( enum AgEVAState pVal );
__declspec(implementation_key(7020)) HRESULT IAgVAProfileChangeStoppingConditionState::SetTrigger ( struct IAgVAStoppingCondition * StoppingCondition );
__declspec(implementation_key(7021)) _bstr_t IAgVAProfileChangeStoppingConditionState::GetTriggerName ( );
__declspec(implementation_key(7022)) void IAgVAProfileChangeStoppingConditionState::PutTriggerName ( _bstr_t pVal );
__declspec(implementation_key(7023)) IAgVAProfilePtr _IAgVAProfileSeedFiniteManeuver::Copy ( );
__declspec(implementation_key(7024)) _bstr_t _IAgVAProfileSeedFiniteManeuver::GetName ( );
__declspec(implementation_key(7025)) void _IAgVAProfileSeedFiniteManeuver::PutName ( _bstr_t pVal );
__declspec(implementation_key(7026)) _bstr_t _IAgVAProfileSeedFiniteManeuver::GetStatus ( );
__declspec(implementation_key(7027)) _bstr_t _IAgVAProfileSeedFiniteManeuver::GetUserComment ( );
__declspec(implementation_key(7028)) void _IAgVAProfileSeedFiniteManeuver::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7029)) enum AgEVAProfileMode _IAgVAProfileSeedFiniteManeuver::GetMode ( );
__declspec(implementation_key(7030)) void _IAgVAProfileSeedFiniteManeuver::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(7031)) _bstr_t _IAgVAProfileSeedFiniteManeuver::GetSegmentName ( );
__declspec(implementation_key(7032)) void _IAgVAProfileSeedFiniteManeuver::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(7033)) HRESULT _IAgVAProfileSeedFiniteManeuver::SetSegment ( struct IAgVAMCSManeuver * pVAMCSManeuver );
__declspec(implementation_key(7034)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAProfileSeedFiniteManeuver::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(7035)) enum AgEVAProfile _IAgVAProfileSeedFiniteManeuver::GetType ( );
__declspec(implementation_key(7036)) _bstr_t IAgVAProfileSeedFiniteManeuver::GetSegmentName ( );
__declspec(implementation_key(7037)) void IAgVAProfileSeedFiniteManeuver::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(7038)) HRESULT IAgVAProfileSeedFiniteManeuver::SetSegment ( struct IAgVAMCSManeuver * pVAMCSManeuver );
__declspec(implementation_key(7039)) IAgVAProfilePtr _IAgVAProfileRunOnce::Copy ( );
__declspec(implementation_key(7040)) _bstr_t _IAgVAProfileRunOnce::GetName ( );
__declspec(implementation_key(7041)) void _IAgVAProfileRunOnce::PutName ( _bstr_t pVal );
__declspec(implementation_key(7042)) _bstr_t _IAgVAProfileRunOnce::GetStatus ( );
__declspec(implementation_key(7043)) _bstr_t _IAgVAProfileRunOnce::GetUserComment ( );
__declspec(implementation_key(7044)) void _IAgVAProfileRunOnce::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7045)) enum AgEVAProfileMode _IAgVAProfileRunOnce::GetMode ( );
__declspec(implementation_key(7046)) void _IAgVAProfileRunOnce::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(7047)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAProfileRunOnce::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(7048)) enum AgEVAProfile _IAgVAProfileRunOnce::GetType ( );
__declspec(implementation_key(7049)) IAgVAAutomaticSequencePtr _IAgVAAutomaticSequence::MakeCopy ( _bstr_t OriginalName );
__declspec(implementation_key(7050)) _bstr_t _IAgVAAutomaticSequence::GetName ( );
__declspec(implementation_key(7051)) void _IAgVAAutomaticSequence::PutName ( _bstr_t pVal );
__declspec(implementation_key(7052)) _bstr_t _IAgVAAutomaticSequence::GetUserComment ( );
__declspec(implementation_key(7053)) void _IAgVAAutomaticSequence::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7054)) IAgVAMCSSegmentCollectionPtr _IAgVAAutomaticSequence::GetSequence ( );
__declspec(implementation_key(7055)) _bstr_t _IAgVAMCSSegmentProperties::GetDisplayCoordinateSystem ( );
__declspec(implementation_key(7056)) void _IAgVAMCSSegmentProperties::PutDisplayCoordinateSystem ( _bstr_t pVal );
__declspec(implementation_key(7057)) OLE_COLOR _IAgVAMCSSegmentProperties::GetColor ( );
__declspec(implementation_key(7058)) void _IAgVAMCSSegmentProperties::PutColor ( OLE_COLOR pVal );
__declspec(implementation_key(7059)) VARIANT_BOOL _IAgVAMCSSegmentProperties::GetUpdateAnimationTimeAfterRun ( );
__declspec(implementation_key(7060)) void _IAgVAMCSSegmentProperties::PutUpdateAnimationTimeAfterRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(7061)) HRESULT _IAgVAMCSSegmentProperties::ApplyFinalStateToBPlanes ( );
__declspec(implementation_key(7062)) IAgVABPlaneCollectionPtr _IAgVAMCSSegmentProperties::GetBPlanes ( );
__declspec(implementation_key(7063)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAMCSSegmentProperties::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(7064)) enum AgEVARunCode _IAgVAMCSSegmentProperties::GetLastRunCode ( );
__declspec(implementation_key(7065)) VARIANT_BOOL _IAgVAScriptingTool::GetEnable ( );
__declspec(implementation_key(7066)) void _IAgVAScriptingTool::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(7067)) IAgVAScriptingSegmentCollectionPtr _IAgVAScriptingTool::GetSegmentProperties ( );
__declspec(implementation_key(7068)) IAgVAScriptingCalcObjectCollectionPtr _IAgVAScriptingTool::GetCalcObjects ( );
__declspec(implementation_key(7069)) IAgVAScriptingParameterCollectionPtr _IAgVAScriptingTool::GetParameters ( );
__declspec(implementation_key(7070)) enum AgEVALanguage _IAgVAScriptingTool::GetLanguageType ( );
__declspec(implementation_key(7071)) void _IAgVAScriptingTool::PutLanguageType ( enum AgEVALanguage pVal );
__declspec(implementation_key(7072)) HRESULT _IAgVAScriptingTool::ScriptText ( _bstr_t Script );
__declspec(implementation_key(7073)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAScriptingTool::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(7074)) HRESULT _IAgVAScriptingTool::CopyToClipboard ( );
__declspec(implementation_key(7075)) HRESULT _IAgVAScriptingTool::PasteFromClipboard ( );
__declspec(implementation_key(7076)) VARIANT_BOOL _IAgVAScriptingTool::GetPreIterate ( );
__declspec(implementation_key(7077)) void _IAgVAScriptingTool::PutPreIterate ( VARIANT_BOOL pVal );
__declspec(implementation_key(7078)) _bstr_t _IAgVAScriptingSegment::GetSegmentName ( );
__declspec(implementation_key(7079)) void _IAgVAScriptingSegment::PutSegmentName ( _bstr_t pVal );
__declspec(implementation_key(7080)) _bstr_t _IAgVAScriptingSegment::GetComponentName ( );
__declspec(implementation_key(7081)) void _IAgVAScriptingSegment::PutComponentName ( _bstr_t pVal );
__declspec(implementation_key(7082)) _bstr_t _IAgVAScriptingSegment::GetAttribute ( );
__declspec(implementation_key(7083)) void _IAgVAScriptingSegment::PutAttribute ( _bstr_t pVal );
__declspec(implementation_key(7084)) _bstr_t _IAgVAScriptingSegment::GetUnit ( );
__declspec(implementation_key(7085)) void _IAgVAScriptingSegment::PutUnit ( _bstr_t pVal );
__declspec(implementation_key(7086)) SAFEARRAY * _IAgVAScriptingSegment::GetAvailableSegmentNames ( );
__declspec(implementation_key(7087)) SAFEARRAY * _IAgVAScriptingSegment::GetAvailableAttributeValues ( );
__declspec(implementation_key(7088)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAScriptingSegment::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(7089)) VARIANT_BOOL _IAgVAScriptingSegment::GetReadOnlyProperty ( );
__declspec(implementation_key(7090)) void _IAgVAScriptingSegment::PutReadOnlyProperty ( VARIANT_BOOL pVal );
__declspec(implementation_key(7091)) _bstr_t _IAgVAScriptingSegment::GetObjectName ( );
__declspec(implementation_key(7092)) void _IAgVAScriptingSegment::PutObjectName ( _bstr_t pVal );
__declspec(implementation_key(7093)) SAFEARRAY * _IAgVAScriptingSegment::GetAvailableObjectNames ( );
__declspec(implementation_key(7094)) _bstr_t _IAgVAScriptingParameter::GetName ( );
__declspec(implementation_key(7095)) void _IAgVAScriptingParameter::PutName ( _bstr_t pVal );
__declspec(implementation_key(7096)) double _IAgVAScriptingParameter::GetValue ( );
__declspec(implementation_key(7097)) void _IAgVAScriptingParameter::PutValue ( double pVal );
__declspec(implementation_key(7098)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAScriptingParameter::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(7099)) _variant_t _IAgVAScriptingParameter::GetParamValue ( );
__declspec(implementation_key(7100)) void _IAgVAScriptingParameter::PutParamValue ( const _variant_t & pVal );
__declspec(implementation_key(7101)) _bstr_t _IAgVAScriptingParameter::GetUnit ( );
__declspec(implementation_key(7102)) void _IAgVAScriptingParameter::PutUnit ( _bstr_t pVal );
__declspec(implementation_key(7103)) enum AgEVAScriptingParameterType _IAgVAScriptingParameter::GetType ( );
__declspec(implementation_key(7104)) void _IAgVAScriptingParameter::PutType ( enum AgEVAScriptingParameterType pVal );
__declspec(implementation_key(7105)) VARIANT_BOOL _IAgVAScriptingParameter::GetInheritValue ( );
__declspec(implementation_key(7106)) void _IAgVAScriptingParameter::PutInheritValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(7107)) _bstr_t _IAgVAScriptingParameter::GetUserComment ( );
__declspec(implementation_key(7108)) void _IAgVAScriptingParameter::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7109)) _bstr_t _IAgVAScriptingParameter::GetDimension ( );
__declspec(implementation_key(7110)) void _IAgVAScriptingParameter::PutDimension ( _bstr_t pVal );
__declspec(implementation_key(7111)) IAgVAScriptingParameterEnumerationChoiceCollectionPtr _IAgVAScriptingParameter::GetEnumerationChoices ( );
__declspec(implementation_key(7112)) VARIANT_BOOL _IAgVAScriptingParameter::GetUseMinValue ( );
__declspec(implementation_key(7113)) void _IAgVAScriptingParameter::PutUseMinValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(7114)) _variant_t _IAgVAScriptingParameter::GetMinValue ( );
__declspec(implementation_key(7115)) void _IAgVAScriptingParameter::PutMinValue ( const _variant_t & pVal );
__declspec(implementation_key(7116)) VARIANT_BOOL _IAgVAScriptingParameter::GetUseMaxValue ( );
__declspec(implementation_key(7117)) void _IAgVAScriptingParameter::PutUseMaxValue ( VARIANT_BOOL pVal );
__declspec(implementation_key(7118)) _variant_t _IAgVAScriptingParameter::GetMaxValue ( );
__declspec(implementation_key(7119)) void _IAgVAScriptingParameter::PutMaxValue ( const _variant_t & pVal );
__declspec(implementation_key(7120)) _bstr_t _IAgVAScriptingCalcObject::GetComponentName ( );
__declspec(implementation_key(7121)) void _IAgVAScriptingCalcObject::PutComponentName ( _bstr_t pVal );
__declspec(implementation_key(7122)) _bstr_t _IAgVAScriptingCalcObject::GetCalcObjectName ( );
__declspec(implementation_key(7123)) void _IAgVAScriptingCalcObject::PutCalcObjectName ( _bstr_t pVal );
__declspec(implementation_key(7124)) STKObjects::IAgComponentInfoPtr _IAgVAScriptingCalcObject::GetCalcObject ( );
__declspec(implementation_key(7125)) void _IAgVAScriptingCalcObject::PutCalcObject ( struct STKObjects::IAgComponentInfo * ppRetVal );
__declspec(implementation_key(7126)) _bstr_t _IAgVAScriptingCalcObject::GetUnit ( );
__declspec(implementation_key(7127)) void _IAgVAScriptingCalcObject::PutUnit ( _bstr_t pVal );
__declspec(implementation_key(7128)) HRESULT _IAgVAScriptingCalcObject::CopyCalcObjectToClipboard ( );
__declspec(implementation_key(7129)) HRESULT _IAgVAScriptingCalcObject::PasteCalcObjectFromClipboard ( );
__declspec(implementation_key(7130)) _bstr_t _IAgVAUserVariableDefinition::GetUnitDimension ( );
__declspec(implementation_key(7131)) void _IAgVAUserVariableDefinition::PutUnitDimension ( _bstr_t pVal );
__declspec(implementation_key(7132)) _bstr_t _IAgVAUserVariableDefinition::GetVariableName ( );
__declspec(implementation_key(7133)) void _IAgVAUserVariableDefinition::PutVariableName ( _bstr_t pVal );
__declspec(implementation_key(7134)) _bstr_t _IAgVAUserVariable::GetUnitDimension ( );
__declspec(implementation_key(7135)) _bstr_t _IAgVAUserVariable::GetVariableName ( );
__declspec(implementation_key(7136)) _variant_t _IAgVAUserVariable::GetVariableValue ( );
__declspec(implementation_key(7137)) void _IAgVAUserVariable::PutVariableValue ( const _variant_t & pVal );
__declspec(implementation_key(7138)) HRESULT _IAgVAUserVariable::EnableControlParameter ( );
__declspec(implementation_key(7139)) HRESULT _IAgVAUserVariable::DisableControlParameter ( );
__declspec(implementation_key(7140)) VARIANT_BOOL _IAgVAUserVariable::IsControlParameterEnabled ( );
__declspec(implementation_key(7141)) VARIANT_BOOL _IAgVAUserVariable::GetControlParametersAvailable ( );
__declspec(implementation_key(7142)) _bstr_t _IAgVAUserVariableUpdate::GetUnitDimension ( );
__declspec(implementation_key(7143)) _bstr_t _IAgVAUserVariableUpdate::GetVariableName ( );
__declspec(implementation_key(7144)) _variant_t _IAgVAUserVariableUpdate::GetVariableValue ( );
__declspec(implementation_key(7145)) void _IAgVAUserVariableUpdate::PutVariableValue ( const _variant_t & pVal );
__declspec(implementation_key(7146)) enum AgEVAUpdateAction _IAgVAUserVariableUpdate::GetVariableAction ( );
__declspec(implementation_key(7147)) void _IAgVAUserVariableUpdate::PutVariableAction ( enum AgEVAUpdateAction pVal );
__declspec(implementation_key(7148)) HRESULT _IAgVAUserVariableUpdate::EnableControlParameter ( );
__declspec(implementation_key(7149)) HRESULT _IAgVAUserVariableUpdate::DisableControlParameter ( );
__declspec(implementation_key(7150)) VARIANT_BOOL _IAgVAUserVariableUpdate::IsControlParameterEnabled ( );
__declspec(implementation_key(7151)) VARIANT_BOOL _IAgVAUserVariableUpdate::GetControlParametersAvailable ( );
__declspec(implementation_key(7152)) _bstr_t _IAgVAScriptingParameterEnumerationChoice::GetName ( );
__declspec(implementation_key(7153)) void _IAgVAScriptingParameterEnumerationChoice::PutName ( _bstr_t pVal );
__declspec(implementation_key(7154)) long _IAgVAScriptingParameterEnumerationChoice::GetValue ( );
__declspec(implementation_key(7155)) void _IAgVAScriptingParameterEnumerationChoice::PutValue ( long pVal );
__declspec(implementation_key(7156)) STKUtil::IAgRuntimeTypeInfoPtr _IAgVAScriptingParameterEnumerationChoice::GetProvideRuntimeTypeInfo ( );
__declspec(implementation_key(7157)) VARIANT_BOOL IAgVASNOPTControl::GetEnable ( );
__declspec(implementation_key(7158)) void IAgVASNOPTControl::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(7159)) _bstr_t IAgVASNOPTControl::GetName ( );
__declspec(implementation_key(7160)) _bstr_t IAgVASNOPTControl::GetParentName ( );
__declspec(implementation_key(7161)) _variant_t IAgVASNOPTControl::GetInitialValue ( );
__declspec(implementation_key(7162)) _variant_t IAgVASNOPTControl::GetCurrentValue ( );
__declspec(implementation_key(7163)) void IAgVASNOPTControl::PutCurrentValue ( const _variant_t & pVal );
__declspec(implementation_key(7164)) _variant_t IAgVASNOPTControl::GetLowerBound ( );
__declspec(implementation_key(7165)) void IAgVASNOPTControl::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(7166)) _variant_t IAgVASNOPTControl::GetUpperBound ( );
__declspec(implementation_key(7167)) void IAgVASNOPTControl::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(7168)) _variant_t IAgVASNOPTControl::GetScalingValue ( );
__declspec(implementation_key(7169)) void IAgVASNOPTControl::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(7170)) VARIANT_BOOL IAgVASNOPTControl::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(7171)) void IAgVASNOPTControl::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(7172)) _bstr_t IAgVASNOPTControl::GetCustomDisplayUnit ( );
__declspec(implementation_key(7173)) void IAgVASNOPTControl::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(7174)) IAgVASNOPTControlPtr IAgVASNOPTControlCollection::GetItem ( long Index );
__declspec(implementation_key(7175)) IUnknownPtr IAgVASNOPTControlCollection::Get_NewEnum ( );
__declspec(implementation_key(7176)) long IAgVASNOPTControlCollection::GetCount ( );
__declspec(implementation_key(7177)) IAgVASNOPTControlPtr IAgVASNOPTControlCollection::GetControlByPaths ( _bstr_t ObjectPath, _bstr_t ControlPath );
__declspec(implementation_key(7178)) VARIANT_BOOL IAgVASNOPTResult::GetEnable ( );
__declspec(implementation_key(7179)) void IAgVASNOPTResult::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(7180)) _bstr_t IAgVASNOPTResult::GetName ( );
__declspec(implementation_key(7181)) _variant_t IAgVASNOPTResult::GetCurrentValue ( );
__declspec(implementation_key(7182)) _bstr_t IAgVASNOPTResult::GetParentName ( );
__declspec(implementation_key(7183)) _variant_t IAgVASNOPTResult::GetLowerBound ( );
__declspec(implementation_key(7184)) void IAgVASNOPTResult::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(7185)) _variant_t IAgVASNOPTResult::GetUpperBound ( );
__declspec(implementation_key(7186)) void IAgVASNOPTResult::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(7187)) _variant_t IAgVASNOPTResult::GetScalingValue ( );
__declspec(implementation_key(7188)) void IAgVASNOPTResult::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(7189)) double IAgVASNOPTResult::GetWeight ( );
__declspec(implementation_key(7190)) void IAgVASNOPTResult::PutWeight ( double pVal );
__declspec(implementation_key(7191)) enum AgEVASNOPTGoal IAgVASNOPTResult::GetGoal ( );
__declspec(implementation_key(7192)) void IAgVASNOPTResult::PutGoal ( enum AgEVASNOPTGoal pVal );
__declspec(implementation_key(7193)) VARIANT_BOOL IAgVASNOPTResult::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(7194)) void IAgVASNOPTResult::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(7195)) _bstr_t IAgVASNOPTResult::GetCustomDisplayUnit ( );
__declspec(implementation_key(7196)) void IAgVASNOPTResult::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(7197)) IAgVASNOPTResultPtr IAgVASNOPTResultCollection::GetItem ( long Index );
__declspec(implementation_key(7198)) IUnknownPtr IAgVASNOPTResultCollection::Get_NewEnum ( );
__declspec(implementation_key(7199)) long IAgVASNOPTResultCollection::GetCount ( );
__declspec(implementation_key(7200)) IAgVASNOPTResultPtr IAgVASNOPTResultCollection::GetResultByPaths ( _bstr_t ObjectPath, _bstr_t ResultPath );
__declspec(implementation_key(7201)) IAgVAProfilePtr _IAgVAProfileSNOPTOptimizer::Copy ( );
__declspec(implementation_key(7202)) _bstr_t _IAgVAProfileSNOPTOptimizer::GetName ( );
__declspec(implementation_key(7203)) void _IAgVAProfileSNOPTOptimizer::PutName ( _bstr_t pVal );
__declspec(implementation_key(7204)) _bstr_t _IAgVAProfileSNOPTOptimizer::GetStatus ( );
__declspec(implementation_key(7205)) _bstr_t _IAgVAProfileSNOPTOptimizer::GetUserComment ( );
__declspec(implementation_key(7206)) void _IAgVAProfileSNOPTOptimizer::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7207)) enum AgEVAProfileMode _IAgVAProfileSNOPTOptimizer::GetMode ( );
__declspec(implementation_key(7208)) void _IAgVAProfileSNOPTOptimizer::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(7209)) enum AgEVAProfile _IAgVAProfileSNOPTOptimizer::GetType ( );
__declspec(implementation_key(7210)) IAgVASNOPTControlCollectionPtr _IAgVAProfileSNOPTOptimizer::GetControlParameters ( );
__declspec(implementation_key(7211)) IAgVASNOPTResultCollectionPtr _IAgVAProfileSNOPTOptimizer::GetResults ( );
__declspec(implementation_key(7212)) IAgVAScriptingToolPtr _IAgVAProfileSNOPTOptimizer::GetScriptingTool ( );
__declspec(implementation_key(7213)) IAgVATargeterGraphCollectionPtr _IAgVAProfileSNOPTOptimizer::GetTargeterGraphs ( );
__declspec(implementation_key(7214)) VARIANT_BOOL _IAgVAProfileSNOPTOptimizer::GetResetControlsBeforeRun ( );
__declspec(implementation_key(7215)) void _IAgVAProfileSNOPTOptimizer::PutResetControlsBeforeRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(7216)) long _IAgVAProfileSNOPTOptimizer::GetMaxMajorIterations ( );
__declspec(implementation_key(7217)) void _IAgVAProfileSNOPTOptimizer::PutMaxMajorIterations ( long pVal );
__declspec(implementation_key(7218)) double _IAgVAProfileSNOPTOptimizer::GetToleranceOnMajorFeasibility ( );
__declspec(implementation_key(7219)) void _IAgVAProfileSNOPTOptimizer::PutToleranceOnMajorFeasibility ( double pVal );
__declspec(implementation_key(7220)) double _IAgVAProfileSNOPTOptimizer::GetToleranceOnMajorOptimality ( );
__declspec(implementation_key(7221)) void _IAgVAProfileSNOPTOptimizer::PutToleranceOnMajorOptimality ( double pVal );
__declspec(implementation_key(7222)) long _IAgVAProfileSNOPTOptimizer::GetMaxMinorIterations ( );
__declspec(implementation_key(7223)) void _IAgVAProfileSNOPTOptimizer::PutMaxMinorIterations ( long pVal );
__declspec(implementation_key(7224)) double _IAgVAProfileSNOPTOptimizer::GetToleranceOnMinorFeasibility ( );
__declspec(implementation_key(7225)) void _IAgVAProfileSNOPTOptimizer::PutToleranceOnMinorFeasibility ( double pVal );
__declspec(implementation_key(7226)) double _IAgVAProfileSNOPTOptimizer::GetToleranceOnMinorOptimality ( );
__declspec(implementation_key(7227)) void _IAgVAProfileSNOPTOptimizer::PutToleranceOnMinorOptimality ( double pVal );
__declspec(implementation_key(7228)) _bstr_t _IAgVAProfileSNOPTOptimizer::GetOptionsFilename ( );
__declspec(implementation_key(7229)) void _IAgVAProfileSNOPTOptimizer::PutOptionsFilename ( _bstr_t pVal );
__declspec(implementation_key(7230)) IAgVASNOPTControlCollectionPtr IAgVAProfileSNOPTOptimizer::GetControlParameters ( );
__declspec(implementation_key(7231)) IAgVASNOPTResultCollectionPtr IAgVAProfileSNOPTOptimizer::GetResults ( );
__declspec(implementation_key(7232)) IAgVATargeterGraphCollectionPtr IAgVAProfileSNOPTOptimizer::GetTargeterGraphs ( );
__declspec(implementation_key(7233)) IAgVAScriptingToolPtr IAgVAProfileSNOPTOptimizer::GetScriptingTool ( );
__declspec(implementation_key(7234)) VARIANT_BOOL IAgVAProfileSNOPTOptimizer::GetResetControlsBeforeRun ( );
__declspec(implementation_key(7235)) void IAgVAProfileSNOPTOptimizer::PutResetControlsBeforeRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(7236)) long IAgVAProfileSNOPTOptimizer::GetMaxMajorIterations ( );
__declspec(implementation_key(7237)) void IAgVAProfileSNOPTOptimizer::PutMaxMajorIterations ( long pVal );
__declspec(implementation_key(7238)) double IAgVAProfileSNOPTOptimizer::GetToleranceOnMajorFeasibility ( );
__declspec(implementation_key(7239)) void IAgVAProfileSNOPTOptimizer::PutToleranceOnMajorFeasibility ( double pVal );
__declspec(implementation_key(7240)) double IAgVAProfileSNOPTOptimizer::GetToleranceOnMajorOptimality ( );
__declspec(implementation_key(7241)) void IAgVAProfileSNOPTOptimizer::PutToleranceOnMajorOptimality ( double pVal );
__declspec(implementation_key(7242)) long IAgVAProfileSNOPTOptimizer::GetMaxMinorIterations ( );
__declspec(implementation_key(7243)) void IAgVAProfileSNOPTOptimizer::PutMaxMinorIterations ( long pVal );
__declspec(implementation_key(7244)) double IAgVAProfileSNOPTOptimizer::GetToleranceOnMinorFeasibility ( );
__declspec(implementation_key(7245)) void IAgVAProfileSNOPTOptimizer::PutToleranceOnMinorFeasibility ( double pVal );
__declspec(implementation_key(7246)) double IAgVAProfileSNOPTOptimizer::GetToleranceOnMinorOptimality ( );
__declspec(implementation_key(7247)) void IAgVAProfileSNOPTOptimizer::PutToleranceOnMinorOptimality ( double pVal );
__declspec(implementation_key(7248)) _bstr_t IAgVAProfileSNOPTOptimizer::GetOptionsFilename ( );
__declspec(implementation_key(7249)) void IAgVAProfileSNOPTOptimizer::PutOptionsFilename ( _bstr_t pVal );
__declspec(implementation_key(7250)) VARIANT_BOOL _IAgVASNOPTControl::GetEnable ( );
__declspec(implementation_key(7251)) void _IAgVASNOPTControl::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(7252)) _bstr_t _IAgVASNOPTControl::GetName ( );
__declspec(implementation_key(7253)) _bstr_t _IAgVASNOPTControl::GetParentName ( );
__declspec(implementation_key(7254)) _variant_t _IAgVASNOPTControl::GetInitialValue ( );
__declspec(implementation_key(7255)) _variant_t _IAgVASNOPTControl::GetCurrentValue ( );
__declspec(implementation_key(7256)) void _IAgVASNOPTControl::PutCurrentValue ( const _variant_t & pVal );
__declspec(implementation_key(7257)) _variant_t _IAgVASNOPTControl::GetLowerBound ( );
__declspec(implementation_key(7258)) void _IAgVASNOPTControl::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(7259)) _variant_t _IAgVASNOPTControl::GetUpperBound ( );
__declspec(implementation_key(7260)) void _IAgVASNOPTControl::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(7261)) _variant_t _IAgVASNOPTControl::GetScalingValue ( );
__declspec(implementation_key(7262)) void _IAgVASNOPTControl::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(7263)) VARIANT_BOOL _IAgVASNOPTControl::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(7264)) void _IAgVASNOPTControl::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(7265)) _bstr_t _IAgVASNOPTControl::GetCustomDisplayUnit ( );
__declspec(implementation_key(7266)) void _IAgVASNOPTControl::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(7267)) VARIANT_BOOL _IAgVASNOPTResult::GetEnable ( );
__declspec(implementation_key(7268)) void _IAgVASNOPTResult::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(7269)) _bstr_t _IAgVASNOPTResult::GetName ( );
__declspec(implementation_key(7270)) _variant_t _IAgVASNOPTResult::GetCurrentValue ( );
__declspec(implementation_key(7271)) _bstr_t _IAgVASNOPTResult::GetParentName ( );
__declspec(implementation_key(7272)) _variant_t _IAgVASNOPTResult::GetLowerBound ( );
__declspec(implementation_key(7273)) void _IAgVASNOPTResult::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(7274)) _variant_t _IAgVASNOPTResult::GetUpperBound ( );
__declspec(implementation_key(7275)) void _IAgVASNOPTResult::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(7276)) _variant_t _IAgVASNOPTResult::GetScalingValue ( );
__declspec(implementation_key(7277)) void _IAgVASNOPTResult::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(7278)) double _IAgVASNOPTResult::GetWeight ( );
__declspec(implementation_key(7279)) void _IAgVASNOPTResult::PutWeight ( double pVal );
__declspec(implementation_key(7280)) enum AgEVASNOPTGoal _IAgVASNOPTResult::GetGoal ( );
__declspec(implementation_key(7281)) void _IAgVASNOPTResult::PutGoal ( enum AgEVASNOPTGoal pVal );
__declspec(implementation_key(7282)) VARIANT_BOOL _IAgVASNOPTResult::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(7283)) void _IAgVASNOPTResult::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(7284)) _bstr_t _IAgVASNOPTResult::GetCustomDisplayUnit ( );
__declspec(implementation_key(7285)) void _IAgVASNOPTResult::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(7286)) VARIANT_BOOL IAgVAIPOPTControl::GetEnable ( );
__declspec(implementation_key(7287)) void IAgVAIPOPTControl::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(7288)) _bstr_t IAgVAIPOPTControl::GetName ( );
__declspec(implementation_key(7289)) _bstr_t IAgVAIPOPTControl::GetParentName ( );
__declspec(implementation_key(7290)) _variant_t IAgVAIPOPTControl::GetInitialValue ( );
__declspec(implementation_key(7291)) _variant_t IAgVAIPOPTControl::GetCurrentValue ( );
__declspec(implementation_key(7292)) void IAgVAIPOPTControl::PutCurrentValue ( const _variant_t & pVal );
__declspec(implementation_key(7293)) _variant_t IAgVAIPOPTControl::GetLowerBound ( );
__declspec(implementation_key(7294)) void IAgVAIPOPTControl::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(7295)) _variant_t IAgVAIPOPTControl::GetUpperBound ( );
__declspec(implementation_key(7296)) void IAgVAIPOPTControl::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(7297)) _variant_t IAgVAIPOPTControl::GetScalingValue ( );
__declspec(implementation_key(7298)) void IAgVAIPOPTControl::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(7299)) VARIANT_BOOL IAgVAIPOPTControl::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(7300)) void IAgVAIPOPTControl::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(7301)) _bstr_t IAgVAIPOPTControl::GetCustomDisplayUnit ( );
__declspec(implementation_key(7302)) void IAgVAIPOPTControl::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(7303)) IAgVAIPOPTControlPtr IAgVAIPOPTControlCollection::GetItem ( long Index );
__declspec(implementation_key(7304)) IUnknownPtr IAgVAIPOPTControlCollection::Get_NewEnum ( );
__declspec(implementation_key(7305)) long IAgVAIPOPTControlCollection::GetCount ( );
__declspec(implementation_key(7306)) IAgVAIPOPTControlPtr IAgVAIPOPTControlCollection::GetControlByPaths ( _bstr_t ObjectPath, _bstr_t ControlPath );
__declspec(implementation_key(7307)) VARIANT_BOOL IAgVAIPOPTResult::GetEnable ( );
__declspec(implementation_key(7308)) void IAgVAIPOPTResult::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(7309)) _bstr_t IAgVAIPOPTResult::GetName ( );
__declspec(implementation_key(7310)) _variant_t IAgVAIPOPTResult::GetCurrentValue ( );
__declspec(implementation_key(7311)) _bstr_t IAgVAIPOPTResult::GetParentName ( );
__declspec(implementation_key(7312)) _variant_t IAgVAIPOPTResult::GetLowerBound ( );
__declspec(implementation_key(7313)) void IAgVAIPOPTResult::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(7314)) _variant_t IAgVAIPOPTResult::GetUpperBound ( );
__declspec(implementation_key(7315)) void IAgVAIPOPTResult::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(7316)) _variant_t IAgVAIPOPTResult::GetScalingValue ( );
__declspec(implementation_key(7317)) void IAgVAIPOPTResult::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(7318)) double IAgVAIPOPTResult::GetWeight ( );
__declspec(implementation_key(7319)) void IAgVAIPOPTResult::PutWeight ( double pVal );
__declspec(implementation_key(7320)) enum AgEVAIPOPTGoal IAgVAIPOPTResult::GetGoal ( );
__declspec(implementation_key(7321)) void IAgVAIPOPTResult::PutGoal ( enum AgEVAIPOPTGoal pVal );
__declspec(implementation_key(7322)) VARIANT_BOOL IAgVAIPOPTResult::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(7323)) void IAgVAIPOPTResult::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(7324)) _bstr_t IAgVAIPOPTResult::GetCustomDisplayUnit ( );
__declspec(implementation_key(7325)) void IAgVAIPOPTResult::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(7326)) IAgVAIPOPTResultPtr IAgVAIPOPTResultCollection::GetItem ( long Index );
__declspec(implementation_key(7327)) IUnknownPtr IAgVAIPOPTResultCollection::Get_NewEnum ( );
__declspec(implementation_key(7328)) long IAgVAIPOPTResultCollection::GetCount ( );
__declspec(implementation_key(7329)) IAgVAIPOPTResultPtr IAgVAIPOPTResultCollection::GetResultByPaths ( _bstr_t ObjectPath, _bstr_t ResultPath );
__declspec(implementation_key(7330)) IAgVAProfilePtr _IAgVAProfileIPOPTOptimizer::Copy ( );
__declspec(implementation_key(7331)) _bstr_t _IAgVAProfileIPOPTOptimizer::GetName ( );
__declspec(implementation_key(7332)) void _IAgVAProfileIPOPTOptimizer::PutName ( _bstr_t pVal );
__declspec(implementation_key(7333)) _bstr_t _IAgVAProfileIPOPTOptimizer::GetStatus ( );
__declspec(implementation_key(7334)) _bstr_t _IAgVAProfileIPOPTOptimizer::GetUserComment ( );
__declspec(implementation_key(7335)) void _IAgVAProfileIPOPTOptimizer::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7336)) enum AgEVAProfileMode _IAgVAProfileIPOPTOptimizer::GetMode ( );
__declspec(implementation_key(7337)) void _IAgVAProfileIPOPTOptimizer::PutMode ( enum AgEVAProfileMode pVal );
__declspec(implementation_key(7338)) enum AgEVAProfile _IAgVAProfileIPOPTOptimizer::GetType ( );
__declspec(implementation_key(7339)) IAgVAIPOPTControlCollectionPtr _IAgVAProfileIPOPTOptimizer::GetControlParameters ( );
__declspec(implementation_key(7340)) IAgVAIPOPTResultCollectionPtr _IAgVAProfileIPOPTOptimizer::GetResults ( );
__declspec(implementation_key(7341)) IAgVAScriptingToolPtr _IAgVAProfileIPOPTOptimizer::GetScriptingTool ( );
__declspec(implementation_key(7342)) IAgVATargeterGraphCollectionPtr _IAgVAProfileIPOPTOptimizer::GetTargeterGraphs ( );
__declspec(implementation_key(7343)) VARIANT_BOOL _IAgVAProfileIPOPTOptimizer::GetResetControlsBeforeRun ( );
__declspec(implementation_key(7344)) void _IAgVAProfileIPOPTOptimizer::PutResetControlsBeforeRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(7345)) double _IAgVAProfileIPOPTOptimizer::GetToleranceOnConvergence ( );
__declspec(implementation_key(7346)) void _IAgVAProfileIPOPTOptimizer::PutToleranceOnConvergence ( double pVal );
__declspec(implementation_key(7347)) long _IAgVAProfileIPOPTOptimizer::GetMaximumIterations ( );
__declspec(implementation_key(7348)) void _IAgVAProfileIPOPTOptimizer::PutMaximumIterations ( long pVal );
__declspec(implementation_key(7349)) double _IAgVAProfileIPOPTOptimizer::GetToleranceOnConstraintViolation ( );
__declspec(implementation_key(7350)) void _IAgVAProfileIPOPTOptimizer::PutToleranceOnConstraintViolation ( double pVal );
__declspec(implementation_key(7351)) double _IAgVAProfileIPOPTOptimizer::GetToleranceOnDualInfeasibility ( );
__declspec(implementation_key(7352)) void _IAgVAProfileIPOPTOptimizer::PutToleranceOnDualInfeasibility ( double pVal );
__declspec(implementation_key(7353)) double _IAgVAProfileIPOPTOptimizer::GetToleranceOnComplementaryInfeasibility ( );
__declspec(implementation_key(7354)) void _IAgVAProfileIPOPTOptimizer::PutToleranceOnComplementaryInfeasibility ( double pVal );
__declspec(implementation_key(7355)) _bstr_t _IAgVAProfileIPOPTOptimizer::GetOptionsFilename ( );
__declspec(implementation_key(7356)) void _IAgVAProfileIPOPTOptimizer::PutOptionsFilename ( _bstr_t pVal );
__declspec(implementation_key(7357)) IAgVAIPOPTControlCollectionPtr IAgVAProfileIPOPTOptimizer::GetControlParameters ( );
__declspec(implementation_key(7358)) IAgVAIPOPTResultCollectionPtr IAgVAProfileIPOPTOptimizer::GetResults ( );
__declspec(implementation_key(7359)) IAgVATargeterGraphCollectionPtr IAgVAProfileIPOPTOptimizer::GetTargeterGraphs ( );
__declspec(implementation_key(7360)) IAgVAScriptingToolPtr IAgVAProfileIPOPTOptimizer::GetScriptingTool ( );
__declspec(implementation_key(7361)) VARIANT_BOOL IAgVAProfileIPOPTOptimizer::GetResetControlsBeforeRun ( );
__declspec(implementation_key(7362)) void IAgVAProfileIPOPTOptimizer::PutResetControlsBeforeRun ( VARIANT_BOOL pVal );
__declspec(implementation_key(7363)) double IAgVAProfileIPOPTOptimizer::GetToleranceOnConvergence ( );
__declspec(implementation_key(7364)) void IAgVAProfileIPOPTOptimizer::PutToleranceOnConvergence ( double pVal );
__declspec(implementation_key(7365)) long IAgVAProfileIPOPTOptimizer::GetMaximumIterations ( );
__declspec(implementation_key(7366)) void IAgVAProfileIPOPTOptimizer::PutMaximumIterations ( long pVal );
__declspec(implementation_key(7367)) double IAgVAProfileIPOPTOptimizer::GetToleranceOnConstraintViolation ( );
__declspec(implementation_key(7368)) void IAgVAProfileIPOPTOptimizer::PutToleranceOnConstraintViolation ( double pVal );
__declspec(implementation_key(7369)) double IAgVAProfileIPOPTOptimizer::GetToleranceOnDualInfeasibility ( );
__declspec(implementation_key(7370)) void IAgVAProfileIPOPTOptimizer::PutToleranceOnDualInfeasibility ( double pVal );
__declspec(implementation_key(7371)) double IAgVAProfileIPOPTOptimizer::GetToleranceOnComplementaryInfeasibility ( );
__declspec(implementation_key(7372)) void IAgVAProfileIPOPTOptimizer::PutToleranceOnComplementaryInfeasibility ( double pVal );
__declspec(implementation_key(7373)) _bstr_t IAgVAProfileIPOPTOptimizer::GetOptionsFilename ( );
__declspec(implementation_key(7374)) void IAgVAProfileIPOPTOptimizer::PutOptionsFilename ( _bstr_t pVal );
__declspec(implementation_key(7375)) VARIANT_BOOL _IAgVAIPOPTControl::GetEnable ( );
__declspec(implementation_key(7376)) void _IAgVAIPOPTControl::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(7377)) _bstr_t _IAgVAIPOPTControl::GetName ( );
__declspec(implementation_key(7378)) _bstr_t _IAgVAIPOPTControl::GetParentName ( );
__declspec(implementation_key(7379)) _variant_t _IAgVAIPOPTControl::GetInitialValue ( );
__declspec(implementation_key(7380)) _variant_t _IAgVAIPOPTControl::GetCurrentValue ( );
__declspec(implementation_key(7381)) void _IAgVAIPOPTControl::PutCurrentValue ( const _variant_t & pVal );
__declspec(implementation_key(7382)) _variant_t _IAgVAIPOPTControl::GetLowerBound ( );
__declspec(implementation_key(7383)) void _IAgVAIPOPTControl::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(7384)) _variant_t _IAgVAIPOPTControl::GetUpperBound ( );
__declspec(implementation_key(7385)) void _IAgVAIPOPTControl::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(7386)) _variant_t _IAgVAIPOPTControl::GetScalingValue ( );
__declspec(implementation_key(7387)) void _IAgVAIPOPTControl::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(7388)) VARIANT_BOOL _IAgVAIPOPTControl::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(7389)) void _IAgVAIPOPTControl::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(7390)) _bstr_t _IAgVAIPOPTControl::GetCustomDisplayUnit ( );
__declspec(implementation_key(7391)) void _IAgVAIPOPTControl::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(7392)) VARIANT_BOOL _IAgVAIPOPTResult::GetEnable ( );
__declspec(implementation_key(7393)) void _IAgVAIPOPTResult::PutEnable ( VARIANT_BOOL pVal );
__declspec(implementation_key(7394)) _bstr_t _IAgVAIPOPTResult::GetName ( );
__declspec(implementation_key(7395)) _variant_t _IAgVAIPOPTResult::GetCurrentValue ( );
__declspec(implementation_key(7396)) _bstr_t _IAgVAIPOPTResult::GetParentName ( );
__declspec(implementation_key(7397)) _variant_t _IAgVAIPOPTResult::GetLowerBound ( );
__declspec(implementation_key(7398)) void _IAgVAIPOPTResult::PutLowerBound ( const _variant_t & pVal );
__declspec(implementation_key(7399)) _variant_t _IAgVAIPOPTResult::GetUpperBound ( );
__declspec(implementation_key(7400)) void _IAgVAIPOPTResult::PutUpperBound ( const _variant_t & pVal );
__declspec(implementation_key(7401)) _variant_t _IAgVAIPOPTResult::GetScalingValue ( );
__declspec(implementation_key(7402)) void _IAgVAIPOPTResult::PutScalingValue ( const _variant_t & pVal );
__declspec(implementation_key(7403)) double _IAgVAIPOPTResult::GetWeight ( );
__declspec(implementation_key(7404)) void _IAgVAIPOPTResult::PutWeight ( double pVal );
__declspec(implementation_key(7405)) enum AgEVAIPOPTGoal _IAgVAIPOPTResult::GetGoal ( );
__declspec(implementation_key(7406)) void _IAgVAIPOPTResult::PutGoal ( enum AgEVAIPOPTGoal pVal );
__declspec(implementation_key(7407)) VARIANT_BOOL _IAgVAIPOPTResult::GetUseCustomDisplayUnit ( );
__declspec(implementation_key(7408)) void _IAgVAIPOPTResult::PutUseCustomDisplayUnit ( VARIANT_BOOL pVal );
__declspec(implementation_key(7409)) _bstr_t _IAgVAIPOPTResult::GetCustomDisplayUnit ( );
__declspec(implementation_key(7410)) void _IAgVAIPOPTResult::PutCustomDisplayUnit ( _bstr_t pVal );
__declspec(implementation_key(7411)) IAgVACentralBodyPtr IAgVACentralBodyCollection::GetItem ( const _variant_t & IndexOrCbName );
__declspec(implementation_key(7412)) long IAgVACentralBodyCollection::GetCount ( );
__declspec(implementation_key(7413)) IUnknownPtr IAgVACentralBodyCollection::Get_NewEnum ( );
__declspec(implementation_key(7414)) HRESULT IAgVACentralBodyCollection::Add ( _bstr_t CbName );
__declspec(implementation_key(7415)) HRESULT IAgVACentralBodyCollection::Remove ( const _variant_t & IndexOrName );
__declspec(implementation_key(7416)) HRESULT IAgVACentralBodyCollection::RemoveAll ( );
__declspec(implementation_key(7417)) double IAgVACentralBody::GetGravitationalParam ( );
__declspec(implementation_key(7418)) void IAgVACentralBody::PutGravitationalParam ( double pVal );
__declspec(implementation_key(7419)) _bstr_t IAgVACentralBody::GetParentName ( );
__declspec(implementation_key(7420)) void IAgVACentralBody::PutParentName ( _bstr_t pVal );
__declspec(implementation_key(7421)) IAgVACentralBodyCollectionPtr IAgVACentralBody::GetChildren ( );
__declspec(implementation_key(7422)) _bstr_t IAgVACentralBody::GetDefaultGravityModelName ( );
__declspec(implementation_key(7423)) HRESULT IAgVACentralBody::SetDefaultGravityModelByName ( _bstr_t GravityModelName );
__declspec(implementation_key(7424)) IAgVACbGravityModelPtr IAgVACentralBody::GetDefaultGravityModelData ( );
__declspec(implementation_key(7425)) IAgVACbGravityModelPtr IAgVACentralBody::AddGravityModel ( enum AgEVACbGravityModel EGravityModel, _bstr_t UniqueName );
__declspec(implementation_key(7426)) HRESULT IAgVACentralBody::RemoveGravityModelByName ( _bstr_t GravityModelName );
__declspec(implementation_key(7427)) _bstr_t IAgVACentralBody::GetDefaultShapeName ( );
__declspec(implementation_key(7428)) IAgVACbShapePtr IAgVACentralBody::GetDefaultShapeData ( );
__declspec(implementation_key(7429)) HRESULT IAgVACentralBody::SetDefaultShapeByName ( _bstr_t ShapeName );
__declspec(implementation_key(7430)) IAgVACbShapePtr IAgVACentralBody::AddShape ( enum AgEVACbShape EShape, _bstr_t UniqueName );
__declspec(implementation_key(7431)) HRESULT IAgVACentralBody::RemoveShapeByName ( _bstr_t ShapeName );
__declspec(implementation_key(7432)) _bstr_t IAgVACentralBody::GetDefaultAttitudeName ( );
__declspec(implementation_key(7433)) IAgVACbAttitudePtr IAgVACentralBody::GetDefaultAttitudeData ( );
__declspec(implementation_key(7434)) HRESULT IAgVACentralBody::SetDefaultAttitudeByName ( _bstr_t AttitudeName );
__declspec(implementation_key(7435)) IAgVACbAttitudePtr IAgVACentralBody::AddAttitude ( enum AgEVACbAttitude EAttitude, _bstr_t UniqueName );
__declspec(implementation_key(7436)) HRESULT IAgVACentralBody::RemoveAttitudeByName ( _bstr_t AttitudeName );
__declspec(implementation_key(7437)) _bstr_t IAgVACentralBody::GetDefaultEphemerisName ( );
__declspec(implementation_key(7438)) HRESULT IAgVACentralBody::SetDefaultEphemerisByName ( _bstr_t EphemerisName );
__declspec(implementation_key(7439)) IAgVACbEphemerisPtr IAgVACentralBody::GetDefaultEphemerisData ( );
__declspec(implementation_key(7440)) IAgVACbEphemerisPtr IAgVACentralBody::AddEphemeris ( enum AgEVACbEphemeris EEphemeris, _bstr_t UniqueName );
__declspec(implementation_key(7441)) HRESULT IAgVACentralBody::RemoveEphemerisByName ( _bstr_t EphemerisName );
__declspec(implementation_key(7442)) HRESULT IAgVACentralBody::CutGravityModelByName ( _bstr_t GravityModelName );
__declspec(implementation_key(7443)) HRESULT IAgVACentralBody::CopyGravityModelByName ( _bstr_t GravityModelName );
__declspec(implementation_key(7444)) IAgVACbGravityModelPtr IAgVACentralBody::PasteGravityModel ( );
__declspec(implementation_key(7445)) IAgVACbGravityModelPtr IAgVACentralBody::AddCopyOfGravityModel ( struct IAgVACbGravityModel * GravityModel );
__declspec(implementation_key(7446)) HRESULT IAgVACentralBody::CutShapeByName ( _bstr_t ShapeName );
__declspec(implementation_key(7447)) HRESULT IAgVACentralBody::CopyShapeByName ( _bstr_t ShapeName );
__declspec(implementation_key(7448)) IAgVACbShapePtr IAgVACentralBody::PasteShape ( );
__declspec(implementation_key(7449)) IAgVACbShapePtr IAgVACentralBody::AddCopyOfShape ( struct IAgVACbShape * Shape );
__declspec(implementation_key(7450)) HRESULT IAgVACentralBody::CutAttitudeByName ( _bstr_t AttitudeName );
__declspec(implementation_key(7451)) HRESULT IAgVACentralBody::CopyAttitudeByName ( _bstr_t AttitudeName );
__declspec(implementation_key(7452)) IAgVACbAttitudePtr IAgVACentralBody::PasteAttitude ( );
__declspec(implementation_key(7453)) IAgVACbAttitudePtr IAgVACentralBody::AddCopyOfAttitude ( struct IAgVACbAttitude * Attitude );
__declspec(implementation_key(7454)) HRESULT IAgVACentralBody::CutEphemerisByName ( _bstr_t EphemerisName );
__declspec(implementation_key(7455)) HRESULT IAgVACentralBody::CopyEphemerisByName ( _bstr_t EphemerisName );
__declspec(implementation_key(7456)) IAgVACbEphemerisPtr IAgVACentralBody::PasteEphemeris ( );
__declspec(implementation_key(7457)) IAgVACbEphemerisPtr IAgVACentralBody::AddCopyOfEphemeris ( struct IAgVACbEphemeris * Ephemeris );
__declspec(implementation_key(7458)) double _IAgVACentralBody::GetGravitationalParam ( );
__declspec(implementation_key(7459)) void _IAgVACentralBody::PutGravitationalParam ( double pVal );
__declspec(implementation_key(7460)) _bstr_t _IAgVACentralBody::GetParentName ( );
__declspec(implementation_key(7461)) void _IAgVACentralBody::PutParentName ( _bstr_t pVal );
__declspec(implementation_key(7462)) IAgVACentralBodyCollectionPtr _IAgVACentralBody::GetChildren ( );
__declspec(implementation_key(7463)) _bstr_t _IAgVACentralBody::GetDefaultGravityModelName ( );
__declspec(implementation_key(7464)) HRESULT _IAgVACentralBody::SetDefaultGravityModelByName ( _bstr_t GravityModelName );
__declspec(implementation_key(7465)) IAgVACbGravityModelPtr _IAgVACentralBody::GetDefaultGravityModelData ( );
__declspec(implementation_key(7466)) IAgVACbGravityModelPtr _IAgVACentralBody::AddGravityModel ( enum AgEVACbGravityModel EGravityModel, _bstr_t UniqueName );
__declspec(implementation_key(7467)) HRESULT _IAgVACentralBody::RemoveGravityModelByName ( _bstr_t GravityModelName );
__declspec(implementation_key(7468)) _bstr_t _IAgVACentralBody::GetDefaultShapeName ( );
__declspec(implementation_key(7469)) IAgVACbShapePtr _IAgVACentralBody::GetDefaultShapeData ( );
__declspec(implementation_key(7470)) HRESULT _IAgVACentralBody::SetDefaultShapeByName ( _bstr_t ShapeName );
__declspec(implementation_key(7471)) IAgVACbShapePtr _IAgVACentralBody::AddShape ( enum AgEVACbShape ECbShape, _bstr_t UniqueName );
__declspec(implementation_key(7472)) HRESULT _IAgVACentralBody::RemoveShapeByName ( _bstr_t ShapeName );
__declspec(implementation_key(7473)) _bstr_t _IAgVACentralBody::GetDefaultAttitudeName ( );
__declspec(implementation_key(7474)) IAgVACbAttitudePtr _IAgVACentralBody::GetDefaultAttitudeData ( );
__declspec(implementation_key(7475)) HRESULT _IAgVACentralBody::SetDefaultAttitudeByName ( _bstr_t AttitudeName );
__declspec(implementation_key(7476)) IAgVACbAttitudePtr _IAgVACentralBody::AddAttitude ( enum AgEVACbAttitude EAttitude, _bstr_t UniqueName );
__declspec(implementation_key(7477)) HRESULT _IAgVACentralBody::RemoveAttitudeByName ( _bstr_t AttitudeName );
__declspec(implementation_key(7478)) _bstr_t _IAgVACentralBody::GetDefaultEphemerisName ( );
__declspec(implementation_key(7479)) HRESULT _IAgVACentralBody::SetDefaultEphemerisByName ( _bstr_t EphemerisName );
__declspec(implementation_key(7480)) IAgVACbEphemerisPtr _IAgVACentralBody::GetDefaultEphemerisData ( );
__declspec(implementation_key(7481)) IAgVACbEphemerisPtr _IAgVACentralBody::AddEphemeris ( enum AgEVACbEphemeris EEphemeris, _bstr_t UniqueName );
__declspec(implementation_key(7482)) HRESULT _IAgVACentralBody::RemoveEphemerisByName ( _bstr_t EphemerisName );
__declspec(implementation_key(7483)) _bstr_t _IAgVACentralBody::GetName ( );
__declspec(implementation_key(7484)) void _IAgVACentralBody::PutName ( _bstr_t pVal );
__declspec(implementation_key(7485)) _bstr_t _IAgVACentralBody::GetUserComment ( );
__declspec(implementation_key(7486)) void _IAgVACentralBody::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7487)) _bstr_t _IAgVACentralBody::GetDescription ( );
__declspec(implementation_key(7488)) VARIANT_BOOL _IAgVACentralBody::IsReadOnly ( );
__declspec(implementation_key(7489)) IUnknownPtr _IAgVACentralBody::CloneObject ( );
__declspec(implementation_key(7490)) HRESULT _IAgVACentralBody::CutGravityModelByName ( _bstr_t GravityModelName );
__declspec(implementation_key(7491)) HRESULT _IAgVACentralBody::CopyGravityModelByName ( _bstr_t GravityModelName );
__declspec(implementation_key(7492)) IAgVACbGravityModelPtr _IAgVACentralBody::PasteGravityModel ( );
__declspec(implementation_key(7493)) IAgVACbGravityModelPtr _IAgVACentralBody::AddCopyOfGravityModel ( struct IAgVACbGravityModel * GravityModel );
__declspec(implementation_key(7494)) HRESULT _IAgVACentralBody::CutShapeByName ( _bstr_t ShapeName );
__declspec(implementation_key(7495)) HRESULT _IAgVACentralBody::CopyShapeByName ( _bstr_t ShapeName );
__declspec(implementation_key(7496)) IAgVACbShapePtr _IAgVACentralBody::PasteShape ( );
__declspec(implementation_key(7497)) IAgVACbShapePtr _IAgVACentralBody::AddCopyOfShape ( struct IAgVACbShape * Shape );
__declspec(implementation_key(7498)) HRESULT _IAgVACentralBody::CutAttitudeByName ( _bstr_t AttitudeName );
__declspec(implementation_key(7499)) HRESULT _IAgVACentralBody::CopyAttitudeByName ( _bstr_t AttitudeName );
__declspec(implementation_key(7500)) IAgVACbAttitudePtr _IAgVACentralBody::PasteAttitude ( );
__declspec(implementation_key(7501)) IAgVACbAttitudePtr _IAgVACentralBody::AddCopyOfAttitude ( struct IAgVACbAttitude * Attitude );
__declspec(implementation_key(7502)) HRESULT _IAgVACentralBody::CutEphemerisByName ( _bstr_t EphemerisName );
__declspec(implementation_key(7503)) HRESULT _IAgVACentralBody::CopyEphemerisByName ( _bstr_t EphemerisName );
__declspec(implementation_key(7504)) IAgVACbEphemerisPtr _IAgVACentralBody::PasteEphemeris ( );
__declspec(implementation_key(7505)) IAgVACbEphemerisPtr _IAgVACentralBody::AddCopyOfEphemeris ( struct IAgVACbEphemeris * Ephemeris );
__declspec(implementation_key(7506)) double IAgVASRPAeroT20::GetAtmosAlt ( );
__declspec(implementation_key(7507)) void IAgVASRPAeroT20::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7508)) enum AgEVAShadowModel IAgVASRPAeroT20::GetShadowModel ( );
__declspec(implementation_key(7509)) void IAgVASRPAeroT20::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7510)) enum AgEVASunPosition IAgVASRPAeroT20::GetSunPosition ( );
__declspec(implementation_key(7511)) void IAgVASRPAeroT20::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7512)) IAgVACentralBodyCollectionPtr IAgVASRPAeroT20::GetEclipsingBodies ( );
__declspec(implementation_key(7513)) VARIANT_BOOL IAgVASRPAeroT20::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7514)) void IAgVASRPAeroT20::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7515)) VARIANT_BOOL IAgVASRPAeroT20::GetUseSunCbFileValues ( );
__declspec(implementation_key(7516)) void IAgVASRPAeroT20::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7517)) double IAgVASRPAeroT20::GetSolarRadius ( );
__declspec(implementation_key(7518)) void IAgVASRPAeroT20::PutSolarRadius ( double pVal );
__declspec(implementation_key(7519)) double _IAgVASRPAeroT20::GetAtmosAlt ( );
__declspec(implementation_key(7520)) void _IAgVASRPAeroT20::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7521)) enum AgEVAShadowModel _IAgVASRPAeroT20::GetShadowModel ( );
__declspec(implementation_key(7522)) void _IAgVASRPAeroT20::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7523)) enum AgEVASunPosition _IAgVASRPAeroT20::GetSunPosition ( );
__declspec(implementation_key(7524)) void _IAgVASRPAeroT20::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7525)) IAgVACentralBodyCollectionPtr _IAgVASRPAeroT20::GetEclipsingBodies ( );
__declspec(implementation_key(7526)) VARIANT_BOOL _IAgVASRPAeroT20::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7527)) void _IAgVASRPAeroT20::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7528)) _bstr_t _IAgVASRPAeroT20::GetName ( );
__declspec(implementation_key(7529)) void _IAgVASRPAeroT20::PutName ( _bstr_t pVal );
__declspec(implementation_key(7530)) _bstr_t _IAgVASRPAeroT20::GetUserComment ( );
__declspec(implementation_key(7531)) void _IAgVASRPAeroT20::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7532)) _bstr_t _IAgVASRPAeroT20::GetDescription ( );
__declspec(implementation_key(7533)) VARIANT_BOOL _IAgVASRPAeroT20::IsReadOnly ( );
__declspec(implementation_key(7534)) IUnknownPtr _IAgVASRPAeroT20::CloneObject ( );
__declspec(implementation_key(7535)) VARIANT_BOOL _IAgVASRPAeroT20::GetUseSunCbFileValues ( );
__declspec(implementation_key(7536)) void _IAgVASRPAeroT20::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7537)) double _IAgVASRPAeroT20::GetSolarRadius ( );
__declspec(implementation_key(7538)) void _IAgVASRPAeroT20::PutSolarRadius ( double pVal );
__declspec(implementation_key(7539)) double IAgVASRPAeroT30::GetAtmosAlt ( );
__declspec(implementation_key(7540)) void IAgVASRPAeroT30::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7541)) enum AgEVAShadowModel IAgVASRPAeroT30::GetShadowModel ( );
__declspec(implementation_key(7542)) void IAgVASRPAeroT30::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7543)) enum AgEVASunPosition IAgVASRPAeroT30::GetSunPosition ( );
__declspec(implementation_key(7544)) void IAgVASRPAeroT30::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7545)) IAgVACentralBodyCollectionPtr IAgVASRPAeroT30::GetEclipsingBodies ( );
__declspec(implementation_key(7546)) VARIANT_BOOL IAgVASRPAeroT30::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7547)) void IAgVASRPAeroT30::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7548)) VARIANT_BOOL IAgVASRPAeroT30::GetUseSunCbFileValues ( );
__declspec(implementation_key(7549)) void IAgVASRPAeroT30::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7550)) double IAgVASRPAeroT30::GetSolarRadius ( );
__declspec(implementation_key(7551)) void IAgVASRPAeroT30::PutSolarRadius ( double pVal );
__declspec(implementation_key(7552)) double _IAgVASRPAeroT30::GetAtmosAlt ( );
__declspec(implementation_key(7553)) void _IAgVASRPAeroT30::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7554)) enum AgEVAShadowModel _IAgVASRPAeroT30::GetShadowModel ( );
__declspec(implementation_key(7555)) void _IAgVASRPAeroT30::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7556)) enum AgEVASunPosition _IAgVASRPAeroT30::GetSunPosition ( );
__declspec(implementation_key(7557)) void _IAgVASRPAeroT30::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7558)) IAgVACentralBodyCollectionPtr _IAgVASRPAeroT30::GetEclipsingBodies ( );
__declspec(implementation_key(7559)) VARIANT_BOOL _IAgVASRPAeroT30::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7560)) void _IAgVASRPAeroT30::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7561)) _bstr_t _IAgVASRPAeroT30::GetName ( );
__declspec(implementation_key(7562)) void _IAgVASRPAeroT30::PutName ( _bstr_t pVal );
__declspec(implementation_key(7563)) _bstr_t _IAgVASRPAeroT30::GetUserComment ( );
__declspec(implementation_key(7564)) void _IAgVASRPAeroT30::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7565)) _bstr_t _IAgVASRPAeroT30::GetDescription ( );
__declspec(implementation_key(7566)) VARIANT_BOOL _IAgVASRPAeroT30::IsReadOnly ( );
__declspec(implementation_key(7567)) IUnknownPtr _IAgVASRPAeroT30::CloneObject ( );
__declspec(implementation_key(7568)) VARIANT_BOOL _IAgVASRPAeroT30::GetUseSunCbFileValues ( );
__declspec(implementation_key(7569)) void _IAgVASRPAeroT30::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7570)) double _IAgVASRPAeroT30::GetSolarRadius ( );
__declspec(implementation_key(7571)) void _IAgVASRPAeroT30::PutSolarRadius ( double pVal );
__declspec(implementation_key(7572)) double IAgVASRPGSPM04aIIA::GetAtmosAlt ( );
__declspec(implementation_key(7573)) void IAgVASRPGSPM04aIIA::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7574)) enum AgEVAShadowModel IAgVASRPGSPM04aIIA::GetShadowModel ( );
__declspec(implementation_key(7575)) void IAgVASRPGSPM04aIIA::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7576)) enum AgEVASunPosition IAgVASRPGSPM04aIIA::GetSunPosition ( );
__declspec(implementation_key(7577)) void IAgVASRPGSPM04aIIA::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7578)) IAgVACentralBodyCollectionPtr IAgVASRPGSPM04aIIA::GetEclipsingBodies ( );
__declspec(implementation_key(7579)) VARIANT_BOOL IAgVASRPGSPM04aIIA::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7580)) void IAgVASRPGSPM04aIIA::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7581)) VARIANT_BOOL IAgVASRPGSPM04aIIA::GetUseSunCbFileValues ( );
__declspec(implementation_key(7582)) void IAgVASRPGSPM04aIIA::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7583)) double IAgVASRPGSPM04aIIA::GetSolarRadius ( );
__declspec(implementation_key(7584)) void IAgVASRPGSPM04aIIA::PutSolarRadius ( double pVal );
__declspec(implementation_key(7585)) double _IAgVASRPGSPM04aIIA::GetAtmosAlt ( );
__declspec(implementation_key(7586)) void _IAgVASRPGSPM04aIIA::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7587)) enum AgEVAShadowModel _IAgVASRPGSPM04aIIA::GetShadowModel ( );
__declspec(implementation_key(7588)) void _IAgVASRPGSPM04aIIA::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7589)) enum AgEVASunPosition _IAgVASRPGSPM04aIIA::GetSunPosition ( );
__declspec(implementation_key(7590)) void _IAgVASRPGSPM04aIIA::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7591)) IAgVACentralBodyCollectionPtr _IAgVASRPGSPM04aIIA::GetEclipsingBodies ( );
__declspec(implementation_key(7592)) VARIANT_BOOL _IAgVASRPGSPM04aIIA::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7593)) void _IAgVASRPGSPM04aIIA::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7594)) _bstr_t _IAgVASRPGSPM04aIIA::GetName ( );
__declspec(implementation_key(7595)) void _IAgVASRPGSPM04aIIA::PutName ( _bstr_t pVal );
__declspec(implementation_key(7596)) _bstr_t _IAgVASRPGSPM04aIIA::GetUserComment ( );
__declspec(implementation_key(7597)) void _IAgVASRPGSPM04aIIA::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7598)) _bstr_t _IAgVASRPGSPM04aIIA::GetDescription ( );
__declspec(implementation_key(7599)) VARIANT_BOOL _IAgVASRPGSPM04aIIA::IsReadOnly ( );
__declspec(implementation_key(7600)) IUnknownPtr _IAgVASRPGSPM04aIIA::CloneObject ( );
__declspec(implementation_key(7601)) VARIANT_BOOL _IAgVASRPGSPM04aIIA::GetUseSunCbFileValues ( );
__declspec(implementation_key(7602)) void _IAgVASRPGSPM04aIIA::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7603)) double _IAgVASRPGSPM04aIIA::GetSolarRadius ( );
__declspec(implementation_key(7604)) void _IAgVASRPGSPM04aIIA::PutSolarRadius ( double pVal );
__declspec(implementation_key(7605)) double IAgVASRPGSPM04aIIR::GetAtmosAlt ( );
__declspec(implementation_key(7606)) void IAgVASRPGSPM04aIIR::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7607)) enum AgEVAShadowModel IAgVASRPGSPM04aIIR::GetShadowModel ( );
__declspec(implementation_key(7608)) void IAgVASRPGSPM04aIIR::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7609)) enum AgEVASunPosition IAgVASRPGSPM04aIIR::GetSunPosition ( );
__declspec(implementation_key(7610)) void IAgVASRPGSPM04aIIR::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7611)) IAgVACentralBodyCollectionPtr IAgVASRPGSPM04aIIR::GetEclipsingBodies ( );
__declspec(implementation_key(7612)) VARIANT_BOOL IAgVASRPGSPM04aIIR::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7613)) void IAgVASRPGSPM04aIIR::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7614)) VARIANT_BOOL IAgVASRPGSPM04aIIR::GetUseSunCbFileValues ( );
__declspec(implementation_key(7615)) void IAgVASRPGSPM04aIIR::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7616)) double IAgVASRPGSPM04aIIR::GetSolarRadius ( );
__declspec(implementation_key(7617)) void IAgVASRPGSPM04aIIR::PutSolarRadius ( double pVal );
__declspec(implementation_key(7618)) double _IAgVASRPGSPM04aIIR::GetAtmosAlt ( );
__declspec(implementation_key(7619)) void _IAgVASRPGSPM04aIIR::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7620)) enum AgEVAShadowModel _IAgVASRPGSPM04aIIR::GetShadowModel ( );
__declspec(implementation_key(7621)) void _IAgVASRPGSPM04aIIR::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7622)) enum AgEVASunPosition _IAgVASRPGSPM04aIIR::GetSunPosition ( );
__declspec(implementation_key(7623)) void _IAgVASRPGSPM04aIIR::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7624)) IAgVACentralBodyCollectionPtr _IAgVASRPGSPM04aIIR::GetEclipsingBodies ( );
__declspec(implementation_key(7625)) VARIANT_BOOL _IAgVASRPGSPM04aIIR::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7626)) void _IAgVASRPGSPM04aIIR::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7627)) _bstr_t _IAgVASRPGSPM04aIIR::GetName ( );
__declspec(implementation_key(7628)) void _IAgVASRPGSPM04aIIR::PutName ( _bstr_t pVal );
__declspec(implementation_key(7629)) _bstr_t _IAgVASRPGSPM04aIIR::GetUserComment ( );
__declspec(implementation_key(7630)) void _IAgVASRPGSPM04aIIR::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7631)) _bstr_t _IAgVASRPGSPM04aIIR::GetDescription ( );
__declspec(implementation_key(7632)) VARIANT_BOOL _IAgVASRPGSPM04aIIR::IsReadOnly ( );
__declspec(implementation_key(7633)) IUnknownPtr _IAgVASRPGSPM04aIIR::CloneObject ( );
__declspec(implementation_key(7634)) VARIANT_BOOL _IAgVASRPGSPM04aIIR::GetUseSunCbFileValues ( );
__declspec(implementation_key(7635)) void _IAgVASRPGSPM04aIIR::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7636)) double _IAgVASRPGSPM04aIIR::GetSolarRadius ( );
__declspec(implementation_key(7637)) void _IAgVASRPGSPM04aIIR::PutSolarRadius ( double pVal );
__declspec(implementation_key(7638)) double IAgVASRPGSPM04aeIIA::GetAtmosAlt ( );
__declspec(implementation_key(7639)) void IAgVASRPGSPM04aeIIA::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7640)) enum AgEVAShadowModel IAgVASRPGSPM04aeIIA::GetShadowModel ( );
__declspec(implementation_key(7641)) void IAgVASRPGSPM04aeIIA::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7642)) enum AgEVASunPosition IAgVASRPGSPM04aeIIA::GetSunPosition ( );
__declspec(implementation_key(7643)) void IAgVASRPGSPM04aeIIA::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7644)) IAgVACentralBodyCollectionPtr IAgVASRPGSPM04aeIIA::GetEclipsingBodies ( );
__declspec(implementation_key(7645)) VARIANT_BOOL IAgVASRPGSPM04aeIIA::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7646)) void IAgVASRPGSPM04aeIIA::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7647)) VARIANT_BOOL IAgVASRPGSPM04aeIIA::GetUseSunCbFileValues ( );
__declspec(implementation_key(7648)) void IAgVASRPGSPM04aeIIA::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7649)) double IAgVASRPGSPM04aeIIA::GetSolarRadius ( );
__declspec(implementation_key(7650)) void IAgVASRPGSPM04aeIIA::PutSolarRadius ( double pVal );
__declspec(implementation_key(7651)) double _IAgVASRPGSPM04aeIIA::GetAtmosAlt ( );
__declspec(implementation_key(7652)) void _IAgVASRPGSPM04aeIIA::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7653)) enum AgEVAShadowModel _IAgVASRPGSPM04aeIIA::GetShadowModel ( );
__declspec(implementation_key(7654)) void _IAgVASRPGSPM04aeIIA::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7655)) enum AgEVASunPosition _IAgVASRPGSPM04aeIIA::GetSunPosition ( );
__declspec(implementation_key(7656)) void _IAgVASRPGSPM04aeIIA::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7657)) IAgVACentralBodyCollectionPtr _IAgVASRPGSPM04aeIIA::GetEclipsingBodies ( );
__declspec(implementation_key(7658)) VARIANT_BOOL _IAgVASRPGSPM04aeIIA::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7659)) void _IAgVASRPGSPM04aeIIA::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7660)) _bstr_t _IAgVASRPGSPM04aeIIA::GetName ( );
__declspec(implementation_key(7661)) void _IAgVASRPGSPM04aeIIA::PutName ( _bstr_t pVal );
__declspec(implementation_key(7662)) _bstr_t _IAgVASRPGSPM04aeIIA::GetUserComment ( );
__declspec(implementation_key(7663)) void _IAgVASRPGSPM04aeIIA::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7664)) _bstr_t _IAgVASRPGSPM04aeIIA::GetDescription ( );
__declspec(implementation_key(7665)) VARIANT_BOOL _IAgVASRPGSPM04aeIIA::IsReadOnly ( );
__declspec(implementation_key(7666)) IUnknownPtr _IAgVASRPGSPM04aeIIA::CloneObject ( );
__declspec(implementation_key(7667)) VARIANT_BOOL _IAgVASRPGSPM04aeIIA::GetUseSunCbFileValues ( );
__declspec(implementation_key(7668)) void _IAgVASRPGSPM04aeIIA::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7669)) double _IAgVASRPGSPM04aeIIA::GetSolarRadius ( );
__declspec(implementation_key(7670)) void _IAgVASRPGSPM04aeIIA::PutSolarRadius ( double pVal );
__declspec(implementation_key(7671)) double IAgVASRPGSPM04aeIIR::GetAtmosAlt ( );
__declspec(implementation_key(7672)) void IAgVASRPGSPM04aeIIR::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7673)) enum AgEVAShadowModel IAgVASRPGSPM04aeIIR::GetShadowModel ( );
__declspec(implementation_key(7674)) void IAgVASRPGSPM04aeIIR::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7675)) enum AgEVASunPosition IAgVASRPGSPM04aeIIR::GetSunPosition ( );
__declspec(implementation_key(7676)) void IAgVASRPGSPM04aeIIR::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7677)) IAgVACentralBodyCollectionPtr IAgVASRPGSPM04aeIIR::GetEclipsingBodies ( );
__declspec(implementation_key(7678)) VARIANT_BOOL IAgVASRPGSPM04aeIIR::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7679)) void IAgVASRPGSPM04aeIIR::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7680)) VARIANT_BOOL IAgVASRPGSPM04aeIIR::GetUseSunCbFileValues ( );
__declspec(implementation_key(7681)) void IAgVASRPGSPM04aeIIR::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7682)) double IAgVASRPGSPM04aeIIR::GetSolarRadius ( );
__declspec(implementation_key(7683)) void IAgVASRPGSPM04aeIIR::PutSolarRadius ( double pVal );
__declspec(implementation_key(7684)) double _IAgVASRPGSPM04aeIIR::GetAtmosAlt ( );
__declspec(implementation_key(7685)) void _IAgVASRPGSPM04aeIIR::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7686)) enum AgEVAShadowModel _IAgVASRPGSPM04aeIIR::GetShadowModel ( );
__declspec(implementation_key(7687)) void _IAgVASRPGSPM04aeIIR::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7688)) enum AgEVASunPosition _IAgVASRPGSPM04aeIIR::GetSunPosition ( );
__declspec(implementation_key(7689)) void _IAgVASRPGSPM04aeIIR::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7690)) IAgVACentralBodyCollectionPtr _IAgVASRPGSPM04aeIIR::GetEclipsingBodies ( );
__declspec(implementation_key(7691)) VARIANT_BOOL _IAgVASRPGSPM04aeIIR::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7692)) void _IAgVASRPGSPM04aeIIR::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7693)) _bstr_t _IAgVASRPGSPM04aeIIR::GetName ( );
__declspec(implementation_key(7694)) void _IAgVASRPGSPM04aeIIR::PutName ( _bstr_t pVal );
__declspec(implementation_key(7695)) _bstr_t _IAgVASRPGSPM04aeIIR::GetUserComment ( );
__declspec(implementation_key(7696)) void _IAgVASRPGSPM04aeIIR::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7697)) _bstr_t _IAgVASRPGSPM04aeIIR::GetDescription ( );
__declspec(implementation_key(7698)) VARIANT_BOOL _IAgVASRPGSPM04aeIIR::IsReadOnly ( );
__declspec(implementation_key(7699)) IUnknownPtr _IAgVASRPGSPM04aeIIR::CloneObject ( );
__declspec(implementation_key(7700)) VARIANT_BOOL _IAgVASRPGSPM04aeIIR::GetUseSunCbFileValues ( );
__declspec(implementation_key(7701)) void _IAgVASRPGSPM04aeIIR::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7702)) double _IAgVASRPGSPM04aeIIR::GetSolarRadius ( );
__declspec(implementation_key(7703)) void _IAgVASRPGSPM04aeIIR::PutSolarRadius ( double pVal );
__declspec(implementation_key(7704)) double IAgVASRPSpherical::GetAtmosAlt ( );
__declspec(implementation_key(7705)) void IAgVASRPSpherical::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7706)) enum AgEVAShadowModel IAgVASRPSpherical::GetShadowModel ( );
__declspec(implementation_key(7707)) void IAgVASRPSpherical::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7708)) enum AgEVASunPosition IAgVASRPSpherical::GetSunPosition ( );
__declspec(implementation_key(7709)) void IAgVASRPSpherical::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7710)) IAgVACentralBodyCollectionPtr IAgVASRPSpherical::GetEclipsingBodies ( );
__declspec(implementation_key(7711)) double IAgVASRPSpherical::GetMeanFlux ( );
__declspec(implementation_key(7712)) void IAgVASRPSpherical::PutMeanFlux ( double pVal );
__declspec(implementation_key(7713)) double IAgVASRPSpherical::GetLuminosity ( );
__declspec(implementation_key(7714)) void IAgVASRPSpherical::PutLuminosity ( double pVal );
__declspec(implementation_key(7715)) enum AgEVASolarForceMethod IAgVASRPSpherical::GetSolarForceMethod ( );
__declspec(implementation_key(7716)) void IAgVASRPSpherical::PutSolarForceMethod ( enum AgEVASolarForceMethod pVal );
__declspec(implementation_key(7717)) VARIANT_BOOL IAgVASRPSpherical::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7718)) void IAgVASRPSpherical::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7719)) VARIANT_BOOL IAgVASRPSpherical::GetUseSunCbFileValues ( );
__declspec(implementation_key(7720)) void IAgVASRPSpherical::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7721)) double IAgVASRPSpherical::GetSolarRadius ( );
__declspec(implementation_key(7722)) void IAgVASRPSpherical::PutSolarRadius ( double pVal );
__declspec(implementation_key(7723)) double _IAgVASRPSpherical::GetAtmosAlt ( );
__declspec(implementation_key(7724)) void _IAgVASRPSpherical::PutAtmosAlt ( double pVal );
__declspec(implementation_key(7725)) enum AgEVAShadowModel _IAgVASRPSpherical::GetShadowModel ( );
__declspec(implementation_key(7726)) void _IAgVASRPSpherical::PutShadowModel ( enum AgEVAShadowModel pVal );
__declspec(implementation_key(7727)) enum AgEVASunPosition _IAgVASRPSpherical::GetSunPosition ( );
__declspec(implementation_key(7728)) void _IAgVASRPSpherical::PutSunPosition ( enum AgEVASunPosition pVal );
__declspec(implementation_key(7729)) IAgVACentralBodyCollectionPtr _IAgVASRPSpherical::GetEclipsingBodies ( );
__declspec(implementation_key(7730)) double _IAgVASRPSpherical::GetMeanFlux ( );
__declspec(implementation_key(7731)) void _IAgVASRPSpherical::PutMeanFlux ( double pVal );
__declspec(implementation_key(7732)) double _IAgVASRPSpherical::GetLuminosity ( );
__declspec(implementation_key(7733)) void _IAgVASRPSpherical::PutLuminosity ( double pVal );
__declspec(implementation_key(7734)) enum AgEVASolarForceMethod _IAgVASRPSpherical::GetSolarForceMethod ( );
__declspec(implementation_key(7735)) void _IAgVASRPSpherical::PutSolarForceMethod ( enum AgEVASolarForceMethod pVal );
__declspec(implementation_key(7736)) VARIANT_BOOL _IAgVASRPSpherical::GetIncludeBoundaryMitigation ( );
__declspec(implementation_key(7737)) void _IAgVASRPSpherical::PutIncludeBoundaryMitigation ( VARIANT_BOOL pMitigation );
__declspec(implementation_key(7738)) _bstr_t _IAgVASRPSpherical::GetName ( );
__declspec(implementation_key(7739)) void _IAgVASRPSpherical::PutName ( _bstr_t pVal );
__declspec(implementation_key(7740)) _bstr_t _IAgVASRPSpherical::GetUserComment ( );
__declspec(implementation_key(7741)) void _IAgVASRPSpherical::PutUserComment ( _bstr_t pVal );
__declspec(implementation_key(7742)) _bstr_t _IAgVASRPSpherical::GetDescription ( );
__declspec(implementation_key(7743)) VARIANT_BOOL _IAgVASRPSpherical::IsReadOnly ( );
__declspec(implementation_key(7744)) IUnknownPtr _IAgVASRPSpherical::CloneObject ( );
__declspec(implementation_key(7745)) VARIANT_BOOL _IAgVASRPSpherical::GetUseSunCbFileValues ( );
__declspec(implementation_key(7746)) void _IAgVASRPSpherical::PutUseSunCbFileValues ( VARIANT_BOOL pVal );
__declspec(implementation_key(7747)) double _IAgVASRPSpherical::GetSolarRadius ( );
__declspec(implementation_key(7748)) void _IAgVASRPSpherical::PutSolarRadius ( double pVal );
#pragma stop_map_region

} // namespace AgStkGatorLib

#pragma pack(pop)
